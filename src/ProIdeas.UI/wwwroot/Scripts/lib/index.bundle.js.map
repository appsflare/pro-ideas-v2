{"version":3,"file":"index.bundle.js","sources":["wwwroot/lib/jquery/dist/jquery.js","Scripts/lib/jquery-global.js","wwwroot/lib/bootstrap/dist/js/bootstrap.js","Scripts/lib/bootstrap-datepicker.js","Scripts/lib/material.min.js","Scripts/lib/material-kit.js","node_modules/velocity-animate/velocity.js"],"sourcesContent":["/*!\r\n * jQuery JavaScript Library v2.2.0\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2016-01-08T20:02Z\r\n */\r\n\r\n(function( global, factory ) {\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\r\n\t\t// is present, execute the factory and get jQuery.\r\n\t\t// For environments that do not have a `window` with a `document`\r\n\t\t// (such as Node.js), expose a factory as module.exports.\r\n\t\t// This accentuates the need for the creation of a real `window`.\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket #14549 for more info.\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Support: Firefox 18+\r\n// Can't be in strict mode, several libs including ASP.NET trace\r\n// the stack via arguments.caller.callee and Firefox dies if\r\n// you try to trace through \"use strict\" call chains. (#13335)\r\n//\"use strict\";\r\nvar arr = [];\r\n\r\nvar document = window.document;\r\n\r\nvar slice = arr.slice;\r\n\r\nvar concat = arr.concat;\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar support = {};\r\n\r\n\r\n\r\nvar\r\n\tversion = \"2.2.0\",\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\t// Make sure we trim BOM and NBSP\r\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n\t// Matches dashed string for camelizing\r\n\trmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([\\da-z])/gi,\r\n\r\n\t// Used by jQuery.camelCase as callback to replace()\r\n\tfcamelCase = function( all, letter ) {\r\n\t\treturn letter.toUpperCase();\r\n\t};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// Start with an empty selector\r\n\tselector: \"\",\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\t\treturn num != null ?\r\n\r\n\t\t\t// Return just the one element from the set\r\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\r\n\r\n\t\t\t// Return all the elements in a clean array\r\n\t\t\tslice.call( this );\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\t\tret.context = this.context;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\teach: function( callback ) {\r\n\t\treturn jQuery.each( this, callback );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t} ) );\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor();\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[ 0 ] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// Skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// Extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( ( options = arguments[ i ] ) != null ) {\r\n\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tsrc = target[ name ];\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\r\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\r\n\r\n\t\t\t\t\tif ( copyIsArray ) {\r\n\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\tisFunction: function( obj ) {\r\n\t\treturn jQuery.type( obj ) === \"function\";\r\n\t},\r\n\r\n\tisArray: Array.isArray,\r\n\r\n\tisWindow: function( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t},\r\n\r\n\tisNumeric: function( obj ) {\r\n\r\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\r\n\t\tvar realStringObj = obj && obj.toString();\r\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\r\n\t},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\r\n\t\t// Not plain objects:\r\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\r\n\t\t// - DOM nodes\r\n\t\t// - window\r\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( obj.constructor &&\r\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If the function hasn't returned already, we're confident that\r\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\r\n\t\treturn true;\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\t\tvar name;\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\ttype: function( obj ) {\r\n\t\tif ( obj == null ) {\r\n\t\t\treturn obj + \"\";\r\n\t\t}\r\n\r\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\r\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\r\n\t\t\ttypeof obj;\r\n\t},\r\n\r\n\t// Evaluates a script in a global context\r\n\tglobalEval: function( code ) {\r\n\t\tvar script,\r\n\t\t\tindirect = eval;\r\n\r\n\t\tcode = jQuery.trim( code );\r\n\r\n\t\tif ( code ) {\r\n\r\n\t\t\t// If the code includes a valid, prologue position\r\n\t\t\t// strict mode pragma, execute code by injecting a\r\n\t\t\t// script tag into the document.\r\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\r\n\t\t\t\tscript = document.createElement( \"script\" );\r\n\t\t\t\tscript.text = code;\r\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\r\n\t\t\t\t// and removal by using an indirect global eval\r\n\r\n\t\t\t\tindirect( code );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Convert dashed to camelCase; used by the css and data modules\r\n\t// Support: IE9-11+\r\n\t// Microsoft forgot to hump their vendor prefix (#9572)\r\n\tcamelCase: function( string ) {\r\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n\t},\r\n\r\n\tnodeName: function( elem, name ) {\r\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\t},\r\n\r\n\teach: function( obj, callback ) {\r\n\t\tvar length, i = 0;\r\n\r\n\t\tif ( isArrayLike( obj ) ) {\r\n\t\t\tlength = obj.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor ( i in obj ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\ttrim: function( text ) {\r\n\t\treturn text == null ?\r\n\t\t\t\"\" :\r\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar length, value,\r\n\t\t\ti = 0,\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArrayLike( elems ) ) {\r\n\t\t\tlength = elems.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn concat.apply( [], ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// Bind a function to a context, optionally partially applying any\r\n\t// arguments.\r\n\tproxy: function( fn, context ) {\r\n\t\tvar tmp, args, proxy;\r\n\r\n\t\tif ( typeof context === \"string\" ) {\r\n\t\t\ttmp = fn[ context ];\r\n\t\t\tcontext = fn;\r\n\t\t\tfn = tmp;\r\n\t\t}\r\n\r\n\t\t// Quick check to determine if target is callable, in the spec\r\n\t\t// this throws a TypeError, but we will just return undefined.\r\n\t\tif ( !jQuery.isFunction( fn ) ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Simulated bind\r\n\t\targs = slice.call( arguments, 2 );\r\n\t\tproxy = function() {\r\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t\t};\r\n\r\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\t\treturn proxy;\r\n\t},\r\n\r\n\tnow: Date.now,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n} );\r\n\r\n// JSHint would error on this code due to the Symbol not being defined in ES5.\r\n// Defining this global in .jshintrc would create a danger of using the global\r\n// unguarded in another place, it seems safer to just disable JSHint for these\r\n// three lines.\r\n/* jshint ignore: start */\r\nif ( typeof Symbol === \"function\" ) {\r\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\r\n}\r\n/* jshint ignore: end */\r\n\r\n// Populate the class2type map\r\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\r\nfunction( i, name ) {\r\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n} );\r\n\r\nfunction isArrayLike( obj ) {\r\n\r\n\t// Support: iOS 8.2 (not reproducible in simulator)\r\n\t// `in` check used to prevent JIT error (gh-2145)\r\n\t// hasOwn isn't used here due to false negatives\r\n\t// regarding Nodelist length in IE\r\n\tvar length = !!obj && \"length\" in obj && obj.length,\r\n\t\ttype = jQuery.type( obj );\r\n\r\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\nvar Sizzle =\r\n/*!\r\n * Sizzle CSS Selector Engine v2.2.1\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2015-10-17\r\n */\r\n(function( window ) {\r\n\r\nvar i,\r\n\tsupport,\r\n\tExpr,\r\n\tgetText,\r\n\tisXML,\r\n\ttokenize,\r\n\tcompile,\r\n\tselect,\r\n\toutermostContext,\r\n\tsortInput,\r\n\thasDuplicate,\r\n\r\n\t// Local document vars\r\n\tsetDocument,\r\n\tdocument,\r\n\tdocElem,\r\n\tdocumentIsHTML,\r\n\trbuggyQSA,\r\n\trbuggyMatches,\r\n\tmatches,\r\n\tcontains,\r\n\r\n\t// Instance-specific data\r\n\texpando = \"sizzle\" + 1 * new Date(),\r\n\tpreferredDoc = window.document,\r\n\tdirruns = 0,\r\n\tdone = 0,\r\n\tclassCache = createCache(),\r\n\ttokenCache = createCache(),\r\n\tcompilerCache = createCache(),\r\n\tsortOrder = function( a, b ) {\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t// General-purpose constants\r\n\tMAX_NEGATIVE = 1 << 31,\r\n\r\n\t// Instance methods\r\n\thasOwn = ({}).hasOwnProperty,\r\n\tarr = [],\r\n\tpop = arr.pop,\r\n\tpush_native = arr.push,\r\n\tpush = arr.push,\r\n\tslice = arr.slice,\r\n\t// Use a stripped-down indexOf as it's faster than native\r\n\t// http://jsperf.com/thor-indexof-vs-for/5\r\n\tindexOf = function( list, elem ) {\r\n\t\tvar i = 0,\r\n\t\t\tlen = list.length;\r\n\t\tfor ( ; i < len; i++ ) {\r\n\t\t\tif ( list[i] === elem ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\r\n\r\n\t// Regular expressions\r\n\r\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\r\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n\r\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\r\n\r\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\r\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\r\n\t\t// Operator (capture 2)\r\n\t\t\"*([*^$|!~]?=)\" + whitespace +\r\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\r\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\r\n\t\t\"*\\\\]\",\r\n\r\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\r\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\r\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\r\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\r\n\t\t// 2. simple (capture 6)\r\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\r\n\t\t// 3. anything else (capture 2)\r\n\t\t\".*\" +\r\n\t\t\")\\\\)|)\",\r\n\r\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\r\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\r\n\r\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\r\n\r\n\trpseudo = new RegExp( pseudos ),\r\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n\tmatchExpr = {\r\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\r\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\r\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\r\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\r\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\r\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n\t\t// For use in libraries implementing .is()\r\n\t\t// We use this for POS matching in `select`\r\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\r\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n\t},\r\n\r\n\trinputs = /^(?:input|select|textarea|button)$/i,\r\n\trheader = /^h\\d$/i,\r\n\r\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\r\n\r\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n\trsibling = /[+~]/,\r\n\trescape = /'|\\\\/g,\r\n\r\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\r\n\tfunescape = function( _, escaped, escapedWhitespace ) {\r\n\t\tvar high = \"0x\" + escaped - 0x10000;\r\n\t\t// NaN means non-codepoint\r\n\t\t// Support: Firefox<24\r\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\r\n\t\treturn high !== high || escapedWhitespace ?\r\n\t\t\tescaped :\r\n\t\t\thigh < 0 ?\r\n\t\t\t\t// BMP codepoint\r\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\r\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\r\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n\t},\r\n\r\n\t// Used for iframes\r\n\t// See setDocument()\r\n\t// Removing the function wrapper causes a \"Permission Denied\"\r\n\t// error in IE\r\n\tunloadHandler = function() {\r\n\t\tsetDocument();\r\n\t};\r\n\r\n// Optimize for push.apply( _, NodeList )\r\ntry {\r\n\tpush.apply(\r\n\t\t(arr = slice.call( preferredDoc.childNodes )),\r\n\t\tpreferredDoc.childNodes\r\n\t);\r\n\t// Support: Android<4.0\r\n\t// Detect silently failing push.apply\r\n\tarr[ preferredDoc.childNodes.length ].nodeType;\r\n} catch ( e ) {\r\n\tpush = { apply: arr.length ?\r\n\r\n\t\t// Leverage slice if possible\r\n\t\tfunction( target, els ) {\r\n\t\t\tpush_native.apply( target, slice.call(els) );\r\n\t\t} :\r\n\r\n\t\t// Support: IE<9\r\n\t\t// Otherwise append directly\r\n\t\tfunction( target, els ) {\r\n\t\t\tvar j = target.length,\r\n\t\t\t\ti = 0;\r\n\t\t\t// Can't trust NodeList.length\r\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\r\n\t\t\ttarget.length = j - 1;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction Sizzle( selector, context, results, seed ) {\r\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\r\n\t\tnewContext = context && context.ownerDocument,\r\n\r\n\t\t// nodeType defaults to 9, since context defaults to document\r\n\t\tnodeType = context ? context.nodeType : 9;\r\n\r\n\tresults = results || [];\r\n\r\n\t// Return early from calls with invalid selector or context\r\n\tif ( typeof selector !== \"string\" || !selector ||\r\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\r\n\tif ( !seed ) {\r\n\r\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n\t\t\tsetDocument( context );\r\n\t\t}\r\n\t\tcontext = context || document;\r\n\r\n\t\tif ( documentIsHTML ) {\r\n\r\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\r\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\r\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\r\n\r\n\t\t\t\t// ID selector\r\n\t\t\t\tif ( (m = match[1]) ) {\r\n\r\n\t\t\t\t\t// Document context\r\n\t\t\t\t\tif ( nodeType === 9 ) {\r\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\r\n\r\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\t\tif ( elem.id === m ) {\r\n\t\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Element context\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\r\n\t\t\t\t\t\t\tcontains( context, elem ) &&\r\n\t\t\t\t\t\t\telem.id === m ) {\r\n\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Type selector\r\n\t\t\t\t} else if ( match[2] ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\r\n\t\t\t\t\treturn results;\r\n\r\n\t\t\t\t// Class selector\r\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\r\n\t\t\t\t\tcontext.getElementsByClassName ) {\r\n\r\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Take advantage of querySelectorAll\r\n\t\t\tif ( support.qsa &&\r\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\r\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\r\n\r\n\t\t\t\tif ( nodeType !== 1 ) {\r\n\t\t\t\t\tnewContext = context;\r\n\t\t\t\t\tnewSelector = selector;\r\n\r\n\t\t\t\t// qSA looks outside Element context, which is not what we want\r\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\r\n\t\t\t\t// Support: IE <=8\r\n\t\t\t\t// Exclude object elements\r\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\r\n\r\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\r\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\r\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prefix every selector in the list\r\n\t\t\t\t\tgroups = tokenize( selector );\r\n\t\t\t\t\ti = groups.length;\r\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewSelector = groups.join( \",\" );\r\n\r\n\t\t\t\t\t// Expand context for sibling selectors\r\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\r\n\t\t\t\t\t\tcontext;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( newSelector ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tpush.apply( results,\r\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t} catch ( qsaError ) {\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif ( nid === expando ) {\r\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// All others\r\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\r\n}\r\n\r\n/**\r\n * Create key-value caches of limited size\r\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\r\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n *\tdeleting the oldest entry\r\n */\r\nfunction createCache() {\r\n\tvar keys = [];\r\n\r\n\tfunction cache( key, value ) {\r\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\r\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\r\n\t\t\t// Only keep the most recent entries\r\n\t\t\tdelete cache[ keys.shift() ];\r\n\t\t}\r\n\t\treturn (cache[ key + \" \" ] = value);\r\n\t}\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Mark a function for special use by Sizzle\r\n * @param {Function} fn The function to mark\r\n */\r\nfunction markFunction( fn ) {\r\n\tfn[ expando ] = true;\r\n\treturn fn;\r\n}\r\n\r\n/**\r\n * Support testing using an element\r\n * @param {Function} fn Passed the created div and expects a boolean result\r\n */\r\nfunction assert( fn ) {\r\n\tvar div = document.createElement(\"div\");\r\n\r\n\ttry {\r\n\t\treturn !!fn( div );\r\n\t} catch (e) {\r\n\t\treturn false;\r\n\t} finally {\r\n\t\t// Remove from its parent by default\r\n\t\tif ( div.parentNode ) {\r\n\t\t\tdiv.parentNode.removeChild( div );\r\n\t\t}\r\n\t\t// release memory in IE\r\n\t\tdiv = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds the same handler for all of the specified attrs\r\n * @param {String} attrs Pipe-separated list of attributes\r\n * @param {Function} handler The method that will be applied\r\n */\r\nfunction addHandle( attrs, handler ) {\r\n\tvar arr = attrs.split(\"|\"),\r\n\t\ti = arr.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tExpr.attrHandle[ arr[i] ] = handler;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks document order of two siblings\r\n * @param {Element} a\r\n * @param {Element} b\r\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n */\r\nfunction siblingCheck( a, b ) {\r\n\tvar cur = b && a,\r\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\r\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\r\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\r\n\r\n\t// Use IE sourceIndex if available on both nodes\r\n\tif ( diff ) {\r\n\t\treturn diff;\r\n\t}\r\n\r\n\t// Check if b follows a\r\n\tif ( cur ) {\r\n\t\twhile ( (cur = cur.nextSibling) ) {\r\n\t\t\tif ( cur === b ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a ? 1 : -1;\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for input types\r\n * @param {String} type\r\n */\r\nfunction createInputPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn name === \"input\" && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for buttons\r\n * @param {String} type\r\n */\r\nfunction createButtonPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for positionals\r\n * @param {Function} fn\r\n */\r\nfunction createPositionalPseudo( fn ) {\r\n\treturn markFunction(function( argument ) {\r\n\t\targument = +argument;\r\n\t\treturn markFunction(function( seed, matches ) {\r\n\t\t\tvar j,\r\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\r\n\t\t\t\ti = matchIndexes.length;\r\n\r\n\t\t\t// Match elements found at the specified indexes\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\r\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks a node for validity as a Sizzle context\r\n * @param {Element|Object=} context\r\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n */\r\nfunction testContext( context ) {\r\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\r\n}\r\n\r\n// Expose support vars for convenience\r\nsupport = Sizzle.support = {};\r\n\r\n/**\r\n * Detects XML nodes\r\n * @param {Element|Object} elem An element or a document\r\n * @returns {Boolean} True iff elem is a non-HTML XML node\r\n */\r\nisXML = Sizzle.isXML = function( elem ) {\r\n\t// documentElement is verified for cases where it doesn't yet exist\r\n\t// (such as loading iframes in IE - #4833)\r\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n};\r\n\r\n/**\r\n * Sets document-related variables once based on the current document\r\n * @param {Element|Object} [doc] An element or document object to use to set the document\r\n * @returns {Object} Returns the current document\r\n */\r\nsetDocument = Sizzle.setDocument = function( node ) {\r\n\tvar hasCompare, parent,\r\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\r\n\r\n\t// Return early if doc is invalid or already selected\r\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n\t\treturn document;\r\n\t}\r\n\r\n\t// Update global variables\r\n\tdocument = doc;\r\n\tdocElem = document.documentElement;\r\n\tdocumentIsHTML = !isXML( document );\r\n\r\n\t// Support: IE 9-11, Edge\r\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\r\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\r\n\t\t// Support: IE 11\r\n\t\tif ( parent.addEventListener ) {\r\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\r\n\r\n\t\t// Support: IE 9 - 10 only\r\n\t\t} else if ( parent.attachEvent ) {\r\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Attributes\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Support: IE<8\r\n\t// Verify that getAttribute really returns attributes and not properties\r\n\t// (excepting IE8 booleans)\r\n\tsupport.attributes = assert(function( div ) {\r\n\t\tdiv.className = \"i\";\r\n\t\treturn !div.getAttribute(\"className\");\r\n\t});\r\n\r\n\t/* getElement(s)By*\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Check if getElementsByTagName(\"*\") returns only elements\r\n\tsupport.getElementsByTagName = assert(function( div ) {\r\n\t\tdiv.appendChild( document.createComment(\"\") );\r\n\t\treturn !div.getElementsByTagName(\"*\").length;\r\n\t});\r\n\r\n\t// Support: IE<9\r\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\r\n\r\n\t// Support: IE<10\r\n\t// Check if getElementById returns elements by name\r\n\t// The broken getElementById methods don't pick up programatically-set names,\r\n\t// so use a roundabout getElementsByName test\r\n\tsupport.getById = assert(function( div ) {\r\n\t\tdocElem.appendChild( div ).id = expando;\r\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\r\n\t});\r\n\r\n\t// ID find and filter\r\n\tif ( support.getById ) {\r\n\t\tExpr.find[\"ID\"] = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar m = context.getElementById( id );\r\n\t\t\t\treturn m ? [ m ] : [];\r\n\t\t\t}\r\n\t\t};\r\n\t\tExpr.filter[\"ID\"] = function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t} else {\r\n\t\t// Support: IE6/7\r\n\t\t// getElementById is not reliable as a find shortcut\r\n\t\tdelete Expr.find[\"ID\"];\r\n\r\n\t\tExpr.filter[\"ID\"] =  function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\r\n\t\t\t\t\telem.getAttributeNode(\"id\");\r\n\t\t\t\treturn node && node.value === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t}\r\n\r\n\t// Tag\r\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\r\n\t\tfunction( tag, context ) {\r\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\t\t\treturn context.getElementsByTagName( tag );\r\n\r\n\t\t\t// DocumentFragment nodes don't have gEBTN\r\n\t\t\t} else if ( support.qsa ) {\r\n\t\t\t\treturn context.querySelectorAll( tag );\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\tfunction( tag, context ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ttmp = [],\r\n\t\t\t\ti = 0,\r\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\r\n\t\t\t\tresults = context.getElementsByTagName( tag );\r\n\r\n\t\t\t// Filter out possible comments\r\n\t\t\tif ( tag === \"*\" ) {\r\n\t\t\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\ttmp.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t// Class\r\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\r\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\r\n\t\t\treturn context.getElementsByClassName( className );\r\n\t\t}\r\n\t};\r\n\r\n\t/* QSA/matchesSelector\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// QSA and matchesSelector support\r\n\r\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n\trbuggyMatches = [];\r\n\r\n\t// qSa(:focus) reports false when true (Chrome 21)\r\n\t// We allow this because of a bug in IE8/9 that throws an error\r\n\t// whenever `document.activeElement` is accessed on an iframe\r\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\r\n\t// See http://bugs.jquery.com/ticket/13378\r\n\trbuggyQSA = [];\r\n\r\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\r\n\t\t// Build QSA regex\r\n\t\t// Regex strategy adopted from Diego Perini\r\n\t\tassert(function( div ) {\r\n\t\t\t// Select is set to empty string on purpose\r\n\t\t\t// This is to test IE's treatment of not explicitly\r\n\t\t\t// setting a boolean content attribute,\r\n\t\t\t// since its presence should be enough\r\n\t\t\t// http://bugs.jquery.com/ticket/12359\r\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\r\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\r\n\t\t\t\t\"<option selected=''></option></select>\";\r\n\r\n\t\t\t// Support: IE8, Opera 11-12.16\r\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\r\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\r\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\r\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\r\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\r\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\"~=\");\r\n\t\t\t}\r\n\r\n\t\t\t// Webkit/Opera - :checked should return selected option elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\r\n\t\t\t\trbuggyQSA.push(\":checked\");\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Safari 8+, iOS 8+\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\r\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\r\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Support: Windows 8 Native Apps\r\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\r\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Enforce case-sensitivity of name attribute\r\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\r\n\t\t\t}\r\n\r\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\r\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\r\n\t\t\tdiv.querySelectorAll(\"*,:x\");\r\n\t\t\trbuggyQSA.push(\",.*:\");\r\n\t\t});\r\n\t}\r\n\r\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\r\n\t\tdocElem.webkitMatchesSelector ||\r\n\t\tdocElem.mozMatchesSelector ||\r\n\t\tdocElem.oMatchesSelector ||\r\n\t\tdocElem.msMatchesSelector) )) ) {\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Check to see if it's possible to do matchesSelector\r\n\t\t\t// on a disconnected node (IE 9)\r\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\r\n\r\n\t\t\t// This should fail with an exception\r\n\t\t\t// Gecko does not error, returns false instead\r\n\t\t\tmatches.call( div, \"[s!='']:x\" );\r\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\r\n\t\t});\r\n\t}\r\n\r\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\r\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n\t/* Contains\r\n\t---------------------------------------------------------------------- */\r\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\r\n\r\n\t// Element contains another\r\n\t// Purposefully self-exclusive\r\n\t// As in, an element does not contain itself\r\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\r\n\t\tfunction( a, b ) {\r\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\r\n\t\t\t\tbup = b && b.parentNode;\r\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\r\n\t\t\t\tadown.contains ?\r\n\t\t\t\t\tadown.contains( bup ) :\r\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n\t\t\t));\r\n\t\t} :\r\n\t\tfunction( a, b ) {\r\n\t\t\tif ( b ) {\r\n\t\t\t\twhile ( (b = b.parentNode) ) {\r\n\t\t\t\t\tif ( b === a ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t/* Sorting\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Document order sorting\r\n\tsortOrder = hasCompare ?\r\n\tfunction( a, b ) {\r\n\r\n\t\t// Flag for duplicate removal\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Sort on method existence if only one input has compareDocumentPosition\r\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\r\n\t\tif ( compare ) {\r\n\t\t\treturn compare;\r\n\t\t}\r\n\r\n\t\t// Calculate position if both inputs belong to the same document\r\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\r\n\t\t\ta.compareDocumentPosition( b ) :\r\n\r\n\t\t\t// Otherwise we know they are disconnected\r\n\t\t\t1;\r\n\r\n\t\t// Disconnected nodes\r\n\t\tif ( compare & 1 ||\r\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\r\n\r\n\t\t\t// Choose the first element that is related to our preferred document\r\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Maintain original order\r\n\t\t\treturn sortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\t\t}\r\n\r\n\t\treturn compare & 4 ? -1 : 1;\r\n\t} :\r\n\tfunction( a, b ) {\r\n\t\t// Exit early if the nodes are identical\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\taup = a.parentNode,\r\n\t\t\tbup = b.parentNode,\r\n\t\t\tap = [ a ],\r\n\t\t\tbp = [ b ];\r\n\r\n\t\t// Parentless nodes are either documents or disconnected\r\n\t\tif ( !aup || !bup ) {\r\n\t\t\treturn a === document ? -1 :\r\n\t\t\t\tb === document ? 1 :\r\n\t\t\t\taup ? -1 :\r\n\t\t\t\tbup ? 1 :\r\n\t\t\t\tsortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\r\n\t\t// If the nodes are siblings, we can do a quick check\r\n\t\t} else if ( aup === bup ) {\r\n\t\t\treturn siblingCheck( a, b );\r\n\t\t}\r\n\r\n\t\t// Otherwise we need full lists of their ancestors for comparison\r\n\t\tcur = a;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tap.unshift( cur );\r\n\t\t}\r\n\t\tcur = b;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tbp.unshift( cur );\r\n\t\t}\r\n\r\n\t\t// Walk down the tree looking for a discrepancy\r\n\t\twhile ( ap[i] === bp[i] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i ?\r\n\t\t\t// Do a sibling check if the nodes have a common ancestor\r\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\r\n\r\n\t\t\t// Otherwise nodes in our document sort first\r\n\t\t\tap[i] === preferredDoc ? -1 :\r\n\t\t\tbp[i] === preferredDoc ? 1 :\r\n\t\t\t0;\r\n\t};\r\n\r\n\treturn document;\r\n};\r\n\r\nSizzle.matches = function( expr, elements ) {\r\n\treturn Sizzle( expr, null, null, elements );\r\n};\r\n\r\nSizzle.matchesSelector = function( elem, expr ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\t// Make sure that attribute selectors are quoted\r\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\r\n\r\n\tif ( support.matchesSelector && documentIsHTML &&\r\n\t\t!compilerCache[ expr + \" \" ] &&\r\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\r\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n\t\ttry {\r\n\t\t\tvar ret = matches.call( elem, expr );\r\n\r\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\r\n\t\t\tif ( ret || support.disconnectedMatch ||\r\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n\t\t\t\t\t// fragment in IE 9\r\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\r\n};\r\n\r\nSizzle.contains = function( context, elem ) {\r\n\t// Set document vars if needed\r\n\tif ( ( context.ownerDocument || context ) !== document ) {\r\n\t\tsetDocument( context );\r\n\t}\r\n\treturn contains( context, elem );\r\n};\r\n\r\nSizzle.attr = function( elem, name ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\r\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\r\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n\t\t\tfn( elem, name, !documentIsHTML ) :\r\n\t\t\tundefined;\r\n\r\n\treturn val !== undefined ?\r\n\t\tval :\r\n\t\tsupport.attributes || !documentIsHTML ?\r\n\t\t\telem.getAttribute( name ) :\r\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\r\n\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n};\r\n\r\nSizzle.error = function( msg ) {\r\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\n/**\r\n * Document sorting and removing duplicates\r\n * @param {ArrayLike} results\r\n */\r\nSizzle.uniqueSort = function( results ) {\r\n\tvar elem,\r\n\t\tduplicates = [],\r\n\t\tj = 0,\r\n\t\ti = 0;\r\n\r\n\t// Unless we *know* we can detect duplicates, assume their presence\r\n\thasDuplicate = !support.detectDuplicates;\r\n\tsortInput = !support.sortStable && results.slice( 0 );\r\n\tresults.sort( sortOrder );\r\n\r\n\tif ( hasDuplicate ) {\r\n\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\tif ( elem === results[ i ] ) {\r\n\t\t\t\tj = duplicates.push( i );\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( j-- ) {\r\n\t\t\tresults.splice( duplicates[ j ], 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear input after sorting to release objects\r\n\t// See https://github.com/jquery/sizzle/pull/225\r\n\tsortInput = null;\r\n\r\n\treturn results;\r\n};\r\n\r\n/**\r\n * Utility function for retrieving the text value of an array of DOM nodes\r\n * @param {Array|Element} elem\r\n */\r\ngetText = Sizzle.getText = function( elem ) {\r\n\tvar node,\r\n\t\tret = \"\",\r\n\t\ti = 0,\r\n\t\tnodeType = elem.nodeType;\r\n\r\n\tif ( !nodeType ) {\r\n\t\t// If no nodeType, this is expected to be an array\r\n\t\twhile ( (node = elem[i++]) ) {\r\n\t\t\t// Do not traverse comment nodes\r\n\t\t\tret += getText( node );\r\n\t\t}\r\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n\t\t// Use textContent for elements\r\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\r\n\t\tif ( typeof elem.textContent === \"string\" ) {\r\n\t\t\treturn elem.textContent;\r\n\t\t} else {\r\n\t\t\t// Traverse its children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tret += getText( elem );\r\n\t\t\t}\r\n\t\t}\r\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\r\n\t\treturn elem.nodeValue;\r\n\t}\r\n\t// Do not include comment or processing instruction nodes\r\n\r\n\treturn ret;\r\n};\r\n\r\nExpr = Sizzle.selectors = {\r\n\r\n\t// Can be adjusted by the user\r\n\tcacheLength: 50,\r\n\r\n\tcreatePseudo: markFunction,\r\n\r\n\tmatch: matchExpr,\r\n\r\n\tattrHandle: {},\r\n\r\n\tfind: {},\r\n\r\n\trelative: {\r\n\t\t\">\": { dir: \"parentNode\", first: true },\r\n\t\t\" \": { dir: \"parentNode\" },\r\n\t\t\"+\": { dir: \"previousSibling\", first: true },\r\n\t\t\"~\": { dir: \"previousSibling\" }\r\n\t},\r\n\r\n\tpreFilter: {\r\n\t\t\"ATTR\": function( match ) {\r\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\r\n\r\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\r\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\r\n\r\n\t\t\tif ( match[2] === \"~=\" ) {\r\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\r\n\t\t\t}\r\n\r\n\t\t\treturn match.slice( 0, 4 );\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( match ) {\r\n\t\t\t/* matches from matchExpr[\"CHILD\"]\r\n\t\t\t\t1 type (only|nth|...)\r\n\t\t\t\t2 what (child|of-type)\r\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n\t\t\t\t5 sign of xn-component\r\n\t\t\t\t6 x of xn-component\r\n\t\t\t\t7 sign of y-component\r\n\t\t\t\t8 y of y-component\r\n\t\t\t*/\r\n\t\t\tmatch[1] = match[1].toLowerCase();\r\n\r\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\r\n\t\t\t\t// nth-* requires argument\r\n\t\t\t\tif ( !match[3] ) {\r\n\t\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\r\n\t\t\t\t// remember that false/true cast respectively to 0/1\r\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\r\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\r\n\r\n\t\t\t// other types prohibit arguments\r\n\t\t\t} else if ( match[3] ) {\r\n\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t}\r\n\r\n\t\t\treturn match;\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( match ) {\r\n\t\t\tvar excess,\r\n\t\t\t\tunquoted = !match[6] && match[2];\r\n\r\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept quoted arguments as-is\r\n\t\t\tif ( match[3] ) {\r\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\r\n\r\n\t\t\t// Strip excess characters from unquoted arguments\r\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\r\n\t\t\t\t// Get excess from tokenize (recursively)\r\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\r\n\t\t\t\t// advance to the next closing parenthesis\r\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n\t\t\t\t// excess is a negative index\r\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\r\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\r\n\t\t\t}\r\n\r\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\r\n\t\t\treturn match.slice( 0, 3 );\r\n\t\t}\r\n\t},\r\n\r\n\tfilter: {\r\n\r\n\t\t\"TAG\": function( nodeNameSelector ) {\r\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn nodeNameSelector === \"*\" ?\r\n\t\t\t\tfunction() { return true; } :\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CLASS\": function( className ) {\r\n\t\t\tvar pattern = classCache[ className + \" \" ];\r\n\r\n\t\t\treturn pattern ||\r\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n\t\t\t\tclassCache( className, function( elem ) {\r\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t\"ATTR\": function( name, operator, check ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar result = Sizzle.attr( elem, name );\r\n\r\n\t\t\t\tif ( result == null ) {\r\n\t\t\t\t\treturn operator === \"!=\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( !operator ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += \"\";\r\n\r\n\t\t\t\treturn operator === \"=\" ? result === check :\r\n\t\t\t\t\toperator === \"!=\" ? result !== check :\r\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\r\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\r\n\t\t\t\t\tfalse;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\r\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\r\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\r\n\t\t\t\tofType = what === \"of-type\";\r\n\r\n\t\t\treturn first === 1 && last === 0 ?\r\n\r\n\t\t\t\t// Shortcut for :nth-*(n)\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn !!elem.parentNode;\r\n\t\t\t\t} :\r\n\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\r\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n\t\t\t\t\t\tparent = elem.parentNode,\r\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\r\n\t\t\t\t\t\tuseCache = !xml && !ofType,\r\n\t\t\t\t\t\tdiff = false;\r\n\r\n\t\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\r\n\t\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\t\twhile ( dir ) {\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\r\n\t\t\t\t\t\t\t\t\tif ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\r\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\r\n\t\t\t\t\t\tif ( forward && useCache ) {\r\n\r\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\r\n\r\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\tnode = parent;\r\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\r\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\r\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\r\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\r\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Use previously-cached element index if available\r\n\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// xml :nth-child(...)\r\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n\t\t\t\t\t\t\tif ( diff === false ) {\r\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\r\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\r\n\t\t\t\t\t\t\t\t\t\t++diff ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\r\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\r\n\t\t\t\t\t\tdiff -= last;\r\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( pseudo, argument ) {\r\n\t\t\t// pseudo-class names are case-insensitive\r\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\r\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n\t\t\t// Remember that setFilters inherits from pseudos\r\n\t\t\tvar args,\r\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n\t\t\t// The user may use createPseudo to indicate that\r\n\t\t\t// arguments are needed to create the filter function\r\n\t\t\t// just as Sizzle does\r\n\t\t\tif ( fn[ expando ] ) {\r\n\t\t\t\treturn fn( argument );\r\n\t\t\t}\r\n\r\n\t\t\t// But maintain support for old signatures\r\n\t\t\tif ( fn.length > 1 ) {\r\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\r\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\r\n\t\t\t\t\t\tvar idx,\r\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\r\n\t\t\t\t\t\t\ti = matched.length;\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\r\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\t\treturn fn( elem, 0, args );\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn fn;\r\n\t\t}\r\n\t},\r\n\r\n\tpseudos: {\r\n\t\t// Potentially complex pseudos\r\n\t\t\"not\": markFunction(function( selector ) {\r\n\t\t\t// Trim the selector passed to compile\r\n\t\t\t// to avoid treating leading and trailing\r\n\t\t\t// spaces as combinators\r\n\t\t\tvar input = [],\r\n\t\t\t\tresults = [],\r\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n\t\t\treturn matcher[ expando ] ?\r\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\r\n\t\t\t\t\tvar elem,\r\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\r\n\t\t\t\t\t\ti = seed.length;\r\n\r\n\t\t\t\t\t// Match elements unmatched by `matcher`\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}) :\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tinput[0] = elem;\r\n\t\t\t\t\tmatcher( input, null, xml, results );\r\n\t\t\t\t\t// Don't keep the element (issue #299)\r\n\t\t\t\t\tinput[0] = null;\r\n\t\t\t\t\treturn !results.pop();\r\n\t\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"has\": markFunction(function( selector ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"contains\": markFunction(function( text ) {\r\n\t\t\ttext = text.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// \"Whether an element is represented by a :lang() selector\r\n\t\t// is based solely on the element's language value\r\n\t\t// being equal to the identifier C,\r\n\t\t// or beginning with the identifier C immediately followed by \"-\".\r\n\t\t// The matching of C against the element's language value is performed case-insensitively.\r\n\t\t// The identifier C does not have to be a valid language name.\"\r\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\r\n\t\t\"lang\": markFunction( function( lang ) {\r\n\t\t\t// lang value must be a valid identifier\r\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\r\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\r\n\t\t\t}\r\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar elemLang;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\r\n\t\t\t\t\t\telem.lang :\r\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\r\n\r\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\r\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// Miscellaneous\r\n\t\t\"target\": function( elem ) {\r\n\t\t\tvar hash = window.location && window.location.hash;\r\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\r\n\t\t},\r\n\r\n\t\t\"root\": function( elem ) {\r\n\t\t\treturn elem === docElem;\r\n\t\t},\r\n\r\n\t\t\"focus\": function( elem ) {\r\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n\t\t},\r\n\r\n\t\t// Boolean properties\r\n\t\t\"enabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === false;\r\n\t\t},\r\n\r\n\t\t\"disabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === true;\r\n\t\t},\r\n\r\n\t\t\"checked\": function( elem ) {\r\n\t\t\t// In CSS3, :checked should return both checked and selected elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\r\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n\t\t},\r\n\r\n\t\t\"selected\": function( elem ) {\r\n\t\t\t// Accessing this property makes selected-by-default\r\n\t\t\t// options in Safari work properly\r\n\t\t\tif ( elem.parentNode ) {\r\n\t\t\t\telem.parentNode.selectedIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.selected === true;\r\n\t\t},\r\n\r\n\t\t// Contents\r\n\t\t\"empty\": function( elem ) {\r\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\r\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\r\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\r\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tif ( elem.nodeType < 6 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t\"parent\": function( elem ) {\r\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\r\n\t\t},\r\n\r\n\t\t// Element/input types\r\n\t\t\"header\": function( elem ) {\r\n\t\t\treturn rheader.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"input\": function( elem ) {\r\n\t\t\treturn rinputs.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"button\": function( elem ) {\r\n\t\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n\t\t},\r\n\r\n\t\t\"text\": function( elem ) {\r\n\t\t\tvar attr;\r\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\r\n\t\t\t\telem.type === \"text\" &&\r\n\r\n\t\t\t\t// Support: IE<8\r\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\r\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\r\n\t\t},\r\n\r\n\t\t// Position-in-collection\r\n\t\t\"first\": createPositionalPseudo(function() {\r\n\t\t\treturn [ 0 ];\r\n\t\t}),\r\n\r\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\treturn [ length - 1 ];\r\n\t\t}),\r\n\r\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\r\n\t\t}),\r\n\r\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 1;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; --i >= 0; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; ++i < length; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t})\r\n\t}\r\n};\r\n\r\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Add button/input type pseudos\r\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n\tExpr.pseudos[ i ] = createInputPseudo( i );\r\n}\r\nfor ( i in { submit: true, reset: true } ) {\r\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\r\n}\r\n\r\n// Easy API for creating new setFilters\r\nfunction setFilters() {}\r\nsetFilters.prototype = Expr.filters = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\r\n\tvar matched, match, tokens, type,\r\n\t\tsoFar, groups, preFilters,\r\n\t\tcached = tokenCache[ selector + \" \" ];\r\n\r\n\tif ( cached ) {\r\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\r\n\t}\r\n\r\n\tsoFar = selector;\r\n\tgroups = [];\r\n\tpreFilters = Expr.preFilter;\r\n\r\n\twhile ( soFar ) {\r\n\r\n\t\t// Comma and first run\r\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Don't consume trailing commas as valid\r\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\r\n\t\t\t}\r\n\t\t\tgroups.push( (tokens = []) );\r\n\t\t}\r\n\r\n\t\tmatched = false;\r\n\r\n\t\t// Combinators\r\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\r\n\t\t\tmatched = match.shift();\r\n\t\t\ttokens.push({\r\n\t\t\t\tvalue: matched,\r\n\t\t\t\t// Cast descendant combinators to space\r\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\r\n\t\t\t});\r\n\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t}\r\n\r\n\t\t// Filters\r\n\t\tfor ( type in Expr.filter ) {\r\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\r\n\t\t\t\tmatched = match.shift();\r\n\t\t\t\ttokens.push({\r\n\t\t\t\t\tvalue: matched,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmatches: match\r\n\t\t\t\t});\r\n\t\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !matched ) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the length of the invalid excess\r\n\t// if we're just parsing\r\n\t// Otherwise, throw an error or return tokens\r\n\treturn parseOnly ?\r\n\t\tsoFar.length :\r\n\t\tsoFar ?\r\n\t\t\tSizzle.error( selector ) :\r\n\t\t\t// Cache the tokens\r\n\t\t\ttokenCache( selector, groups ).slice( 0 );\r\n};\r\n\r\nfunction toSelector( tokens ) {\r\n\tvar i = 0,\r\n\t\tlen = tokens.length,\r\n\t\tselector = \"\";\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tselector += tokens[i].value;\r\n\t}\r\n\treturn selector;\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n\tvar dir = combinator.dir,\r\n\t\tcheckNonElements = base && dir === \"parentNode\",\r\n\t\tdoneName = done++;\r\n\r\n\treturn combinator.first ?\r\n\t\t// Check against closest ancestor/preceding element\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\treturn matcher( elem, context, xml );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\t// Check against all ancestor/preceding elements\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar oldCache, uniqueCache, outerCache,\r\n\t\t\t\tnewCache = [ dirruns, doneName ];\r\n\r\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\r\n\t\t\tif ( xml ) {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\r\n\r\n\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\r\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\r\n\r\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\r\n\r\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\r\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n\treturn matchers.length > 1 ?\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar i = matchers.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} :\r\n\t\tmatchers[0];\r\n}\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n\tvar i = 0,\r\n\t\tlen = contexts.length;\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tSizzle( selector, contexts[i], results );\r\n\t}\r\n\treturn results;\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n\tvar elem,\r\n\t\tnewUnmatched = [],\r\n\t\ti = 0,\r\n\t\tlen = unmatched.length,\r\n\t\tmapped = map != null;\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\r\n\t\t\t\tnewUnmatched.push( elem );\r\n\t\t\t\tif ( mapped ) {\r\n\t\t\t\t\tmap.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n\tif ( postFilter && !postFilter[ expando ] ) {\r\n\t\tpostFilter = setMatcher( postFilter );\r\n\t}\r\n\tif ( postFinder && !postFinder[ expando ] ) {\r\n\t\tpostFinder = setMatcher( postFinder, postSelector );\r\n\t}\r\n\treturn markFunction(function( seed, results, context, xml ) {\r\n\t\tvar temp, i, elem,\r\n\t\t\tpreMap = [],\r\n\t\t\tpostMap = [],\r\n\t\t\tpreexisting = results.length,\r\n\r\n\t\t\t// Get initial elements from seed or context\r\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\r\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\r\n\t\t\t\telems,\r\n\r\n\t\t\tmatcherOut = matcher ?\r\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n\t\t\t\t\t// ...intermediate processing is necessary\r\n\t\t\t\t\t[] :\r\n\r\n\t\t\t\t\t// ...otherwise use results directly\r\n\t\t\t\t\tresults :\r\n\t\t\t\tmatcherIn;\r\n\r\n\t\t// Find primary matches\r\n\t\tif ( matcher ) {\r\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\r\n\t\t}\r\n\r\n\t\t// Apply postFilter\r\n\t\tif ( postFilter ) {\r\n\t\t\ttemp = condense( matcherOut, postMap );\r\n\t\t\tpostFilter( temp, [], context, xml );\r\n\r\n\t\t\t// Un-match failing elements by moving them back to matcherIn\r\n\t\t\ti = temp.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( (elem = temp[i]) ) {\r\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( seed ) {\r\n\t\t\tif ( postFinder || preFilter ) {\r\n\t\t\t\tif ( postFinder ) {\r\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n\t\t\t\t\ttemp = [];\r\n\t\t\t\t\ti = matcherOut.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\r\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\r\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\r\n\t\t\t\ti = matcherOut.length;\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\r\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Add elements to results, through postFinder if defined\r\n\t\t} else {\r\n\t\t\tmatcherOut = condense(\r\n\t\t\t\tmatcherOut === results ?\r\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\r\n\t\t\t\t\tmatcherOut\r\n\t\t\t);\r\n\t\t\tif ( postFinder ) {\r\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\r\n\t\t\t} else {\r\n\t\t\t\tpush.apply( results, matcherOut );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n\tvar checkContext, matcher, j,\r\n\t\tlen = tokens.length,\r\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\r\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\r\n\t\ti = leadingRelative ? 1 : 0,\r\n\r\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\r\n\t\tmatchContext = addCombinator( function( elem ) {\r\n\t\t\treturn elem === checkContext;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchAnyContext = addCombinator( function( elem ) {\r\n\t\t\treturn indexOf( checkContext, elem ) > -1;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchers = [ function( elem, context, xml ) {\r\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n\t\t\t\t(checkContext = context).nodeType ?\r\n\t\t\t\t\tmatchContext( elem, context, xml ) :\r\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\r\n\t\t\t// Avoid hanging onto element (issue #299)\r\n\t\t\tcheckContext = null;\r\n\t\t\treturn ret;\r\n\t\t} ];\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\r\n\t\t} else {\r\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n\t\t\t// Return special upon seeing a positional matcher\r\n\t\t\tif ( matcher[ expando ] ) {\r\n\t\t\t\t// Find the next relative operator (if any) for proper handling\r\n\t\t\t\tj = ++i;\r\n\t\t\t\tfor ( ; j < len; j++ ) {\r\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn setMatcher(\r\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\r\n\t\t\t\t\ti > 1 && toSelector(\r\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\r\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\r\n\t\t\t\t\tmatcher,\r\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n\t\t\t\t\tj < len && toSelector( tokens )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmatchers.push( matcher );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n\tvar bySet = setMatchers.length > 0,\r\n\t\tbyElement = elementMatchers.length > 0,\r\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\r\n\t\t\tvar elem, j, matcher,\r\n\t\t\t\tmatchedCount = 0,\r\n\t\t\t\ti = \"0\",\r\n\t\t\t\tunmatched = seed && [],\r\n\t\t\t\tsetMatched = [],\r\n\t\t\t\tcontextBackup = outermostContext,\r\n\t\t\t\t// We must always have either seed elements or outermost context\r\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\r\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\r\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\r\n\t\t\t\tlen = elems.length;\r\n\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\toutermostContext = context === document || context || outermost;\r\n\t\t\t}\r\n\r\n\t\t\t// Add elements passing elementMatchers directly to results\r\n\t\t\t// Support: IE<9, Safari\r\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\r\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\r\n\t\t\t\tif ( byElement && elem ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\r\n\t\t\t\t\t\tsetDocument( elem );\r\n\t\t\t\t\t\txml = !documentIsHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( outermost ) {\r\n\t\t\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track unmatched elements for set filters\r\n\t\t\t\tif ( bySet ) {\r\n\t\t\t\t\t// They will have gone through all possible matchers\r\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\r\n\t\t\t\t\t\tmatchedCount--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lengthen the array for every element, matched or not\r\n\t\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t\tunmatched.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\r\n\t\t\t// makes the latter nonnegative.\r\n\t\t\tmatchedCount += i;\r\n\r\n\t\t\t// Apply set filters to unmatched elements\r\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\r\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\r\n\t\t\t// no element matchers and no seed.\r\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\r\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\r\n\t\t\t// numerically zero.\r\n\t\t\tif ( bySet && i !== matchedCount ) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\r\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\r\n\t\t\t\t\tif ( matchedCount > 0 ) {\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\r\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\r\n\t\t\t\t\tsetMatched = condense( setMatched );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add matches to results\r\n\t\t\t\tpush.apply( results, setMatched );\r\n\r\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\r\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n\t\t\t\t\tSizzle.uniqueSort( results );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Override manipulation of globals by nested matchers\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\toutermostContext = contextBackup;\r\n\t\t\t}\r\n\r\n\t\t\treturn unmatched;\r\n\t\t};\r\n\r\n\treturn bySet ?\r\n\t\tmarkFunction( superMatcher ) :\r\n\t\tsuperMatcher;\r\n}\r\n\r\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\r\n\tvar i,\r\n\t\tsetMatchers = [],\r\n\t\telementMatchers = [],\r\n\t\tcached = compilerCache[ selector + \" \" ];\r\n\r\n\tif ( !cached ) {\r\n\t\t// Generate a function of recursive functions that can be used to check each element\r\n\t\tif ( !match ) {\r\n\t\t\tmatch = tokenize( selector );\r\n\t\t}\r\n\t\ti = match.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tcached = matcherFromTokens( match[i] );\r\n\t\t\tif ( cached[ expando ] ) {\r\n\t\t\t\tsetMatchers.push( cached );\r\n\t\t\t} else {\r\n\t\t\t\telementMatchers.push( cached );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache the compiled function\r\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n\r\n\t\t// Save selector and tokenization\r\n\t\tcached.selector = selector;\r\n\t}\r\n\treturn cached;\r\n};\r\n\r\n/**\r\n * A low-level selection function that works with Sizzle's compiled\r\n *  selector functions\r\n * @param {String|Function} selector A selector or a pre-compiled\r\n *  selector function built with Sizzle.compile\r\n * @param {Element} context\r\n * @param {Array} [results]\r\n * @param {Array} [seed] A set of elements to match against\r\n */\r\nselect = Sizzle.select = function( selector, context, results, seed ) {\r\n\tvar i, tokens, token, type, find,\r\n\t\tcompiled = typeof selector === \"function\" && selector,\r\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\r\n\r\n\tresults = results || [];\r\n\r\n\t// Try to minimize operations if there is only one selector in the list and no seed\r\n\t// (the latter of which guarantees us context)\r\n\tif ( match.length === 1 ) {\r\n\r\n\t\t// Reduce context if the leading compound selector is an ID\r\n\t\ttokens = match[0] = match[0].slice( 0 );\r\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\r\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\r\n\r\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\r\n\t\t\tif ( !context ) {\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\r\n\t\t\t} else if ( compiled ) {\r\n\t\t\t\tcontext = context.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tselector = selector.slice( tokens.shift().value.length );\r\n\t\t}\r\n\r\n\t\t// Fetch a seed set for right-to-left matching\r\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\ttoken = tokens[i];\r\n\r\n\t\t\t// Abort if we hit a combinator\r\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( (find = Expr.find[ type ]) ) {\r\n\t\t\t\t// Search, expanding context for leading sibling combinators\r\n\t\t\t\tif ( (seed = find(\r\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\r\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\r\n\t\t\t\t)) ) {\r\n\r\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\r\n\t\t\t\t\ttokens.splice( i, 1 );\r\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\r\n\t\t\t\t\tif ( !selector ) {\r\n\t\t\t\t\t\tpush.apply( results, seed );\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Compile and execute a filtering function if one is not provided\r\n\t// Provide `match` to avoid retokenization if we modified the selector above\r\n\t( compiled || compile( selector, match ) )(\r\n\t\tseed,\r\n\t\tcontext,\r\n\t\t!documentIsHTML,\r\n\t\tresults,\r\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\r\n\t);\r\n\treturn results;\r\n};\r\n\r\n// One-time assignments\r\n\r\n// Sort stability\r\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\r\n\r\n// Support: Chrome 14-35+\r\n// Always assume duplicates if they aren't passed to the comparison function\r\nsupport.detectDuplicates = !!hasDuplicate;\r\n\r\n// Initialize against the default document\r\nsetDocument();\r\n\r\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\r\n// Detached nodes confoundingly follow *each other*\r\nsupport.sortDetached = assert(function( div1 ) {\r\n\t// Should return 1, but returns 4 (following)\r\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\r\n});\r\n\r\n// Support: IE<8\r\n// Prevent attribute/property \"interpolation\"\r\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\nif ( !assert(function( div ) {\r\n\tdiv.innerHTML = \"<a href='#'></a>\";\r\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\r\n}) ) {\r\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use defaultValue in place of getAttribute(\"value\")\r\nif ( !support.attributes || !assert(function( div ) {\r\n\tdiv.innerHTML = \"<input/>\";\r\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\r\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\r\n}) ) {\r\n\taddHandle( \"value\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\r\n\t\t\treturn elem.defaultValue;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use getAttributeNode to fetch booleans when getAttribute lies\r\nif ( !assert(function( div ) {\r\n\treturn div.getAttribute(\"disabled\") == null;\r\n}) ) {\r\n\taddHandle( booleans, function( elem, name, isXML ) {\r\n\t\tvar val;\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\r\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\r\n\t\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nreturn Sizzle;\r\n\r\n})( window );\r\n\r\n\r\n\r\njQuery.find = Sizzle;\r\njQuery.expr = Sizzle.selectors;\r\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\r\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\r\njQuery.text = Sizzle.getText;\r\njQuery.isXMLDoc = Sizzle.isXML;\r\njQuery.contains = Sizzle.contains;\r\n\r\n\r\n\r\nvar dir = function( elem, dir, until ) {\r\n\tvar matched = [],\r\n\t\ttruncate = until !== undefined;\r\n\r\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\r\n\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmatched.push( elem );\r\n\t\t}\r\n\t}\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar siblings = function( n, elem ) {\r\n\tvar matched = [];\r\n\r\n\tfor ( ; n; n = n.nextSibling ) {\r\n\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n\t\t\tmatched.push( n );\r\n\t\t}\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar rneedsContext = jQuery.expr.match.needsContext;\r\n\r\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\r\n\r\n\r\n\r\nvar risSimple = /^.[^:#\\[\\.,]*$/;\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, not ) {\r\n\tif ( jQuery.isFunction( qualifier ) ) {\r\n\t\treturn jQuery.grep( elements, function( elem, i ) {\r\n\t\t\t/* jshint -W018 */\r\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( qualifier.nodeType ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( elem === qualifier ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( typeof qualifier === \"string\" ) {\r\n\t\tif ( risSimple.test( qualifier ) ) {\r\n\t\t\treturn jQuery.filter( qualifier, elements, not );\r\n\t\t}\r\n\r\n\t\tqualifier = jQuery.filter( qualifier, elements );\r\n\t}\r\n\r\n\treturn jQuery.grep( elements, function( elem ) {\r\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\r\n\t} );\r\n}\r\n\r\njQuery.filter = function( expr, elems, not ) {\r\n\tvar elem = elems[ 0 ];\r\n\r\n\tif ( not ) {\r\n\t\texpr = \":not(\" + expr + \")\";\r\n\t}\r\n\r\n\treturn elems.length === 1 && elem.nodeType === 1 ?\r\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\r\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n\t\t\treturn elem.nodeType === 1;\r\n\t\t} ) );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfind: function( selector ) {\r\n\t\tvar i,\r\n\t\t\tlen = this.length,\r\n\t\t\tret = [],\r\n\t\t\tself = this;\r\n\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\tjQuery.find( selector, self[ i ], ret );\r\n\t\t}\r\n\r\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\r\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\r\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\r\n\t\treturn ret;\r\n\t},\r\n\tfilter: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\r\n\t},\r\n\tnot: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\r\n\t},\r\n\tis: function( selector ) {\r\n\t\treturn !!winnow(\r\n\t\t\tthis,\r\n\r\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\r\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n\t\t\t\tjQuery( selector ) :\r\n\t\t\t\tselector || [],\r\n\t\t\tfalse\r\n\t\t).length;\r\n\t}\r\n} );\r\n\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n\t// Strict HTML recognition (#11290: must start with <)\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context, root ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Method init() accepts an alternate rootjQuery\r\n\t\t// so migrate can support jQuery.sub (gh-2101)\r\n\t\troot = root || rootjQuery;\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[ 0 ] === \"<\" &&\r\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\r\n\t\t\t\tselector.length >= 3 ) {\r\n\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[ 1 ] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\r\n\r\n\t\t\t\t\t// Option to run scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[ 1 ],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\r\n\r\n\t\t\t\t\t// Support: Blackberry 4.6\r\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\r\n\t\t\t\t\tif ( elem && elem.parentNode ) {\r\n\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t\tthis[ 0 ] = elem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.context = document;\r\n\t\t\t\t\tthis.selector = selector;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || root ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis.context = this[ 0 ] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( jQuery.isFunction( selector ) ) {\r\n\t\t\treturn root.ready !== undefined ?\r\n\t\t\t\troot.ready( selector ) :\r\n\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\tif ( selector.selector !== undefined ) {\r\n\t\t\tthis.selector = selector.selector;\r\n\t\t\tthis.context = selector.context;\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\n\r\n\r\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n\r\n\t// Methods guaranteed to produce a unique set when starting from a unique set\r\n\tguaranteedUnique = {\r\n\t\tchildren: true,\r\n\t\tcontents: true,\r\n\t\tnext: true,\r\n\t\tprev: true\r\n\t};\r\n\r\njQuery.fn.extend( {\r\n\thas: function( target ) {\r\n\t\tvar targets = jQuery( target, this ),\r\n\t\t\tl = targets.length;\r\n\r\n\t\treturn this.filter( function() {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tclosest: function( selectors, context ) {\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\tl = this.length,\r\n\t\t\tmatched = [],\r\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\r\n\t\t\t\tjQuery( selectors, context || this.context ) :\r\n\t\t\t\t0;\r\n\r\n\t\tfor ( ; i < l; i++ ) {\r\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\r\n\r\n\t\t\t\t// Always skip document fragments\r\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\r\n\t\t\t\t\tpos.index( cur ) > -1 :\r\n\r\n\t\t\t\t\t// Don't pass non-elements to Sizzle\r\n\t\t\t\t\tcur.nodeType === 1 &&\r\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\r\n\r\n\t\t\t\t\tmatched.push( cur );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\r\n\t},\r\n\r\n\t// Determine the position of an element within the set\r\n\tindex: function( elem ) {\r\n\r\n\t\t// No argument, return index in parent\r\n\t\tif ( !elem ) {\r\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\r\n\t\t}\r\n\r\n\t\t// Index in selector\r\n\t\tif ( typeof elem === \"string\" ) {\r\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\r\n\t\t}\r\n\r\n\t\t// Locate the position of the desired element\r\n\t\treturn indexOf.call( this,\r\n\r\n\t\t\t// If it receives a jQuery object, the first element is used\r\n\t\t\telem.jquery ? elem[ 0 ] : elem\r\n\t\t);\r\n\t},\r\n\r\n\tadd: function( selector, context ) {\r\n\t\treturn this.pushStack(\r\n\t\t\tjQuery.uniqueSort(\r\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\taddBack: function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t}\r\n} );\r\n\r\nfunction sibling( cur, dir ) {\r\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\r\n\treturn cur;\r\n}\r\n\r\njQuery.each( {\r\n\tparent: function( elem ) {\r\n\t\tvar parent = elem.parentNode;\r\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n\t},\r\n\tparents: function( elem ) {\r\n\t\treturn dir( elem, \"parentNode\" );\r\n\t},\r\n\tparentsUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"parentNode\", until );\r\n\t},\r\n\tnext: function( elem ) {\r\n\t\treturn sibling( elem, \"nextSibling\" );\r\n\t},\r\n\tprev: function( elem ) {\r\n\t\treturn sibling( elem, \"previousSibling\" );\r\n\t},\r\n\tnextAll: function( elem ) {\r\n\t\treturn dir( elem, \"nextSibling\" );\r\n\t},\r\n\tprevAll: function( elem ) {\r\n\t\treturn dir( elem, \"previousSibling\" );\r\n\t},\r\n\tnextUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"nextSibling\", until );\r\n\t},\r\n\tprevUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"previousSibling\", until );\r\n\t},\r\n\tsiblings: function( elem ) {\r\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\r\n\t},\r\n\tchildren: function( elem ) {\r\n\t\treturn siblings( elem.firstChild );\r\n\t},\r\n\tcontents: function( elem ) {\r\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\r\n\t}\r\n}, function( name, fn ) {\r\n\tjQuery.fn[ name ] = function( until, selector ) {\r\n\t\tvar matched = jQuery.map( this, fn, until );\r\n\r\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\r\n\t\t\tselector = until;\r\n\t\t}\r\n\r\n\t\tif ( selector && typeof selector === \"string\" ) {\r\n\t\t\tmatched = jQuery.filter( selector, matched );\r\n\t\t}\r\n\r\n\t\tif ( this.length > 1 ) {\r\n\r\n\t\t\t// Remove duplicates\r\n\t\t\tif ( !guaranteedUnique[ name ] ) {\r\n\t\t\t\tjQuery.uniqueSort( matched );\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse order for parents* and prev-derivatives\r\n\t\t\tif ( rparentsprev.test( name ) ) {\r\n\t\t\t\tmatched.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched );\r\n\t};\r\n} );\r\nvar rnotwhite = ( /\\S+/g );\r\n\r\n\r\n\r\n// Convert String-formatted options into Object-formatted ones\r\nfunction createOptions( options ) {\r\n\tvar object = {};\r\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t} );\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\tcreateOptions( options ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Flag to know if list is currently firing\r\n\t\tfiring,\r\n\r\n\t\t// Last fire value for non-forgettable lists\r\n\t\tmemory,\r\n\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\r\n\t\t// Flag to prevent firing\r\n\t\tlocked,\r\n\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\r\n\t\t// Queue of execution data for repeatable lists\r\n\t\tqueue = [],\r\n\r\n\t\t// Index of currently firing callback (modified by add/remove as needed)\r\n\t\tfiringIndex = -1,\r\n\r\n\t\t// Fire callbacks\r\n\t\tfire = function() {\r\n\r\n\t\t\t// Enforce single-firing\r\n\t\t\tlocked = options.once;\r\n\r\n\t\t\t// Execute callbacks for all pending executions,\r\n\t\t\t// respecting firingIndex overrides and runtime changes\r\n\t\t\tfired = firing = true;\r\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\r\n\t\t\t\tmemory = queue.shift();\r\n\t\t\t\twhile ( ++firingIndex < list.length ) {\r\n\r\n\t\t\t\t\t// Run callback and check for early termination\r\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\r\n\t\t\t\t\t\toptions.stopOnFalse ) {\r\n\r\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\r\n\t\t\t\t\t\tfiringIndex = list.length;\r\n\t\t\t\t\t\tmemory = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Forget the data if we're done with it\r\n\t\t\tif ( !options.memory ) {\r\n\t\t\t\tmemory = false;\r\n\t\t\t}\r\n\r\n\t\t\tfiring = false;\r\n\r\n\t\t\t// Clean up if we're done firing for good\r\n\t\t\tif ( locked ) {\r\n\r\n\t\t\t\t// Keep an empty list if we have data for future add calls\r\n\t\t\t\tif ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\r\n\t\t\t\t// Otherwise, this object is spent\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\r\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfiringIndex = list.length - 1;\r\n\t\t\t\t\t\tqueue.push( memory );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t( function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} )( arguments );\r\n\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\tlist.splice( index, 1 );\r\n\r\n\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ?\r\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\r\n\t\t\t\t\tlist.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire and .add\r\n\t\t\t// Abort any current/pending executions\r\n\t\t\t// Clear all callbacks and values\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tlist = memory = \"\";\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire\r\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\r\n\t\t\t// Abort any pending executions\r\n\t\t\tlock: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tif ( !memory ) {\r\n\t\t\t\t\tlist = memory = \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !!locked;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( !locked ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tqueue.push( args );\r\n\t\t\t\t\tif ( !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\njQuery.extend( {\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\r\n\t\t\t\t// action, add listener, listener list, final state\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\r\n\r\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\r\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\r\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Keep pipe for back-compat\r\n\t\tpromise.pipe = promise.then;\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 3 ];\r\n\r\n\t\t\t// promise[ done | fail | progress ] = list.add\r\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add( function() {\r\n\r\n\t\t\t\t\t// state = [ resolved | rejected ]\r\n\t\t\t\t\tstate = stateString;\r\n\r\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\r\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n\t\t\t}\r\n\r\n\t\t\t// deferred[ resolve | reject | notify ]\r\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\r\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\r\n\t\t} );\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\r\n\t\tvar i = 0,\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\t\t\tlength = resolveValues.length,\r\n\r\n\t\t\t// the count of uncompleted subordinates\r\n\t\t\tremaining = length !== 1 ||\r\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n\t\t\t// the master Deferred.\r\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\r\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n\t\t\t// Update function for both resolve and progress values\r\n\t\t\tupdateFunc = function( i, contexts, values ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tcontexts[ i ] = this;\r\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( values === progressValues ) {\r\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\r\n\t\t\t\t\t} else if ( !( --remaining ) ) {\r\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tprogressValues, progressContexts, resolveContexts;\r\n\r\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\r\n\t\tif ( length > 1 ) {\r\n\t\t\tprogressValues = new Array( length );\r\n\t\t\tprogressContexts = new Array( length );\r\n\t\t\tresolveContexts = new Array( length );\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n\t\t\t\t\tresolveValues[ i ].promise()\r\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\r\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\r\n\t\t\t\t\t\t.fail( deferred.reject );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t--remaining;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If we're not waiting on anything, resolve the master\r\n\t\tif ( !remaining ) {\r\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\r\n\t\t}\r\n\r\n\t\treturn deferred.promise();\r\n\t}\r\n} );\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList;\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\t// Add the callback\r\n\tjQuery.ready.promise().done( fn );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Hold (or release) the ready event\r\n\tholdReady: function( hold ) {\r\n\t\tif ( hold ) {\r\n\t\t\tjQuery.readyWait++;\r\n\t\t} else {\r\n\t\t\tjQuery.ready( true );\r\n\t\t}\r\n\t},\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\r\n\t\t// Trigger any bound ready events\r\n\t\tif ( jQuery.fn.triggerHandler ) {\r\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\r\n\t\t\tjQuery( document ).off( \"ready\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/**\r\n * The ready event handler and self cleanup method\r\n */\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\njQuery.ready.promise = function( obj ) {\r\n\tif ( !readyList ) {\r\n\r\n\t\treadyList = jQuery.Deferred();\r\n\r\n\t\t// Catch cases where $(document).ready() is called\r\n\t\t// after the browser event has already occurred.\r\n\t\t// Support: IE9-10 only\r\n\t\t// Older IE sometimes signals \"interactive\" too soon\r\n\t\tif ( document.readyState === \"complete\" ||\r\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\t\t\twindow.setTimeout( jQuery.ready );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Use the handy event callback\r\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t\t\t// A fallback to window.onload, that will always work\r\n\t\t\twindow.addEventListener( \"load\", completed );\r\n\t\t}\r\n\t}\r\n\treturn readyList.promise( obj );\r\n};\r\n\r\n// Kick off the DOM ready check even if the user does not\r\njQuery.ready.promise();\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( jQuery.type( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !jQuery.isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\tvalue :\r\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn chainable ?\r\n\t\telems :\r\n\r\n\t\t// Gets\r\n\t\tbulk ?\r\n\t\t\tfn.call( elems ) :\r\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\nvar acceptData = function( owner ) {\r\n\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\t/* jshint -W018 */\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\n\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tregister: function( owner, initial ) {\r\n\t\tvar value = initial || {};\r\n\r\n\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t// use plain assignment\r\n\t\tif ( owner.nodeType ) {\r\n\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\r\n\t\t// configurability must be true to allow the property to be\r\n\t\t// deleted with the delete operator\r\n\t\t} else {\r\n\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\tvalue: value,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t} );\r\n\t\t}\r\n\t\treturn owner[ this.expando ];\r\n\t},\r\n\tcache: function( owner ) {\r\n\r\n\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t// but we should not, see #8335.\r\n\t\t// Always return an empty object.\r\n\t\tif ( !acceptData( owner ) ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see #8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ data ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ prop ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\t\tvar stored;\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\tstored = this.get( owner, key );\r\n\r\n\t\t\treturn stored !== undefined ?\r\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i, name, camel,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) {\r\n\t\t\tthis.register( owner );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( jQuery.isArray( key ) ) {\r\n\r\n\t\t\t\t// If \"name\" is an array of keys...\r\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\r\n\t\t\t\t// keys will be converted to camelCase.\r\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\r\n\t\t\t\t// both plain key and camelCase key. #12786\r\n\t\t\t\t// This will only penalize the array argument path.\r\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\r\n\t\t\t} else {\r\n\t\t\t\tcamel = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Try the string as a key before any manipulation\r\n\t\t\t\tif ( key in cache ) {\r\n\t\t\t\t\tname = [ key, camel ];\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\t\tname = camel;\r\n\t\t\t\t\tname = name in cache ?\r\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = name.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ name[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\nvar dataPriv = new Data();\r\n\r\nvar dataUser = new Data();\r\n\r\n\r\n\r\n//\tImplementation Summary\r\n//\r\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n//\t2. Improve the module's maintainability by reducing the storage\r\n//\t\tpaths to a single mechanism.\r\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /[A-Z]/g;\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = data === \"true\" ? true :\r\n\t\t\t\t\tdata === \"false\" ? false :\r\n\t\t\t\t\tdata === \"null\" ? null :\r\n\r\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\r\n\t\t\t\t\t+data + \"\" === data ? +data :\r\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n\t\t\t\t\tdata;\r\n\t\t\t} catch ( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdataUser.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend( {\r\n\thasData: function( elem ) {\r\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn dataUser.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdataUser.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to dataPriv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn dataPriv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdataPriv.remove( elem, name );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = dataUser.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE11+\r\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tdataUser.set( this, key );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data, camelKey;\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key as-is\r\n\t\t\t\tdata = dataUser.get( elem, key ) ||\r\n\r\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\r\n\t\t\t\t\t// This is for 2.2.x only\r\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\r\n\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcamelKey = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key camelized\r\n\t\t\t\tdata = dataUser.get( elem, camelKey );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tcamelKey = jQuery.camelCase( key );\r\n\t\t\tthis.each( function() {\r\n\r\n\t\t\t\t// First, attempt to store a copy or reference of any\r\n\t\t\t\t// data that might've been store with a camelCased key.\r\n\t\t\t\tvar data = dataUser.get( this, camelKey );\r\n\r\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\r\n\t\t\t\t// store property names with dashes in a camelCase form.\r\n\t\t\t\t// This might not apply to all properties...*\r\n\t\t\t\tdataUser.set( this, camelKey, value );\r\n\r\n\t\t\t\t// *... In the case of properties that might _actually_\r\n\t\t\t\t// have dashes, we need to also store a copy of that\r\n\t\t\t\t// unchanged property.\r\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\r\n\t\t\t\t\tdataUser.set( this, key, value );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdataUser.remove( this, key );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\njQuery.extend( {\r\n\tqueue: function( elem, type, data ) {\r\n\t\tvar queue;\r\n\r\n\t\tif ( elem ) {\r\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\r\n\t\t\tqueue = dataPriv.get( elem, type );\r\n\r\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n\t\t\tif ( data ) {\r\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\r\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueue.push( data );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn queue || [];\r\n\t\t}\r\n\t},\r\n\r\n\tdequeue: function( elem, type ) {\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\tvar queue = jQuery.queue( elem, type ),\r\n\t\t\tstartLength = queue.length,\r\n\t\t\tfn = queue.shift(),\r\n\t\t\thooks = jQuery._queueHooks( elem, type ),\r\n\t\t\tnext = function() {\r\n\t\t\t\tjQuery.dequeue( elem, type );\r\n\t\t\t};\r\n\r\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n\t\tif ( fn === \"inprogress\" ) {\r\n\t\t\tfn = queue.shift();\r\n\t\t\tstartLength--;\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\r\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n\t\t\t// automatically dequeued\r\n\t\t\tif ( type === \"fx\" ) {\r\n\t\t\t\tqueue.unshift( \"inprogress\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Clear up the last queue stop function\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tfn.call( elem, next, hooks );\r\n\t\t}\r\n\r\n\t\tif ( !startLength && hooks ) {\r\n\t\t\thooks.empty.fire();\r\n\t\t}\r\n\t},\r\n\r\n\t// Not public - generate a queueHooks object, or return the current one\r\n\t_queueHooks: function( elem, type ) {\r\n\t\tvar key = type + \"queueHooks\";\r\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\r\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\r\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\r\n\t\t\t} )\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tqueue: function( type, data ) {\r\n\t\tvar setter = 2;\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tdata = type;\r\n\t\t\ttype = \"fx\";\r\n\t\t\tsetter--;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length < setter ) {\r\n\t\t\treturn jQuery.queue( this[ 0 ], type );\r\n\t\t}\r\n\r\n\t\treturn data === undefined ?\r\n\t\t\tthis :\r\n\t\t\tthis.each( function() {\r\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\r\n\r\n\t\t\t\t// Ensure a hooks for this queue\r\n\t\t\t\tjQuery._queueHooks( this, type );\r\n\r\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\r\n\t\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\tdequeue: function( type ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.dequeue( this, type );\r\n\t\t} );\r\n\t},\r\n\tclearQueue: function( type ) {\r\n\t\treturn this.queue( type || \"fx\", [] );\r\n\t},\r\n\r\n\t// Get a promise resolved when queues of a certain type\r\n\t// are emptied (fx is the type by default)\r\n\tpromise: function( type, obj ) {\r\n\t\tvar tmp,\r\n\t\t\tcount = 1,\r\n\t\t\tdefer = jQuery.Deferred(),\r\n\t\t\telements = this,\r\n\t\t\ti = this.length,\r\n\t\t\tresolve = function() {\r\n\t\t\t\tif ( !( --count ) ) {\r\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tobj = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\r\n\t\t\tif ( tmp && tmp.empty ) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttmp.empty.add( resolve );\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve();\r\n\t\treturn defer.promise( obj );\r\n\t}\r\n} );\r\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\r\n\r\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\r\n\r\n\r\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\r\n\r\nvar isHidden = function( elem, el ) {\r\n\r\n\t\t// isHidden might be called from jQuery#filter function;\r\n\t\t// in that case, element will be second argument\r\n\t\telem = el || elem;\r\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\r\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\r\n\t};\r\n\r\n\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted,\r\n\t\tscale = 1,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() { return tween.cur(); } :\r\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\r\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\r\n\t\t\tscale = scale || \".5\";\r\n\r\n\t\t\t// Adjust and apply\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\r\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\r\n\t\t} while (\r\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\r\n\t\t);\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\nvar rtagName = ( /<([\\w:-]+)/ );\r\n\r\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\r\n\r\n\r\n\r\n// We have to close these tags to support XHTML (#13200)\r\nvar wrapMap = {\r\n\r\n\t// Support: IE9\r\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\r\n\r\n\t// XHTML parsers do not magically insert elements in the\r\n\t// same way that tag soup parsers do. So we cannot shorten\r\n\t// this by omitting <tbody> or other required elements.\r\n\tthead: [ 1, \"<table>\", \"</table>\" ],\r\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\r\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n\t_default: [ 0, \"\", \"\" ]\r\n};\r\n\r\n// Support: IE9\r\nwrapMap.optgroup = wrapMap.option;\r\n\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n\r\nfunction getAll( context, tag ) {\r\n\r\n\t// Support: IE9-11+\r\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\r\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\r\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\r\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\r\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\r\n\t\t\t[];\r\n\r\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\r\n\t\tjQuery.merge( [ context ], ret ) :\r\n\t\tret;\r\n}\r\n\r\n\r\n// Mark scripts as having already been evaluated\r\nfunction setGlobalEval( elems, refElements ) {\r\n\tvar i = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\tdataPriv.set(\r\n\t\t\telems[ i ],\r\n\t\t\t\"globalEval\",\r\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nvar rhtml = /<|&#?\\w+;/;\r\n\r\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\r\n\tvar elem, tmp, tag, wrap, contains, j,\r\n\t\tfragment = context.createDocumentFragment(),\r\n\t\tnodes = [],\r\n\t\ti = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\telem = elems[ i ];\r\n\r\n\t\tif ( elem || elem === 0 ) {\r\n\r\n\t\t\t// Add nodes directly\r\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n\t\t\t// Convert non-html into a text node\r\n\t\t\t} else if ( !rhtml.test( elem ) ) {\r\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\r\n\r\n\t\t\t// Convert html into DOM nodes\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\r\n\r\n\t\t\t\t// Deserialize a standard representation\r\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\r\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\r\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\r\n\r\n\t\t\t\t// Descend through wrappers to the right content\r\n\t\t\t\tj = wrap[ 0 ];\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\ttmp = tmp.lastChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\r\n\r\n\t\t\t\t// Remember the top-level container\r\n\t\t\t\ttmp = fragment.firstChild;\r\n\r\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\r\n\t\t\t\ttmp.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove wrapper from fragment\r\n\tfragment.textContent = \"\";\r\n\r\n\ti = 0;\r\n\twhile ( ( elem = nodes[ i++ ] ) ) {\r\n\r\n\t\t// Skip elements already in the context collection (trac-4087)\r\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\r\n\t\t\tif ( ignored ) {\r\n\t\t\t\tignored.push( elem );\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Append to fragment\r\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tif ( contains ) {\r\n\t\t\tsetGlobalEval( tmp );\r\n\t\t}\r\n\r\n\t\t// Capture executables\r\n\t\tif ( scripts ) {\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\r\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\r\n\t\t\t\t\tscripts.push( elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn fragment;\r\n}\r\n\r\n\r\n( function() {\r\n\tvar fragment = document.createDocumentFragment(),\r\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\r\n\t\tinput = document.createElement( \"input\" );\r\n\r\n\t// Support: Android 4.0-4.3, Safari<=5.1\r\n\t// Check state lost if the name is set (#11217)\r\n\t// Support: Windows Web Apps (WWA)\r\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\r\n\tinput.setAttribute( \"type\", \"radio\" );\r\n\tinput.setAttribute( \"checked\", \"checked\" );\r\n\tinput.setAttribute( \"name\", \"t\" );\r\n\r\n\tdiv.appendChild( input );\r\n\r\n\t// Support: Safari<=5.1, Android<4.2\r\n\t// Older WebKit doesn't clone checked state correctly in fragments\r\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n\t// Support: IE<=11+\r\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\r\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\r\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\r\n} )();\r\n\r\n\r\nvar\r\n\trkeyEvent = /^key/,\r\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\r\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\n// Support: IE9\r\n// See #13393 for more info\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\nfunction on( elem, types, selector, data, fn, one ) {\r\n\tvar origFn, type;\r\n\r\n\t// Types can be a map of types/handlers\r\n\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t// ( types-Object, selector, data )\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\r\n\t\t\t// ( types-Object, data )\r\n\t\t\tdata = data || selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tfor ( type in types ) {\r\n\t\t\ton( elem, type, selector, data, types[ type ], one );\r\n\t\t}\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( data == null && fn == null ) {\r\n\r\n\t\t// ( types, fn )\r\n\t\tfn = selector;\r\n\t\tdata = selector = undefined;\r\n\t} else if ( fn == null ) {\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\r\n\t\t\t// ( types, selector, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = undefined;\r\n\t\t} else {\r\n\r\n\t\t\t// ( types, data, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t}\r\n\tif ( fn === false ) {\r\n\t\tfn = returnFalse;\r\n\t} else if ( !fn ) {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tif ( one === 1 ) {\r\n\t\torigFn = fn;\r\n\t\tfn = function( event ) {\r\n\r\n\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\tjQuery().off( event );\r\n\t\t\treturn origFn.apply( this, arguments );\r\n\t\t};\r\n\r\n\t\t// Use same guid so caller can remove using origFn\r\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t}\r\n\treturn elem.each( function() {\r\n\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t} );\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.get( elem );\r\n\r\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n\t\tif ( !elemData ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !( events = elemData.events ) ) {\r\n\t\t\tevents = elemData.events = {};\r\n\t\t}\r\n\t\tif ( !( eventHandle = elemData.handle ) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend( {\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join( \".\" )\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !( handlers = events[ type ] ) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup ||\r\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\r\n\r\n\t\tif ( !elemData || !( events = elemData.events ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[ 2 ] &&\r\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\r\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown ||\r\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove data and the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdataPriv.remove( elem, \"handle events\" );\r\n\t\t}\r\n\t},\r\n\r\n\tdispatch: function( event ) {\r\n\r\n\t\t// Make a writable jQuery.Event from the native event object\r\n\t\tevent = jQuery.event.fix( event );\r\n\r\n\t\tvar i, j, ret, matched, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\targs = slice.call( arguments ),\r\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[ 0 ] = event;\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\r\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\r\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\r\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\r\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, matches, sel, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Support (at least): Chrome, IE9\r\n\t\t// Find delegate handlers\r\n\t\t// Black-hole SVG <use> instance trees (#13180)\r\n\t\t//\r\n\t\t// Support: Firefox<=42+\r\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\r\n\t\tif ( delegateCount && cur.nodeType &&\r\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't check non-elements (#13208)\r\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\r\n\t\t\t\t\tmatches = [];\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matches[ sel ] ) {\r\n\t\t\t\t\t\t\tmatches.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matches.length ) {\r\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\t// Includes some event props shared by KeyEvent and MouseEvent\r\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\r\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\r\n\r\n\tfixHooks: {},\r\n\r\n\tkeyHooks: {\r\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\r\n\t\t\t// Add which for key events\r\n\t\t\tif ( event.which == null ) {\r\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tmouseHooks: {\r\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\r\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\t\t\tvar eventDoc, doc, body,\r\n\t\t\t\tbutton = original.button;\r\n\r\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\r\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\r\n\t\t\t\teventDoc = event.target.ownerDocument || document;\r\n\t\t\t\tdoc = eventDoc.documentElement;\r\n\t\t\t\tbody = eventDoc.body;\r\n\r\n\t\t\t\tevent.pageX = original.clientX +\r\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n\t\t\t\tevent.pageY = original.clientY +\r\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n\t\t\t}\r\n\r\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n\t\t\t// Note: button is not normalized, so don't use it\r\n\t\t\tif ( !event.which && button !== undefined ) {\r\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tfix: function( event ) {\r\n\t\tif ( event[ jQuery.expando ] ) {\r\n\t\t\treturn event;\r\n\t\t}\r\n\r\n\t\t// Create a writable copy of the event object and normalize some properties\r\n\t\tvar i, prop, copy,\r\n\t\t\ttype = event.type,\r\n\t\t\toriginalEvent = event,\r\n\t\t\tfixHook = this.fixHooks[ type ];\r\n\r\n\t\tif ( !fixHook ) {\r\n\t\t\tthis.fixHooks[ type ] = fixHook =\r\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\r\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\r\n\t\t\t\t{};\r\n\t\t}\r\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n\t\tevent = new jQuery.Event( originalEvent );\r\n\r\n\t\ti = copy.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tprop = copy[ i ];\r\n\t\t\tevent[ prop ] = originalEvent[ prop ];\r\n\t\t}\r\n\r\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\r\n\t\t// All events should have a target; Cordova deviceready doesn't\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = document;\r\n\t\t}\r\n\r\n\t\t// Support: Safari 6.0+, Chrome<28\r\n\t\t// Target should not be a text node (#504, #13143)\r\n\t\tif ( event.target.nodeType === 3 ) {\r\n\t\t\tevent.target = event.target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tfocus: {\r\n\r\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusin\"\r\n\t\t},\r\n\t\tblur: {\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusout\"\r\n\t\t},\r\n\t\tclick: {\r\n\r\n\t\t\t// For checkbox, fire native event so checked state will be right\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\r\n\t\t\t\t\tthis.click();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\r\n\t// This \"if\" is needed for plain objects\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !( this instanceof jQuery.Event ) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\r\n\t\t\t\t// Support: Android<4.0\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tconstructor: jQuery.Event,\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// so that event delegation works in jQuery.\r\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\r\n//\r\n// Support: Safari 7 only\r\n// Safari sends mouseenter too often; see:\r\n// https://code.google.com/p/chromium/issues/detail?id=470258\r\n// for the description of the bug (it existed in older Chrome versions as well).\r\njQuery.each( {\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\ton: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn );\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ?\r\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\r\n\t\t\t\t\thandleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\r\n\r\n\t// Support: IE 10-11, Edge 10240+\r\n\t// In IE/Edge using regex groups here causes severe slowdowns.\r\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\r\n\trnoInnerhtml = /<script|<style|<link/i,\r\n\r\n\t// checked=\"checked\" or checked\r\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n\trscriptTypeMasked = /^true\\/(.*)/,\r\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\r\n\r\nfunction manipulationTarget( elem, content ) {\r\n\tif ( jQuery.nodeName( elem, \"table\" ) &&\r\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\r\n\r\n\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\nfunction disableScript( elem ) {\r\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\r\n\treturn elem;\r\n}\r\nfunction restoreScript( elem ) {\r\n\tvar match = rscriptTypeMasked.exec( elem.type );\r\n\r\n\tif ( match ) {\r\n\t\telem.type = match[ 1 ];\r\n\t} else {\r\n\t\telem.removeAttribute( \"type\" );\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\r\n\r\n\tif ( dest.nodeType !== 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 1. Copy private data: events, handlers, etc.\r\n\tif ( dataPriv.hasData( src ) ) {\r\n\t\tpdataOld = dataPriv.access( src );\r\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\r\n\t\tevents = pdataOld.events;\r\n\r\n\t\tif ( events ) {\r\n\t\t\tdelete pdataCur.handle;\r\n\t\t\tpdataCur.events = {};\r\n\r\n\t\t\tfor ( type in events ) {\r\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 2. Copy user data\r\n\tif ( dataUser.hasData( src ) ) {\r\n\t\tudataOld = dataUser.access( src );\r\n\t\tudataCur = jQuery.extend( {}, udataOld );\r\n\r\n\t\tdataUser.set( dest, udataCur );\r\n\t}\r\n}\r\n\r\n// Fix IE bugs, see support tests\r\nfunction fixInput( src, dest ) {\r\n\tvar nodeName = dest.nodeName.toLowerCase();\r\n\r\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\r\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n\t\tdest.checked = src.checked;\r\n\r\n\t// Fails to return the selected option to the default selected state when cloning options\r\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n\t\tdest.defaultValue = src.defaultValue;\r\n\t}\r\n}\r\n\r\nfunction domManip( collection, args, callback, ignored ) {\r\n\r\n\t// Flatten any nested arrays\r\n\targs = concat.apply( [], args );\r\n\r\n\tvar fragment, first, scripts, hasScripts, node, doc,\r\n\t\ti = 0,\r\n\t\tl = collection.length,\r\n\t\tiNoClone = l - 1,\r\n\t\tvalue = args[ 0 ],\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t// We can't cloneNode fragments that contain checked, in WebKit\r\n\tif ( isFunction ||\r\n\t\t\t( l > 1 && typeof value === \"string\" &&\r\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\r\n\t\treturn collection.each( function( index ) {\r\n\t\t\tvar self = collection.eq( index );\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\r\n\t\t\t}\r\n\t\t\tdomManip( self, args, callback, ignored );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( l ) {\r\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\r\n\t\tfirst = fragment.firstChild;\r\n\r\n\t\tif ( fragment.childNodes.length === 1 ) {\r\n\t\t\tfragment = first;\r\n\t\t}\r\n\r\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\r\n\t\tif ( first || ignored ) {\r\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n\t\t\thasScripts = scripts.length;\r\n\r\n\t\t\t// Use the original fragment for the last item\r\n\t\t\t// instead of the first because it can end up\r\n\t\t\t// being emptied incorrectly in certain situations (#8070).\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tnode = fragment;\r\n\r\n\t\t\t\tif ( i !== iNoClone ) {\r\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\r\n\r\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\r\n\t\t\t\t\tif ( hasScripts ) {\r\n\r\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback.call( collection[ i ], node, i );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasScripts ) {\r\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n\t\t\t\t// Reenable scripts\r\n\t\t\t\tjQuery.map( scripts, restoreScript );\r\n\r\n\t\t\t\t// Evaluate executable scripts on first document insertion\r\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\r\n\t\t\t\t\tnode = scripts[ i ];\r\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\r\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\r\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\r\n\r\n\t\t\t\t\t\tif ( node.src ) {\r\n\r\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\r\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\r\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn collection;\r\n}\r\n\r\nfunction remove( elem, selector, keepData ) {\r\n\tvar node,\r\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\r\n\t\ti = 0;\r\n\r\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\r\n\t\tif ( !keepData && node.nodeType === 1 ) {\r\n\t\t\tjQuery.cleanData( getAll( node ) );\r\n\t\t}\r\n\r\n\t\tif ( node.parentNode ) {\r\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\r\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\r\n\t\t\t}\r\n\t\t\tnode.parentNode.removeChild( node );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\njQuery.extend( {\r\n\thtmlPrefilter: function( html ) {\r\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\t},\r\n\r\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n\t\tvar i, l, srcElements, destElements,\r\n\t\t\tclone = elem.cloneNode( true ),\r\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Fix IE cloning issues\r\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\r\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\r\n\t\t\tdestElements = getAll( clone );\r\n\t\t\tsrcElements = getAll( elem );\r\n\r\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy the events from the original to the clone\r\n\t\tif ( dataAndEvents ) {\r\n\t\t\tif ( deepDataAndEvents ) {\r\n\t\t\t\tsrcElements = srcElements || getAll( elem );\r\n\t\t\t\tdestElements = destElements || getAll( clone );\r\n\r\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcloneCopyEvent( elem, clone );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tdestElements = getAll( clone, \"script\" );\r\n\t\tif ( destElements.length > 0 ) {\r\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n\t\t}\r\n\r\n\t\t// Return the cloned set\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcleanData: function( elems ) {\r\n\t\tvar data, elem, type,\r\n\t\t\tspecial = jQuery.event.special,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\tif ( acceptData( elem ) ) {\r\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\r\n\t\t\t\t\tif ( data.events ) {\r\n\t\t\t\t\t\tfor ( type in data.events ) {\r\n\t\t\t\t\t\t\tif ( special[ type ] ) {\r\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n\r\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\t// Keep domManip exposed until 3.0 (gh-2225)\r\n\tdomManip: domManip,\r\n\r\n\tdetach: function( selector ) {\r\n\t\treturn remove( this, selector, true );\r\n\t},\r\n\r\n\tremove: function( selector ) {\r\n\t\treturn remove( this, selector );\r\n\t},\r\n\r\n\ttext: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\treturn value === undefined ?\r\n\t\t\t\tjQuery.text( this ) :\r\n\t\t\t\tthis.empty().each( function() {\r\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\t\t\tthis.textContent = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\tappend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.appendChild( elem );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tprepend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tafter: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tempty: function() {\r\n\t\tvar elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\r\n\t\t\tif ( elem.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Prevent memory leaks\r\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\r\n\t\t\t\t// Remove any remaining nodes\r\n\t\t\t\telem.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n\t\treturn this.map( function() {\r\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n\t\t} );\r\n\t},\r\n\r\n\thtml: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar elem = this[ 0 ] || {},\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = this.length;\r\n\r\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\r\n\t\t\t\treturn elem.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// See if we can take a shortcut and just use innerHTML\r\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\r\n\r\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\t\t\telem = this[ i ] || {};\r\n\r\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\t\t\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem = 0;\r\n\r\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n\t\t\t\t} catch ( e ) {}\r\n\t\t\t}\r\n\r\n\t\t\tif ( elem ) {\r\n\t\t\t\tthis.empty().append( value );\r\n\t\t\t}\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\treplaceWith: function() {\r\n\t\tvar ignored = [];\r\n\r\n\t\t// Make the changes, replacing each non-ignored context element with the new content\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tvar parent = this.parentNode;\r\n\r\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\r\n\t\t\t\tjQuery.cleanData( getAll( this ) );\r\n\t\t\t\tif ( parent ) {\r\n\t\t\t\t\tparent.replaceChild( elem, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Force callback invocation\r\n\t\t}, ignored );\r\n\t}\r\n} );\r\n\r\njQuery.each( {\r\n\tappendTo: \"append\",\r\n\tprependTo: \"prepend\",\r\n\tinsertBefore: \"before\",\r\n\tinsertAfter: \"after\",\r\n\treplaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n\tjQuery.fn[ name ] = function( selector ) {\r\n\t\tvar elems,\r\n\t\t\tret = [],\r\n\t\t\tinsert = jQuery( selector ),\r\n\t\t\tlast = insert.length - 1,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; i <= last; i++ ) {\r\n\t\t\telems = i === last ? this : this.clone( true );\r\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\r\n\r\n\t\t\t// Support: QtWebKit\r\n\t\t\t// .get() because push.apply(_, arraylike) throws\r\n\t\t\tpush.apply( ret, elems.get() );\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( ret );\r\n\t};\r\n} );\r\n\r\n\r\nvar iframe,\r\n\telemdisplay = {\r\n\r\n\t\t// Support: Firefox\r\n\t\t// We have to pre-define these values for FF (#10227)\r\n\t\tHTML: \"block\",\r\n\t\tBODY: \"block\"\r\n\t};\r\n\r\n/**\r\n * Retrieve the actual display of a element\r\n * @param {String} name nodeName of the element\r\n * @param {Object} doc Document object\r\n */\r\n\r\n// Called only from within defaultDisplay\r\nfunction actualDisplay( name, doc ) {\r\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\r\n\r\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\r\n\r\n\t// We don't have any data stored on the element,\r\n\t// so use \"detach\" method as fast way to get rid of the element\r\n\telem.detach();\r\n\r\n\treturn display;\r\n}\r\n\r\n/**\r\n * Try to determine the default display value of an element\r\n * @param {String} nodeName\r\n */\r\nfunction defaultDisplay( nodeName ) {\r\n\tvar doc = document,\r\n\t\tdisplay = elemdisplay[ nodeName ];\r\n\r\n\tif ( !display ) {\r\n\t\tdisplay = actualDisplay( nodeName, doc );\r\n\r\n\t\t// If the simple way fails, read from inside an iframe\r\n\t\tif ( display === \"none\" || !display ) {\r\n\r\n\t\t\t// Use the already-created iframe if possible\r\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\r\n\t\t\t\t.appendTo( doc.documentElement );\r\n\r\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\r\n\t\t\tdoc = iframe[ 0 ].contentDocument;\r\n\r\n\t\t\t// Support: IE\r\n\t\t\tdoc.write();\r\n\t\t\tdoc.close();\r\n\r\n\t\t\tdisplay = actualDisplay( nodeName, doc );\r\n\t\t\tiframe.detach();\r\n\t\t}\r\n\r\n\t\t// Store the correct default display\r\n\t\telemdisplay[ nodeName ] = display;\r\n\t}\r\n\r\n\treturn display;\r\n}\r\nvar rmargin = ( /^margin/ );\r\n\r\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\r\n\r\nvar getStyles = function( elem ) {\r\n\r\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\r\n\t\t// IE throws on elements created in popups\r\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n\t\tvar view = elem.ownerDocument.defaultView;\r\n\r\n\t\tif ( !view.opener ) {\r\n\t\t\tview = window;\r\n\t\t}\r\n\r\n\t\treturn view.getComputedStyle( elem );\r\n\t};\r\n\r\nvar swap = function( elem, options, callback, args ) {\r\n\tvar ret, name,\r\n\t\told = {};\r\n\r\n\t// Remember the old values, and insert the new ones\r\n\tfor ( name in options ) {\r\n\t\told[ name ] = elem.style[ name ];\r\n\t\telem.style[ name ] = options[ name ];\r\n\t}\r\n\r\n\tret = callback.apply( elem, args || [] );\r\n\r\n\t// Revert the old values\r\n\tfor ( name in options ) {\r\n\t\telem.style[ name ] = old[ name ];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n\r\nvar documentElement = document.documentElement;\r\n\r\n\r\n\r\n( function() {\r\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\r\n\t\tcontainer = document.createElement( \"div\" ),\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t// Finish early in limited (non-browser) environments\r\n\tif ( !div.style ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Support: IE9-11+\r\n\t// Style of cloned element affects source element cloned (#8908)\r\n\tdiv.style.backgroundClip = \"content-box\";\r\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\r\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\r\n\t\t\"padding:0;margin-top:1px;position:absolute\";\r\n\tcontainer.appendChild( div );\r\n\r\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\r\n\t// so they're executed at the same time to save the second computation.\r\n\tfunction computeStyleTests() {\r\n\t\tdiv.style.cssText =\r\n\r\n\t\t\t// Support: Firefox<29, Android 2.3\r\n\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\r\n\t\t\t\"position:relative;display:block;\" +\r\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\r\n\t\t\t\"top:1%;width:50%\";\r\n\t\tdiv.innerHTML = \"\";\r\n\t\tdocumentElement.appendChild( container );\r\n\r\n\t\tvar divStyle = window.getComputedStyle( div );\r\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\r\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\r\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only\r\n\t\t// Some styles come back with percentage values, even though they shouldn't\r\n\t\tdiv.style.marginRight = \"50%\";\r\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\r\n\r\n\t\tdocumentElement.removeChild( container );\r\n\t}\r\n\r\n\tjQuery.extend( support, {\r\n\t\tpixelPosition: function() {\r\n\r\n\t\t\t// This test is executed only once but we still do memoizing\r\n\t\t\t// since we can use the boxSizingReliable pre-computing.\r\n\t\t\t// No need to check if the test was already performed, though.\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelPositionVal;\r\n\t\t},\r\n\t\tboxSizingReliable: function() {\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn boxSizingReliableVal;\r\n\t\t},\r\n\t\tpixelMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 4.0-4.3\r\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\r\n\t\t\t// since that compresses better and they're computed together anyway.\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn pixelMarginRightVal;\r\n\t\t},\r\n\t\treliableMarginLeft: function() {\r\n\r\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn reliableMarginLeftVal;\r\n\t\t},\r\n\t\treliableMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 2.3\r\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\r\n\t\t\t// gets computed margin-right based on width of container. (#3333)\r\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n\t\t\t// This support function is only executed once so no memoizing is needed.\r\n\t\t\tvar ret,\r\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\r\n\r\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\r\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\r\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\r\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\r\n\t\t\tdiv.style.width = \"1px\";\r\n\t\t\tdocumentElement.appendChild( container );\r\n\r\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\r\n\r\n\t\t\tdocumentElement.removeChild( container );\r\n\t\t\tdiv.removeChild( marginDiv );\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t} );\r\n} )();\r\n\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\r\n\t// Support: IE9\r\n\t// getPropertyValue is only needed for .css('filter') (#12537)\r\n\tif ( computed ) {\r\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\r\n\r\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n\t\t\tret = jQuery.style( elem, name );\r\n\t\t}\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\r\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE9-11+\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\n\r\nfunction addGetHookIf( conditionFn, hookFn ) {\r\n\r\n\t// Define the hook, we'll check on the first run if it's really needed.\r\n\treturn {\r\n\t\tget: function() {\r\n\t\t\tif ( conditionFn() ) {\r\n\r\n\t\t\t\t// Hook not needed (or it's not possible to use it due\r\n\t\t\t\t// to missing dependency), remove it.\r\n\t\t\t\tdelete this.get;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\r\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nvar\r\n\r\n\t// Swappable if display is none or starts with table\r\n\t// except \"table\", \"table-cell\", or \"table-caption\"\r\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n\r\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n\tcssNormalTransform = {\r\n\t\tletterSpacing: \"0\",\r\n\t\tfontWeight: \"400\"\r\n\t},\r\n\r\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\r\n\temptyStyle = document.createElement( \"div\" ).style;\r\n\r\n// Return a css property mapped to a potentially vendor prefixed property\r\nfunction vendorPropName( name ) {\r\n\r\n\t// Shortcut for names that are not vendor prefixed\r\n\tif ( name in emptyStyle ) {\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// Check for vendor prefixed names\r\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\r\n\t\ti = cssPrefixes.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tname = cssPrefixes[ i ] + capName;\r\n\t\tif ( name in emptyStyle ) {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction setPositiveNumber( elem, value, subtract ) {\r\n\r\n\t// Any relative (+/-) values have already been\r\n\t// normalized at this point\r\n\tvar matches = rcssNum.exec( value );\r\n\treturn matches ?\r\n\r\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\r\n\t\tvalue;\r\n}\r\n\r\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\r\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\r\n\r\n\t\t// If we already have the right measurement, avoid augmentation\r\n\t\t4 :\r\n\r\n\t\t// Otherwise initialize for horizontal or vertical properties\r\n\t\tname === \"width\" ? 1 : 0,\r\n\r\n\t\tval = 0;\r\n\r\n\tfor ( ; i < 4; i += 2 ) {\r\n\r\n\t\t// Both box models exclude margin, so add it if we want it\r\n\t\tif ( extra === \"margin\" ) {\r\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\r\n\t\t}\r\n\r\n\t\tif ( isBorderBox ) {\r\n\r\n\t\t\t// border-box includes padding, so remove it if we want content\r\n\t\t\tif ( extra === \"content\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, extra isn't border nor margin, so remove border\r\n\t\t\tif ( extra !== \"margin\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// At this point, extra isn't content, so add padding\r\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n\t\t\t// At this point, extra isn't content nor padding, so add border\r\n\t\t\tif ( extra !== \"padding\" ) {\r\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn val;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, name, extra ) {\r\n\r\n\t// Start with offset property, which is equivalent to the border-box value\r\n\tvar valueIsBorderBox = true,\r\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\r\n\t\tstyles = getStyles( elem ),\r\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\r\n\r\n\t// Support: IE11 only\r\n\t// In IE 11 fullscreen elements inside of an iframe have\r\n\t// 100x too small dimensions (gh-1764).\r\n\tif ( document.msFullscreenElement && window.top !== window ) {\r\n\r\n\t\t// Support: IE11 only\r\n\t\t// Running getBoundingClientRect on a disconnected node\r\n\t\t// in IE throws an error.\r\n\t\tif ( elem.getClientRects().length ) {\r\n\t\t\tval = Math.round( elem.getBoundingClientRect()[ name ] * 100 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\r\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\r\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\r\n\tif ( val <= 0 || val == null ) {\r\n\r\n\t\t// Fall back to computed then uncomputed css if necessary\r\n\t\tval = curCSS( elem, name, styles );\r\n\t\tif ( val < 0 || val == null ) {\r\n\t\t\tval = elem.style[ name ];\r\n\t\t}\r\n\r\n\t\t// Computed unit is not pixels. Stop here and return.\r\n\t\tif ( rnumnonpx.test( val ) ) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\t// Check for style in case a browser which returns unreliable values\r\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\r\n\t\tvalueIsBorderBox = isBorderBox &&\r\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\r\n\r\n\t\t// Normalize \"\", auto, and prepare for extra\r\n\t\tval = parseFloat( val ) || 0;\r\n\t}\r\n\r\n\t// Use the active box-sizing model to add/subtract irrelevant styles\r\n\treturn ( val +\r\n\t\taugmentWidthOrHeight(\r\n\t\t\telem,\r\n\t\t\tname,\r\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\r\n\t\t\tvalueIsBorderBox,\r\n\t\t\tstyles\r\n\t\t)\r\n\t) + \"px\";\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n\tvar display, elem, hidden,\r\n\t\tvalues = [],\r\n\t\tindex = 0,\r\n\t\tlength = elements.length;\r\n\r\n\tfor ( ; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\r\n\t\tdisplay = elem.style.display;\r\n\t\tif ( show ) {\r\n\r\n\t\t\t// Reset the inline display of this element to learn if it is\r\n\t\t\t// being hidden by cascaded rules or not\r\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\r\n\t\t\t\telem.style.display = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set elements which have been overridden with display: none\r\n\t\t\t// in a stylesheet to whatever the default browser style is\r\n\t\t\t// for such an element\r\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\r\n\t\t\t\tvalues[ index ] = dataPriv.access(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thidden = isHidden( elem );\r\n\r\n\t\t\tif ( display !== \"none\" || !hidden ) {\r\n\t\t\t\tdataPriv.set(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the display of most of the elements in a second loop\r\n\t// to avoid the constant reflow\r\n\tfor ( index = 0; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\r\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Add in style property hooks for overriding the default\r\n\t// behavior of getting and setting a style property\r\n\tcssHooks: {\r\n\t\topacity: {\r\n\t\t\tget: function( elem, computed ) {\r\n\t\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t\t// We should always get a number back from opacity\r\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\r\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Don't automatically add \"px\" to these possibly-unitless properties\r\n\tcssNumber: {\r\n\t\t\"animationIterationCount\": true,\r\n\t\t\"columnCount\": true,\r\n\t\t\"fillOpacity\": true,\r\n\t\t\"flexGrow\": true,\r\n\t\t\"flexShrink\": true,\r\n\t\t\"fontWeight\": true,\r\n\t\t\"lineHeight\": true,\r\n\t\t\"opacity\": true,\r\n\t\t\"order\": true,\r\n\t\t\"orphans\": true,\r\n\t\t\"widows\": true,\r\n\t\t\"zIndex\": true,\r\n\t\t\"zoom\": true\r\n\t},\r\n\r\n\t// Add in properties whose names you wish to fix before\r\n\t// setting or getting the value\r\n\tcssProps: {\r\n\t\t\"float\": \"cssFloat\"\r\n\t},\r\n\r\n\t// Get and set the style property on a DOM Node\r\n\tstyle: function( elem, name, value, extra ) {\r\n\r\n\t\t// Don't set styles on text and comment nodes\r\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tvar ret, type, hooks,\r\n\t\t\torigName = jQuery.camelCase( name ),\r\n\t\t\tstyle = elem.style;\r\n\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Gets hook for the prefixed version, then unprefixed version\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// Check if we're setting a value\r\n\t\tif ( value !== undefined ) {\r\n\t\t\ttype = typeof value;\r\n\r\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\r\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\r\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\r\n\r\n\t\t\t\t// Fixes bug #9237\r\n\t\t\t\ttype = \"number\";\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\r\n\t\t\tif ( value == null || value !== value ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\r\n\t\t\tif ( type === \"number\" ) {\r\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE9-11+\r\n\t\t\t// background-* props affect original clone's values\r\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\r\n\t\t\t\tstyle[ name ] = \"inherit\";\r\n\t\t\t}\r\n\r\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\r\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\tstyle[ name ] = value;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// If a hook was provided get the non-computed value from there\r\n\t\t\tif ( hooks && \"get\" in hooks &&\r\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise just get the value from the style object\r\n\t\t\treturn style[ name ];\r\n\t\t}\r\n\t},\r\n\r\n\tcss: function( elem, name, extra, styles ) {\r\n\t\tvar val, num, hooks,\r\n\t\t\torigName = jQuery.camelCase( name );\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Try prefixed name followed by the unprefixed name\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// If a hook was provided get the computed value from there\r\n\t\tif ( hooks && \"get\" in hooks ) {\r\n\t\t\tval = hooks.get( elem, true, extra );\r\n\t\t}\r\n\r\n\t\t// Otherwise, if a way to get the computed value exists, use that\r\n\t\tif ( val === undefined ) {\r\n\t\t\tval = curCSS( elem, name, styles );\r\n\t\t}\r\n\r\n\t\t// Convert \"normal\" to computed value\r\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\r\n\t\t\tval = cssNormalTransform[ name ];\r\n\t\t}\r\n\r\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\r\n\t\tif ( extra === \"\" || extra ) {\r\n\t\t\tnum = parseFloat( val );\r\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\r\n\tjQuery.cssHooks[ name ] = {\r\n\t\tget: function( elem, computed, extra ) {\r\n\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\r\n\t\t\t\t// but it must have a current display style that would benefit\r\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\r\n\t\t\t\t\telem.offsetWidth === 0 ?\r\n\t\t\t\t\t\tswap( elem, cssShow, function() {\r\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\r\n\t\t\t\t\t\t} ) :\r\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tset: function( elem, value, extra ) {\r\n\t\t\tvar matches,\r\n\t\t\t\tstyles = extra && getStyles( elem ),\r\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\textra,\r\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\t\t\t\tstyles\r\n\t\t\t\t);\r\n\r\n\t\t\t// Convert to pixels if value adjustment is needed\r\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\r\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\r\n\r\n\t\t\t\telem.style[ name ] = value;\r\n\t\t\t\tvalue = jQuery.css( elem, name );\r\n\t\t\t}\r\n\r\n\t\t\treturn setPositiveNumber( elem, value, subtract );\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\r\n\t\t\t\telem.getBoundingClientRect().left -\r\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\r\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\r\n\t\t\t\t\t} )\r\n\t\t\t\t) + \"px\";\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Support: Android 2.3\r\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\r\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each( {\r\n\tmargin: \"\",\r\n\tpadding: \"\",\r\n\tborder: \"Width\"\r\n}, function( prefix, suffix ) {\r\n\tjQuery.cssHooks[ prefix + suffix ] = {\r\n\t\texpand: function( value ) {\r\n\t\t\tvar i = 0,\r\n\t\t\t\texpanded = {},\r\n\r\n\t\t\t\t// Assumes a single number if not a string\r\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\r\n\r\n\t\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\r\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn expanded;\r\n\t\t}\r\n\t};\r\n\r\n\tif ( !rmargin.test( prefix ) ) {\r\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tcss: function( name, value ) {\r\n\t\treturn access( this, function( elem, name, value ) {\r\n\t\t\tvar styles, len,\r\n\t\t\t\tmap = {},\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tif ( jQuery.isArray( name ) ) {\r\n\t\t\t\tstyles = getStyles( elem );\r\n\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}\r\n\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tjQuery.style( elem, name, value ) :\r\n\t\t\t\tjQuery.css( elem, name );\r\n\t\t}, name, value, arguments.length > 1 );\r\n\t},\r\n\tshow: function() {\r\n\t\treturn showHide( this, true );\r\n\t},\r\n\thide: function() {\r\n\t\treturn showHide( this );\r\n\t},\r\n\ttoggle: function( state ) {\r\n\t\tif ( typeof state === \"boolean\" ) {\r\n\t\t\treturn state ? this.show() : this.hide();\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isHidden( this ) ) {\r\n\t\t\t\tjQuery( this ).show();\r\n\t\t\t} else {\r\n\t\t\t\tjQuery( this ).hide();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n\tconstructor: Tween,\r\n\tinit: function( elem, options, prop, end, easing, unit ) {\r\n\t\tthis.elem = elem;\r\n\t\tthis.prop = prop;\r\n\t\tthis.easing = easing || jQuery.easing._default;\r\n\t\tthis.options = options;\r\n\t\tthis.start = this.now = this.cur();\r\n\t\tthis.end = end;\r\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\t},\r\n\tcur: function() {\r\n\t\tvar hooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\treturn hooks && hooks.get ?\r\n\t\t\thooks.get( this ) :\r\n\t\t\tTween.propHooks._default.get( this );\r\n\t},\r\n\trun: function( percent ) {\r\n\t\tvar eased,\r\n\t\t\thooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\tif ( this.options.duration ) {\r\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\r\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.pos = eased = percent;\r\n\t\t}\r\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n\t\tif ( this.options.step ) {\r\n\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n\t\t}\r\n\r\n\t\tif ( hooks && hooks.set ) {\r\n\t\t\thooks.set( this );\r\n\t\t} else {\r\n\t\t\tTween.propHooks._default.set( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n\t_default: {\r\n\t\tget: function( tween ) {\r\n\t\t\tvar result;\r\n\r\n\t\t\t// Use a property on the element directly when it is not a DOM element,\r\n\t\t\t// or when there is no matching style property that exists.\r\n\t\t\tif ( tween.elem.nodeType !== 1 ||\r\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\r\n\t\t\t\treturn tween.elem[ tween.prop ];\r\n\t\t\t}\r\n\r\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\r\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\r\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\r\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\r\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\r\n\r\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\r\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\r\n\t\t},\r\n\t\tset: function( tween ) {\r\n\r\n\t\t\t// Use step hook for back compat.\r\n\t\t\t// Use cssHook if its there.\r\n\t\t\t// Use .style if available and use plain properties where available.\r\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\r\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\r\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\r\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\r\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\r\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n\t\t\t} else {\r\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Support: IE9\r\n// Panic based approach to setting things on disconnected nodes\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n\tset: function( tween ) {\r\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.easing = {\r\n\tlinear: function( p ) {\r\n\t\treturn p;\r\n\t},\r\n\tswing: function( p ) {\r\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\r\n\t},\r\n\t_default: \"swing\"\r\n};\r\n\r\njQuery.fx = Tween.prototype.init;\r\n\r\n// Back Compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\n\r\n\r\n\r\nvar\r\n\tfxNow, timerId,\r\n\trfxtypes = /^(?:toggle|show|hide)$/,\r\n\trrun = /queueHooks$/;\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n\twindow.setTimeout( function() {\r\n\t\tfxNow = undefined;\r\n\t} );\r\n\treturn ( fxNow = jQuery.now() );\r\n}\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n\tvar which,\r\n\t\ti = 0,\r\n\t\tattrs = { height: type };\r\n\r\n\t// If we include width, step value is 1 to do all cssExpand values,\r\n\t// otherwise step value is 2 to skip over Left and Right\r\n\tincludeWidth = includeWidth ? 1 : 0;\r\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\r\n\t\twhich = cssExpand[ i ];\r\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n\t}\r\n\r\n\tif ( includeWidth ) {\r\n\t\tattrs.opacity = attrs.width = type;\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\nfunction createTween( value, prop, animation ) {\r\n\tvar tween,\r\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\r\n\t\tindex = 0,\r\n\t\tlength = collection.length;\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\r\n\r\n\t\t\t// We're done with this property\r\n\t\t\treturn tween;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n\t/* jshint validthis: true */\r\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\r\n\t\tanim = this,\r\n\t\torig = {},\r\n\t\tstyle = elem.style,\r\n\t\thidden = elem.nodeType && isHidden( elem ),\r\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\r\n\r\n\t// Handle queue: false promises\r\n\tif ( !opts.queue ) {\r\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\r\n\t\tif ( hooks.unqueued == null ) {\r\n\t\t\thooks.unqueued = 0;\r\n\t\t\toldfire = hooks.empty.fire;\r\n\t\t\thooks.empty.fire = function() {\r\n\t\t\t\tif ( !hooks.unqueued ) {\r\n\t\t\t\t\toldfire();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\thooks.unqueued++;\r\n\r\n\t\tanim.always( function() {\r\n\r\n\t\t\t// Ensure the complete handler is called before this completes\r\n\t\t\tanim.always( function() {\r\n\t\t\t\thooks.unqueued--;\r\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n\t\t\t\t\thooks.empty.fire();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Height/width overflow pass\r\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\r\n\r\n\t\t// Make sure that nothing sneaks out\r\n\t\t// Record all 3 overflow attributes because IE9-10 do not\r\n\t\t// change the overflow attribute when overflowX and\r\n\t\t// overflowY are set to the same value\r\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n\t\t// Set display property to inline-block for height/width\r\n\t\t// animations on inline elements that are having width/height animated\r\n\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\r\n\t\t// Test default display if display is currently \"none\"\r\n\t\tcheckDisplay = display === \"none\" ?\r\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\r\n\r\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\t\t\tstyle.display = \"inline-block\";\r\n\t\t}\r\n\t}\r\n\r\n\tif ( opts.overflow ) {\r\n\t\tstyle.overflow = \"hidden\";\r\n\t\tanim.always( function() {\r\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\r\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\r\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\r\n\t\t} );\r\n\t}\r\n\r\n\t// show/hide pass\r\n\tfor ( prop in props ) {\r\n\t\tvalue = props[ prop ];\r\n\t\tif ( rfxtypes.exec( value ) ) {\r\n\t\t\tdelete props[ prop ];\r\n\t\t\ttoggle = toggle || value === \"toggle\";\r\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n\r\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\r\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\r\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\r\n\t\t\t\t\thidden = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n\r\n\t\t// Any non-fx value stops us from restoring the original display value\r\n\t\t} else {\r\n\t\t\tdisplay = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !jQuery.isEmptyObject( orig ) ) {\r\n\t\tif ( dataShow ) {\r\n\t\t\tif ( \"hidden\" in dataShow ) {\r\n\t\t\t\thidden = dataShow.hidden;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\r\n\t\t}\r\n\r\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\r\n\t\tif ( toggle ) {\r\n\t\t\tdataShow.hidden = !hidden;\r\n\t\t}\r\n\t\tif ( hidden ) {\r\n\t\t\tjQuery( elem ).show();\r\n\t\t} else {\r\n\t\t\tanim.done( function() {\r\n\t\t\t\tjQuery( elem ).hide();\r\n\t\t\t} );\r\n\t\t}\r\n\t\tanim.done( function() {\r\n\t\t\tvar prop;\r\n\r\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\r\n\t\t\tfor ( prop in orig ) {\r\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\r\n\t\t\t}\r\n\t\t} );\r\n\t\tfor ( prop in orig ) {\r\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\r\n\t\t\tif ( !( prop in dataShow ) ) {\r\n\t\t\t\tdataShow[ prop ] = tween.start;\r\n\t\t\t\tif ( hidden ) {\r\n\t\t\t\t\ttween.end = tween.start;\r\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\r\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\r\n\t\tstyle.display = display;\r\n\t}\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n\tvar index, name, easing, value, hooks;\r\n\r\n\t// camelCase, specialEasing and expand cssHook pass\r\n\tfor ( index in props ) {\r\n\t\tname = jQuery.camelCase( index );\r\n\t\teasing = specialEasing[ name ];\r\n\t\tvalue = props[ index ];\r\n\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\teasing = value[ 1 ];\r\n\t\t\tvalue = props[ index ] = value[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( index !== name ) {\r\n\t\t\tprops[ name ] = value;\r\n\t\t\tdelete props[ index ];\r\n\t\t}\r\n\r\n\t\thooks = jQuery.cssHooks[ name ];\r\n\t\tif ( hooks && \"expand\" in hooks ) {\r\n\t\t\tvalue = hooks.expand( value );\r\n\t\t\tdelete props[ name ];\r\n\r\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\r\n\t\t\t// Reusing 'index' because we have the correct \"name\"\r\n\t\t\tfor ( index in value ) {\r\n\t\t\t\tif ( !( index in props ) ) {\r\n\t\t\t\t\tprops[ index ] = value[ index ];\r\n\t\t\t\t\tspecialEasing[ index ] = easing;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tspecialEasing[ name ] = easing;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n\tvar result,\r\n\t\tstopped,\r\n\t\tindex = 0,\r\n\t\tlength = Animation.prefilters.length,\r\n\t\tdeferred = jQuery.Deferred().always( function() {\r\n\r\n\t\t\t// Don't match elem in the :animated selector\r\n\t\t\tdelete tick.elem;\r\n\t\t} ),\r\n\t\ttick = function() {\r\n\t\t\tif ( stopped ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar currentTime = fxNow || createFxNow(),\r\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\r\n\t\t\t\ttemp = remaining / animation.duration || 0,\r\n\t\t\t\tpercent = 1 - temp,\r\n\t\t\t\tindex = 0,\r\n\t\t\t\tlength = animation.tweens.length;\r\n\r\n\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\tanimation.tweens[ index ].run( percent );\r\n\t\t\t}\r\n\r\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\r\n\r\n\t\t\tif ( percent < 1 && length ) {\r\n\t\t\t\treturn remaining;\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanimation = deferred.promise( {\r\n\t\t\telem: elem,\r\n\t\t\tprops: jQuery.extend( {}, properties ),\r\n\t\t\topts: jQuery.extend( true, {\r\n\t\t\t\tspecialEasing: {},\r\n\t\t\t\teasing: jQuery.easing._default\r\n\t\t\t}, options ),\r\n\t\t\toriginalProperties: properties,\r\n\t\t\toriginalOptions: options,\r\n\t\t\tstartTime: fxNow || createFxNow(),\r\n\t\t\tduration: options.duration,\r\n\t\t\ttweens: [],\r\n\t\t\tcreateTween: function( prop, end ) {\r\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n\t\t\t\tanimation.tweens.push( tween );\r\n\t\t\t\treturn tween;\r\n\t\t\t},\r\n\t\t\tstop: function( gotoEnd ) {\r\n\t\t\t\tvar index = 0,\r\n\r\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\r\n\t\t\t\t\t// otherwise we skip this part\r\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\r\n\t\t\t\tif ( stopped ) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tstopped = true;\r\n\t\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\r\n\t\t\t\tif ( gotoEnd ) {\r\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} ),\r\n\t\tprops = animation.props;\r\n\r\n\tpropFilter( props, animation.opts.specialEasing );\r\n\r\n\tfor ( ; index < length ; index++ ) {\r\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\r\n\t\tif ( result ) {\r\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\r\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\r\n\t\t\t\t\tjQuery.proxy( result.stop, result );\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.map( props, createTween, animation );\r\n\r\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\r\n\t\tanimation.opts.start.call( elem, animation );\r\n\t}\r\n\r\n\tjQuery.fx.timer(\r\n\t\tjQuery.extend( tick, {\r\n\t\t\telem: elem,\r\n\t\t\tanim: animation,\r\n\t\t\tqueue: animation.opts.queue\r\n\t\t} )\r\n\t);\r\n\r\n\t// attach callbacks from options\r\n\treturn animation.progress( animation.opts.progress )\r\n\t\t.done( animation.opts.done, animation.opts.complete )\r\n\t\t.fail( animation.opts.fail )\r\n\t\t.always( animation.opts.always );\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\ttweeners: {\r\n\t\t\"*\": [ function( prop, value ) {\r\n\t\t\tvar tween = this.createTween( prop, value );\r\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\r\n\t\t\treturn tween;\r\n\t\t} ]\r\n\t},\r\n\r\n\ttweener: function( props, callback ) {\r\n\t\tif ( jQuery.isFunction( props ) ) {\r\n\t\t\tcallback = props;\r\n\t\t\tprops = [ \"*\" ];\r\n\t\t} else {\r\n\t\t\tprops = props.match( rnotwhite );\r\n\t\t}\r\n\r\n\t\tvar prop,\r\n\t\t\tindex = 0,\r\n\t\t\tlength = props.length;\r\n\r\n\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\tprop = props[ index ];\r\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\r\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\r\n\t\t}\r\n\t},\r\n\r\n\tprefilters: [ defaultPrefilter ],\r\n\r\n\tprefilter: function( callback, prepend ) {\r\n\t\tif ( prepend ) {\r\n\t\t\tAnimation.prefilters.unshift( callback );\r\n\t\t} else {\r\n\t\t\tAnimation.prefilters.push( callback );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n\t\tcomplete: fn || !fn && easing ||\r\n\t\t\tjQuery.isFunction( speed ) && speed,\r\n\t\tduration: speed,\r\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n\t};\r\n\r\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\r\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\r\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n\r\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\r\n\tif ( opt.queue == null || opt.queue === true ) {\r\n\t\topt.queue = \"fx\";\r\n\t}\r\n\r\n\t// Queueing\r\n\topt.old = opt.complete;\r\n\r\n\topt.complete = function() {\r\n\t\tif ( jQuery.isFunction( opt.old ) ) {\r\n\t\t\topt.old.call( this );\r\n\t\t}\r\n\r\n\t\tif ( opt.queue ) {\r\n\t\t\tjQuery.dequeue( this, opt.queue );\r\n\t\t}\r\n\t};\r\n\r\n\treturn opt;\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfadeTo: function( speed, to, easing, callback ) {\r\n\r\n\t\t// Show any hidden elements after setting opacity to 0\r\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\r\n\r\n\t\t\t// Animate to the value specified\r\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\r\n\t},\r\n\tanimate: function( prop, speed, easing, callback ) {\r\n\t\tvar empty = jQuery.isEmptyObject( prop ),\r\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\r\n\t\t\tdoAnimation = function() {\r\n\r\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\r\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n\t\t\t\t// Empty animations, or finishing resolves immediately\r\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\r\n\t\t\t\t\tanim.stop( true );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdoAnimation.finish = doAnimation;\r\n\r\n\t\treturn empty || optall.queue === false ?\r\n\t\t\tthis.each( doAnimation ) :\r\n\t\t\tthis.queue( optall.queue, doAnimation );\r\n\t},\r\n\tstop: function( type, clearQueue, gotoEnd ) {\r\n\t\tvar stopQueue = function( hooks ) {\r\n\t\t\tvar stop = hooks.stop;\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tstop( gotoEnd );\r\n\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tgotoEnd = clearQueue;\r\n\t\t\tclearQueue = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\tif ( clearQueue && type !== false ) {\r\n\t\t\tthis.queue( type || \"fx\", [] );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar dequeue = true,\r\n\t\t\t\tindex = type != null && type + \"queueHooks\",\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tdata = dataPriv.get( this );\r\n\r\n\t\t\tif ( index ) {\r\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\r\n\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( index in data ) {\r\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n\t\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this &&\r\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\r\n\r\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\r\n\t\t\t\t\tdequeue = false;\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start the next in the queue if the last step wasn't forced.\r\n\t\t\t// Timers currently will call their complete callbacks, which\r\n\t\t\t// will dequeue but only if they were gotoEnd.\r\n\t\t\tif ( dequeue || !gotoEnd ) {\r\n\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tfinish: function( type ) {\r\n\t\tif ( type !== false ) {\r\n\t\t\ttype = type || \"fx\";\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tvar index,\r\n\t\t\t\tdata = dataPriv.get( this ),\r\n\t\t\t\tqueue = data[ type + \"queue\" ],\r\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tlength = queue ? queue.length : 0;\r\n\r\n\t\t\t// Enable finishing flag on private data\r\n\t\t\tdata.finish = true;\r\n\r\n\t\t\t// Empty the queue first\r\n\t\t\tjQuery.queue( this, type, [] );\r\n\r\n\t\t\tif ( hooks && hooks.stop ) {\r\n\t\t\t\thooks.stop.call( this, true );\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any active animations, and finish them\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n\t\t\t\t\ttimers[ index ].anim.stop( true );\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any animations in the old queue and finish them\r\n\t\t\tfor ( index = 0; index < length; index++ ) {\r\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\r\n\t\t\t\t\tqueue[ index ].finish.call( this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off finishing flag\r\n\t\t\tdelete data.finish;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n\tvar cssFn = jQuery.fn[ name ];\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn speed == null || typeof speed === \"boolean\" ?\r\n\t\t\tcssFn.apply( this, arguments ) :\r\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\r\n\t};\r\n} );\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each( {\r\n\tslideDown: genFx( \"show\" ),\r\n\tslideUp: genFx( \"hide\" ),\r\n\tslideToggle: genFx( \"toggle\" ),\r\n\tfadeIn: { opacity: \"show\" },\r\n\tfadeOut: { opacity: \"hide\" },\r\n\tfadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn this.animate( props, speed, easing, callback );\r\n\t};\r\n} );\r\n\r\njQuery.timers = [];\r\njQuery.fx.tick = function() {\r\n\tvar timer,\r\n\t\ti = 0,\r\n\t\ttimers = jQuery.timers;\r\n\r\n\tfxNow = jQuery.now();\r\n\r\n\tfor ( ; i < timers.length; i++ ) {\r\n\t\ttimer = timers[ i ];\r\n\r\n\t\t// Checks the timer has not already been removed\r\n\t\tif ( !timer() && timers[ i ] === timer ) {\r\n\t\t\ttimers.splice( i--, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !timers.length ) {\r\n\t\tjQuery.fx.stop();\r\n\t}\r\n\tfxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n\tjQuery.timers.push( timer );\r\n\tif ( timer() ) {\r\n\t\tjQuery.fx.start();\r\n\t} else {\r\n\t\tjQuery.timers.pop();\r\n\t}\r\n};\r\n\r\njQuery.fx.interval = 13;\r\njQuery.fx.start = function() {\r\n\tif ( !timerId ) {\r\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\r\n\t}\r\n};\r\n\r\njQuery.fx.stop = function() {\r\n\twindow.clearInterval( timerId );\r\n\r\n\ttimerId = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n\tslow: 600,\r\n\tfast: 200,\r\n\r\n\t// Default speed\r\n\t_default: 400\r\n};\r\n\r\n\r\n// Based off of the plugin by Clint Helfers, with permission.\r\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\r\njQuery.fn.delay = function( time, type ) {\r\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n\ttype = type || \"fx\";\r\n\r\n\treturn this.queue( type, function( next, hooks ) {\r\n\t\tvar timeout = window.setTimeout( next, time );\r\n\t\thooks.stop = function() {\r\n\t\t\twindow.clearTimeout( timeout );\r\n\t\t};\r\n\t} );\r\n};\r\n\r\n\r\n( function() {\r\n\tvar input = document.createElement( \"input\" ),\r\n\t\tselect = document.createElement( \"select\" ),\r\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\r\n\r\n\tinput.type = \"checkbox\";\r\n\r\n\t// Support: iOS<=5.1, Android<=4.2+\r\n\t// Default value for a checkbox should be \"on\"\r\n\tsupport.checkOn = input.value !== \"\";\r\n\r\n\t// Support: IE<=11+\r\n\t// Must access selectedIndex to make default options select\r\n\tsupport.optSelected = opt.selected;\r\n\r\n\t// Support: Android<=2.3\r\n\t// Options inside disabled selects are incorrectly marked as disabled\r\n\tselect.disabled = true;\r\n\tsupport.optDisabled = !opt.disabled;\r\n\r\n\t// Support: IE<=11+\r\n\t// An input loses its value after becoming a radio\r\n\tinput = document.createElement( \"input\" );\r\n\tinput.value = \"t\";\r\n\tinput.type = \"radio\";\r\n\tsupport.radioValue = input.value === \"t\";\r\n} )();\r\n\r\n\r\nvar boolHook,\r\n\tattrHandle = jQuery.expr.attrHandle;\r\n\r\njQuery.fn.extend( {\r\n\tattr: function( name, value ) {\r\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveAttr: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.removeAttr( this, name );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tattr: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set attributes on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fallback to prop when attributes are not supported\r\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\r\n\t\t\treturn jQuery.prop( elem, name, value );\r\n\t\t}\r\n\r\n\t\t// All attributes are lowercase\r\n\t\t// Grab necessary hook if one is defined\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\t\t\tname = name.toLowerCase();\r\n\t\t\thooks = jQuery.attrHooks[ name ] ||\r\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( value === null ) {\r\n\t\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\telem.setAttribute( name, value + \"\" );\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tret = jQuery.find.attr( elem, name );\r\n\r\n\t\t// Non-existent attributes return null, we normalize to undefined\r\n\t\treturn ret == null ? undefined : ret;\r\n\t},\r\n\r\n\tattrHooks: {\r\n\t\ttype: {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\r\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\r\n\t\t\t\t\tvar val = elem.value;\r\n\t\t\t\t\telem.setAttribute( \"type\", value );\r\n\t\t\t\t\tif ( val ) {\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveAttr: function( elem, value ) {\r\n\t\tvar name, propName,\r\n\t\t\ti = 0,\r\n\t\t\tattrNames = value && value.match( rnotwhite );\r\n\r\n\t\tif ( attrNames && elem.nodeType === 1 ) {\r\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\r\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\r\n\r\n\t\t\t\t// Boolean attributes get special treatment (#10870)\r\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\r\n\r\n\t\t\t\t\t// Set corresponding property to false\r\n\t\t\t\t\telem[ propName ] = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem.removeAttribute( name );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Hooks for boolean attributes\r\nboolHook = {\r\n\tset: function( elem, value, name ) {\r\n\t\tif ( value === false ) {\r\n\r\n\t\t\t// Remove boolean attributes when set to false\r\n\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t} else {\r\n\t\t\telem.setAttribute( name, name );\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\r\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\r\n\r\n\tattrHandle[ name ] = function( elem, name, isXML ) {\r\n\t\tvar ret, handle;\r\n\t\tif ( !isXML ) {\r\n\r\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\r\n\t\t\thandle = attrHandle[ name ];\r\n\t\t\tattrHandle[ name ] = ret;\r\n\t\t\tret = getter( elem, name, isXML ) != null ?\r\n\t\t\t\tname.toLowerCase() :\r\n\t\t\t\tnull;\r\n\t\t\tattrHandle[ name ] = handle;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n\t\t\t\t// Use proper attribute retrieval(#12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\treturn tabindex ?\r\n\t\t\t\t\tparseInt( tabindex, 10 ) :\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\r\n\t\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\t\t-1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n\r\n\r\n\r\nvar rclass = /[\\t\\r\\n\\f]/g;\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += clazz + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar type = typeof value;\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar className, i, self, classNames;\r\n\r\n\t\t\tif ( type === \"string\" ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\ti = 0;\r\n\t\t\t\tself = jQuery( this );\r\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\r\n\r\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\r\n\t\t\t\t\t.indexOf( className ) > -1\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar rreturn = /\\r/g;\r\n\r\njQuery.fn.extend( {\r\n\tval: function( value ) {\r\n\t\tvar hooks, ret, isFunction,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\tif ( elem ) {\r\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\r\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n\t\t\t\tif ( hooks &&\r\n\t\t\t\t\t\"get\" in hooks &&\r\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tret = elem.value;\r\n\r\n\t\t\t\treturn typeof ret === \"string\" ?\r\n\r\n\t\t\t\t\t// Handle most common string cases\r\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\r\n\r\n\t\t\t\t\t// Handle cases where value is null/undef or number\r\n\t\t\t\t\tret == null ? \"\" : ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tvar val;\r\n\r\n\t\t\tif ( this.nodeType !== 1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\r\n\t\t\t} else {\r\n\t\t\t\tval = value;\r\n\t\t\t}\r\n\r\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = \"\";\r\n\r\n\t\t\t} else if ( typeof val === \"number\" ) {\r\n\t\t\t\tval += \"\";\r\n\r\n\t\t\t} else if ( jQuery.isArray( val ) ) {\r\n\t\t\t\tval = jQuery.map( val, function( value ) {\r\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n\t\t\t// If set returns undefined, fall back to normal setting\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n\t\t\t\tthis.value = val;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tvalHooks: {\r\n\t\toption: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// Support: IE<11\r\n\t\t\t\t// option.value not trimmed (#14858)\r\n\t\t\t\treturn jQuery.trim( elem.value );\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\tget: function( elem ) {\r\n\t\t\t\tvar value, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tindex = elem.selectedIndex,\r\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\r\n\t\t\t\t\tvalues = one ? null : [],\r\n\t\t\t\t\tmax = one ? index + 1 : options.length,\r\n\t\t\t\t\ti = index < 0 ?\r\n\t\t\t\t\t\tmax :\r\n\t\t\t\t\t\tone ? index : 0;\r\n\r\n\t\t\t\t// Loop through all the selected options\r\n\t\t\t\tfor ( ; i < max; i++ ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\r\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\r\n\r\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\r\n\t\t\t\t\t\t\t( support.optDisabled ?\r\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\r\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\r\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n\t\t\t\t\t\t// Get the specific value for the option\r\n\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n\r\n\t\t\t\t\t\t// We don't need an array for one selects\r\n\t\t\t\t\t\tif ( one ) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Multi-Selects return an array\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar optionSet, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\r\n\t\t\t\t\ti = options.length;\r\n\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\t\t\t\t\tif ( option.selected =\r\n\t\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\toptionSet = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\r\n\t\t\t\tif ( !optionSet ) {\r\n\t\t\t\t\telem.selectedIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Radios and checkboxes getter/setter\r\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\r\n\tjQuery.valHooks[ this ] = {\r\n\t\tset: function( elem, value ) {\r\n\t\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif ( !support.checkOn ) {\r\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\r\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Return jQuery for attributes-only inclusion\r\n\r\n\r\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\r\n\r\njQuery.extend( jQuery.event, {\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\r\n\r\n\t\tcur = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\r\n\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split( \".\" );\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join( \".\" );\r\n\t\tevent.rnamespace = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\r\n\t\t\t\tdataPriv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( ( !special._default ||\r\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\r\n\t\t\t\tacceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\r\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\t\t\t\t\telem[ type ]();\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\t// Piggyback on a donor event to simulate a different one\r\n\tsimulate: function( type, elem, event ) {\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true\r\n\r\n\t\t\t\t// Previously, `originalEvent: {}` was set here, so stopPropagation call\r\n\t\t\t\t// would not be triggered on donor event, since in our own\r\n\t\t\t\t// jQuery.event.stopPropagation function we had a check for existence of\r\n\t\t\t\t// originalEvent.stopPropagation method, so, consequently it would be a noop.\r\n\t\t\t\t//\r\n\t\t\t\t// But now, this \"simulate\" function is used only for events\r\n\t\t\t\t// for which stopPropagation() is noop, so there is no need for that anymore.\r\n\t\t\t\t//\r\n\t\t\t\t// For the compat branch though, guard for \"click\" and \"submit\"\r\n\t\t\t\t// events is still used, but was moved to jQuery.event.stopPropagation function\r\n\t\t\t\t// because `originalEvent` should point to the original event for the constancy\r\n\t\t\t\t// with other events and for more focused logic\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tjQuery.event.trigger( e, null, elem );\r\n\r\n\t\tif ( e.isDefaultPrevented() ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t} );\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[ 0 ];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\r\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\r\n\tfunction( i, name ) {\r\n\r\n\t// Handle event binding\r\n\tjQuery.fn[ name ] = function( data, fn ) {\r\n\t\treturn arguments.length > 0 ?\r\n\t\t\tthis.on( name, null, data, fn ) :\r\n\t\t\tthis.trigger( name );\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\thover: function( fnOver, fnOut ) {\r\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nsupport.focusin = \"onfocusin\" in window;\r\n\r\n\r\n// Support: Firefox\r\n// Firefox doesn't have focus(in | out) events\r\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\r\n//\r\n// Support: Chrome, Safari\r\n// focus(in | out) events fire after focus & blur events,\r\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\r\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\r\nif ( !support.focusin ) {\r\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\r\n\t\tvar handler = function( event ) {\r\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\r\n\t\t};\r\n\r\n\t\tjQuery.event.special[ fix ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\r\n\t\t\t\t\tdataPriv.remove( doc, fix );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n}\r\nvar location = window.location;\r\n\r\nvar nonce = jQuery.now();\r\n\r\nvar rquery = ( /\\?/ );\r\n\r\n\r\n\r\n// Support: Android 2.3\r\n// Workaround failure to string-cast null input\r\njQuery.parseJSON = function( data ) {\r\n\treturn JSON.parse( data + \"\" );\r\n};\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE9\r\n\ttry {\r\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {\r\n\t\txml = undefined;\r\n\t}\r\n\r\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + data );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar\r\n\trhash = /#.*$/,\r\n\trts = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\r\n\t// #7653, #8125, #8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat( \"*\" ),\r\n\r\n\t// Anchor tag for parsing the document origin\r\n\toriginAnchor = document.createElement( \"a\" );\r\n\toriginAnchor.href = location.href;\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\r\n\r\n\t\tif ( jQuery.isFunction( func ) ) {\r\n\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\r\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s.throws ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\r\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: location.href,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /\\bxml\\b/,\r\n\t\t\thtml: /\\bhtml/,\r\n\t\t\tjson: /\\bjson\\b/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": jQuery.parseJSON,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\r\n\t\t\t// Url cleanup var\r\n\t\t\turlAnchor,\r\n\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context &&\r\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\t\tjQuery.event,\r\n\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\r\n\t\t\t// The jqXHR state\r\n\t\t\tstate = 0,\r\n\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( state === 2 ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tvar lname = name.toLowerCase();\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\r\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\r\n\t\tjqXHR.success = jqXHR.done;\r\n\t\tjqXHR.error = jqXHR.fail;\r\n\r\n\t\t// Remove hash character (#7531: and string promotion)\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\r\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket #12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\turlAnchor = document.createElement( \"a\" );\r\n\r\n\t\t\t// Support: IE8-11+\r\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\r\n\t\t\ttry {\r\n\t\t\t\turlAnchor.href = s.url;\r\n\r\n\t\t\t\t// Support: IE8-11+\r\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\r\n\t\t\t\turlAnchor.href = urlAnchor.href;\r\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\r\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\r\n\t\t\t\t// it can be rejected by the transport if it is invalid\r\n\t\t\t\ts.crossDomain = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( state === 2 ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\r\n\t\tfireGlobals = jQuery.event && s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\tcacheURL = s.url;\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// If data is available, append data to url\r\n\t\t\tif ( s.data ) {\r\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\r\n\r\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add anti-cache in url if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\ts.url = rts.test( cacheURL ) ?\r\n\r\n\t\t\t\t\t// If there is already a '_' parameter, set its value\r\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\r\n\r\n\t\t\t\t\t// Otherwise add one to the end\r\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\r\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend &&\r\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// Aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\r\n\t\t\tjqXHR[ i ]( s[ i ] );\r\n\t\t}\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\r\n\t\t\t// If request was aborted inside ajaxSend, stop there\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn jqXHR;\r\n\t\t\t}\r\n\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\r\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tstate = 1;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// Propagate exception as error if not done\r\n\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\tdone( -1, e );\r\n\r\n\t\t\t\t// Simply rethrow otherwise\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Called once\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// State is \"done\" now\r\n\t\t\tstate = 2;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\twindow.clearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\r\n\t\t// Shift arguments if data argument was omitted\r\n\t\tif ( jQuery.isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\t// The url can be an options object (which then must have .url)\r\n\t\treturn jQuery.ajax( jQuery.extend( {\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t}, jQuery.isPlainObject( url ) && url ) );\r\n\t};\r\n} );\r\n\r\n\r\njQuery._evalUrl = function( url ) {\r\n\treturn jQuery.ajax( {\r\n\t\turl: url,\r\n\r\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\r\n\t\ttype: \"GET\",\r\n\t\tdataType: \"script\",\r\n\t\tasync: false,\r\n\t\tglobal: false,\r\n\t\t\"throws\": true\r\n\t} );\r\n};\r\n\r\n\r\njQuery.fn.extend( {\r\n\twrapAll: function( html ) {\r\n\t\tvar wrap;\r\n\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( this[ 0 ] ) {\r\n\r\n\t\t\t// The elements to wrap the target around\r\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n\t\t\tif ( this[ 0 ].parentNode ) {\r\n\t\t\t\twrap.insertBefore( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\twrap.map( function() {\r\n\t\t\t\tvar elem = this;\r\n\r\n\t\t\t\twhile ( elem.firstElementChild ) {\r\n\t\t\t\t\telem = elem.firstElementChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn elem;\r\n\t\t\t} ).append( this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twrapInner: function( html ) {\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar self = jQuery( this ),\r\n\t\t\t\tcontents = self.contents();\r\n\r\n\t\t\tif ( contents.length ) {\r\n\t\t\t\tcontents.wrapAll( html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tself.append( html );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\twrap: function( html ) {\r\n\t\tvar isFunction = jQuery.isFunction( html );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\r\n\t\t} );\r\n\t},\r\n\r\n\tunwrap: function() {\r\n\t\treturn this.parent().each( function() {\r\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\r\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n\t\t\t}\r\n\t\t} ).end();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.expr.filters.hidden = function( elem ) {\r\n\treturn !jQuery.expr.filters.visible( elem );\r\n};\r\njQuery.expr.filters.visible = function( elem ) {\r\n\r\n\t// Support: Opera <= 12.12\r\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\r\n\t// Use OR instead of AND as the element is not visible if either is true\r\n\t// See tickets #10406 and #13132\r\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\r\n};\r\n\r\n\r\n\r\n\r\nvar r20 = /%20/g,\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( jQuery.isArray( obj ) ) {\r\n\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams(\r\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\r\n\t\t\t\t\tv,\r\n\t\t\t\t\ttraditional,\r\n\t\t\t\t\tadd\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, value ) {\r\n\r\n\t\t\t// If value is a function, invoke it and return its value\r\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n\t\t};\r\n\r\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\r\n\tif ( traditional === undefined ) {\r\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n\t}\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t} );\r\n\r\n\t} else {\r\n\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map( function() {\r\n\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t} )\r\n\t\t.filter( function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t} )\r\n\t\t.map( function( i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\treturn val == null ?\r\n\t\t\t\tnull :\r\n\t\t\t\tjQuery.isArray( val ) ?\r\n\t\t\t\t\tjQuery.map( val, function( val ) {\r\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t\t} ) :\r\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t} ).get();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE9\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE9\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE9\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup( {\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, \" +\r\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /\\b(?:java|ecma)script\\b/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n} );\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\r\n\t// This transport only deals with cross domain requests\r\n\tif ( s.crossDomain ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\r\n\t\t\t\t\tcharset: s.scriptCharset,\r\n\t\t\t\t\tsrc: s.url\r\n\t\t\t\t} ).on(\r\n\t\t\t\t\t\"load error\",\r\n\t\t\t\t\tcallback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup( {\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n} );\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" &&\r\n\t\t\t\t( s.contentType || \"\" )\r\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\r\n\t\t\t\trjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[ \"script json\" ] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// Force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always( function() {\r\n\r\n\t\t\t// If previous value didn't exist - remove it\r\n\t\t\tif ( overwritten === undefined ) {\r\n\t\t\t\tjQuery( window ).removeProp( callbackName );\r\n\r\n\t\t\t// Otherwise restore preexisting value\r\n\t\t\t} else {\r\n\t\t\t\twindow[ callbackName ] = overwritten;\r\n\t\t\t}\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\r\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// Save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t} );\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Support: Safari 8+\r\n// In Safari 8 documents created via document.implementation.createHTMLDocument\r\n// collapse sibling forms: the second one becomes a child of the first one.\r\n// Because of that, this security measure has to be disabled in Safari 8.\r\n// https://bugs.webkit.org/show_bug.cgi?id=137337\r\nsupport.createHTMLDocument = ( function() {\r\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\r\n\tbody.innerHTML = \"<form></form><form></form>\";\r\n\treturn body.childNodes.length === 2;\r\n} )();\r\n\r\n\r\n// Argument \"data\" should be string of html\r\n// context (optional): If specified, the fragment will be created in this context,\r\n// defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\r\n\t// Stop scripts or inline event handlers from being executed immediately\r\n\t// by using document.implementation\r\n\tcontext = context || ( support.createHTMLDocument ?\r\n\t\tdocument.implementation.createHTMLDocument( \"\" ) :\r\n\t\tdocument );\r\n\r\n\tvar parsed = rsingleTag.exec( data ),\r\n\t\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n\t}\r\n\r\n\tparsed = buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n// Keep a copy of the old load method\r\nvar _load = jQuery.fn.load;\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tif ( typeof url !== \"string\" && _load ) {\r\n\t\treturn _load.apply( this, arguments );\r\n\t}\r\n\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf( \" \" );\r\n\r\n\tif ( off > -1 ) {\r\n\t\tselector = jQuery.trim( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( jQuery.isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax( {\r\n\t\t\turl: url,\r\n\r\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\r\n\t\t\t// Make value of this field explicit since\r\n\t\t\t// user can override it through ajaxSetup method\r\n\t\t\ttype: type || \"GET\",\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t} ).done( function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\r\n\t\t// but they are ignored because response was set above.\r\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\r\n\t\t} ).always( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( function() {\r\n\t\t\t\tcallback.apply( self, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( [\r\n\t\"ajaxStart\",\r\n\t\"ajaxStop\",\r\n\t\"ajaxComplete\",\r\n\t\"ajaxError\",\r\n\t\"ajaxSuccess\",\r\n\t\"ajaxSend\"\r\n], function( i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.expr.filters.animated = function( elem ) {\r\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n\t\treturn elem === fn.elem;\r\n\t} ).length;\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Gets a window from an element\r\n */\r\nfunction getWindow( elem ) {\r\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\r\n}\r\n\r\njQuery.offset = {\r\n\tsetOffset: function( elem, options, i ) {\r\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\r\n\t\t\tposition = jQuery.css( elem, \"position\" ),\r\n\t\t\tcurElem = jQuery( elem ),\r\n\t\t\tprops = {};\r\n\r\n\t\t// Set position first, in-case top/left are set even on static elem\r\n\t\tif ( position === \"static\" ) {\r\n\t\t\telem.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\tcurOffset = curElem.offset();\r\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\r\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\r\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\r\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\r\n\r\n\t\t// Need to be able to calculate position if either\r\n\t\t// top or left is auto and position is either absolute or fixed\r\n\t\tif ( calculatePosition ) {\r\n\t\t\tcurPosition = curElem.position();\r\n\t\t\tcurTop = curPosition.top;\r\n\t\t\tcurLeft = curPosition.left;\r\n\r\n\t\t} else {\r\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( options ) ) {\r\n\r\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n\t\t}\r\n\r\n\t\tif ( options.top != null ) {\r\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n\t\t}\r\n\t\tif ( options.left != null ) {\r\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n\t\t}\r\n\r\n\t\tif ( \"using\" in options ) {\r\n\t\t\toptions.using.call( elem, props );\r\n\r\n\t\t} else {\r\n\t\t\tcurElem.css( props );\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.fn.extend( {\r\n\toffset: function( options ) {\r\n\t\tif ( arguments.length ) {\r\n\t\t\treturn options === undefined ?\r\n\t\t\t\tthis :\r\n\t\t\t\tthis.each( function( i ) {\r\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tvar docElem, win,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tbox = { top: 0, left: 0 },\r\n\t\t\tdoc = elem && elem.ownerDocument;\r\n\r\n\t\tif ( !doc ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdocElem = doc.documentElement;\r\n\r\n\t\t// Make sure it's not a disconnected DOM node\r\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\r\n\t\t\treturn box;\r\n\t\t}\r\n\r\n\t\tbox = elem.getBoundingClientRect();\r\n\t\twin = getWindow( doc );\r\n\t\treturn {\r\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\r\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\r\n\t\t};\r\n\t},\r\n\r\n\tposition: function() {\r\n\t\tif ( !this[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar offsetParent, offset,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tparentOffset = { top: 0, left: 0 };\r\n\r\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\r\n\t\t// because it is its only offset parent\r\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n\r\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\r\n\t\t\toffset = elem.getBoundingClientRect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Get *real* offsetParent\r\n\t\t\toffsetParent = this.offsetParent();\r\n\r\n\t\t\t// Get correct offsets\r\n\t\t\toffset = this.offset();\r\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\r\n\t\t\t\tparentOffset = offsetParent.offset();\r\n\t\t\t}\r\n\r\n\t\t\t// Add offsetParent borders\r\n\t\t\t// Subtract offsetParent scroll positions\r\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ) -\r\n\t\t\t\toffsetParent.scrollTop();\r\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true ) -\r\n\t\t\t\toffsetParent.scrollLeft();\r\n\t\t}\r\n\r\n\t\t// Subtract parent offsets and element margins\r\n\t\treturn {\r\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\r\n\t\t};\r\n\t},\r\n\r\n\t// This method will return documentElement in the following cases:\r\n\t// 1) For the element inside the iframe without offsetParent, this method will return\r\n\t//    documentElement of the parent window\r\n\t// 2) For the hidden or detached element\r\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n\t//\r\n\t// but those exceptions were never presented as a real life use-cases\r\n\t// and might be considered as more preferable results.\r\n\t//\r\n\t// This logic, however, is not guaranteed and can change at any point in the future\r\n\toffsetParent: function() {\r\n\t\treturn this.map( function() {\r\n\t\t\tvar offsetParent = this.offsetParent;\r\n\r\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\treturn offsetParent || documentElement;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\r\n\tvar top = \"pageYOffset\" === prop;\r\n\r\n\tjQuery.fn[ method ] = function( val ) {\r\n\t\treturn access( this, function( elem, method, val ) {\r\n\t\t\tvar win = getWindow( elem );\r\n\r\n\t\t\tif ( val === undefined ) {\r\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( win ) {\r\n\t\t\t\twin.scrollTo(\r\n\t\t\t\t\t!top ? val : win.pageXOffset,\r\n\t\t\t\t\ttop ? val : win.pageYOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\t\t\t\telem[ method ] = val;\r\n\t\t\t}\r\n\t\t}, method, val, arguments.length );\r\n\t};\r\n} );\r\n\r\n// Support: Safari<7-8+, Chrome<37-44+\r\n// Add the top/left cssHooks using jQuery.fn.position\r\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\r\n// getComputedStyle returns percent when specified for top/left/bottom/right;\r\n// rather than make the css module depend on the offset module, just check for it here\r\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n\t\tfunction( elem, computed ) {\r\n\t\t\tif ( computed ) {\r\n\t\t\t\tcomputed = curCSS( elem, prop );\r\n\r\n\t\t\t\t// If curCSS returns percentage, fallback to offset\r\n\t\t\t\treturn rnumnonpx.test( computed ) ?\r\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\r\n\t\t\t\t\tcomputed;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n} );\r\n\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\r\n\t\tfunction( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\r\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\r\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\n\r\njQuery.fn.extend( {\r\n\r\n\tbind: function( types, data, fn ) {\r\n\t\treturn this.on( types, null, data, fn );\r\n\t},\r\n\tunbind: function( types, fn ) {\r\n\t\treturn this.off( types, null, fn );\r\n\t},\r\n\r\n\tdelegate: function( selector, types, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn );\r\n\t},\r\n\tundelegate: function( selector, types, fn ) {\r\n\r\n\t\t// ( namespace ) or ( selector, types [, fn] )\r\n\t\treturn arguments.length === 1 ?\r\n\t\t\tthis.off( selector, \"**\" ) :\r\n\t\t\tthis.off( types, selector || \"**\", fn );\r\n\t},\r\n\tsize: function() {\r\n\t\treturn this.length;\r\n\t}\r\n} );\r\n\r\njQuery.fn.andSelf = jQuery.fn.addBack;\r\n\r\n\r\n\r\n\r\n// Register as a named AMD module, since jQuery can be concatenated with other\r\n// files that may use define, but not via a proper concatenation script that\r\n// understands anonymous AMD modules. A named AMD is safest and most robust\r\n// way to register. Lowercase jquery is used because AMD module names are\r\n// derived from file names, and jQuery is normally delivered in a lowercase\r\n// file name. Do this after creating the global so that if an AMD module wants\r\n// to call noConflict to hide this version of jQuery, it will work.\r\n\r\n// Note that for maximum portability, libraries that are not jQuery should\r\n// declare themselves as anonymous modules, and avoid setting a global if an\r\n// AMD loader is present. jQuery is a special case. For more information, see\r\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n\r\nif ( typeof define === \"function\" && define.amd ) {\r\n\tdefine( \"jquery\", [], function() {\r\n\t\treturn jQuery;\r\n\t} );\r\n}\r\n\r\n\r\n\r\nvar\r\n\r\n\t// Map over jQuery in case of overwrite\r\n\t_jQuery = window.jQuery,\r\n\r\n\t// Map over the $ in case of overwrite\r\n\t_$ = window.$;\r\n\r\njQuery.noConflict = function( deep ) {\r\n\tif ( window.$ === jQuery ) {\r\n\t\twindow.$ = _$;\r\n\t}\r\n\r\n\tif ( deep && window.jQuery === jQuery ) {\r\n\t\twindow.jQuery = _jQuery;\r\n\t}\r\n\r\n\treturn jQuery;\r\n};\r\n\r\n// Expose jQuery and $ identifiers, even in AMD\r\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n// and CommonJS for browser emulators (#13566)\r\nif ( !noGlobal ) {\r\n\twindow.jQuery = window.$ = jQuery;\r\n}\r\n\r\nreturn jQuery;\r\n}));\r\n","﻿import $ from 'jquery';\r\nwindow.jQuery = $;\r\nwindow.$ = $;","/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under the MIT license\n */\n\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n\n+function ($) {\n  'use strict';\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: alert.js v3.3.7\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.7'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector === '#' ? [] : selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.7'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d).prop(d, true)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d).prop(d, false)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target).closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n        e.preventDefault()\n        // The target component still receive the focus\n        if ($btn.is('input,button')) $btn.trigger('focus')\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\n      }\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: carousel.js v3.3.7\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.7'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.7'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.7'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: modal.js v3.3.7\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.7'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (document !== e.target &&\n            this.$element[0] !== e.target &&\n            !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tooltip.js v3.3.7\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.7'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.\n        that.$element\n          .removeAttr('aria-describedby')\n          .trigger('hidden.bs.' + that.type)\n      }\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var isSvg = window.SVGElement && el instanceof window.SVGElement\n    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n    // See https://github.com/twbs/bootstrap/issues/20280\n    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n      that.$element = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: popover.js v3.3.7\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.7'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.7\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.7'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.7'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: affix.js v3.3.7\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.7'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* =========================================================\r\n * bootstrap-datepicker.js \r\n * http://www.eyecon.ro/bootstrap-datepicker\r\n * =========================================================\r\n * Copyright 2012 Stefan Petre\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================= */\r\n var color = '';\r\n!function( $ ) {\r\n\t\r\n\t// Picker object\r\n\r\n\tvar Datepicker = function(element, options){\r\n\t\tthis.element = $(element);\r\n\t\tthis.format = DPGlobal.parseFormat(options.format||this.element.data('date-format')||'mm/dd/yyyy');\r\n\t\tthis.picker = $(DPGlobal.template)\r\n\t\t\t\t\t\t\t.appendTo('body')\r\n\t\t\t\t\t\t\t.on({\r\n\t\t\t\t\t\t\t\tclick: $.proxy(this.click, this)//,\r\n\t\t\t\t\t\t\t\t//mousedown: $.proxy(this.mousedown, this)\r\n\t\t\t\t\t\t\t});\r\n\t\tthis.isInput = this.element.is('input');\r\n\t\tthis.component = this.element.is('.date') ? this.element.find('.add-on') : false;\r\n\t\t\r\n\t\tif (this.isInput) {\r\n\t\t\tthis.element.on({\r\n\t\t\t\tfocus: $.proxy(this.show, this),\r\n\t\t\t\t//blur: $.proxy(this.hide, this),\r\n\t\t\t\tkeyup: $.proxy(this.update, this)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (this.component){\r\n\t\t\t\tthis.component.on('click', $.proxy(this.show, this));\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.on('click', $.proxy(this.show, this));\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.minViewMode = options.minViewMode||this.element.data('date-minviewmode')||0;\r\n\t\tif (typeof this.minViewMode === 'string') {\r\n\t\t\tswitch (this.minViewMode) {\r\n\t\t\t\tcase 'months':\r\n\t\t\t\t\tthis.minViewMode = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'years':\r\n\t\t\t\t\tthis.minViewMode = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.minViewMode = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.viewMode = options.viewMode||this.element.data('date-viewmode')||0;\r\n\t\tif (typeof this.viewMode === 'string') {\r\n\t\t\tswitch (this.viewMode) {\r\n\t\t\t\tcase 'months':\r\n\t\t\t\t\tthis.viewMode = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'years':\r\n\t\t\t\t\tthis.viewMode = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.viewMode = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.color = options.color||'azure';\r\n\t\tthis.startViewMode = this.viewMode;\r\n\t\tthis.weekStart = options.weekStart||this.element.data('date-weekstart')||0;\r\n\t\tthis.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;\r\n\t\tthis.onRender = options.onRender;\r\n\t\tthis.fillDow();\r\n\t\tthis.fillMonths();\r\n\t\tthis.update();\r\n\t\tthis.showMode();\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tDatepicker.prototype = {\r\n\t\tconstructor: Datepicker,\r\n\t\t\r\n\t\tshow: function(e) {\r\n\t\t    var datepicker = this.picker;\r\n\r\n\t\t\tthis.picker.show();\r\n\t\t\tthis.height = this.component ? this.component.outerHeight() : this.element.outerHeight();\r\n\t\t\tthis.place();\r\n\t\t\t$(window).on('resize', $.proxy(this.place, this));\r\n\t\t\tif (e ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t}\r\n\t\t\tvar that = this;\r\n\t\t\t$(document).on('mousedown', function(ev){\r\n\t\t\t\tif ($(ev.target).closest('.datepicker').length == 0) {\r\n\t\t\t\t\tthat.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.element.trigger({\r\n\t\t\t\ttype: 'show',\r\n\t\t\t\tdate: this.date\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n    \t\t\tdatepicker.addClass('open');\r\n\t\t\t}, 170);\r\n\t\t},\r\n\t\t\r\n\t\thide: function(){\r\n\t\t\tvar datepicker = this.picker;\r\n\t\t\tdatepicker.removeClass('open');\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n    \t\t\tthis.picker.hide();\r\n\t\t\t}, 500);\r\n\t\t\t\r\n\t\t\t$(window).off('resize', this.place);\r\n\t\t\tthis.viewMode = this.startViewMode;\r\n\t\t\tthis.showMode();\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t\t$(document).off('mousedown', this.hide);\r\n\t\t\t}\r\n\t\t\t//this.set();\r\n\t\t\tthis.element.trigger({\r\n\t\t\t\ttype: 'hide',\r\n\t\t\t\tdate: this.date\r\n\t\t\t});\r\n\t\t\t\r\n    \t},\r\n\t\t\r\n\t\tset: function() {\r\n\t\t\tvar formated = DPGlobal.formatDate(this.date, this.format);\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t\tif (this.component){\r\n\t\t\t\t\tthis.element.find('input').prop('value', formated);\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.data('date', formated);\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.prop('value', formated);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tsetValue: function(newDate) {\r\n\t\t\tif (typeof newDate === 'string') {\r\n\t\t\t\tthis.date = DPGlobal.parseDate(newDate, this.format);\r\n\t\t\t} else {\r\n\t\t\t\tthis.date = new Date(newDate);\r\n\t\t\t}\r\n\t\t\tthis.set();\r\n\t\t\tthis.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);\r\n\t\t\tthis.fill();\r\n\t\t},\r\n\t\t\r\n\t\tplace: function(){\r\n\t\t\tvar offset = this.component ? this.component.offset() : this.element.offset();\r\n\t\t\tthis.picker.css({\r\n\t\t\t\ttop: offset.top + this.height,\r\n\t\t\t\tleft: offset.left\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tupdate: function(newDate){\r\n\t\t\tthis.date = DPGlobal.parseDate(\r\n\t\t\t\ttypeof newDate === 'string' ? newDate : (this.isInput ? this.element.prop('value') : this.element.data('date')),\r\n\t\t\t\tthis.format\r\n\t\t\t);\r\n\t\t\tthis.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);\r\n\t\t\tthis.fill();\r\n\t\t},\r\n\t\t\r\n\t\tfillDow: function(){\r\n\t\t\tvar dowCnt = this.weekStart;\r\n\t\t\tvar html = '<tr>';\r\n\t\t\twhile (dowCnt < this.weekStart + 7) {\r\n\t\t\t\thtml += '<th class=\"dow\">'+DPGlobal.dates.daysMin[(dowCnt++)%7]+'</th>';\r\n\t\t\t}\r\n\t\t\thtml += '</tr>';\r\n\t\t\tthis.picker.find('.datepicker-days thead').append(html);\r\n\t\t},\r\n\t\t\r\n\t\tfillMonths: function(){\r\n\t\t\tvar html = '';\r\n\t\t\tvar i = 0\r\n\t\t\twhile (i < 12) {\r\n\t\t\t\thtml += '<span class=\"month\">'+DPGlobal.dates.monthsShort[i++]+'</span>';\r\n\t\t\t}\r\n\t\t\tthis.picker.find('.datepicker-months td').append(html);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function() {\r\n\t\t\tvar d = new Date(this.viewDate),\r\n\t\t\t\tyear = d.getFullYear(),\r\n\t\t\t\tmonth = d.getMonth(),\r\n\t\t\t\tcurrentDate = this.date.valueOf();\r\n\t\t\tthis.picker.find('.datepicker-days th:eq(1)')\r\n\t\t\t\t\t\t.text(DPGlobal.dates.months[month]+' '+year);\r\n\t\t\tvar prevMonth = new Date(year, month-1, 28,0,0,0,0),\r\n\t\t\t\tday = DPGlobal.getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());\r\n\t\t\tprevMonth.setDate(day);\r\n\t\t\tprevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7)%7);\r\n\t\t\tvar nextMonth = new Date(prevMonth);\r\n\t\t\tnextMonth.setDate(nextMonth.getDate() + 42);\r\n\t\t\tnextMonth = nextMonth.valueOf();\r\n\t\t\tvar html = [];\r\n\t\t\tvar clsName,\r\n\t\t\t\tprevY,\r\n\t\t\t\tprevM;\r\n\t\t\twhile(prevMonth.valueOf() < nextMonth) {\r\n\t\t\t\tif (prevMonth.getDay() === this.weekStart) {\r\n\t\t\t\t\thtml.push('<tr>');\r\n\t\t\t\t}\r\n\t\t\t\tclsName = this.onRender(prevMonth);\r\n\t\t\t\tprevY = prevMonth.getFullYear();\r\n\t\t\t\tprevM = prevMonth.getMonth();\r\n\t\t\t\tif ((prevM < month &&  prevY === year) ||  prevY < year) {\r\n\t\t\t\t\tclsName += ' old';\r\n\t\t\t\t} else if ((prevM > month && prevY === year) || prevY > year) {\r\n\t\t\t\t\tclsName += ' new';\r\n\t\t\t\t}\r\n\t\t\t\tif (prevMonth.valueOf() === currentDate) {\r\n\t\t\t\t\tclsName += ' active ' + this.color;\r\n\t\t\t\t}\r\n\t\t\t\thtml.push('<td class=\"day '+clsName+'\"><p>'+prevMonth.getDate() + '</p></td>');\r\n\t\t\t\tif (prevMonth.getDay() === this.weekEnd) {\r\n\t\t\t\t\thtml.push('</tr>');\r\n\t\t\t\t}\r\n\t\t\t\tprevMonth.setDate(prevMonth.getDate()+1);\r\n\t\t\t}\r\n\t\t\tthis.picker.find('.datepicker-days tbody').empty().append(html.join(''));\r\n\t\t\tvar currentYear = this.date.getFullYear();\r\n\t\t\t\r\n\t\t\tvar months = this.picker.find('.datepicker-months')\r\n\t\t\t\t\t\t.find('th:eq(1)')\r\n\t\t\t\t\t\t\t.text(year)\r\n\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.find('span').removeClass('active');\r\n\t\t\tif (currentYear === year) {\r\n\t\t\t\tmonths.eq(this.date.getMonth()).addClass('active').addClass(this.color);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\thtml = '';\r\n\t\t\tyear = parseInt(year/10, 10) * 10;\r\n\t\t\tvar yearCont = this.picker.find('.datepicker-years')\r\n\t\t\t\t\t\t\t\t.find('th:eq(1)')\r\n\t\t\t\t\t\t\t\t\t.text(year + '-' + (year + 9))\r\n\t\t\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t\t\t.find('td');\r\n\t\t\tyear -= 1;\r\n\t\t\tfor (var i = -1; i < 11; i++) {\r\n\t\t\t\thtml += '<span class=\"year'+(i === -1 || i === 10 ? ' old' : '')+(currentYear === year ? ' active ' : '')+ this.color + '\">'+year+'</span>';\r\n\t\t\t\tyear += 1;\r\n\t\t\t}\r\n\t\t\tyearCont.html(html);\r\n\t\t},\r\n\t\t\r\n\t\tclick: function(e) {\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tvar target = $(e.target).closest('span, td, th');\r\n\t\t\tif (target.length === 1) {\r\n\t\t\t\tswitch(target[0].nodeName.toLowerCase()) {\r\n\t\t\t\t\tcase 'th':\r\n\t\t\t\t\t\tswitch(target[0].className) {\r\n\t\t\t\t\t\t\tcase 'switch-datepicker':\r\n\t\t\t\t\t\t\t\tthis.showMode(1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'prev':\r\n\t\t\t\t\t\t\tcase 'next':\r\n\t\t\t\t\t\t\t\tthis.viewDate['set'+DPGlobal.modes[this.viewMode].navFnc].call(\r\n\t\t\t\t\t\t\t\t\tthis.viewDate,\r\n\t\t\t\t\t\t\t\t\tthis.viewDate['get'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate) + \r\n\t\t\t\t\t\t\t\t\tDPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'span':\r\n\t\t\t\t\t\tif (target.is('.month')) {\r\n\t\t\t\t\t\t\tvar month = target.parent().find('span').index(target);\r\n\t\t\t\t\t\t\tthis.viewDate.setMonth(month);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar year = parseInt(target.text(), 10)||0;\r\n\t\t\t\t\t\t\tthis.viewDate.setFullYear(year);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.viewMode !== 0) {\r\n\t\t\t\t\t\t\tthis.date = new Date(this.viewDate);\r\n\t\t\t\t\t\t\tthis.element.trigger({\r\n\t\t\t\t\t\t\t\ttype: 'changeDate',\r\n\t\t\t\t\t\t\t\tdate: this.date,\r\n\t\t\t\t\t\t\t\tviewMode: DPGlobal.modes[this.viewMode].clsName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.showMode(-1);\r\n\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'td':\r\n\t\t\t\t\t\tif (target.is('.day') && !target.is('.disabled')){\r\n\t\t\t\t\t\t\tvar day = parseInt(target.text(), 10)||1;\r\n\t\t\t\t\t\t\tvar month = this.viewDate.getMonth();\r\n\t\t\t\t\t\t\tif (target.is('.old')) {\r\n\t\t\t\t\t\t\t\tmonth -= 1;\r\n\t\t\t\t\t\t\t} else if (target.is('.new')) {\r\n\t\t\t\t\t\t\t\tmonth += 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar year = this.viewDate.getFullYear();\r\n\t\t\t\t\t\t\tthis.date = new Date(year, month, day,0,0,0,0);\r\n\t\t\t\t\t\t\tthis.viewDate = new Date(year, month, Math.min(28, day),0,0,0,0);\r\n\t\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\t\tthis.element.trigger({\r\n\t\t\t\t\t\t\t\ttype: 'changeDate',\r\n\t\t\t\t\t\t\t\tdate: this.date,\r\n\t\t\t\t\t\t\t\tviewMode: DPGlobal.modes[this.viewMode].clsName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tmousedown: function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\t\t\r\n\t\tshowMode: function(dir) {\r\n\t\t\tif (dir) {\r\n\t\t\t\tthis.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));\r\n\t\t\t}\r\n\t\t\tthis.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();\r\n\t\t}\r\n\t};\r\n\t\r\n\t$.fn.datepicker = function ( option, val ) {\r\n\t\treturn this.each(function () {\r\n\t\t\tvar $this = $(this),\r\n\t\t\t\tdata = $this.data('datepicker'),\r\n\t\t\t\toptions = typeof option === 'object' && option;\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('datepicker', (data = new Datepicker(this, $.extend({}, $.fn.datepicker.defaults,options))));\r\n\t\t\t}\r\n\t\t\tif (typeof option === 'string') data[option](val);\r\n\t\t});\r\n\t};\r\n\r\n\t$.fn.datepicker.defaults = {\r\n\t\tonRender: function(date) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\t$.fn.datepicker.Constructor = Datepicker;\r\n\t\r\n\tvar DPGlobal = {\r\n\t\tmodes: [\r\n\t\t\t{\r\n\t\t\t\tclsName: 'days',\r\n\t\t\t\tnavFnc: 'Month',\r\n\t\t\t\tnavStep: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclsName: 'months',\r\n\t\t\t\tnavFnc: 'FullYear',\r\n\t\t\t\tnavStep: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclsName: 'years',\r\n\t\t\t\tnavFnc: 'FullYear',\r\n\t\t\t\tnavStep: 10\r\n\t\t}],\r\n\t\tdates:{\r\n\t\t\tdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n\t\t\tdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n\t\t\tdaysMin: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\r\n\t\t\tmonths: [\"JAN.\", \"FEB.\", \"MAR.\", \"APR.\", \"MAY\", \"JUN.\", \"JUL.\", \"AUG.\", \"SEPT.\", \"OCT.\", \"NOV.\", \"DEC.\"],\r\n\t\t\tmonthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\t\t},\r\n\t\tisLeapYear: function (year) {\r\n\t\t\treturn (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))\r\n\t\t},\r\n\t\tgetDaysInMonth: function (year, month) {\r\n\t\t\treturn [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]\r\n\t\t},\r\n\t\tparseFormat: function(format){\r\n\t\t\tvar separator = format.match(/[.\\/\\-\\s].*?/),\r\n\t\t\t\tparts = format.split(/\\W+/);\r\n\t\t\tif (!separator || !parts || parts.length === 0){\r\n\t\t\t\tthrow new Error(\"Invalid date format.\");\r\n\t\t\t}\r\n\t\t\treturn {separator: separator, parts: parts};\r\n\t\t},\r\n\t\tparseDate: function(date, format) {\r\n\t\t\tvar parts = date.split(format.separator),\r\n\t\t\t\tdate = new Date(),\r\n\t\t\t\tval;\r\n\t\t\tdate.setHours(0);\r\n\t\t\tdate.setMinutes(0);\r\n\t\t\tdate.setSeconds(0);\r\n\t\t\tdate.setMilliseconds(0);\r\n\t\t\tif (parts.length === format.parts.length) {\r\n\t\t\t\tvar year = date.getFullYear(), day = date.getDate(), month = date.getMonth();\r\n\t\t\t\tfor (var i=0, cnt = format.parts.length; i < cnt; i++) {\r\n\t\t\t\t\tval = parseInt(parts[i], 10)||1;\r\n\t\t\t\t\tswitch(format.parts[i]) {\r\n\t\t\t\t\t\tcase 'dd':\r\n\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\tday = val;\r\n\t\t\t\t\t\t\tdate.setDate(val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mm':\r\n\t\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\t\tmonth = val - 1;\r\n\t\t\t\t\t\t\tdate.setMonth(val - 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'yy':\r\n\t\t\t\t\t\t\tyear = 2000 + val;\r\n\t\t\t\t\t\t\tdate.setFullYear(2000 + val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'yyyy':\r\n\t\t\t\t\t\t\tyear = val;\r\n\t\t\t\t\t\t\tdate.setFullYear(val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdate = new Date(year, month, day, 0 ,0 ,0);\r\n\t\t\t}\r\n\t\t\treturn date;\r\n\t\t},\r\n\t\tformatDate: function(date, format){\r\n\t\t\tvar val = {\r\n\t\t\t\td: date.getDate(),\r\n\t\t\t\tm: date.getMonth() + 1,\r\n\t\t\t\tyy: date.getFullYear().toString().substring(2),\r\n\t\t\t\tyyyy: date.getFullYear()\r\n\t\t\t};\r\n\t\t\tval.dd = (val.d < 10 ? '0' : '') + val.d;\r\n\t\t\tval.mm = (val.m < 10 ? '0' : '') + val.m;\r\n\t\t\tvar date = [];\r\n\t\t\tfor (var i=0, cnt = format.parts.length; i < cnt; i++) {\r\n\t\t\t\tdate.push(val[format.parts[i]]);\r\n\t\t\t}\r\n\t\t\treturn date.join(format.separator);\r\n\t\t},\r\n\t\theadTemplate: '<thead>'+\r\n\t\t\t\t\t\t\t'<tr>'+\r\n\t\t\t\t\t\t\t\t'<th class=\"prev\"><p>&lsaquo;</p></th>'+\r\n\t\t\t\t\t\t\t\t'<th colspan=\"5\" class=\"switch-datepicker\"></th>'+\r\n\t\t\t\t\t\t\t\t'<th class=\"next\"><p>&rsaquo;</p></th>'+\r\n\t\t\t\t\t\t\t'</tr>'+\r\n\t\t\t\t\t\t'</thead>',\r\n\t\tcontTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>'\r\n\t};\r\n\t\r\n\tDPGlobal.template = '<div class=\"datepicker dropdown-menu\">'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-days\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\" table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\t'<tbody></tbody>'+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-months\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-years\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t'</div>';\r\n\r\n}( window.jQuery );","!function(t){function o(t){return\"undefined\"==typeof t.which?!0:\"number\"==typeof t.which&&t.which>0?!t.ctrlKey&&!t.metaKey&&!t.altKey&&8!=t.which&&9!=t.which&&13!=t.which&&16!=t.which&&17!=t.which&&20!=t.which&&27!=t.which:!1}function i(o){var i=t(o);i.prop(\"disabled\")||i.closest(\".form-group\").addClass(\"is-focused\")}function n(o){o.closest(\"label\").hover(function(){var o=t(this).find(\"input\");o.prop(\"disabled\")||i(o)},function(){e(t(this).find(\"input\"))})}function e(o){t(o).closest(\".form-group\").removeClass(\"is-focused\")}t.expr[\":\"].notmdproc=function(o){return t(o).data(\"mdproc\")?!1:!0},t.material={options:{validate:!0,input:!0,ripples:!0,checkbox:!0,togglebutton:!0,radio:!0,arrive:!0,autofill:!1,withRipples:[\".btn:not(.btn-link)\",\".card-image\",\".navbar a:not(.withoutripple)\",\".footer a:not(.withoutripple)\",\".dropdown-menu a\",\".nav-tabs a:not(.withoutripple)\",\".withripple\",\".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"].join(\",\"),inputElements:\"input.form-control, textarea.form-control, select.form-control\",checkboxElements:\".checkbox > label > input[type=checkbox]\",togglebuttonElements:\".togglebutton > label > input[type=checkbox]\",radioElements:\".radio > label > input[type=radio]\"},checkbox:function(o){var i=t(o?o:this.options.checkboxElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='checkbox-material'><span class='check'></span></span>\");n(i)},togglebutton:function(o){var i=t(o?o:this.options.togglebuttonElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='toggle'></span>\");n(i)},radio:function(o){var i=t(o?o:this.options.radioElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='circle'></span><span class='check'></span>\");n(i)},input:function(o){t(o?o:this.options.inputElements).filter(\":notmdproc\").data(\"mdproc\",!0).each(function(){var o=t(this),i=o.closest(\".form-group\");0===i.length&&(o.wrap(\"<div class='form-group'></div>\"),i=o.closest(\".form-group\")),o.attr(\"data-hint\")&&(o.after(\"<p class='help-block'>\"+o.attr(\"data-hint\")+\"</p>\"),o.removeAttr(\"data-hint\"));var n={\"input-lg\":\"form-group-lg\",\"input-sm\":\"form-group-sm\"};if(t.each(n,function(t,n){o.hasClass(t)&&(o.removeClass(t),i.addClass(n))}),o.hasClass(\"floating-label\")){var e=o.attr(\"placeholder\");o.attr(\"placeholder\",null).removeClass(\"floating-label\");var a=o.attr(\"id\"),r=\"\";a&&(r=\"for='\"+a+\"'\"),i.addClass(\"label-floating\"),o.after(\"<label \"+r+\"class='control-label'>\"+e+\"</label>\")}(null===o.val()||\"undefined\"==o.val()||\"\"===o.val())&&i.addClass(\"is-empty\"),i.append(\"<span class='material-input'></span>\"),i.find(\"input[type=file]\").length>0&&i.addClass(\"is-fileinput\")})},attachInputEventHandlers:function(){var n=this.options.validate;t(document).on(\"change\",\".checkbox input[type=checkbox]\",function(){t(this).blur()}).on(\"keydown paste\",\".form-control\",function(i){o(i)&&t(this).closest(\".form-group\").removeClass(\"is-empty\")}).on(\"keyup change\",\".form-control\",function(){var o=t(this),i=o.closest(\".form-group\"),e=\"undefined\"==typeof o[0].checkValidity||o[0].checkValidity();\"\"===o.val()?i.addClass(\"is-empty\"):i.removeClass(\"is-empty\"),n&&(e?i.removeClass(\"has-error\"):i.addClass(\"has-error\"))}).on(\"focus\",\".form-control, .form-group.is-fileinput\",function(){i(this)}).on(\"blur\",\".form-control, .form-group.is-fileinput\",function(){e(this)}).on(\"change\",\".form-group input\",function(){var o=t(this);if(\"file\"!=o.attr(\"type\")){var i=o.closest(\".form-group\"),n=o.val();n?i.removeClass(\"is-empty\"):i.addClass(\"is-empty\")}}).on(\"change\",\".form-group.is-fileinput input[type='file']\",function(){var o=t(this),i=o.closest(\".form-group\"),n=\"\";t.each(this.files,function(t,o){n+=o.name+\", \"}),n=n.substring(0,n.length-2),n?i.removeClass(\"is-empty\"):i.addClass(\"is-empty\"),i.find(\"input.form-control[readonly]\").val(n)})},ripples:function(o){t(o?o:this.options.withRipples).ripples()},autofill:function(){var o=setInterval(function(){t(\"input[type!=checkbox]\").each(function(){var o=t(this);o.val()&&o.val()!==o.attr(\"value\")&&o.trigger(\"change\")})},100);setTimeout(function(){clearInterval(o)},1e4)},attachAutofillEventHandlers:function(){var o;t(document).on(\"focus\",\"input\",function(){var i=t(this).parents(\"form\").find(\"input\").not(\"[type=file]\");o=setInterval(function(){i.each(function(){var o=t(this);o.val()!==o.attr(\"value\")&&o.trigger(\"change\")})},100)}).on(\"blur\",\".form-group input\",function(){clearInterval(o)})},init:function(o){this.options=t.extend({},this.options,o);var i=t(document);t.fn.ripples&&this.options.ripples&&this.ripples(),this.options.input&&(this.input(),this.attachInputEventHandlers()),this.options.checkbox&&this.checkbox(),this.options.togglebutton&&this.togglebutton(),this.options.radio&&this.radio(),this.options.autofill&&(this.autofill(),this.attachAutofillEventHandlers()),document.arrive&&this.options.arrive&&(t.fn.ripples&&this.options.ripples&&i.arrive(this.options.withRipples,function(){t.material.ripples(t(this))}),this.options.input&&i.arrive(this.options.inputElements,function(){t.material.input(t(this))}),this.options.checkbox&&i.arrive(this.options.checkboxElements,function(){t.material.checkbox(t(this))}),this.options.radio&&i.arrive(this.options.radioElements,function(){t.material.radio(t(this))}),this.options.togglebutton&&i.arrive(this.options.togglebuttonElements,function(){t.material.togglebutton(t(this))}))}}}(jQuery),function(t,o,i,n){\"use strict\";function e(o,i){r=this,this.element=t(o),this.options=t.extend({},s,i),this._defaults=s,this._name=a,this.init()}var a=\"ripples\",r=null,s={};e.prototype.init=function(){var i=this.element;i.on(\"mousedown touchstart\",function(n){if(!r.isTouch()||\"mousedown\"!==n.type){i.find(\".ripple-container\").length||i.append('<div class=\"ripple-container\"></div>');var e=i.children(\".ripple-container\"),a=r.getRelY(e,n),s=r.getRelX(e,n);if(a||s){var l=r.getRipplesColor(i),p=t(\"<div></div>\");p.addClass(\"ripple\").css({left:s,top:a,\"background-color\":l}),e.append(p),function(){return o.getComputedStyle(p[0]).opacity}(),r.rippleOn(i,p),setTimeout(function(){r.rippleEnd(p)},500),i.on(\"mouseup mouseleave touchend\",function(){p.data(\"mousedown\",\"off\"),\"off\"===p.data(\"animating\")&&r.rippleOut(p)})}}})},e.prototype.getNewSize=function(t,o){return Math.max(t.outerWidth(),t.outerHeight())/o.outerWidth()*2.5},e.prototype.getRelX=function(t,o){var i=t.offset();return r.isTouch()?(o=o.originalEvent,1===o.touches.length?o.touches[0].pageX-i.left:!1):o.pageX-i.left},e.prototype.getRelY=function(t,o){var i=t.offset();return r.isTouch()?(o=o.originalEvent,1===o.touches.length?o.touches[0].pageY-i.top:!1):o.pageY-i.top},e.prototype.getRipplesColor=function(t){var i=t.data(\"ripple-color\")?t.data(\"ripple-color\"):o.getComputedStyle(t[0]).color;return i},e.prototype.hasTransitionSupport=function(){var t=i.body||i.documentElement,o=t.style,e=o.transition!==n||o.WebkitTransition!==n||o.MozTransition!==n||o.MsTransition!==n||o.OTransition!==n;return e},e.prototype.isTouch=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},e.prototype.rippleEnd=function(t){t.data(\"animating\",\"off\"),\"off\"===t.data(\"mousedown\")&&r.rippleOut(t)},e.prototype.rippleOut=function(t){t.off(),r.hasTransitionSupport()?t.addClass(\"ripple-out\"):t.animate({opacity:0},100,function(){t.trigger(\"transitionend\")}),t.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\",function(){t.remove()})},e.prototype.rippleOn=function(t,o){var i=r.getNewSize(t,o);r.hasTransitionSupport()?o.css({\"-ms-transform\":\"scale(\"+i+\")\",\"-moz-transform\":\"scale(\"+i+\")\",\"-webkit-transform\":\"scale(\"+i+\")\",transform:\"scale(\"+i+\")\"}).addClass(\"ripple-on\").data(\"animating\",\"on\").data(\"mousedown\",\"on\"):o.animate({width:2*Math.max(t.outerWidth(),t.outerHeight()),height:2*Math.max(t.outerWidth(),t.outerHeight()),\"margin-left\":-1*Math.max(t.outerWidth(),t.outerHeight()),\"margin-top\":-1*Math.max(t.outerWidth(),t.outerHeight()),opacity:.2},500,function(){o.trigger(\"transitionend\")})},t.fn.ripples=function(o){return this.each(function(){t.data(this,\"plugin_\"+a)||t.data(this,\"plugin_\"+a,new e(this,o))})}}(jQuery,window,document);\r\n","/*!\r\n    \r\n =========================================================\r\n * Material Kit - v1.1.1.0\r\n =========================================================\r\n \r\n * Product Page: http://www.creative-tim.com/product/material-kit\r\n * Copyright 2017 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/timcreative/material-kit/blob/master/LICENSE.md)\r\n \r\n =========================================================\r\n \r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n \r\n */\r\n\r\nvar transparent = true;\r\n\r\nvar transparentDemo = true;\r\nvar fixedTop = false;\r\n\r\nvar navbar_initialized = false;\r\n\r\n$(document).ready(function(){\r\n\r\n    // Init Material scripts for buttons ripples, inputs animations etc, more info on the next link https://github.com/FezVrasta/bootstrap-material-design#materialjs\r\n    $.material.init();\r\n\r\n    //  Activate the Tooltips\r\n    $('[data-toggle=\"tooltip\"], [rel=\"tooltip\"]').tooltip();\r\n\r\n    // Activate Datepicker\r\n    if($('.datepicker').length != 0){\r\n        $('.datepicker').datepicker({\r\n             weekStart:1\r\n        });\r\n    }\r\n\r\n    // Check if we have the class \"navbar-color-on-scroll\" then add the function to remove the class \"navbar-transparent\" so it will transform to a plain color.\r\n    if($('.navbar-color-on-scroll').length != 0){\r\n        $(window).on('scroll', materialKit.checkScrollForTransparentNavbar)\r\n    }\r\n\r\n    // Activate Popovers\r\n    $('[data-toggle=\"popover\"]').popover();\r\n\r\n    // Active Carousel\r\n\t$('.carousel').carousel({\r\n      interval: 400000\r\n    });\r\n\r\n});\r\n\r\nvar materialKit = {\r\n    misc:{\r\n        navbar_menu_visible: 0\r\n    },\r\n\r\n    checkScrollForTransparentNavbar: debounce(function() {\r\n            if($(document).scrollTop() > 260 ) {\r\n                if(transparent) {\r\n                    transparent = false;\r\n                    $('.navbar-color-on-scroll').removeClass('navbar-transparent');\r\n                }\r\n            } else {\r\n                if( !transparent ) {\r\n                    transparent = true;\r\n                    $('.navbar-color-on-scroll').addClass('navbar-transparent');\r\n                }\r\n            }\r\n    }, 17),\r\n\r\n    initSliders: function(){\r\n        // Sliders for demo purpose\r\n        $('#sliderRegular').noUiSlider({\r\n            start: 40,\r\n            connect: \"lower\",\r\n            range: {\r\n                min: 0,\r\n                max: 100\r\n            }\r\n        });\r\n\r\n        $('#sliderDouble').noUiSlider({\r\n            start: [20, 60] ,\r\n            connect: true,\r\n            range: {\r\n                min: 0,\r\n                max: 100\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nvar big_image;\r\n\r\nvar materialKitDemo = {\r\n    checkScrollForParallax: debounce(function(){\r\n        var current_scroll = $(this).scrollTop();\r\n\r\n        oVal = ($(window).scrollTop() / 3);\r\n        big_image.css({\r\n            'transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-webkit-transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-ms-transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-o-transform':'translate3d(0,' + oVal +'px,0)'\r\n        });\r\n\r\n    }, 6)\r\n\r\n}\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t}, wait);\r\n\t\tif (immediate && !timeout) func.apply(context, args);\r\n\t};\r\n};\r\n","/*! VelocityJS.org (1.5.0). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */\n\n/*************************\n Velocity jQuery Shim\n *************************/\n\n/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */\n\n/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */\n/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */\n/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */\n\n(function(window) {\n\t\"use strict\";\n\t/***************\n\t Setup\n\t ***************/\n\n\t/* If jQuery is already loaded, there's no point in loading this shim. */\n\tif (window.jQuery) {\n\t\treturn;\n\t}\n\n\t/* jQuery base. */\n\tvar $ = function(selector, context) {\n\t\treturn new $.fn.init(selector, context);\n\t};\n\n\t/********************\n\t Private Methods\n\t ********************/\n\n\t/* jQuery */\n\t$.isWindow = function(obj) {\n\t\t/* jshint eqeqeq: false */\n\t\treturn obj && obj === obj.window;\n\t};\n\n\t/* jQuery */\n\t$.type = function(obj) {\n\t\tif (!obj) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\t\tclass2type[toString.call(obj)] || \"object\" :\n\t\t\t\ttypeof obj;\n\t};\n\n\t/* jQuery */\n\t$.isArray = Array.isArray || function(obj) {\n\t\treturn $.type(obj) === \"array\";\n\t};\n\n\t/* jQuery */\n\tfunction isArraylike(obj) {\n\t\tvar length = obj.length,\n\t\t\t\ttype = $.type(obj);\n\n\t\tif (type === \"function\" || $.isWindow(obj)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (obj.nodeType === 1 && length) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && (length - 1) in obj;\n\t}\n\n\t/***************\n\t $ Methods\n\t ***************/\n\n\t/* jQuery: Support removed for IE<9. */\n\t$.isPlainObject = function(obj) {\n\t\tvar key;\n\n\t\tif (!obj || $.type(obj) !== \"object\" || obj.nodeType || $.isWindow(obj)) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tif (obj.constructor &&\n\t\t\t\t\t!hasOwn.call(obj, \"constructor\") &&\n\t\t\t\t\t!hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\")) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (key in obj) {\n\t\t}\n\n\t\treturn key === undefined || hasOwn.call(obj, key);\n\t};\n\n\t/* jQuery */\n\t$.each = function(obj, callback, args) {\n\t\tvar value,\n\t\t\t\ti = 0,\n\t\t\t\tlength = obj.length,\n\t\t\t\tisArray = isArraylike(obj);\n\n\t\tif (args) {\n\t\t\tif (isArray) {\n\t\t\t\tfor (; i < length; i++) {\n\t\t\t\t\tvalue = callback.apply(obj[i], args);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i in obj) {\n\t\t\t\t\tif (!obj.hasOwnProperty(i)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvalue = callback.apply(obj[i], args);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (isArray) {\n\t\t\t\tfor (; i < length; i++) {\n\t\t\t\t\tvalue = callback.call(obj[i], i, obj[i]);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i in obj) {\n\t\t\t\t\tif (!obj.hasOwnProperty(i)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvalue = callback.call(obj[i], i, obj[i]);\n\n\t\t\t\t\tif (value === false) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t};\n\n\t/* Custom */\n\t$.data = function(node, key, value) {\n\t\t/* $.getData() */\n\t\tif (value === undefined) {\n\t\t\tvar getId = node[$.expando],\n\t\t\t\t\tstore = getId && cache[getId];\n\n\t\t\tif (key === undefined) {\n\t\t\t\treturn store;\n\t\t\t} else if (store) {\n\t\t\t\tif (key in store) {\n\t\t\t\t\treturn store[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* $.setData() */\n\t\t} else if (key !== undefined) {\n\t\t\tvar setId = node[$.expando] || (node[$.expando] = ++$.uuid);\n\n\t\t\tcache[setId] = cache[setId] || {};\n\t\t\tcache[setId][key] = value;\n\n\t\t\treturn value;\n\t\t}\n\t};\n\n\t/* Custom */\n\t$.removeData = function(node, keys) {\n\t\tvar id = node[$.expando],\n\t\t\t\tstore = id && cache[id];\n\n\t\tif (store) {\n\t\t\t// Cleanup the entire store if no keys are provided.\n\t\t\tif (!keys) {\n\t\t\t\tdelete cache[id];\n\t\t\t} else {\n\t\t\t\t$.each(keys, function(_, key) {\n\t\t\t\t\tdelete store[key];\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\t/* jQuery */\n\t$.extend = function() {\n\t\tvar src, copyIsArray, copy, name, options, clone,\n\t\t\t\ttarget = arguments[0] || {},\n\t\t\t\ti = 1,\n\t\t\t\tlength = arguments.length,\n\t\t\t\tdeep = false;\n\n\t\tif (typeof target === \"boolean\") {\n\t\t\tdeep = target;\n\n\t\t\ttarget = arguments[i] || {};\n\t\t\ti++;\n\t\t}\n\n\t\tif (typeof target !== \"object\" && $.type(target) !== \"function\") {\n\t\t\ttarget = {};\n\t\t}\n\n\t\tif (i === length) {\n\t\t\ttarget = this;\n\t\t\ti--;\n\t\t}\n\n\t\tfor (; i < length; i++) {\n\t\t\tif ((options = arguments[i])) {\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tif (!options.hasOwnProperty(name)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tsrc = target[name];\n\t\t\t\t\tcopy = options[name];\n\n\t\t\t\t\tif (target === copy) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && $.isArray(src) ? src : [];\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && $.isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget[name] = $.extend(deep, clone, copy);\n\n\t\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t};\n\n\t/* jQuery 1.4.3 */\n\t$.queue = function(elem, type, data) {\n\t\tfunction $makeArray(arr, results) {\n\t\t\tvar ret = results || [];\n\n\t\t\tif (arr) {\n\t\t\t\tif (isArraylike(Object(arr))) {\n\t\t\t\t\t/* $.merge */\n\t\t\t\t\t(function(first, second) {\n\t\t\t\t\t\tvar len = +second.length,\n\t\t\t\t\t\t\t\tj = 0,\n\t\t\t\t\t\t\t\ti = first.length;\n\n\t\t\t\t\t\twhile (j < len) {\n\t\t\t\t\t\t\tfirst[i++] = second[j++];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (len !== len) {\n\t\t\t\t\t\t\twhile (second[j] !== undefined) {\n\t\t\t\t\t\t\t\tfirst[i++] = second[j++];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfirst.length = i;\n\n\t\t\t\t\t\treturn first;\n\t\t\t\t\t})(ret, typeof arr === \"string\" ? [arr] : arr);\n\t\t\t\t} else {\n\t\t\t\t\t[].push.call(ret, arr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\tif (!elem) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype = (type || \"fx\") + \"queue\";\n\n\t\tvar q = $.data(elem, type);\n\n\t\tif (!data) {\n\t\t\treturn q || [];\n\t\t}\n\n\t\tif (!q || $.isArray(data)) {\n\t\t\tq = $.data(elem, type, $makeArray(data));\n\t\t} else {\n\t\t\tq.push(data);\n\t\t}\n\n\t\treturn q;\n\t};\n\n\t/* jQuery 1.4.3 */\n\t$.dequeue = function(elems, type) {\n\t\t/* Custom: Embed element iteration. */\n\t\t$.each(elems.nodeType ? [elems] : elems, function(i, elem) {\n\t\t\ttype = type || \"fx\";\n\n\t\t\tvar queue = $.queue(elem, type),\n\t\t\t\t\tfn = queue.shift();\n\n\t\t\tif (fn === \"inprogress\") {\n\t\t\t\tfn = queue.shift();\n\t\t\t}\n\n\t\t\tif (fn) {\n\t\t\t\tif (type === \"fx\") {\n\t\t\t\t\tqueue.unshift(\"inprogress\");\n\t\t\t\t}\n\n\t\t\t\tfn.call(elem, function() {\n\t\t\t\t\t$.dequeue(elem, type);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\t/******************\n\t $.fn Methods\n\t ******************/\n\n\t/* jQuery */\n\t$.fn = $.prototype = {\n\t\tinit: function(selector) {\n\t\t\t/* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */\n\t\t\tif (selector.nodeType) {\n\t\t\t\tthis[0] = selector;\n\n\t\t\t\treturn this;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Not a DOM node.\");\n\t\t\t}\n\t\t},\n\t\toffset: function() {\n\t\t\t/* jQuery altered code: Dropped disconnected DOM node checking. */\n\t\t\tvar box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {top: 0, left: 0};\n\n\t\t\treturn {\n\t\t\t\ttop: box.top + (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),\n\t\t\t\tleft: box.left + (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)\n\t\t\t};\n\t\t},\n\t\tposition: function() {\n\t\t\t/* jQuery */\n\t\t\tfunction offsetParentFn(elem) {\n\t\t\t\tvar offsetParent = elem.offsetParent;\n\n\t\t\t\twhile (offsetParent && offsetParent.nodeName.toLowerCase() !== \"html\" && offsetParent.style && offsetParent.style.position === \"static\") {\n\t\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t\t}\n\n\t\t\t\treturn offsetParent || document;\n\t\t\t}\n\n\t\t\t/* Zepto */\n\t\t\tvar elem = this[0],\n\t\t\t\t\toffsetParent = offsetParentFn(elem),\n\t\t\t\t\toffset = this.offset(),\n\t\t\t\t\tparentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? {top: 0, left: 0} : $(offsetParent).offset();\n\n\t\t\toffset.top -= parseFloat(elem.style.marginTop) || 0;\n\t\t\toffset.left -= parseFloat(elem.style.marginLeft) || 0;\n\n\t\t\tif (offsetParent.style) {\n\t\t\t\tparentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0;\n\t\t\t\tparentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttop: offset.top - parentOffset.top,\n\t\t\t\tleft: offset.left - parentOffset.left\n\t\t\t};\n\t\t}\n\t};\n\n\t/**********************\n\t Private Variables\n\t **********************/\n\n\t/* For $.data() */\n\tvar cache = {};\n\t$.expando = \"velocity\" + (new Date().getTime());\n\t$.uuid = 0;\n\n\t/* For $.queue() */\n\tvar class2type = {},\n\t\t\thasOwn = class2type.hasOwnProperty,\n\t\t\ttoString = class2type.toString;\n\n\tvar types = \"Boolean Number String Function Array Date RegExp Object Error\".split(\" \");\n\tfor (var i = 0; i < types.length; i++) {\n\t\tclass2type[\"[object \" + types[i] + \"]\"] = types[i].toLowerCase();\n\t}\n\n\t/* Makes $(node) possible, without having to call init. */\n\t$.fn.init.prototype = $.fn;\n\n\t/* Globalize Velocity onto the window, and assign its Utilities property. */\n\twindow.Velocity = {Utilities: $};\n})(window);\n\n/******************\n Velocity.js\n ******************/\n\n(function(factory) {\n\t\"use strict\";\n\t/* CommonJS module. */\n\tif (typeof module === \"object\" && typeof module.exports === \"object\") {\n\t\tmodule.exports = factory();\n\t\t/* AMD module. */\n\t} else if (typeof define === \"function\" && define.amd) {\n\t\tdefine(factory);\n\t\t/* Browser globals. */\n\t} else {\n\t\tfactory();\n\t}\n}(function() {\n\t\"use strict\";\n\treturn function(global, window, document, undefined) {\n\n\t\t/***************\n\t\t Summary\n\t\t ***************/\n\n\t\t/*\n\t\t - CSS: CSS stack that works independently from the rest of Velocity.\n\t\t - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.\n\t\t - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.\n\t\t - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.\n\t\t Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).\n\t\t - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n\t\t - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.\n\t\t - completeCall(): Handles the cleanup process for each Velocity call.\n\t\t */\n\n\t\t/*********************\n\t\t Helper Functions\n\t\t *********************/\n\n\t\t/* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */\n\t\tvar IE = (function() {\n\t\t\tif (document.documentMode) {\n\t\t\t\treturn document.documentMode;\n\t\t\t} else {\n\t\t\t\tfor (var i = 7; i > 4; i--) {\n\t\t\t\t\tvar div = document.createElement(\"div\");\n\n\t\t\t\t\tdiv.innerHTML = \"<!--[if IE \" + i + \"]><span></span><![endif]-->\";\n\n\t\t\t\t\tif (div.getElementsByTagName(\"span\").length) {\n\t\t\t\t\t\tdiv = null;\n\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t})();\n\n\t\t/* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */\n\t\tvar rAFShim = (function() {\n\t\t\tvar timeLast = 0;\n\n\t\t\treturn window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {\n\t\t\t\tvar timeCurrent = (new Date()).getTime(),\n\t\t\t\t\t\ttimeDelta;\n\n\t\t\t\t/* Dynamically set delay on a per-tick basis to match 60fps. */\n\t\t\t\t/* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */\n\t\t\t\ttimeDelta = Math.max(0, 16 - (timeCurrent - timeLast));\n\t\t\t\ttimeLast = timeCurrent + timeDelta;\n\n\t\t\t\treturn setTimeout(function() {\n\t\t\t\t\tcallback(timeCurrent + timeDelta);\n\t\t\t\t}, timeDelta);\n\t\t\t};\n\t\t})();\n\n\t\tvar performance = (function() {\n\t\t\tvar perf = window.performance || {};\n\n\t\t\tif (typeof perf.now !== \"function\") {\n\t\t\t\tvar nowOffset = perf.timing && perf.timing.navigationStart ? perf.timing.navigationStart : (new Date()).getTime();\n\n\t\t\t\tperf.now = function() {\n\t\t\t\t\treturn (new Date()).getTime() - nowOffset;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn perf;\n\t\t})();\n\n\t\t/* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */\n\t\tfunction compactSparseArray(array) {\n\t\t\tvar index = -1,\n\t\t\t\t\tlength = array ? array.length : 0,\n\t\t\t\t\tresult = [];\n\n\t\t\twhile (++index < length) {\n\t\t\t\tvar value = array[index];\n\n\t\t\t\tif (value) {\n\t\t\t\t\tresult.push(value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t/**\n\t\t * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n\t\t * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n\t\t * (technically, since host objects have been implementation-dependent,\n\t\t * at least before ES2015, IE hasn't needed to work this way).\n\t\t * Also works on strings, fixes IE < 9 to allow an explicit undefined\n\t\t * for the 2nd argument (as in Firefox), and prevents errors when\n\t\t * called on other DOM objects.\n\t\t */\n\t\tvar _slice = (function() {\n\t\t\tvar slice = Array.prototype.slice;\n\n\t\t\ttry {\n\t\t\t\t// Can't be used with DOM elements in IE < 9\n\t\t\t\tslice.call(document.documentElement);\n\t\t\t\treturn slice;\n\t\t\t} catch (e) { // Fails in IE < 9\n\n\t\t\t\t// This will work for genuine arrays, array-like objects, \n\t\t\t\t// NamedNodeMap (attributes, entities, notations),\n\t\t\t\t// NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n\t\t\t\t// and will not fail on other DOM objects (as do DOM elements in IE < 9)\n\t\t\t\treturn function(begin, end) {\n\t\t\t\t\tvar len = this.length;\n\n\t\t\t\t\tif (typeof begin !== \"number\") {\n\t\t\t\t\t\tbegin = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// IE < 9 gets unhappy with an undefined end argument\n\t\t\t\t\tif (typeof end !== \"number\") {\n\t\t\t\t\t\tend = len;\n\t\t\t\t\t}\n\t\t\t\t\t// For native Array objects, we use the native slice function\n\t\t\t\t\tif (this.slice) {\n\t\t\t\t\t\treturn slice.call(this, begin, end);\n\t\t\t\t\t}\n\t\t\t\t\t// For array like object we handle it ourselves.\n\t\t\t\t\tvar i,\n\t\t\t\t\t\t\tcloned = [],\n\t\t\t\t\t\t\t// Handle negative value for \"begin\"\n\t\t\t\t\t\t\tstart = (begin >= 0) ? begin : Math.max(0, len + begin),\n\t\t\t\t\t\t\t// Handle negative value for \"end\"\n\t\t\t\t\t\t\tupTo = end < 0 ? len + end : Math.min(end, len),\n\t\t\t\t\t\t\t// Actual expected size of the slice\n\t\t\t\t\t\t\tsize = upTo - start;\n\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tcloned = new Array(size);\n\t\t\t\t\t\tif (this.charAt) {\n\t\t\t\t\t\t\tfor (i = 0; i < size; i++) {\n\t\t\t\t\t\t\t\tcloned[i] = this.charAt(start + i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfor (i = 0; i < size; i++) {\n\t\t\t\t\t\t\t\tcloned[i] = this[start + i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn cloned;\n\t\t\t\t};\n\t\t\t}\n\t\t})();\n\n\t\t/* .indexOf doesn't exist in IE<9 */\n\t\tvar _inArray = (function() {\n\t\t\tif (Array.prototype.includes) {\n\t\t\t\treturn function(arr, val) {\n\t\t\t\t\treturn arr.includes(val);\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn function(arr, val) {\n\t\t\t\t\treturn arr.indexOf(val) >= 0;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn function(arr, val) {\n\t\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\t\tif (arr[i] === val) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\t\t});\n\n\t\tfunction sanitizeElements(elements) {\n\t\t\t/* Unwrap jQuery/Zepto objects. */\n\t\t\tif (Type.isWrapped(elements)) {\n\t\t\t\telements = _slice.call(elements);\n\t\t\t\t/* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */\n\t\t\t} else if (Type.isNode(elements)) {\n\t\t\t\telements = [elements];\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t}\n\n\t\tvar Type = {\n\t\t\tisNumber: function(variable) {\n\t\t\t\treturn (typeof variable === \"number\");\n\t\t\t},\n\t\t\tisString: function(variable) {\n\t\t\t\treturn (typeof variable === \"string\");\n\t\t\t},\n\t\t\tisArray: Array.isArray || function(variable) {\n\t\t\t\treturn Object.prototype.toString.call(variable) === \"[object Array]\";\n\t\t\t},\n\t\t\tisFunction: function(variable) {\n\t\t\t\treturn Object.prototype.toString.call(variable) === \"[object Function]\";\n\t\t\t},\n\t\t\tisNode: function(variable) {\n\t\t\t\treturn variable && variable.nodeType;\n\t\t\t},\n\t\t\t/* Determine if variable is an array-like wrapped jQuery, Zepto or similar element, or even a NodeList etc. */\n\t\t\t/* NOTE: HTMLFormElements also have a length. */\n\t\t\tisWrapped: function(variable) {\n\t\t\t\treturn variable\n\t\t\t\t\t\t&& variable !== window\n\t\t\t\t\t\t&& Type.isNumber(variable.length)\n\t\t\t\t\t\t&& !Type.isString(variable)\n\t\t\t\t\t\t&& !Type.isFunction(variable)\n\t\t\t\t\t\t&& !Type.isNode(variable)\n\t\t\t\t\t\t&& (variable.length === 0 || Type.isNode(variable[0]));\n\t\t\t},\n\t\t\tisSVG: function(variable) {\n\t\t\t\treturn window.SVGElement && (variable instanceof window.SVGElement);\n\t\t\t},\n\t\t\tisEmptyObject: function(variable) {\n\t\t\t\tfor (var name in variable) {\n\t\t\t\t\tif (variable.hasOwnProperty(name)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\t/*****************\n\t\t Dependencies\n\t\t *****************/\n\n\t\tvar $,\n\t\t\t\tisJQuery = false;\n\n\t\tif (global.fn && global.fn.jquery) {\n\t\t\t$ = global;\n\t\t\tisJQuery = true;\n\t\t} else {\n\t\t\t$ = window.Velocity.Utilities;\n\t\t}\n\n\t\tif (IE <= 8 && !isJQuery) {\n\t\t\tthrow new Error(\"Velocity: IE8 and below require jQuery to be loaded before Velocity.\");\n\t\t} else if (IE <= 7) {\n\t\t\t/* Revert to jQuery's $.animate(), and lose Velocity's extra features. */\n\t\t\tjQuery.fn.velocity = jQuery.fn.animate;\n\n\t\t\t/* Now that $.fn.velocity is aliased, abort this Velocity declaration. */\n\t\t\treturn;\n\t\t}\n\n\t\t/*****************\n\t\t Constants\n\t\t *****************/\n\n\t\tvar DURATION_DEFAULT = 400,\n\t\t\t\tEASING_DEFAULT = \"swing\";\n\n\t\t/*************\n\t\t State\n\t\t *************/\n\n\t\tvar Velocity = {\n\t\t\t/* Container for page-wide Velocity state data. */\n\t\t\tState: {\n\t\t\t\t/* Detect mobile devices to determine if mobileHA should be turned on. */\n\t\t\t\tisMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),\n\t\t\t\t/* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */\n\t\t\t\tisAndroid: /Android/i.test(navigator.userAgent),\n\t\t\t\tisGingerbread: /Android 2\\.3\\.[3-7]/i.test(navigator.userAgent),\n\t\t\t\tisChrome: window.chrome,\n\t\t\t\tisFirefox: /Firefox/i.test(navigator.userAgent),\n\t\t\t\t/* Create a cached element for re-use when checking for CSS property prefixes. */\n\t\t\t\tprefixElement: document.createElement(\"div\"),\n\t\t\t\t/* Cache every prefix match to avoid repeating lookups. */\n\t\t\t\tprefixMatches: {},\n\t\t\t\t/* Cache the anchor used for animating window scrolling. */\n\t\t\t\tscrollAnchor: null,\n\t\t\t\t/* Cache the browser-specific property names associated with the scroll anchor. */\n\t\t\t\tscrollPropertyLeft: null,\n\t\t\t\tscrollPropertyTop: null,\n\t\t\t\t/* Keep track of whether our RAF tick is running. */\n\t\t\t\tisTicking: false,\n\t\t\t\t/* Container for every in-progress call to Velocity. */\n\t\t\t\tcalls: [],\n\t\t\t\tdelayedElements: {\n\t\t\t\t\tcount: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\t/* Velocity's custom CSS stack. Made global for unit testing. */\n\t\t\tCSS: {/* Defined below. */},\n\t\t\t/* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */\n\t\t\tUtilities: $,\n\t\t\t/* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */\n\t\t\tRedirects: {/* Manually registered by the user. */},\n\t\t\tEasings: {/* Defined below. */},\n\t\t\t/* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */\n\t\t\tPromise: window.Promise,\n\t\t\t/* Velocity option defaults, which can be overriden by the user. */\n\t\t\tdefaults: {\n\t\t\t\tqueue: \"\",\n\t\t\t\tduration: DURATION_DEFAULT,\n\t\t\t\teasing: EASING_DEFAULT,\n\t\t\t\tbegin: undefined,\n\t\t\t\tcomplete: undefined,\n\t\t\t\tprogress: undefined,\n\t\t\t\tdisplay: undefined,\n\t\t\t\tvisibility: undefined,\n\t\t\t\tloop: false,\n\t\t\t\tdelay: false,\n\t\t\t\tmobileHA: true,\n\t\t\t\t/* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */\n\t\t\t\t_cacheValues: true,\n\t\t\t\t/* Advanced: Set to false if the promise should always resolve on empty element lists. */\n\t\t\t\tpromiseRejectEmpty: true\n\t\t\t},\n\t\t\t/* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */\n\t\t\tinit: function(element) {\n\t\t\t\t$.data(element, \"velocity\", {\n\t\t\t\t\t/* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */\n\t\t\t\t\tisSVG: Type.isSVG(element),\n\t\t\t\t\t/* Keep track of whether the element is currently being animated by Velocity.\n\t\t\t\t\t This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */\n\t\t\t\t\tisAnimating: false,\n\t\t\t\t\t/* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n\t\t\t\t\tcomputedStyle: null,\n\t\t\t\t\t/* Tween data is cached for each animation on the element so that data can be passed across calls --\n\t\t\t\t\t in particular, end values are used as subsequent start values in consecutive Velocity calls. */\n\t\t\t\t\ttweensContainer: null,\n\t\t\t\t\t/* The full root property values of each CSS hook being animated on this element are cached so that:\n\t\t\t\t\t 1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.\n\t\t\t\t\t 2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */\n\t\t\t\t\trootPropertyValueCache: {},\n\t\t\t\t\t/* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */\n\t\t\t\t\ttransformCache: {}\n\t\t\t\t});\n\t\t\t},\n\t\t\t/* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */\n\t\t\thook: null, /* Defined below. */\n\t\t\t/* Velocity-wide animation time remapping for testing purposes. */\n\t\t\tmock: false,\n\t\t\tversion: {major: 1, minor: 5, patch: 0},\n\t\t\t/* Set to 1 or 2 (most verbose) to output debug info to console. */\n\t\t\tdebug: false,\n\t\t\t/* Use rAF high resolution timestamp when available */\n\t\t\ttimestamp: true,\n\t\t\t/* Pause all animations */\n\t\t\tpauseAll: function(queueName) {\n\t\t\t\tvar currentTime = (new Date()).getTime();\n\n\t\t\t\t$.each(Velocity.State.calls, function(i, activeCall) {\n\n\t\t\t\t\tif (activeCall) {\n\n\t\t\t\t\t\t/* If we have a queueName and this call is not on that queue, skip */\n\t\t\t\t\t\tif (queueName !== undefined && ((activeCall[2].queue !== queueName) || (activeCall[2].queue === false))) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Set call to paused */\n\t\t\t\t\t\tactiveCall[5] = {\n\t\t\t\t\t\t\tresume: false\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t/* Pause timers on any currently delayed calls */\n\t\t\t\t$.each(Velocity.State.delayedElements, function(k, element) {\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tpauseDelayOnElement(element, currentTime);\n\t\t\t\t});\n\t\t\t},\n\t\t\t/* Resume all animations */\n\t\t\tresumeAll: function(queueName) {\n\t\t\t\tvar currentTime = (new Date()).getTime();\n\n\t\t\t\t$.each(Velocity.State.calls, function(i, activeCall) {\n\n\t\t\t\t\tif (activeCall) {\n\n\t\t\t\t\t\t/* If we have a queueName and this call is not on that queue, skip */\n\t\t\t\t\t\tif (queueName !== undefined && ((activeCall[2].queue !== queueName) || (activeCall[2].queue === false))) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Set call to resumed if it was paused */\n\t\t\t\t\t\tif (activeCall[5]) {\n\t\t\t\t\t\t\tactiveCall[5].resume = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t/* Resume timers on any currently delayed calls */\n\t\t\t\t$.each(Velocity.State.delayedElements, function(k, element) {\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresumeDelayOnElement(element, currentTime);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t/* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */\n\t\tif (window.pageYOffset !== undefined) {\n\t\t\tVelocity.State.scrollAnchor = window;\n\t\t\tVelocity.State.scrollPropertyLeft = \"pageXOffset\";\n\t\t\tVelocity.State.scrollPropertyTop = \"pageYOffset\";\n\t\t} else {\n\t\t\tVelocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;\n\t\t\tVelocity.State.scrollPropertyLeft = \"scrollLeft\";\n\t\t\tVelocity.State.scrollPropertyTop = \"scrollTop\";\n\t\t}\n\n\t\t/* Shorthand alias for jQuery's $.data() utility. */\n\t\tfunction Data(element) {\n\t\t\t/* Hardcode a reference to the plugin name. */\n\t\t\tvar response = $.data(element, \"velocity\");\n\n\t\t\t/* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */\n\t\t\treturn response === null ? undefined : response;\n\t\t}\n\n\t\t/**************\n\t\t Delay Timer\n\t\t **************/\n\n\t\tfunction pauseDelayOnElement(element, currentTime) {\n\t\t\t/* Check for any delay timers, and pause the set timeouts (while preserving time data)\n\t\t\t to be resumed when the \"resume\" command is issued */\n\t\t\tvar data = Data(element);\n\t\t\tif (data && data.delayTimer && !data.delayPaused) {\n\t\t\t\tdata.delayRemaining = data.delay - currentTime + data.delayBegin;\n\t\t\t\tdata.delayPaused = true;\n\t\t\t\tclearTimeout(data.delayTimer.setTimeout);\n\t\t\t}\n\t\t}\n\n\t\tfunction resumeDelayOnElement(element, currentTime) {\n\t\t\t/* Check for any paused timers and resume */\n\t\t\tvar data = Data(element);\n\t\t\tif (data && data.delayTimer && data.delayPaused) {\n\t\t\t\t/* If the element was mid-delay, re initiate the timeout with the remaining delay */\n\t\t\t\tdata.delayPaused = false;\n\t\t\t\tdata.delayTimer.setTimeout = setTimeout(data.delayTimer.next, data.delayRemaining);\n\t\t\t}\n\t\t}\n\n\n\n\t\t/**************\n\t\t Easing\n\t\t **************/\n\n\t\t/* Step easing generator. */\n\t\tfunction generateStep(steps) {\n\t\t\treturn function(p) {\n\t\t\t\treturn Math.round(p * steps) * (1 / steps);\n\t\t\t};\n\t\t}\n\n\t\t/* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n\t\tfunction generateBezier(mX1, mY1, mX2, mY2) {\n\t\t\tvar NEWTON_ITERATIONS = 4,\n\t\t\t\t\tNEWTON_MIN_SLOPE = 0.001,\n\t\t\t\t\tSUBDIVISION_PRECISION = 0.0000001,\n\t\t\t\t\tSUBDIVISION_MAX_ITERATIONS = 10,\n\t\t\t\t\tkSplineTableSize = 11,\n\t\t\t\t\tkSampleStepSize = 1.0 / (kSplineTableSize - 1.0),\n\t\t\t\t\tfloat32ArraySupported = \"Float32Array\" in window;\n\n\t\t\t/* Must contain four arguments. */\n\t\t\tif (arguments.length !== 4) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* Arguments must be numbers. */\n\t\t\tfor (var i = 0; i < 4; ++i) {\n\t\t\t\tif (typeof arguments[i] !== \"number\" || isNaN(arguments[i]) || !isFinite(arguments[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* X values must be in the [0, 1] range. */\n\t\t\tmX1 = Math.min(mX1, 1);\n\t\t\tmX2 = Math.min(mX2, 1);\n\t\t\tmX1 = Math.max(mX1, 0);\n\t\t\tmX2 = Math.max(mX2, 0);\n\n\t\t\tvar mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n\t\t\tfunction A(aA1, aA2) {\n\t\t\t\treturn 1.0 - 3.0 * aA2 + 3.0 * aA1;\n\t\t\t}\n\t\t\tfunction B(aA1, aA2) {\n\t\t\t\treturn 3.0 * aA2 - 6.0 * aA1;\n\t\t\t}\n\t\t\tfunction C(aA1) {\n\t\t\t\treturn 3.0 * aA1;\n\t\t\t}\n\n\t\t\tfunction calcBezier(aT, aA1, aA2) {\n\t\t\t\treturn ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n\t\t\t}\n\n\t\t\tfunction getSlope(aT, aA1, aA2) {\n\t\t\t\treturn 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n\t\t\t}\n\n\t\t\tfunction newtonRaphsonIterate(aX, aGuessT) {\n\t\t\t\tfor (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n\t\t\t\t\tvar currentSlope = getSlope(aGuessT, mX1, mX2);\n\n\t\t\t\t\tif (currentSlope === 0.0) {\n\t\t\t\t\t\treturn aGuessT;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n\t\t\t\t\taGuessT -= currentX / currentSlope;\n\t\t\t\t}\n\n\t\t\t\treturn aGuessT;\n\t\t\t}\n\n\t\t\tfunction calcSampleValues() {\n\t\t\t\tfor (var i = 0; i < kSplineTableSize; ++i) {\n\t\t\t\t\tmSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction binarySubdivide(aX, aA, aB) {\n\t\t\t\tvar currentX, currentT, i = 0;\n\n\t\t\t\tdo {\n\t\t\t\t\tcurrentT = aA + (aB - aA) / 2.0;\n\t\t\t\t\tcurrentX = calcBezier(currentT, mX1, mX2) - aX;\n\t\t\t\t\tif (currentX > 0.0) {\n\t\t\t\t\t\taB = currentT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\taA = currentT;\n\t\t\t\t\t}\n\t\t\t\t} while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n\t\t\t\treturn currentT;\n\t\t\t}\n\n\t\t\tfunction getTForX(aX) {\n\t\t\t\tvar intervalStart = 0.0,\n\t\t\t\t\t\tcurrentSample = 1,\n\t\t\t\t\t\tlastSample = kSplineTableSize - 1;\n\n\t\t\t\tfor (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\n\t\t\t\t\tintervalStart += kSampleStepSize;\n\t\t\t\t}\n\n\t\t\t\t--currentSample;\n\n\t\t\t\tvar dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]),\n\t\t\t\t\t\tguessForT = intervalStart + dist * kSampleStepSize,\n\t\t\t\t\t\tinitialSlope = getSlope(guessForT, mX1, mX2);\n\n\t\t\t\tif (initialSlope >= NEWTON_MIN_SLOPE) {\n\t\t\t\t\treturn newtonRaphsonIterate(aX, guessForT);\n\t\t\t\t} else if (initialSlope === 0.0) {\n\t\t\t\t\treturn guessForT;\n\t\t\t\t} else {\n\t\t\t\t\treturn binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar _precomputed = false;\n\n\t\t\tfunction precompute() {\n\t\t\t\t_precomputed = true;\n\t\t\t\tif (mX1 !== mY1 || mX2 !== mY2) {\n\t\t\t\t\tcalcSampleValues();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar f = function(aX) {\n\t\t\t\tif (!_precomputed) {\n\t\t\t\t\tprecompute();\n\t\t\t\t}\n\t\t\t\tif (mX1 === mY1 && mX2 === mY2) {\n\t\t\t\t\treturn aX;\n\t\t\t\t}\n\t\t\t\tif (aX === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (aX === 1) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\n\t\t\t\treturn calcBezier(getTForX(aX), mY1, mY2);\n\t\t\t};\n\n\t\t\tf.getControlPoints = function() {\n\t\t\t\treturn [{x: mX1, y: mY1}, {x: mX2, y: mY2}];\n\t\t\t};\n\n\t\t\tvar str = \"generateBezier(\" + [mX1, mY1, mX2, mY2] + \")\";\n\t\t\tf.toString = function() {\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t\treturn f;\n\t\t}\n\n\t\t/* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */\n\t\t/* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass\n\t\t then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */\n\t\tvar generateSpringRK4 = (function() {\n\t\t\tfunction springAccelerationForState(state) {\n\t\t\t\treturn (-state.tension * state.x) - (state.friction * state.v);\n\t\t\t}\n\n\t\t\tfunction springEvaluateStateWithDerivative(initialState, dt, derivative) {\n\t\t\t\tvar state = {\n\t\t\t\t\tx: initialState.x + derivative.dx * dt,\n\t\t\t\t\tv: initialState.v + derivative.dv * dt,\n\t\t\t\t\ttension: initialState.tension,\n\t\t\t\t\tfriction: initialState.friction\n\t\t\t\t};\n\n\t\t\t\treturn {dx: state.v, dv: springAccelerationForState(state)};\n\t\t\t}\n\n\t\t\tfunction springIntegrateState(state, dt) {\n\t\t\t\tvar a = {\n\t\t\t\t\tdx: state.v,\n\t\t\t\t\tdv: springAccelerationForState(state)\n\t\t\t\t},\n\t\t\t\t\t\tb = springEvaluateStateWithDerivative(state, dt * 0.5, a),\n\t\t\t\t\t\tc = springEvaluateStateWithDerivative(state, dt * 0.5, b),\n\t\t\t\t\t\td = springEvaluateStateWithDerivative(state, dt, c),\n\t\t\t\t\t\tdxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),\n\t\t\t\t\t\tdvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);\n\n\t\t\t\tstate.x = state.x + dxdt * dt;\n\t\t\t\tstate.v = state.v + dvdt * dt;\n\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\treturn function springRK4Factory(tension, friction, duration) {\n\n\t\t\t\tvar initState = {\n\t\t\t\t\tx: -1,\n\t\t\t\t\tv: 0,\n\t\t\t\t\ttension: null,\n\t\t\t\t\tfriction: null\n\t\t\t\t},\n\t\t\t\t\t\tpath = [0],\n\t\t\t\t\t\ttime_lapsed = 0,\n\t\t\t\t\t\ttolerance = 1 / 10000,\n\t\t\t\t\t\tDT = 16 / 1000,\n\t\t\t\t\t\thave_duration, dt, last_state;\n\n\t\t\t\ttension = parseFloat(tension) || 500;\n\t\t\t\tfriction = parseFloat(friction) || 20;\n\t\t\t\tduration = duration || null;\n\n\t\t\t\tinitState.tension = tension;\n\t\t\t\tinitState.friction = friction;\n\n\t\t\t\thave_duration = duration !== null;\n\n\t\t\t\t/* Calculate the actual time it takes for this animation to complete with the provided conditions. */\n\t\t\t\tif (have_duration) {\n\t\t\t\t\t/* Run the simulation without a duration. */\n\t\t\t\t\ttime_lapsed = springRK4Factory(tension, friction);\n\t\t\t\t\t/* Compute the adjusted time delta. */\n\t\t\t\t\tdt = time_lapsed / duration * DT;\n\t\t\t\t} else {\n\t\t\t\t\tdt = DT;\n\t\t\t\t}\n\n\t\t\t\twhile (true) {\n\t\t\t\t\t/* Next/step function .*/\n\t\t\t\t\tlast_state = springIntegrateState(last_state || initState, dt);\n\t\t\t\t\t/* Store the position. */\n\t\t\t\t\tpath.push(1 + last_state.x);\n\t\t\t\t\ttime_lapsed += 16;\n\t\t\t\t\t/* If the change threshold is reached, break. */\n\t\t\t\t\tif (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the\n\t\t\t\t computed path and returns a snapshot of the position according to a given percentComplete. */\n\t\t\t\treturn !have_duration ? time_lapsed : function(percentComplete) {\n\t\t\t\t\treturn path[ (percentComplete * (path.length - 1)) | 0 ];\n\t\t\t\t};\n\t\t\t};\n\t\t}());\n\n\t\t/* jQuery easings. */\n\t\tVelocity.Easings = {\n\t\t\tlinear: function(p) {\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\tswing: function(p) {\n\t\t\t\treturn 0.5 - Math.cos(p * Math.PI) / 2;\n\t\t\t},\n\t\t\t/* Bonus \"spring\" easing, which is a less exaggerated version of easeInOutElastic. */\n\t\t\tspring: function(p) {\n\t\t\t\treturn 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6));\n\t\t\t}\n\t\t};\n\n\t\t/* CSS3 and Robert Penner easings. */\n\t\t$.each(\n\t\t\t\t[\n\t\t\t\t\t[\"ease\", [0.25, 0.1, 0.25, 1.0]],\n\t\t\t\t\t[\"ease-in\", [0.42, 0.0, 1.00, 1.0]],\n\t\t\t\t\t[\"ease-out\", [0.00, 0.0, 0.58, 1.0]],\n\t\t\t\t\t[\"ease-in-out\", [0.42, 0.0, 0.58, 1.0]],\n\t\t\t\t\t[\"easeInSine\", [0.47, 0, 0.745, 0.715]],\n\t\t\t\t\t[\"easeOutSine\", [0.39, 0.575, 0.565, 1]],\n\t\t\t\t\t[\"easeInOutSine\", [0.445, 0.05, 0.55, 0.95]],\n\t\t\t\t\t[\"easeInQuad\", [0.55, 0.085, 0.68, 0.53]],\n\t\t\t\t\t[\"easeOutQuad\", [0.25, 0.46, 0.45, 0.94]],\n\t\t\t\t\t[\"easeInOutQuad\", [0.455, 0.03, 0.515, 0.955]],\n\t\t\t\t\t[\"easeInCubic\", [0.55, 0.055, 0.675, 0.19]],\n\t\t\t\t\t[\"easeOutCubic\", [0.215, 0.61, 0.355, 1]],\n\t\t\t\t\t[\"easeInOutCubic\", [0.645, 0.045, 0.355, 1]],\n\t\t\t\t\t[\"easeInQuart\", [0.895, 0.03, 0.685, 0.22]],\n\t\t\t\t\t[\"easeOutQuart\", [0.165, 0.84, 0.44, 1]],\n\t\t\t\t\t[\"easeInOutQuart\", [0.77, 0, 0.175, 1]],\n\t\t\t\t\t[\"easeInQuint\", [0.755, 0.05, 0.855, 0.06]],\n\t\t\t\t\t[\"easeOutQuint\", [0.23, 1, 0.32, 1]],\n\t\t\t\t\t[\"easeInOutQuint\", [0.86, 0, 0.07, 1]],\n\t\t\t\t\t[\"easeInExpo\", [0.95, 0.05, 0.795, 0.035]],\n\t\t\t\t\t[\"easeOutExpo\", [0.19, 1, 0.22, 1]],\n\t\t\t\t\t[\"easeInOutExpo\", [1, 0, 0, 1]],\n\t\t\t\t\t[\"easeInCirc\", [0.6, 0.04, 0.98, 0.335]],\n\t\t\t\t\t[\"easeOutCirc\", [0.075, 0.82, 0.165, 1]],\n\t\t\t\t\t[\"easeInOutCirc\", [0.785, 0.135, 0.15, 0.86]]\n\t\t\t\t], function(i, easingArray) {\n\t\t\tVelocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);\n\t\t});\n\n\t\t/* Determine the appropriate easing type given an easing input. */\n\t\tfunction getEasing(value, duration) {\n\t\t\tvar easing = value;\n\n\t\t\t/* The easing option can either be a string that references a pre-registered easing,\n\t\t\t or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */\n\t\t\tif (Type.isString(value)) {\n\t\t\t\t/* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */\n\t\t\t\tif (!Velocity.Easings[value]) {\n\t\t\t\t\teasing = false;\n\t\t\t\t}\n\t\t\t} else if (Type.isArray(value) && value.length === 1) {\n\t\t\t\teasing = generateStep.apply(null, value);\n\t\t\t} else if (Type.isArray(value) && value.length === 2) {\n\t\t\t\t/* springRK4 must be passed the animation's duration. */\n\t\t\t\t/* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing\n\t\t\t\t function generated with default tension and friction values. */\n\t\t\t\teasing = generateSpringRK4.apply(null, value.concat([duration]));\n\t\t\t} else if (Type.isArray(value) && value.length === 4) {\n\t\t\t\t/* Note: If the bezier array contains non-numbers, generateBezier() returns false. */\n\t\t\t\teasing = generateBezier.apply(null, value);\n\t\t\t} else {\n\t\t\t\teasing = false;\n\t\t\t}\n\n\t\t\t/* Revert to the Velocity-wide default easing type, or fall back to \"swing\" (which is also jQuery's default)\n\t\t\t if the Velocity-wide default has been incorrectly modified. */\n\t\t\tif (easing === false) {\n\t\t\t\tif (Velocity.Easings[Velocity.defaults.easing]) {\n\t\t\t\t\teasing = Velocity.defaults.easing;\n\t\t\t\t} else {\n\t\t\t\t\teasing = EASING_DEFAULT;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn easing;\n\t\t}\n\n\t\t/*****************\n\t\t CSS Stack\n\t\t *****************/\n\n\t\t/* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.\n\t\t It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */\n\t\t/* Note: A \"CSS\" shorthand is aliased so that our code is easier to read. */\n\t\tvar CSS = Velocity.CSS = {\n\t\t\t/*************\n\t\t\t RegEx\n\t\t\t *************/\n\n\t\t\tRegEx: {\n\t\t\t\tisHex: /^#([A-f\\d]{3}){1,2}$/i,\n\t\t\t\t/* Unwrap a property value's surrounding text, e.g. \"rgba(4, 3, 2, 1)\" ==> \"4, 3, 2, 1\" and \"rect(4px 3px 2px 1px)\" ==> \"4px 3px 2px 1px\". */\n\t\t\t\tvalueUnwrap: /^[A-z]+\\((.*)\\)$/i,\n\t\t\t\twrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,\n\t\t\t\t/* Split a multi-value property into an array of subvalues, e.g. \"rgba(4, 3, 2, 1) 4px 3px 2px 1px\" ==> [ \"rgba(4, 3, 2, 1)\", \"4px\", \"3px\", \"2px\", \"1px\" ]. */\n\t\t\t\tvalueSplit: /([A-z]+\\(.+\\))|(([A-z0-9#-.]+?)(?=\\s|$))/ig\n\t\t\t},\n\t\t\t/************\n\t\t\t Lists\n\t\t\t ************/\n\n\t\t\tLists: {\n\t\t\t\tcolors: [\"fill\", \"stroke\", \"stopColor\", \"color\", \"backgroundColor\", \"borderColor\", \"borderTopColor\", \"borderRightColor\", \"borderBottomColor\", \"borderLeftColor\", \"outlineColor\"],\n\t\t\t\ttransformsBase: [\"translateX\", \"translateY\", \"scale\", \"scaleX\", \"scaleY\", \"skewX\", \"skewY\", \"rotateZ\"],\n\t\t\t\ttransforms3D: [\"transformPerspective\", \"translateZ\", \"scaleZ\", \"rotateX\", \"rotateY\"],\n\t\t\t\tunits: [\n\t\t\t\t\t\"%\", // relative\n\t\t\t\t\t\"em\", \"ex\", \"ch\", \"rem\", // font relative\n\t\t\t\t\t\"vw\", \"vh\", \"vmin\", \"vmax\", // viewport relative\n\t\t\t\t\t\"cm\", \"mm\", \"Q\", \"in\", \"pc\", \"pt\", \"px\", // absolute lengths\n\t\t\t\t\t\"deg\", \"grad\", \"rad\", \"turn\", // angles\n\t\t\t\t\t\"s\", \"ms\" // time\n\t\t\t\t],\n\t\t\t\tcolorNames: {\n\t\t\t\t\t\"aliceblue\": \"240,248,255\",\n\t\t\t\t\t\"antiquewhite\": \"250,235,215\",\n\t\t\t\t\t\"aquamarine\": \"127,255,212\",\n\t\t\t\t\t\"aqua\": \"0,255,255\",\n\t\t\t\t\t\"azure\": \"240,255,255\",\n\t\t\t\t\t\"beige\": \"245,245,220\",\n\t\t\t\t\t\"bisque\": \"255,228,196\",\n\t\t\t\t\t\"black\": \"0,0,0\",\n\t\t\t\t\t\"blanchedalmond\": \"255,235,205\",\n\t\t\t\t\t\"blueviolet\": \"138,43,226\",\n\t\t\t\t\t\"blue\": \"0,0,255\",\n\t\t\t\t\t\"brown\": \"165,42,42\",\n\t\t\t\t\t\"burlywood\": \"222,184,135\",\n\t\t\t\t\t\"cadetblue\": \"95,158,160\",\n\t\t\t\t\t\"chartreuse\": \"127,255,0\",\n\t\t\t\t\t\"chocolate\": \"210,105,30\",\n\t\t\t\t\t\"coral\": \"255,127,80\",\n\t\t\t\t\t\"cornflowerblue\": \"100,149,237\",\n\t\t\t\t\t\"cornsilk\": \"255,248,220\",\n\t\t\t\t\t\"crimson\": \"220,20,60\",\n\t\t\t\t\t\"cyan\": \"0,255,255\",\n\t\t\t\t\t\"darkblue\": \"0,0,139\",\n\t\t\t\t\t\"darkcyan\": \"0,139,139\",\n\t\t\t\t\t\"darkgoldenrod\": \"184,134,11\",\n\t\t\t\t\t\"darkgray\": \"169,169,169\",\n\t\t\t\t\t\"darkgrey\": \"169,169,169\",\n\t\t\t\t\t\"darkgreen\": \"0,100,0\",\n\t\t\t\t\t\"darkkhaki\": \"189,183,107\",\n\t\t\t\t\t\"darkmagenta\": \"139,0,139\",\n\t\t\t\t\t\"darkolivegreen\": \"85,107,47\",\n\t\t\t\t\t\"darkorange\": \"255,140,0\",\n\t\t\t\t\t\"darkorchid\": \"153,50,204\",\n\t\t\t\t\t\"darkred\": \"139,0,0\",\n\t\t\t\t\t\"darksalmon\": \"233,150,122\",\n\t\t\t\t\t\"darkseagreen\": \"143,188,143\",\n\t\t\t\t\t\"darkslateblue\": \"72,61,139\",\n\t\t\t\t\t\"darkslategray\": \"47,79,79\",\n\t\t\t\t\t\"darkturquoise\": \"0,206,209\",\n\t\t\t\t\t\"darkviolet\": \"148,0,211\",\n\t\t\t\t\t\"deeppink\": \"255,20,147\",\n\t\t\t\t\t\"deepskyblue\": \"0,191,255\",\n\t\t\t\t\t\"dimgray\": \"105,105,105\",\n\t\t\t\t\t\"dimgrey\": \"105,105,105\",\n\t\t\t\t\t\"dodgerblue\": \"30,144,255\",\n\t\t\t\t\t\"firebrick\": \"178,34,34\",\n\t\t\t\t\t\"floralwhite\": \"255,250,240\",\n\t\t\t\t\t\"forestgreen\": \"34,139,34\",\n\t\t\t\t\t\"fuchsia\": \"255,0,255\",\n\t\t\t\t\t\"gainsboro\": \"220,220,220\",\n\t\t\t\t\t\"ghostwhite\": \"248,248,255\",\n\t\t\t\t\t\"gold\": \"255,215,0\",\n\t\t\t\t\t\"goldenrod\": \"218,165,32\",\n\t\t\t\t\t\"gray\": \"128,128,128\",\n\t\t\t\t\t\"grey\": \"128,128,128\",\n\t\t\t\t\t\"greenyellow\": \"173,255,47\",\n\t\t\t\t\t\"green\": \"0,128,0\",\n\t\t\t\t\t\"honeydew\": \"240,255,240\",\n\t\t\t\t\t\"hotpink\": \"255,105,180\",\n\t\t\t\t\t\"indianred\": \"205,92,92\",\n\t\t\t\t\t\"indigo\": \"75,0,130\",\n\t\t\t\t\t\"ivory\": \"255,255,240\",\n\t\t\t\t\t\"khaki\": \"240,230,140\",\n\t\t\t\t\t\"lavenderblush\": \"255,240,245\",\n\t\t\t\t\t\"lavender\": \"230,230,250\",\n\t\t\t\t\t\"lawngreen\": \"124,252,0\",\n\t\t\t\t\t\"lemonchiffon\": \"255,250,205\",\n\t\t\t\t\t\"lightblue\": \"173,216,230\",\n\t\t\t\t\t\"lightcoral\": \"240,128,128\",\n\t\t\t\t\t\"lightcyan\": \"224,255,255\",\n\t\t\t\t\t\"lightgoldenrodyellow\": \"250,250,210\",\n\t\t\t\t\t\"lightgray\": \"211,211,211\",\n\t\t\t\t\t\"lightgrey\": \"211,211,211\",\n\t\t\t\t\t\"lightgreen\": \"144,238,144\",\n\t\t\t\t\t\"lightpink\": \"255,182,193\",\n\t\t\t\t\t\"lightsalmon\": \"255,160,122\",\n\t\t\t\t\t\"lightseagreen\": \"32,178,170\",\n\t\t\t\t\t\"lightskyblue\": \"135,206,250\",\n\t\t\t\t\t\"lightslategray\": \"119,136,153\",\n\t\t\t\t\t\"lightsteelblue\": \"176,196,222\",\n\t\t\t\t\t\"lightyellow\": \"255,255,224\",\n\t\t\t\t\t\"limegreen\": \"50,205,50\",\n\t\t\t\t\t\"lime\": \"0,255,0\",\n\t\t\t\t\t\"linen\": \"250,240,230\",\n\t\t\t\t\t\"magenta\": \"255,0,255\",\n\t\t\t\t\t\"maroon\": \"128,0,0\",\n\t\t\t\t\t\"mediumaquamarine\": \"102,205,170\",\n\t\t\t\t\t\"mediumblue\": \"0,0,205\",\n\t\t\t\t\t\"mediumorchid\": \"186,85,211\",\n\t\t\t\t\t\"mediumpurple\": \"147,112,219\",\n\t\t\t\t\t\"mediumseagreen\": \"60,179,113\",\n\t\t\t\t\t\"mediumslateblue\": \"123,104,238\",\n\t\t\t\t\t\"mediumspringgreen\": \"0,250,154\",\n\t\t\t\t\t\"mediumturquoise\": \"72,209,204\",\n\t\t\t\t\t\"mediumvioletred\": \"199,21,133\",\n\t\t\t\t\t\"midnightblue\": \"25,25,112\",\n\t\t\t\t\t\"mintcream\": \"245,255,250\",\n\t\t\t\t\t\"mistyrose\": \"255,228,225\",\n\t\t\t\t\t\"moccasin\": \"255,228,181\",\n\t\t\t\t\t\"navajowhite\": \"255,222,173\",\n\t\t\t\t\t\"navy\": \"0,0,128\",\n\t\t\t\t\t\"oldlace\": \"253,245,230\",\n\t\t\t\t\t\"olivedrab\": \"107,142,35\",\n\t\t\t\t\t\"olive\": \"128,128,0\",\n\t\t\t\t\t\"orangered\": \"255,69,0\",\n\t\t\t\t\t\"orange\": \"255,165,0\",\n\t\t\t\t\t\"orchid\": \"218,112,214\",\n\t\t\t\t\t\"palegoldenrod\": \"238,232,170\",\n\t\t\t\t\t\"palegreen\": \"152,251,152\",\n\t\t\t\t\t\"paleturquoise\": \"175,238,238\",\n\t\t\t\t\t\"palevioletred\": \"219,112,147\",\n\t\t\t\t\t\"papayawhip\": \"255,239,213\",\n\t\t\t\t\t\"peachpuff\": \"255,218,185\",\n\t\t\t\t\t\"peru\": \"205,133,63\",\n\t\t\t\t\t\"pink\": \"255,192,203\",\n\t\t\t\t\t\"plum\": \"221,160,221\",\n\t\t\t\t\t\"powderblue\": \"176,224,230\",\n\t\t\t\t\t\"purple\": \"128,0,128\",\n\t\t\t\t\t\"red\": \"255,0,0\",\n\t\t\t\t\t\"rosybrown\": \"188,143,143\",\n\t\t\t\t\t\"royalblue\": \"65,105,225\",\n\t\t\t\t\t\"saddlebrown\": \"139,69,19\",\n\t\t\t\t\t\"salmon\": \"250,128,114\",\n\t\t\t\t\t\"sandybrown\": \"244,164,96\",\n\t\t\t\t\t\"seagreen\": \"46,139,87\",\n\t\t\t\t\t\"seashell\": \"255,245,238\",\n\t\t\t\t\t\"sienna\": \"160,82,45\",\n\t\t\t\t\t\"silver\": \"192,192,192\",\n\t\t\t\t\t\"skyblue\": \"135,206,235\",\n\t\t\t\t\t\"slateblue\": \"106,90,205\",\n\t\t\t\t\t\"slategray\": \"112,128,144\",\n\t\t\t\t\t\"snow\": \"255,250,250\",\n\t\t\t\t\t\"springgreen\": \"0,255,127\",\n\t\t\t\t\t\"steelblue\": \"70,130,180\",\n\t\t\t\t\t\"tan\": \"210,180,140\",\n\t\t\t\t\t\"teal\": \"0,128,128\",\n\t\t\t\t\t\"thistle\": \"216,191,216\",\n\t\t\t\t\t\"tomato\": \"255,99,71\",\n\t\t\t\t\t\"turquoise\": \"64,224,208\",\n\t\t\t\t\t\"violet\": \"238,130,238\",\n\t\t\t\t\t\"wheat\": \"245,222,179\",\n\t\t\t\t\t\"whitesmoke\": \"245,245,245\",\n\t\t\t\t\t\"white\": \"255,255,255\",\n\t\t\t\t\t\"yellowgreen\": \"154,205,50\",\n\t\t\t\t\t\"yellow\": \"255,255,0\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t/************\n\t\t\t Hooks\n\t\t\t ************/\n\n\t\t\t/* Hooks allow a subproperty (e.g. \"boxShadowBlur\") of a compound-value CSS property\n\t\t\t (e.g. \"boxShadow: X Y Blur Spread Color\") to be animated as if it were a discrete property. */\n\t\t\t/* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only\n\t\t\t tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */\n\t\t\tHooks: {\n\t\t\t\t/********************\n\t\t\t\t Registration\n\t\t\t\t ********************/\n\n\t\t\t\t/* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */\n\t\t\t\t/* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */\n\t\t\t\ttemplates: {\n\t\t\t\t\t\"textShadow\": [\"Color X Y Blur\", \"black 0px 0px 0px\"],\n\t\t\t\t\t\"boxShadow\": [\"Color X Y Blur Spread\", \"black 0px 0px 0px 0px\"],\n\t\t\t\t\t\"clip\": [\"Top Right Bottom Left\", \"0px 0px 0px 0px\"],\n\t\t\t\t\t\"backgroundPosition\": [\"X Y\", \"0% 0%\"],\n\t\t\t\t\t\"transformOrigin\": [\"X Y Z\", \"50% 50% 0px\"],\n\t\t\t\t\t\"perspectiveOrigin\": [\"X Y\", \"50% 50%\"]\n\t\t\t\t},\n\t\t\t\t/* A \"registered\" hook is one that has been converted from its template form into a live,\n\t\t\t\t tweenable property. It contains data to associate it with its root property. */\n\t\t\t\tregistered: {\n\t\t\t\t\t/* Note: A registered hook looks like this ==> textShadowBlur: [ \"textShadow\", 3 ],\n\t\t\t\t\t which consists of the subproperty's name, the associated root property's name,\n\t\t\t\t\t and the subproperty's position in the root's value. */\n\t\t\t\t},\n\t\t\t\t/* Convert the templates into individual hooks then append them to the registered object above. */\n\t\t\t\tregister: function() {\n\t\t\t\t\t/* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are\n\t\t\t\t\t currently set to \"transparent\" default to their respective template below when color-animated,\n\t\t\t\t\t and white is typically a closer match to transparent than black is. An exception is made for text (\"color\"),\n\t\t\t\t\t which is almost always set closer to black than white. */\n\t\t\t\t\tfor (var i = 0; i < CSS.Lists.colors.length; i++) {\n\t\t\t\t\t\tvar rgbComponents = (CSS.Lists.colors[i] === \"color\") ? \"0 0 0 1\" : \"255 255 255 1\";\n\t\t\t\t\t\tCSS.Hooks.templates[CSS.Lists.colors[i]] = [\"Red Green Blue Alpha\", rgbComponents];\n\t\t\t\t\t}\n\n\t\t\t\t\tvar rootProperty,\n\t\t\t\t\t\t\thookTemplate,\n\t\t\t\t\t\t\thookNames;\n\n\t\t\t\t\t/* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.\n\t\t\t\t\t Thus, we re-arrange the templates accordingly. */\n\t\t\t\t\tif (IE) {\n\t\t\t\t\t\tfor (rootProperty in CSS.Hooks.templates) {\n\t\t\t\t\t\t\tif (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thookTemplate = CSS.Hooks.templates[rootProperty];\n\t\t\t\t\t\t\thookNames = hookTemplate[0].split(\" \");\n\n\t\t\t\t\t\t\tvar defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);\n\n\t\t\t\t\t\t\tif (hookNames[0] === \"Color\") {\n\t\t\t\t\t\t\t\t/* Reposition both the hook's name and its default value to the end of their respective strings. */\n\t\t\t\t\t\t\t\thookNames.push(hookNames.shift());\n\t\t\t\t\t\t\t\tdefaultValues.push(defaultValues.shift());\n\n\t\t\t\t\t\t\t\t/* Replace the existing template for the hook's root property. */\n\t\t\t\t\t\t\t\tCSS.Hooks.templates[rootProperty] = [hookNames.join(\" \"), defaultValues.join(\" \")];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Hook registration. */\n\t\t\t\t\tfor (rootProperty in CSS.Hooks.templates) {\n\t\t\t\t\t\tif (!CSS.Hooks.templates.hasOwnProperty(rootProperty)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thookTemplate = CSS.Hooks.templates[rootProperty];\n\t\t\t\t\t\thookNames = hookTemplate[0].split(\" \");\n\n\t\t\t\t\t\tfor (var j in hookNames) {\n\t\t\t\t\t\t\tif (!hookNames.hasOwnProperty(j)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar fullHookName = rootProperty + hookNames[j],\n\t\t\t\t\t\t\t\t\thookPosition = j;\n\n\t\t\t\t\t\t\t/* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)\n\t\t\t\t\t\t\t and the hook's position in its template's default value string. */\n\t\t\t\t\t\t\tCSS.Hooks.registered[fullHookName] = [rootProperty, hookPosition];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/*****************************\n\t\t\t\t Injection and Extraction\n\t\t\t\t *****************************/\n\n\t\t\t\t/* Look up the root property associated with the hook (e.g. return \"textShadow\" for \"textShadowBlur\"). */\n\t\t\t\t/* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */\n\t\t\t\tgetRoot: function(property) {\n\t\t\t\t\tvar hookData = CSS.Hooks.registered[property];\n\n\t\t\t\t\tif (hookData) {\n\t\t\t\t\t\treturn hookData[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* If there was no hook match, return the property name untouched. */\n\t\t\t\t\t\treturn property;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgetUnit: function(str, start) {\n\t\t\t\t\tvar unit = (str.substr(start || 0, 5).match(/^[a-z%]+/) || [])[0] || \"\";\n\n\t\t\t\t\tif (unit && _inArray(CSS.Lists.units, unit)) {\n\t\t\t\t\t\treturn unit;\n\t\t\t\t\t}\n\t\t\t\t\treturn \"\";\n\t\t\t\t},\n\t\t\t\tfixColors: function(str) {\n\t\t\t\t\treturn str.replace(/(rgba?\\(\\s*)?(\\b[a-z]+\\b)/g, function($0, $1, $2) {\n\t\t\t\t\t\tif (CSS.Lists.colorNames.hasOwnProperty($2)) {\n\t\t\t\t\t\t\treturn ($1 ? $1 : \"rgba(\") + CSS.Lists.colorNames[$2] + ($1 ? \"\" : \",1)\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn $1 + $2;\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t/* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that\n\t\t\t\t the targeted hook can be injected or extracted at its standard position. */\n\t\t\t\tcleanRootPropertyValue: function(rootProperty, rootPropertyValue) {\n\t\t\t\t\t/* If the rootPropertyValue is wrapped with \"rgb()\", \"clip()\", etc., remove the wrapping to normalize the value before manipulation. */\n\t\t\t\t\tif (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {\n\t\t\t\t\t\trootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),\n\t\t\t\t\t default to the root's default value as defined in CSS.Hooks.templates. */\n\t\t\t\t\t/* Note: CSS null-values include \"none\", \"auto\", and \"transparent\". They must be converted into their\n\t\t\t\t\t zero-values (e.g. textShadow: \"none\" ==> textShadow: \"0px 0px 0px black\") for hook manipulation to proceed. */\n\t\t\t\t\tif (CSS.Values.isCSSNullValue(rootPropertyValue)) {\n\t\t\t\t\t\trootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn rootPropertyValue;\n\t\t\t\t},\n\t\t\t\t/* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */\n\t\t\t\textractValue: function(fullHookName, rootPropertyValue) {\n\t\t\t\t\tvar hookData = CSS.Hooks.registered[fullHookName];\n\n\t\t\t\t\tif (hookData) {\n\t\t\t\t\t\tvar hookRoot = hookData[0],\n\t\t\t\t\t\t\t\thookPosition = hookData[1];\n\n\t\t\t\t\t\trootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\n\t\t\t\t\t\t/* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */\n\t\t\t\t\t\treturn rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n\t\t\t\t\t\treturn rootPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* Inject the hook's value into its root property's value. This is used to piece back together the root property\n\t\t\t\t once Velocity has updated one of its individually hooked values through tweening. */\n\t\t\t\tinjectValue: function(fullHookName, hookValue, rootPropertyValue) {\n\t\t\t\t\tvar hookData = CSS.Hooks.registered[fullHookName];\n\n\t\t\t\t\tif (hookData) {\n\t\t\t\t\t\tvar hookRoot = hookData[0],\n\t\t\t\t\t\t\t\thookPosition = hookData[1],\n\t\t\t\t\t\t\t\trootPropertyValueParts,\n\t\t\t\t\t\t\t\trootPropertyValueUpdated;\n\n\t\t\t\t\t\trootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);\n\n\t\t\t\t\t\t/* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,\n\t\t\t\t\t\t then reconstruct the rootPropertyValue string. */\n\t\t\t\t\t\trootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);\n\t\t\t\t\t\trootPropertyValueParts[hookPosition] = hookValue;\n\t\t\t\t\t\trootPropertyValueUpdated = rootPropertyValueParts.join(\" \");\n\n\t\t\t\t\t\treturn rootPropertyValueUpdated;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */\n\t\t\t\t\t\treturn rootPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/*******************\n\t\t\t Normalizations\n\t\t\t *******************/\n\n\t\t\t/* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)\n\t\t\t and reformatting special properties (e.g. clip, rgba) to look like standard ones. */\n\t\t\tNormalizations: {\n\t\t\t\t/* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),\n\t\t\t\t the targeted element (which may need to be queried), and the targeted property value. */\n\t\t\t\tregistered: {\n\t\t\t\t\tclip: function(type, element, propertyValue) {\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\treturn \"clip\";\n\t\t\t\t\t\t\t\t/* Clip needs to be unwrapped and stripped of its commas during extraction. */\n\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\tvar extracted;\n\n\t\t\t\t\t\t\t\t/* If Velocity also extracted this value, skip extraction. */\n\t\t\t\t\t\t\t\tif (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\textracted = propertyValue;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/* Remove the \"rect()\" wrapper. */\n\t\t\t\t\t\t\t\t\textracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);\n\n\t\t\t\t\t\t\t\t\t/* Strip off commas. */\n\t\t\t\t\t\t\t\t\textracted = extracted ? extracted[1].replace(/,(\\s+)?/g, \" \") : propertyValue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn extracted;\n\t\t\t\t\t\t\t\t/* Clip needs to be re-wrapped during injection. */\n\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\treturn \"rect(\" + propertyValue + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tblur: function(type, element, propertyValue) {\n\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\treturn Velocity.State.isFirefox ? \"filter\" : \"-webkit-filter\";\n\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\tvar extracted = parseFloat(propertyValue);\n\n\t\t\t\t\t\t\t\t/* If extracted is NaN, meaning the value isn't already extracted. */\n\t\t\t\t\t\t\t\tif (!(extracted || extracted === 0)) {\n\t\t\t\t\t\t\t\t\tvar blurComponent = propertyValue.toString().match(/blur\\(([0-9]+[A-z]+)\\)/i);\n\n\t\t\t\t\t\t\t\t\t/* If the filter string had a blur component, return just the blur value and unit type. */\n\t\t\t\t\t\t\t\t\tif (blurComponent) {\n\t\t\t\t\t\t\t\t\t\textracted = blurComponent[1];\n\t\t\t\t\t\t\t\t\t\t/* If the component doesn't exist, default blur to 0. */\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\textracted = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn extracted;\n\t\t\t\t\t\t\t\t/* Blur needs to be re-wrapped during injection. */\n\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t/* For the blur effect to be fully de-applied, it needs to be set to \"none\" instead of 0. */\n\t\t\t\t\t\t\t\tif (!parseFloat(propertyValue)) {\n\t\t\t\t\t\t\t\t\treturn \"none\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn \"blur(\" + propertyValue + \")\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t/* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */\n\t\t\t\t\topacity: function(type, element, propertyValue) {\n\t\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\treturn \"filter\";\n\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\t/* <=IE8 return a \"filter\" value of \"alpha(opacity=\\d{1,3})\".\n\t\t\t\t\t\t\t\t\t Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */\n\t\t\t\t\t\t\t\t\tvar extracted = propertyValue.toString().match(/alpha\\(opacity=(.*)\\)/i);\n\n\t\t\t\t\t\t\t\t\tif (extracted) {\n\t\t\t\t\t\t\t\t\t\t/* Convert to decimal value. */\n\t\t\t\t\t\t\t\t\t\tpropertyValue = extracted[1] / 100;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t/* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */\n\t\t\t\t\t\t\t\t\t\tpropertyValue = 1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\t/* Opacified elements are required to have their zoom property set to a non-zero value. */\n\t\t\t\t\t\t\t\t\telement.style.zoom = 1;\n\n\t\t\t\t\t\t\t\t\t/* Setting the filter property on elements with certain font property combinations can result in a\n\t\t\t\t\t\t\t\t\t highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the\n\t\t\t\t\t\t\t\t\t value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */\n\t\t\t\t\t\t\t\t\tif (parseFloat(propertyValue) >= 1) {\n\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t/* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */\n\t\t\t\t\t\t\t\t\t\treturn \"alpha(opacity=\" + parseInt(parseFloat(propertyValue) * 100, 10) + \")\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* With all other browsers, normalization is not required; return the same values that were passed in. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\treturn \"opacity\";\n\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/*****************************\n\t\t\t\t Batched Registrations\n\t\t\t\t *****************************/\n\n\t\t\t\t/* Note: Batched normalizations extend the CSS.Normalizations.registered object. */\n\t\t\t\tregister: function() {\n\n\t\t\t\t\t/*****************\n\t\t\t\t\t Transforms\n\t\t\t\t\t *****************/\n\n\t\t\t\t\t/* Transforms are the subproperties contained by the CSS \"transform\" property. Transforms must undergo normalization\n\t\t\t\t\t so that they can be referenced in a properties map by their individual names. */\n\t\t\t\t\t/* Note: When transforms are \"set\", they are actually assigned to a per-element transformCache. When all transform\n\t\t\t\t\t setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.\n\t\t\t\t\t Transform setting is batched in this way to improve performance: the transform style only needs to be updated\n\t\t\t\t\t once when multiple transform subproperties are being animated simultaneously. */\n\t\t\t\t\t/* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported\n\t\t\t\t\t transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values\n\t\t\t\t\t from being normalized for these browsers so that tweening skips these properties altogether\n\t\t\t\t\t (since it will ignore them as being unsupported by the browser.) */\n\t\t\t\t\tif ((!IE || IE > 9) && !Velocity.State.isGingerbread) {\n\t\t\t\t\t\t/* Note: Since the standalone CSS \"perspective\" property and the CSS transform \"perspective\" subproperty\n\t\t\t\t\t\t share the same name, the latter is given a unique token within Velocity: \"transformPerspective\". */\n\t\t\t\t\t\tCSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < CSS.Lists.transformsBase.length; i++) {\n\t\t\t\t\t\t/* Wrap the dynamically generated normalization function in a new scope so that transformName's value is\n\t\t\t\t\t\t paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */\n\t\t\t\t\t\t(function() {\n\t\t\t\t\t\t\tvar transformName = CSS.Lists.transformsBase[i];\n\n\t\t\t\t\t\t\tCSS.Normalizations.registered[transformName] = function(type, element, propertyValue) {\n\t\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\t\t/* The normalized property name is the parent \"transform\" property -- the property that is actually set in CSS. */\n\t\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\t\treturn \"transform\";\n\t\t\t\t\t\t\t\t\t\t/* Transform values are cached onto a per-element transformCache object. */\n\t\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\t\t/* If this transform has yet to be assigned a value, return its null value. */\n\t\t\t\t\t\t\t\t\t\tif (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t/* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */\n\t\t\t\t\t\t\t\t\t\t\treturn /^scale/i.test(transformName) ? 1 : 0;\n\t\t\t\t\t\t\t\t\t\t\t/* When transform values are set, they are wrapped in parentheses as per the CSS spec.\n\t\t\t\t\t\t\t\t\t\t\t Thus, when extracting their values (for tween calculations), we strip off the parentheses. */\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn Data(element).transformCache[transformName].replace(/[()]/g, \"\");\n\t\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\t\tvar invalid = false;\n\n\t\t\t\t\t\t\t\t\t\t/* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.\n\t\t\t\t\t\t\t\t\t\t Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */\n\t\t\t\t\t\t\t\t\t\t/* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */\n\t\t\t\t\t\t\t\t\t\tswitch (transformName.substr(0, transformName.length - 1)) {\n\t\t\t\t\t\t\t\t\t\t\t/* Whitelist unit types for each transform. */\n\t\t\t\t\t\t\t\t\t\t\tcase \"translate\":\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(%|px|em|rem|vw|vh|\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t/* Since an axis-free \"scale\" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */\n\t\t\t\t\t\t\t\t\t\t\tcase \"scal\":\n\t\t\t\t\t\t\t\t\t\t\tcase \"scale\":\n\t\t\t\t\t\t\t\t\t\t\t\t/* Chrome on Android has a bug in which scaled elements blur if their initial scale\n\t\t\t\t\t\t\t\t\t\t\t\t value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property\n\t\t\t\t\t\t\t\t\t\t\t\t and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */\n\t\t\t\t\t\t\t\t\t\t\t\tif (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tpropertyValue = 1;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"skew\":\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(deg|\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase \"rotate\":\n\t\t\t\t\t\t\t\t\t\t\t\tinvalid = !/(deg|\\d)$/i.test(propertyValue);\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (!invalid) {\n\t\t\t\t\t\t\t\t\t\t\t/* As per the CSS spec, wrap the value in parentheses. */\n\t\t\t\t\t\t\t\t\t\t\tData(element).transformCache[transformName] = \"(\" + propertyValue + \")\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */\n\t\t\t\t\t\t\t\t\t\treturn Data(element).transformCache[transformName];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\n\t\t\t\t\t/*************\n\t\t\t\t\t Colors\n\t\t\t\t\t *************/\n\n\t\t\t\t\t/* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.\n\t\t\t\t\t Accordingly, color values must be normalized (e.g. \"#ff0000\", \"red\", and \"rgb(255, 0, 0)\" ==> \"255 0 0 1\") so that their components can be injected/extracted by CSS.Hooks logic. */\n\t\t\t\t\tfor (var j = 0; j < CSS.Lists.colors.length; j++) {\n\t\t\t\t\t\t/* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.\n\t\t\t\t\t\t (Otherwise, all functions would take the final for loop's colorName.) */\n\t\t\t\t\t\t(function() {\n\t\t\t\t\t\t\tvar colorName = CSS.Lists.colors[j];\n\n\t\t\t\t\t\t\t/* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */\n\t\t\t\t\t\t\tCSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {\n\t\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\t\treturn colorName;\n\t\t\t\t\t\t\t\t\t\t/* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */\n\t\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\t\tvar extracted;\n\n\t\t\t\t\t\t\t\t\t\t/* If the color is already in its hookable form (e.g. \"255 255 255 1\") due to having been previously extracted, skip extraction. */\n\t\t\t\t\t\t\t\t\t\tif (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\textracted = propertyValue;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar converted,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorNames = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblack: \"rgb(0, 0, 0)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tblue: \"rgb(0, 0, 255)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgray: \"rgb(128, 128, 128)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgreen: \"rgb(0, 128, 0)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tred: \"rgb(255, 0, 0)\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twhite: \"rgb(255, 255, 255)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\t/* Convert color names to rgb. */\n\t\t\t\t\t\t\t\t\t\t\tif (/^[A-z]+$/i.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (colorNames[propertyValue] !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconverted = colorNames[propertyValue];\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* If an unmatched color name is provided, default to black. */\n\t\t\t\t\t\t\t\t\t\t\t\t\tconverted = colorNames.black;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t/* Convert hex values to rgb. */\n\t\t\t\t\t\t\t\t\t\t\t} else if (CSS.RegEx.isHex.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\t\tconverted = \"rgb(\" + CSS.Values.hexToRgb(propertyValue).join(\" \") + \")\";\n\t\t\t\t\t\t\t\t\t\t\t\t/* If the provided color doesn't match any of the accepted color formats, default to black. */\n\t\t\t\t\t\t\t\t\t\t\t} else if (!(/^rgba?\\(/i.test(propertyValue))) {\n\t\t\t\t\t\t\t\t\t\t\t\tconverted = colorNames.black;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t/* Remove the surrounding \"rgb/rgba()\" string then replace commas with spaces and strip\n\t\t\t\t\t\t\t\t\t\t\t repeated spaces (in case the value included spaces to begin with). */\n\t\t\t\t\t\t\t\t\t\t\textracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\\s+)?/g, \" \");\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n\t\t\t\t\t\t\t\t\t\tif ((!IE || IE > 8) && extracted.split(\" \").length === 3) {\n\t\t\t\t\t\t\t\t\t\t\textracted += \" 1\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn extracted;\n\t\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\t\t/* If we have a pattern then it might already have the right values */\n\t\t\t\t\t\t\t\t\t\tif (/^rgb/.test(propertyValue)) {\n\t\t\t\t\t\t\t\t\t\t\treturn propertyValue;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* If this is IE<=8 and an alpha component exists, strip it off. */\n\t\t\t\t\t\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\t\t\t\t\t\tif (propertyValue.split(\" \").length === 4) {\n\t\t\t\t\t\t\t\t\t\t\t\tpropertyValue = propertyValue.split(/\\s+/).slice(0, 3).join(\" \");\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */\n\t\t\t\t\t\t\t\t\t\t} else if (propertyValue.split(\" \").length === 3) {\n\t\t\t\t\t\t\t\t\t\t\tpropertyValue += \" 1\";\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/* Re-insert the browser-appropriate wrapper(\"rgb/rgba()\"), insert commas, and strip off decimal units\n\t\t\t\t\t\t\t\t\t\t on all values but the fourth (R, G, and B only accept whole numbers). */\n\t\t\t\t\t\t\t\t\t\treturn (IE <= 8 ? \"rgb\" : \"rgba\") + \"(\" + propertyValue.replace(/\\s+/g, \",\").replace(/\\.(\\d)+(?=,)/g, \"\") + \")\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\n\t\t\t\t\t/**************\n\t\t\t\t\t Dimensions\n\t\t\t\t\t **************/\n\t\t\t\t\tfunction augmentDimension(name, element, wantInner) {\n\t\t\t\t\t\tvar isBorderBox = CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() === \"border-box\";\n\n\t\t\t\t\t\tif (isBorderBox === (wantInner || false)) {\n\t\t\t\t\t\t\t/* in box-sizing mode, the CSS width / height accessors already give the outerWidth / outerHeight. */\n\t\t\t\t\t\t\tvar i,\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\taugment = 0,\n\t\t\t\t\t\t\t\t\tsides = name === \"width\" ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"],\n\t\t\t\t\t\t\t\t\tfields = [\"padding\" + sides[0], \"padding\" + sides[1], \"border\" + sides[0] + \"Width\", \"border\" + sides[1] + \"Width\"];\n\n\t\t\t\t\t\t\tfor (i = 0; i < fields.length; i++) {\n\t\t\t\t\t\t\t\tvalue = parseFloat(CSS.getPropertyValue(element, fields[i]));\n\t\t\t\t\t\t\t\tif (!isNaN(value)) {\n\t\t\t\t\t\t\t\t\taugment += value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn wantInner ? -augment : augment;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\tfunction getDimension(name, wantInner) {\n\t\t\t\t\t\treturn function(type, element, propertyValue) {\n\t\t\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\t\t\t\treturn name;\n\t\t\t\t\t\t\t\tcase \"extract\":\n\t\t\t\t\t\t\t\t\treturn parseFloat(propertyValue) + augmentDimension(name, element, wantInner);\n\t\t\t\t\t\t\t\tcase \"inject\":\n\t\t\t\t\t\t\t\t\treturn (parseFloat(propertyValue) - augmentDimension(name, element, wantInner)) + \"px\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tCSS.Normalizations.registered.innerWidth = getDimension(\"width\", true);\n\t\t\t\t\tCSS.Normalizations.registered.innerHeight = getDimension(\"height\", true);\n\t\t\t\t\tCSS.Normalizations.registered.outerWidth = getDimension(\"width\");\n\t\t\t\t\tCSS.Normalizations.registered.outerHeight = getDimension(\"height\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t/************************\n\t\t\t CSS Property Names\n\t\t\t ************************/\n\n\t\t\tNames: {\n\t\t\t\t/* Camelcase a property name into its JavaScript notation (e.g. \"background-color\" ==> \"backgroundColor\").\n\t\t\t\t Camelcasing is used to normalize property names between and across calls. */\n\t\t\t\tcamelCase: function(property) {\n\t\t\t\t\treturn property.replace(/-(\\w)/g, function(match, subMatch) {\n\t\t\t\t\t\treturn subMatch.toUpperCase();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t/* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */\n\t\t\t\tSVGAttribute: function(property) {\n\t\t\t\t\tvar SVGAttributes = \"width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2\";\n\n\t\t\t\t\t/* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */\n\t\t\t\t\tif (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {\n\t\t\t\t\t\tSVGAttributes += \"|transform\";\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new RegExp(\"^(\" + SVGAttributes + \")$\", \"i\").test(property);\n\t\t\t\t},\n\t\t\t\t/* Determine whether a property should be set with a vendor prefix. */\n\t\t\t\t/* If a prefixed version of the property exists, return it. Otherwise, return the original property name.\n\t\t\t\t If the property is not at all supported by the browser, return a false flag. */\n\t\t\t\tprefixCheck: function(property) {\n\t\t\t\t\t/* If this property has already been checked, return the cached value. */\n\t\t\t\t\tif (Velocity.State.prefixMatches[property]) {\n\t\t\t\t\t\treturn [Velocity.State.prefixMatches[property], true];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar vendors = [\"\", \"Webkit\", \"Moz\", \"ms\", \"O\"];\n\n\t\t\t\t\t\tfor (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {\n\t\t\t\t\t\t\tvar propertyPrefixed;\n\n\t\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\t\tpropertyPrefixed = property;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */\n\t\t\t\t\t\t\t\tpropertyPrefixed = vendors[i] + property.replace(/^\\w/, function(match) {\n\t\t\t\t\t\t\t\t\treturn match.toUpperCase();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Check if the browser supports this property as prefixed. */\n\t\t\t\t\t\t\tif (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {\n\t\t\t\t\t\t\t\t/* Cache the match. */\n\t\t\t\t\t\t\t\tVelocity.State.prefixMatches[property] = propertyPrefixed;\n\n\t\t\t\t\t\t\t\treturn [propertyPrefixed, true];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */\n\t\t\t\t\t\treturn [property, false];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/************************\n\t\t\t CSS Property Values\n\t\t\t ************************/\n\n\t\t\tValues: {\n\t\t\t\t/* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */\n\t\t\t\thexToRgb: function(hex) {\n\t\t\t\t\tvar shortformRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n\t\t\t\t\t\t\tlongformRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n\t\t\t\t\t\t\trgbParts;\n\n\t\t\t\t\thex = hex.replace(shortformRegex, function(m, r, g, b) {\n\t\t\t\t\t\treturn r + r + g + g + b + b;\n\t\t\t\t\t});\n\n\t\t\t\t\trgbParts = longformRegex.exec(hex);\n\n\t\t\t\t\treturn rgbParts ? [parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16)] : [0, 0, 0];\n\t\t\t\t},\n\t\t\t\tisCSSNullValue: function(value) {\n\t\t\t\t\t/* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.\n\t\t\t\t\t Thus, we check for both falsiness and these special strings. */\n\t\t\t\t\t/* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook\n\t\t\t\t\t templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */\n\t\t\t\t\t/* Note: Chrome returns \"rgba(0, 0, 0, 0)\" for an undefined color whereas IE returns \"transparent\". */\n\t\t\t\t\treturn (!value || /^(none|auto|transparent|(rgba\\(0, ?0, ?0, ?0\\)))$/i.test(value));\n\t\t\t\t},\n\t\t\t\t/* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */\n\t\t\t\tgetUnitType: function(property) {\n\t\t\t\t\tif (/^(rotate|skew)/i.test(property)) {\n\t\t\t\t\t\treturn \"deg\";\n\t\t\t\t\t} else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {\n\t\t\t\t\t\t/* The above properties are unitless. */\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Default to px for all other properties. */\n\t\t\t\t\t\treturn \"px\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* HTML elements default to an associated display type when they're not set to display:none. */\n\t\t\t\t/* Note: This function is used for correctly setting the non-\"none\" display value in certain Velocity redirects, such as fadeIn/Out. */\n\t\t\t\tgetDisplayType: function(element) {\n\t\t\t\t\tvar tagName = element && element.tagName.toString().toLowerCase();\n\n\t\t\t\t\tif (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"inline\";\n\t\t\t\t\t} else if (/^(li)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"list-item\";\n\t\t\t\t\t} else if (/^(tr)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"table-row\";\n\t\t\t\t\t} else if (/^(table)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"table\";\n\t\t\t\t\t} else if (/^(tbody)$/i.test(tagName)) {\n\t\t\t\t\t\treturn \"table-row-group\";\n\t\t\t\t\t\t/* Default to \"block\" when no match is found. */\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn \"block\";\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/* The class add/remove functions are used to temporarily apply a \"velocity-animating\" class to elements while they're animating. */\n\t\t\t\taddClass: function(element, className) {\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tif (element.classList) {\n\t\t\t\t\t\t\telement.classList.add(className);\n\t\t\t\t\t\t} else if (Type.isString(element.className)) {\n\t\t\t\t\t\t\t// Element.className is around 15% faster then set/getAttribute\n\t\t\t\t\t\t\telement.className += (element.className.length ? \" \" : \"\") + className;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Work around for IE strict mode animating SVG - and anything else that doesn't behave correctly - the same way jQuery does it\n\t\t\t\t\t\t\tvar currentClass = element.getAttribute(IE <= 7 ? \"className\" : \"class\") || \"\";\n\n\t\t\t\t\t\t\telement.setAttribute(\"class\", currentClass + (currentClass ? \" \" : \"\") + className);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tremoveClass: function(element, className) {\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tif (element.classList) {\n\t\t\t\t\t\t\telement.classList.remove(className);\n\t\t\t\t\t\t} else if (Type.isString(element.className)) {\n\t\t\t\t\t\t\t// Element.className is around 15% faster then set/getAttribute\n\t\t\t\t\t\t\t// TODO: Need some jsperf tests on performance - can we get rid of the regex and maybe use split / array manipulation?\n\t\t\t\t\t\t\telement.className = element.className.toString().replace(new RegExp(\"(^|\\\\s)\" + className.split(\" \").join(\"|\") + \"(\\\\s|$)\", \"gi\"), \" \");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Work around for IE strict mode animating SVG - and anything else that doesn't behave correctly - the same way jQuery does it\n\t\t\t\t\t\t\tvar currentClass = element.getAttribute(IE <= 7 ? \"className\" : \"class\") || \"\";\n\n\t\t\t\t\t\t\telement.setAttribute(\"class\", currentClass.replace(new RegExp(\"(^|\\s)\" + className.split(\" \").join(\"|\") + \"(\\s|$)\", \"gi\"), \" \"));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/****************************\n\t\t\t Style Getting & Setting\n\t\t\t ****************************/\n\n\t\t\t/* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n\t\t\tgetPropertyValue: function(element, property, rootPropertyValue, forceStyleLookup) {\n\t\t\t\t/* Get an element's computed property value. */\n\t\t\t\t/* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's\n\t\t\t\t style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's\n\t\t\t\t *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */\n\t\t\t\tfunction computePropertyValue(element, property) {\n\t\t\t\t\t/* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an\n\t\t\t\t\t element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate\n\t\t\t\t\t offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.\n\t\t\t\t\t We subtract border and padding to get the sum of interior + scrollbar. */\n\t\t\t\t\tvar computedValue = 0;\n\n\t\t\t\t\t/* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array\n\t\t\t\t\t of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the\n\t\t\t\t\t codebase for a dying browser. The performance repercussions of using jQuery here are minimal since\n\t\t\t\t\t Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */\n\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\tcomputedValue = $.css(element, property); /* GET */\n\t\t\t\t\t\t/* All other browsers support getComputedStyle. The returned live object reference is cached onto its\n\t\t\t\t\t\t associated element so that it does not need to be refetched upon every GET. */\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Browsers do not return height and width values for elements that are set to display:\"none\". Thus, we temporarily\n\t\t\t\t\t\t toggle display to the element type's default value. */\n\t\t\t\t\t\tvar toggleDisplay = false;\n\n\t\t\t\t\t\tif (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, \"display\") === 0) {\n\t\t\t\t\t\t\ttoggleDisplay = true;\n\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", CSS.Values.getDisplayType(element));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar revertDisplay = function() {\n\t\t\t\t\t\t\tif (toggleDisplay) {\n\t\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", \"none\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!forceStyleLookup) {\n\t\t\t\t\t\t\tif (property === \"height\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n\t\t\t\t\t\t\t\tvar contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, \"borderTopWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderBottomWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingTop\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingBottom\")) || 0);\n\t\t\t\t\t\t\t\trevertDisplay();\n\n\t\t\t\t\t\t\t\treturn contentBoxHeight;\n\t\t\t\t\t\t\t} else if (property === \"width\" && CSS.getPropertyValue(element, \"boxSizing\").toString().toLowerCase() !== \"border-box\") {\n\t\t\t\t\t\t\t\tvar contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, \"borderLeftWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"borderRightWidth\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingLeft\")) || 0) - (parseFloat(CSS.getPropertyValue(element, \"paddingRight\")) || 0);\n\t\t\t\t\t\t\t\trevertDisplay();\n\n\t\t\t\t\t\t\t\treturn contentBoxWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar computedStyle;\n\n\t\t\t\t\t\t/* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf\n\t\t\t\t\t\t of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */\n\t\t\t\t\t\tif (Data(element) === undefined) {\n\t\t\t\t\t\t\tcomputedStyle = window.getComputedStyle(element, null); /* GET */\n\t\t\t\t\t\t\t/* If the computedStyle object has yet to be cached, do so now. */\n\t\t\t\t\t\t} else if (!Data(element).computedStyle) {\n\t\t\t\t\t\t\tcomputedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */\n\t\t\t\t\t\t\t/* If computedStyle is cached, use it. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomputedStyle = Data(element).computedStyle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.\n\t\t\t\t\t\t Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.\n\t\t\t\t\t\t So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */\n\t\t\t\t\t\tif (property === \"borderColor\") {\n\t\t\t\t\t\t\tproperty = \"borderTopColor\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* IE9 has a bug in which the \"filter\" property must be accessed from computedStyle using the getPropertyValue method\n\t\t\t\t\t\t instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */\n\t\t\t\t\t\tif (IE === 9 && property === \"filter\") {\n\t\t\t\t\t\t\tcomputedValue = computedStyle.getPropertyValue(property); /* GET */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcomputedValue = computedStyle[property];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Fall back to the property's style value (if defined) when computedValue returns nothing,\n\t\t\t\t\t\t which can happen when the element hasn't been painted. */\n\t\t\t\t\t\tif (computedValue === \"\" || computedValue === null) {\n\t\t\t\t\t\t\tcomputedValue = element.style[property];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trevertDisplay();\n\t\t\t\t\t}\n\n\t\t\t\t\t/* For top, right, bottom, and left (TRBL) values that are set to \"auto\" on elements of \"fixed\" or \"absolute\" position,\n\t\t\t\t\t defer to jQuery for converting \"auto\" to a numeric value. (For elements with a \"static\" or \"relative\" position, \"auto\" has the same\n\t\t\t\t\t effect as being set to 0, so no conversion is necessary.) */\n\t\t\t\t\t/* An example of why numeric conversion is necessary: When an element with \"position:absolute\" has an untouched \"left\"\n\t\t\t\t\t property, which reverts to \"auto\", left's value is 0 relative to its parent element, but is often non-zero relative\n\t\t\t\t\t to its *containing* (not parent) element, which is the nearest \"position:relative\" ancestor or the viewport (and always the viewport in the case of \"position:fixed\"). */\n\t\t\t\t\tif (computedValue === \"auto\" && /^(top|right|bottom|left)$/i.test(property)) {\n\t\t\t\t\t\tvar position = computePropertyValue(element, \"position\"); /* GET */\n\n\t\t\t\t\t\t/* For absolute positioning, jQuery's $.position() only returns values for top and left;\n\t\t\t\t\t\t right and bottom will have their \"auto\" value reverted to 0. */\n\t\t\t\t\t\t/* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().\n\t\t\t\t\t\t Not a big deal since we're currently in a GET batch anyway. */\n\t\t\t\t\t\tif (position === \"fixed\" || (position === \"absolute\" && /top|left/i.test(property))) {\n\t\t\t\t\t\t\t/* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */\n\t\t\t\t\t\t\tcomputedValue = $(element).position()[property] + \"px\"; /* GET */\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn computedValue;\n\t\t\t\t}\n\n\t\t\t\tvar propertyValue;\n\n\t\t\t\t/* If this is a hooked property (e.g. \"clipLeft\" instead of the root property of \"clip\"),\n\t\t\t\t extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */\n\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\tvar hook = property,\n\t\t\t\t\t\t\thookRoot = CSS.Hooks.getRoot(hook);\n\n\t\t\t\t\t/* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),\n\t\t\t\t\t query the DOM for the root property's value. */\n\t\t\t\t\tif (rootPropertyValue === undefined) {\n\t\t\t\t\t\t/* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */\n\t\t\t\t\t\trootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If this root has a normalization registered, peform the associated normalization extraction. */\n\t\t\t\t\tif (CSS.Normalizations.registered[hookRoot]) {\n\t\t\t\t\t\trootPropertyValue = CSS.Normalizations.registered[hookRoot](\"extract\", element, rootPropertyValue);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Extract the hook's value. */\n\t\t\t\t\tpropertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);\n\n\t\t\t\t\t/* If this is a normalized property (e.g. \"opacity\" becomes \"filter\" in <=IE8) or \"translateX\" becomes \"transform\"),\n\t\t\t\t\t normalize the property's name and value, and handle the special case of transforms. */\n\t\t\t\t\t/* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly\n\t\t\t\t\t numerical and therefore do not require normalization extraction. */\n\t\t\t\t} else if (CSS.Normalizations.registered[property]) {\n\t\t\t\t\tvar normalizedPropertyName,\n\t\t\t\t\t\t\tnormalizedPropertyValue;\n\n\t\t\t\t\tnormalizedPropertyName = CSS.Normalizations.registered[property](\"name\", element);\n\n\t\t\t\t\t/* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.\n\t\t\t\t\t At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.\n\t\t\t\t\t This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;\n\t\t\t\t\t thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */\n\t\t\t\t\tif (normalizedPropertyName !== \"transform\") {\n\t\t\t\t\t\tnormalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */\n\n\t\t\t\t\t\t/* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */\n\t\t\t\t\t\tif (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {\n\t\t\t\t\t\t\tnormalizedPropertyValue = CSS.Hooks.templates[property][1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyValue = CSS.Normalizations.registered[property](\"extract\", element, normalizedPropertyValue);\n\t\t\t\t}\n\n\t\t\t\t/* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */\n\t\t\t\tif (!/^[\\d-]/.test(propertyValue)) {\n\t\t\t\t\t/* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via\n\t\t\t\t\t their HTML attribute values instead of their CSS style values. */\n\t\t\t\t\tvar data = Data(element);\n\n\t\t\t\t\tif (data && data.isSVG && CSS.Names.SVGAttribute(property)) {\n\t\t\t\t\t\t/* Since the height/width attribute values must be set manually, they don't reflect computed values.\n\t\t\t\t\t\t Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */\n\t\t\t\t\t\tif (/^(height|width)$/i.test(property)) {\n\t\t\t\t\t\t\t/* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tpropertyValue = element.getBBox()[property];\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tpropertyValue = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* Otherwise, access the attribute value directly. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpropertyValue = element.getAttribute(property);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),\n\t\t\t\t convert CSS null-values to an integer of value 0. */\n\t\t\t\tif (CSS.Values.isCSSNullValue(propertyValue)) {\n\t\t\t\t\tpropertyValue = 0;\n\t\t\t\t}\n\n\t\t\t\tif (Velocity.debug >= 2) {\n\t\t\t\t\tconsole.log(\"Get \" + property + \": \" + propertyValue);\n\t\t\t\t}\n\n\t\t\t\treturn propertyValue;\n\t\t\t},\n\t\t\t/* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */\n\t\t\tsetPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {\n\t\t\t\tvar propertyName = property;\n\n\t\t\t\t/* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */\n\t\t\t\tif (property === \"scroll\") {\n\t\t\t\t\t/* If a container option is present, scroll the container instead of the browser window. */\n\t\t\t\t\tif (scrollData.container) {\n\t\t\t\t\t\tscrollData.container[\"scroll\" + scrollData.direction] = propertyValue;\n\t\t\t\t\t\t/* Otherwise, Velocity defaults to scrolling the browser window. */\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (scrollData.direction === \"Left\") {\n\t\t\t\t\t\t\twindow.scrollTo(propertyValue, scrollData.alternateValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twindow.scrollTo(scrollData.alternateValue, propertyValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().\n\t\t\t\t\t Thus, for now, we merely cache transforms being SET. */\n\t\t\t\t\tif (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property](\"name\", element) === \"transform\") {\n\t\t\t\t\t\t/* Perform a normalization injection. */\n\t\t\t\t\t\t/* Note: The normalization logic handles the transformCache updating. */\n\t\t\t\t\t\tCSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\n\t\t\t\t\t\tpropertyName = \"transform\";\n\t\t\t\t\t\tpropertyValue = Data(element).transformCache[property];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/* Inject hooks. */\n\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\tvar hookName = property,\n\t\t\t\t\t\t\t\t\thookRoot = CSS.Hooks.getRoot(property);\n\n\t\t\t\t\t\t\t/* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */\n\t\t\t\t\t\t\trootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */\n\n\t\t\t\t\t\t\tpropertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);\n\t\t\t\t\t\t\tproperty = hookRoot;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Normalize names and values. */\n\t\t\t\t\t\tif (CSS.Normalizations.registered[property]) {\n\t\t\t\t\t\t\tpropertyValue = CSS.Normalizations.registered[property](\"inject\", element, propertyValue);\n\t\t\t\t\t\t\tproperty = CSS.Normalizations.registered[property](\"name\", element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Assign the appropriate vendor prefix before performing an official style update. */\n\t\t\t\t\t\tpropertyName = CSS.Names.prefixCheck(property)[0];\n\n\t\t\t\t\t\t/* A try/catch is used for IE<=8, which throws an error when \"invalid\" CSS values are set, e.g. a negative width.\n\t\t\t\t\t\t Try/catch is avoided for other browsers since it incurs a performance overhead. */\n\t\t\t\t\t\tif (IE <= 8) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\telement.style[propertyName] = propertyValue;\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Browser does not support [\" + propertyValue + \"] for [\" + propertyName + \"]\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */\n\t\t\t\t\t\t\t/* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar data = Data(element);\n\n\t\t\t\t\t\t\tif (data && data.isSVG && CSS.Names.SVGAttribute(property)) {\n\t\t\t\t\t\t\t\t/* Note: For SVG attributes, vendor-prefixed property names are never used. */\n\t\t\t\t\t\t\t\t/* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */\n\t\t\t\t\t\t\t\telement.setAttribute(property, propertyValue);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\telement.style[propertyName] = propertyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Velocity.debug >= 2) {\n\t\t\t\t\t\t\tconsole.log(\"Set \" + property + \" (\" + propertyName + \"): \" + propertyValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */\n\t\t\t\treturn [propertyName, propertyValue];\n\t\t\t},\n\t\t\t/* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */\n\t\t\t/* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */\n\t\t\tflushTransformCache: function(element) {\n\t\t\t\tvar transformString = \"\",\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t/* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string\n\t\t\t\t (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */\n\t\t\t\tif ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && data && data.isSVG) {\n\t\t\t\t\t/* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.\n\t\t\t\t\t Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */\n\t\t\t\t\tvar getTransformFloat = function(transformProperty) {\n\t\t\t\t\t\treturn parseFloat(CSS.getPropertyValue(element, transformProperty));\n\t\t\t\t\t};\n\n\t\t\t\t\t/* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,\n\t\t\t\t\t we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */\n\t\t\t\t\tvar SVGTransforms = {\n\t\t\t\t\t\ttranslate: [getTransformFloat(\"translateX\"), getTransformFloat(\"translateY\")],\n\t\t\t\t\t\tskewX: [getTransformFloat(\"skewX\")], skewY: [getTransformFloat(\"skewY\")],\n\t\t\t\t\t\t/* If the scale property is set (non-1), use that value for the scaleX and scaleY values\n\t\t\t\t\t\t (this behavior mimics the result of animating all these properties at once on HTML elements). */\n\t\t\t\t\t\tscale: getTransformFloat(\"scale\") !== 1 ? [getTransformFloat(\"scale\"), getTransformFloat(\"scale\")] : [getTransformFloat(\"scaleX\"), getTransformFloat(\"scaleY\")],\n\t\t\t\t\t\t/* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values\n\t\t\t\t\t\t defining the rotation's origin point. We ignore the origin values (default them to 0). */\n\t\t\t\t\t\trotate: [getTransformFloat(\"rotateZ\"), 0, 0]\n\t\t\t\t\t};\n\n\t\t\t\t\t/* Iterate through the transform properties in the user-defined property map order.\n\t\t\t\t\t (This mimics the behavior of non-SVG transform animation.) */\n\t\t\t\t\t$.each(Data(element).transformCache, function(transformName) {\n\t\t\t\t\t\t/* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master\n\t\t\t\t\t\t properties so that they match up with SVG's accepted transform properties. */\n\t\t\t\t\t\tif (/^translate/i.test(transformName)) {\n\t\t\t\t\t\t\ttransformName = \"translate\";\n\t\t\t\t\t\t} else if (/^scale/i.test(transformName)) {\n\t\t\t\t\t\t\ttransformName = \"scale\";\n\t\t\t\t\t\t} else if (/^rotate/i.test(transformName)) {\n\t\t\t\t\t\t\ttransformName = \"rotate\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Check that we haven't yet deleted the property from the SVGTransforms container. */\n\t\t\t\t\t\tif (SVGTransforms[transformName]) {\n\t\t\t\t\t\t\t/* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */\n\t\t\t\t\t\t\ttransformString += transformName + \"(\" + SVGTransforms[transformName].join(\" \") + \")\" + \" \";\n\n\t\t\t\t\t\t\t/* After processing an SVG transform property, delete it from the SVGTransforms container so we don't\n\t\t\t\t\t\t\t re-insert the same master property if we encounter another one of its axis-specific properties. */\n\t\t\t\t\t\t\tdelete SVGTransforms[transformName];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tvar transformValue,\n\t\t\t\t\t\t\tperspective;\n\n\t\t\t\t\t/* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */\n\t\t\t\t\t$.each(Data(element).transformCache, function(transformName) {\n\t\t\t\t\t\ttransformValue = Data(element).transformCache[transformName];\n\n\t\t\t\t\t\t/* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */\n\t\t\t\t\t\tif (transformName === \"transformPerspective\") {\n\t\t\t\t\t\t\tperspective = transformValue;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* IE9 only supports one rotation type, rotateZ, which it refers to as \"rotate\". */\n\t\t\t\t\t\tif (IE === 9 && transformName === \"rotateZ\") {\n\t\t\t\t\t\t\ttransformName = \"rotate\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttransformString += transformName + transformValue + \" \";\n\t\t\t\t\t});\n\n\t\t\t\t\t/* If present, set the perspective subproperty first. */\n\t\t\t\t\tif (perspective) {\n\t\t\t\t\t\ttransformString = \"perspective\" + perspective + \" \" + transformString;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tCSS.setPropertyValue(element, \"transform\", transformString);\n\t\t\t}\n\t\t};\n\n\t\t/* Register hooks and normalizations. */\n\t\tCSS.Hooks.register();\n\t\tCSS.Normalizations.register();\n\n\t\t/* Allow hook setting in the same fashion as jQuery's $.css(). */\n\t\tVelocity.hook = function(elements, arg2, arg3) {\n\t\t\tvar value;\n\n\t\t\telements = sanitizeElements(elements);\n\n\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t/* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */\n\t\t\t\tif (Data(element) === undefined) {\n\t\t\t\t\tVelocity.init(element);\n\t\t\t\t}\n\n\t\t\t\t/* Get property value. If an element set was passed in, only return the value for the first element. */\n\t\t\t\tif (arg3 === undefined) {\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tvalue = CSS.getPropertyValue(element, arg2);\n\t\t\t\t\t}\n\t\t\t\t\t/* Set property value. */\n\t\t\t\t} else {\n\t\t\t\t\t/* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */\n\t\t\t\t\tvar adjustedSet = CSS.setPropertyValue(element, arg2, arg3);\n\n\t\t\t\t\t/* Transform properties don't automatically set. They have to be flushed to the DOM. */\n\t\t\t\t\tif (adjustedSet[0] === \"transform\") {\n\t\t\t\t\t\tVelocity.CSS.flushTransformCache(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = adjustedSet;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn value;\n\t\t};\n\n\t\t/*****************\n\t\t Animation\n\t\t *****************/\n\n\t\tvar animate = function() {\n\t\t\tvar opts;\n\n\t\t\t/******************\n\t\t\t Call Chain\n\t\t\t ******************/\n\n\t\t\t/* Logic for determining what to return to the call stack when exiting out of Velocity. */\n\t\t\tfunction getChain() {\n\t\t\t\t/* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,\n\t\t\t\t default to null instead of returning the targeted elements so that utility function's return value is standardized. */\n\t\t\t\tif (isUtility) {\n\t\t\t\t\treturn promiseData.promise || null;\n\t\t\t\t\t/* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */\n\t\t\t\t} else {\n\t\t\t\t\treturn elementsWrapped;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*************************\n\t\t\t Arguments Assignment\n\t\t\t *************************/\n\n\t\t\t/* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which \"elements\" (or \"e\"), \"properties\" (or \"p\"), and \"options\" (or \"o\")\n\t\t\t objects are defined on a container object that's passed in as Velocity's sole argument. */\n\t\t\t/* Note: Some browsers automatically populate arguments with a \"properties\" object. We detect it by checking for its default \"names\" property. */\n\t\t\tvar syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),\n\t\t\t\t\t/* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */\n\t\t\t\t\tisUtility,\n\t\t\t\t\t/* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly\n\t\t\t\t\t passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */\n\t\t\t\t\telementsWrapped,\n\t\t\t\t\targumentIndex;\n\n\t\t\tvar elements,\n\t\t\t\t\tpropertiesMap,\n\t\t\t\t\toptions;\n\n\t\t\t/* Detect jQuery/Zepto elements being animated via the $.fn method. */\n\t\t\tif (Type.isWrapped(this)) {\n\t\t\t\tisUtility = false;\n\n\t\t\t\targumentIndex = 0;\n\t\t\t\telements = this;\n\t\t\t\telementsWrapped = this;\n\t\t\t\t/* Otherwise, raw elements are being animated via the utility function. */\n\t\t\t} else {\n\t\t\t\tisUtility = true;\n\n\t\t\t\targumentIndex = 1;\n\t\t\t\telements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];\n\t\t\t}\n\n\t\t\t/***************\n\t\t\t Promises\n\t\t\t ***************/\n\n\t\t\tvar promiseData = {\n\t\t\t\tpromise: null,\n\t\t\t\tresolver: null,\n\t\t\t\trejecter: null\n\t\t\t};\n\n\t\t\t/* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if\n\t\t\t promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve\n\t\t\t method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated\n\t\t\t call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */\n\t\t\t/* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that\n\t\t\t triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are\n\t\t\t grouped together for the purposes of resolving and rejecting a promise. */\n\t\t\tif (isUtility && Velocity.Promise) {\n\t\t\t\tpromiseData.promise = new Velocity.Promise(function(resolve, reject) {\n\t\t\t\t\tpromiseData.resolver = resolve;\n\t\t\t\t\tpromiseData.rejecter = reject;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (syntacticSugar) {\n\t\t\t\tpropertiesMap = arguments[0].properties || arguments[0].p;\n\t\t\t\toptions = arguments[0].options || arguments[0].o;\n\t\t\t} else {\n\t\t\t\tpropertiesMap = arguments[argumentIndex];\n\t\t\t\toptions = arguments[argumentIndex + 1];\n\t\t\t}\n\n\t\t\telements = sanitizeElements(elements);\n\n\t\t\tif (!elements) {\n\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\tif (!propertiesMap || !options || options.promiseRejectEmpty !== false) {\n\t\t\t\t\t\tpromiseData.rejecter();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromiseData.resolver();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a\n\t\t\t single raw DOM element is passed in (which doesn't contain a length property). */\n\t\t\tvar elementsLength = elements.length,\n\t\t\t\t\telementsIndex = 0;\n\n\t\t\t/***************************\n\t\t\t Argument Overloading\n\t\t\t ***************************/\n\n\t\t\t/* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).\n\t\t\t Overloading is detected by checking for the absence of an object being passed into options. */\n\t\t\t/* Note: The stop/finish/pause/resume actions do not accept animation options, and are therefore excluded from this check. */\n\t\t\tif (!/^(stop|finish|finishAll|pause|resume)$/i.test(propertiesMap) && !$.isPlainObject(options)) {\n\t\t\t\t/* The utility function shifts all arguments one position to the right, so we adjust for that offset. */\n\t\t\t\tvar startingArgumentPosition = argumentIndex + 1;\n\n\t\t\t\toptions = {};\n\n\t\t\t\t/* Iterate through all options arguments */\n\t\t\t\tfor (var i = startingArgumentPosition; i < arguments.length; i++) {\n\t\t\t\t\t/* Treat a number as a duration. Parse it out. */\n\t\t\t\t\t/* Note: The following RegEx will return true if passed an array with a number as its first item.\n\t\t\t\t\t Thus, arrays are skipped from this check. */\n\t\t\t\t\tif (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\\d/.test(arguments[i]))) {\n\t\t\t\t\t\toptions.duration = arguments[i];\n\t\t\t\t\t\t/* Treat strings and arrays as easings. */\n\t\t\t\t\t} else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {\n\t\t\t\t\t\toptions.easing = arguments[i];\n\t\t\t\t\t\t/* Treat a function as a complete callback. */\n\t\t\t\t\t} else if (Type.isFunction(arguments[i])) {\n\t\t\t\t\t\toptions.complete = arguments[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*********************\n\t\t\t Action Detection\n\t\t\t *********************/\n\n\t\t\t/* Velocity's behavior is categorized into \"actions\": Elements can either be specially scrolled into view,\n\t\t\t or they can be started, stopped, paused, resumed, or reversed . If a literal or referenced properties map is passed in as Velocity's\n\t\t\t first argument, the associated action is \"start\". Alternatively, \"scroll\", \"reverse\", \"pause\", \"resume\" or \"stop\" can be passed in \n\t\t\t instead of a properties map. */\n\t\t\tvar action;\n\n\t\t\tswitch (propertiesMap) {\n\t\t\t\tcase \"scroll\":\n\t\t\t\t\taction = \"scroll\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"reverse\":\n\t\t\t\t\taction = \"reverse\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"pause\":\n\n\t\t\t\t\t/*******************\n\t\t\t\t\t Action: Pause\n\t\t\t\t\t *******************/\n\n\t\t\t\t\tvar currentTime = (new Date()).getTime();\n\n\t\t\t\t\t/* Handle delay timers */\n\t\t\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t\t\tpauseDelayOnElement(element, currentTime);\n\t\t\t\t\t});\n\n\t\t\t\t\t/* Pause and Resume are call-wide (not on a per element basis). Thus, calling pause or resume on a \n\t\t\t\t\t single element will cause any calls that containt tweens for that element to be paused/resumed\n\t\t\t\t\t as well. */\n\n\t\t\t\t\t/* Iterate through all calls and pause any that contain any of our elements */\n\t\t\t\t\t$.each(Velocity.State.calls, function(i, activeCall) {\n\n\t\t\t\t\t\tvar found = false;\n\t\t\t\t\t\t/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */\n\t\t\t\t\t\tif (activeCall) {\n\t\t\t\t\t\t\t/* Iterate through the active call's targeted elements. */\n\t\t\t\t\t\t\t$.each(activeCall[1], function(k, activeElement) {\n\t\t\t\t\t\t\t\tvar queueName = (options === undefined) ? \"\" : options;\n\n\t\t\t\t\t\t\t\tif (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Iterate through the calls targeted by the stop command. */\n\t\t\t\t\t\t\t\t$.each(elements, function(l, element) {\n\t\t\t\t\t\t\t\t\t/* Check that this call was applied to the target element. */\n\t\t\t\t\t\t\t\t\tif (element === activeElement) {\n\n\t\t\t\t\t\t\t\t\t\t/* Set call to paused */\n\t\t\t\t\t\t\t\t\t\tactiveCall[5] = {\n\t\t\t\t\t\t\t\t\t\t\tresume: false\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t/* Once we match an element, we can bounce out to the next call entirely */\n\t\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t/* Proceed to check next call if we have already matched */\n\t\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\t/* Since pause creates no new tweens, exit out of Velocity. */\n\t\t\t\t\treturn getChain();\n\n\t\t\t\tcase \"resume\":\n\n\t\t\t\t\t/*******************\n\t\t\t\t\t Action: Resume\n\t\t\t\t\t *******************/\n\n\t\t\t\t\t/* Handle delay timers */\n\t\t\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t\t\tresumeDelayOnElement(element, currentTime);\n\t\t\t\t\t});\n\n\t\t\t\t\t/* Pause and Resume are call-wide (not on a per elemnt basis). Thus, calling pause or resume on a \n\t\t\t\t\t single element will cause any calls that containt tweens for that element to be paused/resumed\n\t\t\t\t\t as well. */\n\n\t\t\t\t\t/* Iterate through all calls and pause any that contain any of our elements */\n\t\t\t\t\t$.each(Velocity.State.calls, function(i, activeCall) {\n\t\t\t\t\t\tvar found = false;\n\t\t\t\t\t\t/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */\n\t\t\t\t\t\tif (activeCall) {\n\t\t\t\t\t\t\t/* Iterate through the active call's targeted elements. */\n\t\t\t\t\t\t\t$.each(activeCall[1], function(k, activeElement) {\n\t\t\t\t\t\t\t\tvar queueName = (options === undefined) ? \"\" : options;\n\n\t\t\t\t\t\t\t\tif (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Skip any calls that have never been paused */\n\t\t\t\t\t\t\t\tif (!activeCall[5]) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Iterate through the calls targeted by the stop command. */\n\t\t\t\t\t\t\t\t$.each(elements, function(l, element) {\n\t\t\t\t\t\t\t\t\t/* Check that this call was applied to the target element. */\n\t\t\t\t\t\t\t\t\tif (element === activeElement) {\n\n\t\t\t\t\t\t\t\t\t\t/* Flag a pause object to be resumed, which will occur during the next tick. In\n\t\t\t\t\t\t\t\t\t\t addition, the pause object will at that time be deleted */\n\t\t\t\t\t\t\t\t\t\tactiveCall[5].resume = true;\n\n\t\t\t\t\t\t\t\t\t\t/* Once we match an element, we can bounce out to the next call entirely */\n\t\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t/* Proceed to check next call if we have already matched */\n\t\t\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\n\t\t\t\t\t/* Since resume creates no new tweens, exit out of Velocity. */\n\t\t\t\t\treturn getChain();\n\n\t\t\t\tcase \"finish\":\n\t\t\t\tcase \"finishAll\":\n\t\t\t\tcase \"stop\":\n\t\t\t\t\t/*******************\n\t\t\t\t\t Action: Stop\n\t\t\t\t\t *******************/\n\n\t\t\t\t\t/* Clear the currently-active delay on each targeted element. */\n\t\t\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t\t\tif (Data(element) && Data(element).delayTimer) {\n\t\t\t\t\t\t\t/* Stop the timer from triggering its cached next() function. */\n\t\t\t\t\t\t\tclearTimeout(Data(element).delayTimer.setTimeout);\n\n\t\t\t\t\t\t\t/* Manually call the next() function so that the subsequent queue items can progress. */\n\t\t\t\t\t\t\tif (Data(element).delayTimer.next) {\n\t\t\t\t\t\t\t\tData(element).delayTimer.next();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tdelete Data(element).delayTimer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* If we want to finish everything in the queue, we have to iterate through it\n\t\t\t\t\t\t and call each function. This will make them active calls below, which will\n\t\t\t\t\t\t cause them to be applied via the duration setting. */\n\t\t\t\t\t\tif (propertiesMap === \"finishAll\" && (options === true || Type.isString(options))) {\n\t\t\t\t\t\t\t/* Iterate through the items in the element's queue. */\n\t\t\t\t\t\t\t$.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n\t\t\t\t\t\t\t\t/* The queue array can contain an \"inprogress\" string, which we skip. */\n\t\t\t\t\t\t\t\tif (Type.isFunction(item)) {\n\t\t\t\t\t\t\t\t\titem();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t/* Clearing the $.queue() array is achieved by resetting it to []. */\n\t\t\t\t\t\t\t$.queue(element, Type.isString(options) ? options : \"\", []);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar callsToStop = [];\n\n\t\t\t\t\t/* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have\n\t\t\t\t\t been applied to multiple elements, in which case all of the call's elements will be stopped. When an element\n\t\t\t\t\t is stopped, the next item in its animation queue is immediately triggered. */\n\t\t\t\t\t/* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the \"fx\" queue)\n\t\t\t\t\t or a custom queue string can be passed in. */\n\t\t\t\t\t/* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,\n\t\t\t\t\t regardless of the element's current queue state. */\n\n\t\t\t\t\t/* Iterate through every active call. */\n\t\t\t\t\t$.each(Velocity.State.calls, function(i, activeCall) {\n\t\t\t\t\t\t/* Inactive calls are set to false by the logic inside completeCall(). Skip them. */\n\t\t\t\t\t\tif (activeCall) {\n\t\t\t\t\t\t\t/* Iterate through the active call's targeted elements. */\n\t\t\t\t\t\t\t$.each(activeCall[1], function(k, activeElement) {\n\t\t\t\t\t\t\t\t/* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only\n\t\t\t\t\t\t\t\t clear calls associated with the relevant queue. */\n\t\t\t\t\t\t\t\t/* Call stopping logic works as follows:\n\t\t\t\t\t\t\t\t - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.\n\t\t\t\t\t\t\t\t - options === undefined --> stop current queue:\"\" call and all queue:false calls.\n\t\t\t\t\t\t\t\t - options === false --> stop only queue:false calls.\n\t\t\t\t\t\t\t\t - options === \"custom\" --> stop current queue:\"custom\" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:\"custom\" call). */\n\t\t\t\t\t\t\t\tvar queueName = (options === undefined) ? \"\" : options;\n\n\t\t\t\t\t\t\t\tif (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Iterate through the calls targeted by the stop command. */\n\t\t\t\t\t\t\t\t$.each(elements, function(l, element) {\n\t\t\t\t\t\t\t\t\t/* Check that this call was applied to the target element. */\n\t\t\t\t\t\t\t\t\tif (element === activeElement) {\n\t\t\t\t\t\t\t\t\t\t/* Optionally clear the remaining queued calls. If we're doing \"finishAll\" this won't find anything,\n\t\t\t\t\t\t\t\t\t\t due to the queue-clearing above. */\n\t\t\t\t\t\t\t\t\t\tif (options === true || Type.isString(options)) {\n\t\t\t\t\t\t\t\t\t\t\t/* Iterate through the items in the element's queue. */\n\t\t\t\t\t\t\t\t\t\t\t$.each($.queue(element, Type.isString(options) ? options : \"\"), function(_, item) {\n\t\t\t\t\t\t\t\t\t\t\t\t/* The queue array can contain an \"inprogress\" string, which we skip. */\n\t\t\t\t\t\t\t\t\t\t\t\tif (Type.isFunction(item)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t/* Pass the item's callback a flag indicating that we want to abort from the queue call.\n\t\t\t\t\t\t\t\t\t\t\t\t\t (Specifically, the queue will resolve the call's associated promise then abort.)  */\n\t\t\t\t\t\t\t\t\t\t\t\t\titem(null, true);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t/* Clearing the $.queue() array is achieved by resetting it to []. */\n\t\t\t\t\t\t\t\t\t\t\t$.queue(element, Type.isString(options) ? options : \"\", []);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (propertiesMap === \"stop\") {\n\t\t\t\t\t\t\t\t\t\t\t/* Since \"reverse\" uses cached start values (the previous call's endValues), these values must be\n\t\t\t\t\t\t\t\t\t\t\t changed to reflect the final value that the elements were actually tweened to. */\n\t\t\t\t\t\t\t\t\t\t\t/* Note: If only queue:false animations are currently running on an element, it won't have a tweensContainer\n\t\t\t\t\t\t\t\t\t\t\t object. Also, queue:false animations can't be reversed. */\n\t\t\t\t\t\t\t\t\t\t\tvar data = Data(element);\n\t\t\t\t\t\t\t\t\t\t\tif (data && data.tweensContainer && queueName !== false) {\n\t\t\t\t\t\t\t\t\t\t\t\t$.each(data.tweensContainer, function(m, activeTween) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tactiveTween.endValue = activeTween.currentValue;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tcallsToStop.push(i);\n\t\t\t\t\t\t\t\t\t\t} else if (propertiesMap === \"finish\" || propertiesMap === \"finishAll\") {\n\t\t\t\t\t\t\t\t\t\t\t/* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that\n\t\t\t\t\t\t\t\t\t\t\t they finish upon the next rAf tick then proceed with normal call completion logic. */\n\t\t\t\t\t\t\t\t\t\t\tactiveCall[2].duration = 1;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t/* Prematurely call completeCall() on each matched active call. Pass an additional flag for \"stop\" to indicate\n\t\t\t\t\t that the complete callback and display:none setting should be skipped since we're completing prematurely. */\n\t\t\t\t\tif (propertiesMap === \"stop\") {\n\t\t\t\t\t\t$.each(callsToStop, function(i, j) {\n\t\t\t\t\t\t\tcompleteCall(j, true);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\t\t\t/* Immediately resolve the promise associated with this stop call since stop runs synchronously. */\n\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */\n\t\t\t\t\treturn getChain();\n\n\t\t\t\tdefault:\n\t\t\t\t\t/* Treat a non-empty plain object as a literal properties map. */\n\t\t\t\t\tif ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {\n\t\t\t\t\t\taction = \"start\";\n\n\t\t\t\t\t\t/****************\n\t\t\t\t\t\t Redirects\n\t\t\t\t\t\t ****************/\n\n\t\t\t\t\t\t/* Check if a string matches a registered redirect (see Redirects above). */\n\t\t\t\t\t} else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {\n\t\t\t\t\t\topts = $.extend({}, options);\n\n\t\t\t\t\t\tvar durationOriginal = opts.duration,\n\t\t\t\t\t\t\t\tdelayOriginal = opts.delay || 0;\n\n\t\t\t\t\t\t/* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */\n\t\t\t\t\t\tif (opts.backwards === true) {\n\t\t\t\t\t\t\telements = $.extend(true, [], elements).reverse();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */\n\t\t\t\t\t\t$.each(elements, function(elementIndex, element) {\n\t\t\t\t\t\t\t/* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */\n\t\t\t\t\t\t\tif (parseFloat(opts.stagger)) {\n\t\t\t\t\t\t\t\topts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);\n\t\t\t\t\t\t\t} else if (Type.isFunction(opts.stagger)) {\n\t\t\t\t\t\t\t\topts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)\n\t\t\t\t\t\t\t the duration of each element's animation, using floors to prevent producing very short durations. */\n\t\t\t\t\t\t\tif (opts.drag) {\n\t\t\t\t\t\t\t\t/* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */\n\t\t\t\t\t\t\t\topts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);\n\n\t\t\t\t\t\t\t\t/* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,\n\t\t\t\t\t\t\t\t B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).\n\t\t\t\t\t\t\t\t The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */\n\t\t\t\t\t\t\t\topts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex / elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to\n\t\t\t\t\t\t\t reduce the opts checking logic required inside the redirect. */\n\t\t\t\t\t\t\tVelocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t/* Since the animation logic resides within the redirect's own code, abort the remainder of this call.\n\t\t\t\t\t\t (The performance overhead up to this point is virtually non-existant.) */\n\t\t\t\t\t\t/* Note: The jQuery call chain is kept intact by returning the complete element set. */\n\t\t\t\t\t\treturn getChain();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar abortError = \"Velocity: First argument (\" + propertiesMap + \") was not a property map, a known action, or a registered redirect. Aborting.\";\n\n\t\t\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\t\t\tpromiseData.rejecter(new Error(abortError));\n\t\t\t\t\t\t} else if (window.console) {\n\t\t\t\t\t\t\tconsole.log(abortError);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn getChain();\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**************************\n\t\t\t Call-Wide Variables\n\t\t\t **************************/\n\n\t\t\t/* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements\n\t\t\t being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore\n\t\t\t avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale\n\t\t\t conversion metrics across Velocity animations that are not immediately consecutively chained. */\n\t\t\tvar callUnitConversionData = {\n\t\t\t\tlastParent: null,\n\t\t\t\tlastPosition: null,\n\t\t\t\tlastFontSize: null,\n\t\t\t\tlastPercentToPxWidth: null,\n\t\t\t\tlastPercentToPxHeight: null,\n\t\t\t\tlastEmToPx: null,\n\t\t\t\tremToPx: null,\n\t\t\t\tvwToPx: null,\n\t\t\t\tvhToPx: null\n\t\t\t};\n\n\t\t\t/* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide\n\t\t\t Velocity.State.calls array that is processed during animation ticking. */\n\t\t\tvar call = [];\n\n\t\t\t/************************\n\t\t\t Element Processing\n\t\t\t ************************/\n\n\t\t\t/* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):\n\t\t\t 1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.\n\t\t\t 2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.\n\t\t\t 3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.\n\t\t\t `elementArrayIndex` allows passing index of the element in the original array to value functions.\n\t\t\t If `elementsIndex` were used instead the index would be determined by the elements' per-element queue.\n\t\t\t */\n\t\t\tfunction processElement(element, elementArrayIndex) {\n\n\t\t\t\t/*************************\n\t\t\t\t Part I: Pre-Queueing\n\t\t\t\t *************************/\n\n\t\t\t\t/***************************\n\t\t\t\t Element-Wide Variables\n\t\t\t\t ***************************/\n\n\t\t\t\tvar /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */\n\t\t\t\t\t\topts = $.extend({}, Velocity.defaults, options),\n\t\t\t\t\t\t/* A container for the processed data associated with each property in the propertyMap.\n\t\t\t\t\t\t (Each property in the map produces its own \"tween\".) */\n\t\t\t\t\t\ttweensContainer = {},\n\t\t\t\t\t\telementUnitConversionData;\n\n\t\t\t\t/******************\n\t\t\t\t Element Init\n\t\t\t\t ******************/\n\n\t\t\t\tif (Data(element) === undefined) {\n\t\t\t\t\tVelocity.init(element);\n\t\t\t\t}\n\n\t\t\t\t/******************\n\t\t\t\t Option: Delay\n\t\t\t\t ******************/\n\n\t\t\t\t/* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */\n\t\t\t\t/* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()\n\t\t\t\t (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */\n\t\t\t\tif (parseFloat(opts.delay) && opts.queue !== false) {\n\t\t\t\t\t$.queue(element, opts.queue, function(next) {\n\t\t\t\t\t\t/* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */\n\t\t\t\t\t\tVelocity.velocityQueueEntryFlag = true;\n\n\t\t\t\t\t\t/* The ensuing queue item (which is assigned to the \"next\" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.\n\t\t\t\t\t\t The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's \"stop\" command, and\n\t\t\t\t\t\t delayBegin/delayTime is used to ensure we can \"pause\" and \"resume\" a tween that is still mid-delay. */\n\n\t\t\t\t\t\t/* Temporarily store delayed elements to facilite access for global pause/resume */\n\t\t\t\t\t\tvar callIndex = Velocity.State.delayedElements.count++;\n\t\t\t\t\t\tVelocity.State.delayedElements[callIndex] = element;\n\n\t\t\t\t\t\tvar delayComplete = (function(index) {\n\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t/* Clear the temporary element */\n\t\t\t\t\t\t\t\tVelocity.State.delayedElements[index] = false;\n\n\t\t\t\t\t\t\t\t/* Finally, issue the call */\n\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})(callIndex);\n\n\n\t\t\t\t\t\tData(element).delayBegin = (new Date()).getTime();\n\t\t\t\t\t\tData(element).delay = parseFloat(opts.delay);\n\t\t\t\t\t\tData(element).delayTimer = {\n\t\t\t\t\t\t\tsetTimeout: setTimeout(next, parseFloat(opts.delay)),\n\t\t\t\t\t\t\tnext: delayComplete\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/*********************\n\t\t\t\t Option: Duration\n\t\t\t\t *********************/\n\n\t\t\t\t/* Support for jQuery's named durations. */\n\t\t\t\tswitch (opts.duration.toString().toLowerCase()) {\n\t\t\t\t\tcase \"fast\":\n\t\t\t\t\t\topts.duration = 200;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"normal\":\n\t\t\t\t\t\topts.duration = DURATION_DEFAULT;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"slow\":\n\t\t\t\t\t\topts.duration = 600;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t/* Remove the potential \"ms\" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */\n\t\t\t\t\t\topts.duration = parseFloat(opts.duration) || 1;\n\t\t\t\t}\n\n\t\t\t\t/************************\n\t\t\t\t Global Option: Mock\n\t\t\t\t ************************/\n\n\t\t\t\tif (Velocity.mock !== false) {\n\t\t\t\t\t/* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.\n\t\t\t\t\t Alternatively, a multiplier can be passed in to time remap all delays and durations. */\n\t\t\t\t\tif (Velocity.mock === true) {\n\t\t\t\t\t\topts.duration = opts.delay = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\topts.duration *= parseFloat(Velocity.mock) || 1;\n\t\t\t\t\t\topts.delay *= parseFloat(Velocity.mock) || 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*******************\n\t\t\t\t Option: Easing\n\t\t\t\t *******************/\n\n\t\t\t\topts.easing = getEasing(opts.easing, opts.duration);\n\n\t\t\t\t/**********************\n\t\t\t\t Option: Callbacks\n\t\t\t\t **********************/\n\n\t\t\t\t/* Callbacks must functions. Otherwise, default to null. */\n\t\t\t\tif (opts.begin && !Type.isFunction(opts.begin)) {\n\t\t\t\t\topts.begin = null;\n\t\t\t\t}\n\n\t\t\t\tif (opts.progress && !Type.isFunction(opts.progress)) {\n\t\t\t\t\topts.progress = null;\n\t\t\t\t}\n\n\t\t\t\tif (opts.complete && !Type.isFunction(opts.complete)) {\n\t\t\t\t\topts.complete = null;\n\t\t\t\t}\n\n\t\t\t\t/*********************************\n\t\t\t\t Option: Display & Visibility\n\t\t\t\t *********************************/\n\n\t\t\t\t/* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */\n\t\t\t\t/* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */\n\t\t\t\tif (opts.display !== undefined && opts.display !== null) {\n\t\t\t\t\topts.display = opts.display.toString().toLowerCase();\n\n\t\t\t\t\t/* Users can pass in a special \"auto\" value to instruct Velocity to set the element to its default display value. */\n\t\t\t\t\tif (opts.display === \"auto\") {\n\t\t\t\t\t\topts.display = Velocity.CSS.Values.getDisplayType(element);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (opts.visibility !== undefined && opts.visibility !== null) {\n\t\t\t\t\topts.visibility = opts.visibility.toString().toLowerCase();\n\t\t\t\t}\n\n\t\t\t\t/**********************\n\t\t\t\t Option: mobileHA\n\t\t\t\t **********************/\n\n\t\t\t\t/* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)\n\t\t\t\t on animating elements. HA is removed from the element at the completion of its animation. */\n\t\t\t\t/* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */\n\t\t\t\t/* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */\n\t\t\t\topts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);\n\n\t\t\t\t/***********************\n\t\t\t\t Part II: Queueing\n\t\t\t\t ***********************/\n\n\t\t\t\t/* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.\n\t\t\t\t In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */\n\t\t\t\t/* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,\n\t\t\t\t the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */\n\t\t\t\tfunction buildQueue(next) {\n\t\t\t\t\tvar data, lastTweensContainer;\n\n\t\t\t\t\t/*******************\n\t\t\t\t\t Option: Begin\n\t\t\t\t\t *******************/\n\n\t\t\t\t\t/* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */\n\t\t\t\t\tif (opts.begin && elementsIndex === 0) {\n\t\t\t\t\t\t/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\topts.begin.call(elements, elements);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/*****************************************\n\t\t\t\t\t Tween Data Construction (for Scroll)\n\t\t\t\t\t *****************************************/\n\n\t\t\t\t\t/* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */\n\t\t\t\t\tif (action === \"scroll\") {\n\t\t\t\t\t\t/* The scroll action uniquely takes an optional \"offset\" option -- specified in pixels -- that offsets the targeted scroll position. */\n\t\t\t\t\t\tvar scrollDirection = (/^x$/i.test(opts.axis) ? \"Left\" : \"Top\"),\n\t\t\t\t\t\t\t\tscrollOffset = parseFloat(opts.offset) || 0,\n\t\t\t\t\t\t\t\tscrollPositionCurrent,\n\t\t\t\t\t\t\t\tscrollPositionCurrentAlternate,\n\t\t\t\t\t\t\t\tscrollPositionEnd;\n\n\t\t\t\t\t\t/* Scroll also uniquely takes an optional \"container\" option, which indicates the parent element that should be scrolled --\n\t\t\t\t\t\t as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */\n\t\t\t\t\t\tif (opts.container) {\n\t\t\t\t\t\t\t/* Ensure that either a jQuery object or a raw DOM element was passed in. */\n\t\t\t\t\t\t\tif (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {\n\t\t\t\t\t\t\t\t/* Extract the raw DOM element from the jQuery wrapper. */\n\t\t\t\t\t\t\t\topts.container = opts.container[0] || opts.container;\n\t\t\t\t\t\t\t\t/* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes\n\t\t\t\t\t\t\t\t (due to the user's natural interaction with the page). */\n\t\t\t\t\t\t\t\tscrollPositionCurrent = opts.container[\"scroll\" + scrollDirection]; /* GET */\n\n\t\t\t\t\t\t\t\t/* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions\n\t\t\t\t\t\t\t\t -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*\n\t\t\t\t\t\t\t\t the scroll container's current scroll position. */\n\t\t\t\t\t\t\t\tscrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */\n\t\t\t\t\t\t\t\t/* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\topts.container = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using\n\t\t\t\t\t\t\t the appropriate cached property names (which differ based on browser type). */\n\t\t\t\t\t\t\tscrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + scrollDirection]]; /* GET */\n\t\t\t\t\t\t\t/* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */\n\t\t\t\t\t\t\tscrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State[\"scrollProperty\" + (scrollDirection === \"Left\" ? \"Top\" : \"Left\")]]; /* GET */\n\n\t\t\t\t\t\t\t/* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --\n\t\t\t\t\t\t\t and therefore end values do not need to be compounded onto current values. */\n\t\t\t\t\t\t\tscrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */\n\t\t\t\t\t\ttweensContainer = {\n\t\t\t\t\t\t\tscroll: {\n\t\t\t\t\t\t\t\trootPropertyValue: false,\n\t\t\t\t\t\t\t\tstartValue: scrollPositionCurrent,\n\t\t\t\t\t\t\t\tcurrentValue: scrollPositionCurrent,\n\t\t\t\t\t\t\t\tendValue: scrollPositionEnd,\n\t\t\t\t\t\t\t\tunitType: \"\",\n\t\t\t\t\t\t\t\teasing: opts.easing,\n\t\t\t\t\t\t\t\tscrollData: {\n\t\t\t\t\t\t\t\t\tcontainer: opts.container,\n\t\t\t\t\t\t\t\t\tdirection: scrollDirection,\n\t\t\t\t\t\t\t\t\talternateValue: scrollPositionCurrentAlternate\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\telement: element\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\tconsole.log(\"tweensContainer (scroll): \", tweensContainer.scroll, element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/******************************************\n\t\t\t\t\t\t Tween Data Construction (for Reverse)\n\t\t\t\t\t\t ******************************************/\n\n\t\t\t\t\t\t/* Reverse acts like a \"start\" action in that a property map is animated toward. The only difference is\n\t\t\t\t\t\t that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate\n\t\t\t\t\t\t the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */\n\t\t\t\t\t\t/* Note: Reverse can be directly called via the \"reverse\" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */\n\t\t\t\t\t\t/* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;\n\t\t\t\t\t\t there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined\n\t\t\t\t\t\t as reverting to the element's values as they were prior to the previous *Velocity* call. */\n\t\t\t\t\t} else if (action === \"reverse\") {\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t\t\t/* Abort if there is no prior animation data to reverse to. */\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!data.tweensContainer) {\n\t\t\t\t\t\t\t/* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */\n\t\t\t\t\t\t\t$.dequeue(element, opts.queue);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/*********************\n\t\t\t\t\t\t\t Options Parsing\n\t\t\t\t\t\t\t *********************/\n\n\t\t\t\t\t\t\t/* If the element was hidden via the display option in the previous call,\n\t\t\t\t\t\t\t revert display to \"auto\" prior to reversal so that the element is visible again. */\n\t\t\t\t\t\t\tif (data.opts.display === \"none\") {\n\t\t\t\t\t\t\t\tdata.opts.display = \"auto\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (data.opts.visibility === \"hidden\") {\n\t\t\t\t\t\t\t\tdata.opts.visibility = \"visible\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If the loop option was set in the previous call, disable it so that \"reverse\" calls aren't recursively generated.\n\t\t\t\t\t\t\t Further, remove the previous call's callback options; typically, users do not want these to be refired. */\n\t\t\t\t\t\t\tdata.opts.loop = false;\n\t\t\t\t\t\t\tdata.opts.begin = null;\n\t\t\t\t\t\t\tdata.opts.complete = null;\n\n\t\t\t\t\t\t\t/* Since we're extending an opts object that has already been extended with the defaults options object,\n\t\t\t\t\t\t\t we remove non-explicitly-defined properties that are auto-assigned values. */\n\t\t\t\t\t\t\tif (!options.easing) {\n\t\t\t\t\t\t\t\tdelete opts.easing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!options.duration) {\n\t\t\t\t\t\t\t\tdelete opts.duration;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* The opts object used for reversal is an extension of the options object optionally passed into this\n\t\t\t\t\t\t\t reverse call plus the options used in the previous Velocity call. */\n\t\t\t\t\t\t\topts = $.extend({}, data.opts, opts);\n\n\t\t\t\t\t\t\t/*************************************\n\t\t\t\t\t\t\t Tweens Container Reconstruction\n\t\t\t\t\t\t\t *************************************/\n\n\t\t\t\t\t\t\t/* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */\n\t\t\t\t\t\t\tlastTweensContainer = $.extend(true, {}, data ? data.tweensContainer : null);\n\n\t\t\t\t\t\t\t/* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */\n\t\t\t\t\t\t\tfor (var lastTween in lastTweensContainer) {\n\t\t\t\t\t\t\t\t/* In addition to tween data, tweensContainers contain an element property that we ignore here. */\n\t\t\t\t\t\t\t\tif (lastTweensContainer.hasOwnProperty(lastTween) && lastTween !== \"element\") {\n\t\t\t\t\t\t\t\t\tvar lastStartValue = lastTweensContainer[lastTween].startValue;\n\n\t\t\t\t\t\t\t\t\tlastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;\n\t\t\t\t\t\t\t\t\tlastTweensContainer[lastTween].endValue = lastStartValue;\n\n\t\t\t\t\t\t\t\t\t/* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).\n\t\t\t\t\t\t\t\t\t Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.\n\t\t\t\t\t\t\t\t\t The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */\n\t\t\t\t\t\t\t\t\tif (!Type.isEmptyObject(options)) {\n\t\t\t\t\t\t\t\t\t\tlastTweensContainer[lastTween].easing = opts.easing;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"reverse tweensContainer (\" + lastTween + \"): \" + JSON.stringify(lastTweensContainer[lastTween]), element);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttweensContainer = lastTweensContainer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*****************************************\n\t\t\t\t\t\t Tween Data Construction (for Start)\n\t\t\t\t\t\t *****************************************/\n\n\t\t\t\t\t} else if (action === \"start\") {\n\n\t\t\t\t\t\t/*************************\n\t\t\t\t\t\t Value Transferring\n\t\t\t\t\t\t *************************/\n\n\t\t\t\t\t\t/* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created\n\t\t\t\t\t\t while the element was in the process of being animated by Velocity, then this current call is safe to use\n\t\t\t\t\t\t the end values from the prior call as its start values. Velocity attempts to perform this value transfer\n\t\t\t\t\t\t process whenever possible in order to avoid requerying the DOM. */\n\t\t\t\t\t\t/* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),\n\t\t\t\t\t\t then the DOM is queried for the element's current values as a last resort. */\n\t\t\t\t\t\t/* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */\n\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t\t\t/* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)\n\t\t\t\t\t\t to transfer over end values to use as start values. If it's set to true and there is a previous\n\t\t\t\t\t\t Velocity call to pull values from, do so. */\n\t\t\t\t\t\tif (data && data.tweensContainer && data.isAnimating === true) {\n\t\t\t\t\t\t\tlastTweensContainer = data.tweensContainer;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t Tween Data Calculation\n\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t/* This function parses property data and defaults endValue, easing, and startValue as appropriate. */\n\t\t\t\t\t\t/* Property map values can either take the form of 1) a single value representing the end value,\n\t\t\t\t\t\t or 2) an array in the form of [ endValue, [, easing] [, startValue] ].\n\t\t\t\t\t\t The optional third parameter is a forcefed startValue to be used instead of querying the DOM for\n\t\t\t\t\t\t the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */\n\t\t\t\t\t\tvar parsePropertyValue = function(valueData, skipResolvingEasing) {\n\t\t\t\t\t\t\tvar endValue, easing, startValue;\n\n\t\t\t\t\t\t\t/* If we have a function as the main argument then resolve it first, in case it returns an array that needs to be split */\n\t\t\t\t\t\t\tif (Type.isFunction(valueData)) {\n\t\t\t\t\t\t\t\tvalueData = valueData.call(element, elementArrayIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Handle the array format, which can be structured as one of three potential overloads:\n\t\t\t\t\t\t\t A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */\n\t\t\t\t\t\t\tif (Type.isArray(valueData)) {\n\t\t\t\t\t\t\t\t/* endValue is always the first item in the array. Don't bother validating endValue's value now\n\t\t\t\t\t\t\t\t since the ensuing property cycling logic does that. */\n\t\t\t\t\t\t\t\tendValue = valueData[0];\n\n\t\t\t\t\t\t\t\t/* Two-item array format: If the second item is a number, function, or hex string, treat it as a\n\t\t\t\t\t\t\t\t start value since easings can only be non-hex strings or arrays. */\n\t\t\t\t\t\t\t\tif ((!Type.isArray(valueData[1]) && /^[\\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {\n\t\t\t\t\t\t\t\t\tstartValue = valueData[1];\n\t\t\t\t\t\t\t\t\t/* Two or three-item array: If the second item is a non-hex string easing name or an array, treat it as an easing. */\n\t\t\t\t\t\t\t\t} else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1]) && Velocity.Easings[valueData[1]]) || Type.isArray(valueData[1])) {\n\t\t\t\t\t\t\t\t\teasing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);\n\n\t\t\t\t\t\t\t\t\t/* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */\n\t\t\t\t\t\t\t\t\tstartValue = valueData[2];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tstartValue = valueData[1] || valueData[2];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/* Handle the single-value format. */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tendValue = valueData;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Default to the call's easing if a per-property easing type was not defined. */\n\t\t\t\t\t\t\tif (!skipResolvingEasing) {\n\t\t\t\t\t\t\t\teasing = easing || opts.easing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If functions were passed in as values, pass the function the current element as its context,\n\t\t\t\t\t\t\t plus the element's index and the element set's size as arguments. Then, assign the returned value. */\n\t\t\t\t\t\t\tif (Type.isFunction(endValue)) {\n\t\t\t\t\t\t\t\tendValue = endValue.call(element, elementArrayIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (Type.isFunction(startValue)) {\n\t\t\t\t\t\t\t\tstartValue = startValue.call(element, elementArrayIndex, elementsLength);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */\n\t\t\t\t\t\t\treturn [endValue || 0, easing, startValue];\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tvar fixPropertyValue = function(property, valueData) {\n\t\t\t\t\t\t\t/* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */\n\t\t\t\t\t\t\tvar rootProperty = CSS.Hooks.getRoot(property),\n\t\t\t\t\t\t\t\t\trootPropertyValue = false,\n\t\t\t\t\t\t\t\t\t/* Parse out endValue, easing, and startValue from the property's data. */\n\t\t\t\t\t\t\t\t\tendValue = valueData[0],\n\t\t\t\t\t\t\t\t\teasing = valueData[1],\n\t\t\t\t\t\t\t\t\tstartValue = valueData[2],\n\t\t\t\t\t\t\t\t\tpattern;\n\n\t\t\t\t\t\t\t/**************************\n\t\t\t\t\t\t\t Start Value Sourcing\n\t\t\t\t\t\t\t **************************/\n\n\t\t\t\t\t\t\t/* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will\n\t\t\t\t\t\t\t inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.\n\t\t\t\t\t\t\t Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */\n\t\t\t\t\t\t\t/* Note: Since SVG elements have some of their properties directly applied as HTML attributes,\n\t\t\t\t\t\t\t there is no way to check for their explicit browser support, and so we skip skip this check for them. */\n\t\t\t\t\t\t\tif ((!data || !data.isSVG) && rootProperty !== \"tween\" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {\n\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Skipping [\" + rootProperty + \"] due to a lack of browser support.\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If the display option is being set to a non-\"none\" (e.g. \"block\") and opacity (filter on IE<=8) is being\n\t\t\t\t\t\t\t animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity\n\t\t\t\t\t\t\t a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */\n\t\t\t\t\t\t\tif (((opts.display !== undefined && opts.display !== null && opts.display !== \"none\") || (opts.visibility !== undefined && opts.visibility !== \"hidden\")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {\n\t\t\t\t\t\t\t\tstartValue = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue\n\t\t\t\t\t\t\t for all of the current call's properties that were *also* animated in the previous call. */\n\t\t\t\t\t\t\t/* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */\n\t\t\t\t\t\t\tif (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {\n\t\t\t\t\t\t\t\tif (startValue === undefined) {\n\t\t\t\t\t\t\t\t\tstartValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* The previous call's rootPropertyValue is extracted from the element's data cache since that's the\n\t\t\t\t\t\t\t\t instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue\n\t\t\t\t\t\t\t\t attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */\n\t\t\t\t\t\t\t\trootPropertyValue = data.rootPropertyValueCache[rootProperty];\n\t\t\t\t\t\t\t\t/* If values were not transferred from a previous Velocity call, query the DOM as needed. */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t/* Handle hooked properties. */\n\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\t\t\tif (startValue === undefined) {\n\t\t\t\t\t\t\t\t\t\trootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */\n\t\t\t\t\t\t\t\t\t\t/* Note: The following getPropertyValue() call does not actually trigger a DOM query;\n\t\t\t\t\t\t\t\t\t\t getPropertyValue() will extract the hook from rootPropertyValue. */\n\t\t\t\t\t\t\t\t\t\tstartValue = CSS.getPropertyValue(element, property, rootPropertyValue);\n\t\t\t\t\t\t\t\t\t\t/* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;\n\t\t\t\t\t\t\t\t\t\t just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual\n\t\t\t\t\t\t\t\t\t\t root property value (if one is set), but this is acceptable since the primary reason users forcefeed is\n\t\t\t\t\t\t\t\t\t\t to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t/* Grab this hook's zero-value template, e.g. \"0px 0px 0px black\". */\n\t\t\t\t\t\t\t\t\t\trootPropertyValue = CSS.Hooks.templates[rootProperty][1];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/* Handle non-hooked properties that haven't already been defined via forcefeeding. */\n\t\t\t\t\t\t\t\t} else if (startValue === undefined) {\n\t\t\t\t\t\t\t\t\tstartValue = CSS.getPropertyValue(element, property); /* GET */\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/**************************\n\t\t\t\t\t\t\t Value Data Extraction\n\t\t\t\t\t\t\t **************************/\n\n\t\t\t\t\t\t\tvar separatedValue,\n\t\t\t\t\t\t\t\t\tendValueUnitType,\n\t\t\t\t\t\t\t\t\tstartValueUnitType,\n\t\t\t\t\t\t\t\t\toperator = false;\n\n\t\t\t\t\t\t\t/* Separates a property value into its numeric value and its unit type. */\n\t\t\t\t\t\t\tvar separateValue = function(property, value) {\n\t\t\t\t\t\t\t\tvar unitType,\n\t\t\t\t\t\t\t\t\t\tnumericValue;\n\n\t\t\t\t\t\t\t\tnumericValue = (value || \"0\")\n\t\t\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t/* Match the unit type at the end of the value. */\n\t\t\t\t\t\t\t\t\t\t.replace(/[%A-z]+$/, function(match) {\n\t\t\t\t\t\t\t\t\t\t\t/* Grab the unit type. */\n\t\t\t\t\t\t\t\t\t\t\tunitType = match;\n\n\t\t\t\t\t\t\t\t\t\t\t/* Strip the unit type off of value. */\n\t\t\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t/* If no unit type was supplied, assign one that is appropriate for this property (e.g. \"deg\" for rotateZ or \"px\" for width). */\n\t\t\t\t\t\t\t\tif (!unitType) {\n\t\t\t\t\t\t\t\t\tunitType = CSS.Values.getUnitType(property);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn [numericValue, unitType];\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (startValue !== endValue && Type.isString(startValue) && Type.isString(endValue)) {\n\t\t\t\t\t\t\t\tpattern = \"\";\n\t\t\t\t\t\t\t\tvar iStart = 0, // index in startValue\n\t\t\t\t\t\t\t\t\t\tiEnd = 0, // index in endValue\n\t\t\t\t\t\t\t\t\t\taStart = [], // array of startValue numbers\n\t\t\t\t\t\t\t\t\t\taEnd = [], // array of endValue numbers\n\t\t\t\t\t\t\t\t\t\tinCalc = 0, // Keep track of being inside a \"calc()\" so we don't duplicate it\n\t\t\t\t\t\t\t\t\t\tinRGB = 0, // Keep track of being inside an RGB as we can't use fractional values\n\t\t\t\t\t\t\t\t\t\tinRGBA = 0; // Keep track of being inside an RGBA as we must pass fractional for the alpha channel\n\n\t\t\t\t\t\t\t\tstartValue = CSS.Hooks.fixColors(startValue);\n\t\t\t\t\t\t\t\tendValue = CSS.Hooks.fixColors(endValue);\n\t\t\t\t\t\t\t\twhile (iStart < startValue.length && iEnd < endValue.length) {\n\t\t\t\t\t\t\t\t\tvar cStart = startValue[iStart],\n\t\t\t\t\t\t\t\t\t\t\tcEnd = endValue[iEnd];\n\n\t\t\t\t\t\t\t\t\tif (/[\\d\\.-]/.test(cStart) && /[\\d\\.-]/.test(cEnd)) {\n\t\t\t\t\t\t\t\t\t\tvar tStart = cStart, // temporary character buffer\n\t\t\t\t\t\t\t\t\t\t\t\ttEnd = cEnd, // temporary character buffer\n\t\t\t\t\t\t\t\t\t\t\t\tdotStart = \".\", // Make sure we can only ever match a single dot in a decimal\n\t\t\t\t\t\t\t\t\t\t\t\tdotEnd = \".\"; // Make sure we can only ever match a single dot in a decimal\n\n\t\t\t\t\t\t\t\t\t\twhile (++iStart < startValue.length) {\n\t\t\t\t\t\t\t\t\t\t\tcStart = startValue[iStart];\n\t\t\t\t\t\t\t\t\t\t\tif (cStart === dotStart) {\n\t\t\t\t\t\t\t\t\t\t\t\tdotStart = \"..\"; // Can never match two characters\n\t\t\t\t\t\t\t\t\t\t\t} else if (!/\\d/.test(cStart)) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttStart += cStart;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\twhile (++iEnd < endValue.length) {\n\t\t\t\t\t\t\t\t\t\t\tcEnd = endValue[iEnd];\n\t\t\t\t\t\t\t\t\t\t\tif (cEnd === dotEnd) {\n\t\t\t\t\t\t\t\t\t\t\t\tdotEnd = \"..\"; // Can never match two characters\n\t\t\t\t\t\t\t\t\t\t\t} else if (!/\\d/.test(cEnd)) {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttEnd += cEnd;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar uStart = CSS.Hooks.getUnit(startValue, iStart), // temporary unit type\n\t\t\t\t\t\t\t\t\t\t\t\tuEnd = CSS.Hooks.getUnit(endValue, iEnd); // temporary unit type\n\n\t\t\t\t\t\t\t\t\t\tiStart += uStart.length;\n\t\t\t\t\t\t\t\t\t\tiEnd += uEnd.length;\n\t\t\t\t\t\t\t\t\t\tif (uStart === uEnd) {\n\t\t\t\t\t\t\t\t\t\t\t// Same units\n\t\t\t\t\t\t\t\t\t\t\tif (tStart === tEnd) {\n\t\t\t\t\t\t\t\t\t\t\t\t// Same numbers, so just copy over\n\t\t\t\t\t\t\t\t\t\t\t\tpattern += tStart + uStart;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t// Different numbers, so store them\n\t\t\t\t\t\t\t\t\t\t\t\tpattern += \"{\" + aStart.length + (inRGB ? \"!\" : \"\") + \"}\" + uStart;\n\t\t\t\t\t\t\t\t\t\t\t\taStart.push(parseFloat(tStart));\n\t\t\t\t\t\t\t\t\t\t\t\taEnd.push(parseFloat(tEnd));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t// Different units, so put into a \"calc(from + to)\" and animate each side to/from zero\n\t\t\t\t\t\t\t\t\t\t\tvar nStart = parseFloat(tStart),\n\t\t\t\t\t\t\t\t\t\t\t\t\tnEnd = parseFloat(tEnd);\n\n\t\t\t\t\t\t\t\t\t\t\tpattern += (inCalc < 5 ? \"calc\" : \"\") + \"(\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ (nStart ? \"{\" + aStart.length + (inRGB ? \"!\" : \"\") + \"}\" : \"0\") + uStart\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ \" + \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ (nEnd ? \"{\" + (aStart.length + (nStart ? 1 : 0)) + (inRGB ? \"!\" : \"\") + \"}\" : \"0\") + uEnd\n\t\t\t\t\t\t\t\t\t\t\t\t\t+ \")\";\n\t\t\t\t\t\t\t\t\t\t\tif (nStart) {\n\t\t\t\t\t\t\t\t\t\t\t\taStart.push(nStart);\n\t\t\t\t\t\t\t\t\t\t\t\taEnd.push(0);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (nEnd) {\n\t\t\t\t\t\t\t\t\t\t\t\taStart.push(0);\n\t\t\t\t\t\t\t\t\t\t\t\taEnd.push(nEnd);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (cStart === cEnd) {\n\t\t\t\t\t\t\t\t\t\tpattern += cStart;\n\t\t\t\t\t\t\t\t\t\tiStart++;\n\t\t\t\t\t\t\t\t\t\tiEnd++;\n\t\t\t\t\t\t\t\t\t\t// Keep track of being inside a calc()\n\t\t\t\t\t\t\t\t\t\tif (inCalc === 0 && cStart === \"c\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inCalc === 1 && cStart === \"a\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inCalc === 2 && cStart === \"l\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inCalc === 3 && cStart === \"c\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inCalc >= 4 && cStart === \"(\"\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tinCalc++;\n\t\t\t\t\t\t\t\t\t\t} else if ((inCalc && inCalc < 5)\n\t\t\t\t\t\t\t\t\t\t\t\t|| inCalc >= 4 && cStart === \")\" && --inCalc < 5) {\n\t\t\t\t\t\t\t\t\t\t\tinCalc = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// Keep track of being inside an rgb() / rgba()\n\t\t\t\t\t\t\t\t\t\tif (inRGB === 0 && cStart === \"r\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inRGB === 1 && cStart === \"g\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inRGB === 2 && cStart === \"b\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inRGB === 3 && cStart === \"a\"\n\t\t\t\t\t\t\t\t\t\t\t\t|| inRGB >= 3 && cStart === \"(\"\n\t\t\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tif (inRGB === 3 && cStart === \"a\") {\n\t\t\t\t\t\t\t\t\t\t\t\tinRGBA = 1;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tinRGB++;\n\t\t\t\t\t\t\t\t\t\t} else if (inRGBA && cStart === \",\") {\n\t\t\t\t\t\t\t\t\t\t\tif (++inRGBA > 3) {\n\t\t\t\t\t\t\t\t\t\t\t\tinRGB = inRGBA = 0;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else if ((inRGBA && inRGB < (inRGBA ? 5 : 4))\n\t\t\t\t\t\t\t\t\t\t\t\t|| inRGB >= (inRGBA ? 4 : 3) && cStart === \")\" && --inRGB < (inRGBA ? 5 : 4)) {\n\t\t\t\t\t\t\t\t\t\t\tinRGB = inRGBA = 0;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tinCalc = 0;\n\t\t\t\t\t\t\t\t\t\t// TODO: changing units, fixing colours\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (iStart !== startValue.length || iEnd !== endValue.length) {\n\t\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\t\tconsole.error(\"Trying to pattern match mis-matched strings [\\\"\" + endValue + \"\\\", \\\"\" + startValue + \"\\\"]\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpattern = undefined;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pattern) {\n\t\t\t\t\t\t\t\t\tif (aStart.length) {\n\t\t\t\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Pattern found \\\"\" + pattern + \"\\\" -> \", aStart, aEnd, \"[\" + startValue + \",\" + endValue + \"]\");\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tstartValue = aStart;\n\t\t\t\t\t\t\t\t\t\tendValue = aEnd;\n\t\t\t\t\t\t\t\t\t\tendValueUnitType = startValueUnitType = \"\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpattern = undefined;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!pattern) {\n\t\t\t\t\t\t\t\t/* Separate startValue. */\n\t\t\t\t\t\t\t\tseparatedValue = separateValue(property, startValue);\n\t\t\t\t\t\t\t\tstartValue = separatedValue[0];\n\t\t\t\t\t\t\t\tstartValueUnitType = separatedValue[1];\n\n\t\t\t\t\t\t\t\t/* Separate endValue, and extract a value operator (e.g. \"+=\", \"-=\") if one exists. */\n\t\t\t\t\t\t\t\tseparatedValue = separateValue(property, endValue);\n\t\t\t\t\t\t\t\tendValue = separatedValue[0].replace(/^([+-\\/*])=/, function(match, subMatch) {\n\t\t\t\t\t\t\t\t\toperator = subMatch;\n\n\t\t\t\t\t\t\t\t\t/* Strip the operator off of the value. */\n\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tendValueUnitType = separatedValue[1];\n\n\t\t\t\t\t\t\t\t/* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */\n\t\t\t\t\t\t\t\tstartValue = parseFloat(startValue) || 0;\n\t\t\t\t\t\t\t\tendValue = parseFloat(endValue) || 0;\n\n\t\t\t\t\t\t\t\t/***************************************\n\t\t\t\t\t\t\t\t Property-Specific Value Conversion\n\t\t\t\t\t\t\t\t ***************************************/\n\n\t\t\t\t\t\t\t\t/* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */\n\t\t\t\t\t\t\t\tif (endValueUnitType === \"%\") {\n\t\t\t\t\t\t\t\t\t/* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),\n\t\t\t\t\t\t\t\t\t which is identical to the em unit's behavior, so we piggyback off of that. */\n\t\t\t\t\t\t\t\t\tif (/^(fontSize|lineHeight)$/.test(property)) {\n\t\t\t\t\t\t\t\t\t\t/* Convert % into an em decimal value. */\n\t\t\t\t\t\t\t\t\t\tendValue = endValue / 100;\n\t\t\t\t\t\t\t\t\t\tendValueUnitType = \"em\";\n\t\t\t\t\t\t\t\t\t\t/* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */\n\t\t\t\t\t\t\t\t\t} else if (/^scale/.test(property)) {\n\t\t\t\t\t\t\t\t\t\tendValue = endValue / 100;\n\t\t\t\t\t\t\t\t\t\tendValueUnitType = \"\";\n\t\t\t\t\t\t\t\t\t\t/* For RGB components, take the defined percentage of 255 and strip off the unit type. */\n\t\t\t\t\t\t\t\t\t} else if (/(Red|Green|Blue)$/i.test(property)) {\n\t\t\t\t\t\t\t\t\t\tendValue = (endValue / 100) * 255;\n\t\t\t\t\t\t\t\t\t\tendValueUnitType = \"\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t\t Unit Ratio Calculation\n\t\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t\t/* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of\n\t\t\t\t\t\t\t %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order\n\t\t\t\t\t\t\t for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred\n\t\t\t\t\t\t\t from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:\n\t\t\t\t\t\t\t 1) Calculating the ratio of %/em/rem/vh/vw relative to pixels\n\t\t\t\t\t\t\t 2) Converting startValue into the same unit of measurement as endValue based on these ratios. */\n\t\t\t\t\t\t\t/* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,\n\t\t\t\t\t\t\t setting values with the target unit type then comparing the returned pixel value. */\n\t\t\t\t\t\t\t/* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead\n\t\t\t\t\t\t\t of batching the SETs and GETs together upfront outweights the potential overhead\n\t\t\t\t\t\t\t of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */\n\t\t\t\t\t\t\t/* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */\n\t\t\t\t\t\t\tvar calculateUnitRatios = function() {\n\n\t\t\t\t\t\t\t\t/************************\n\t\t\t\t\t\t\t\t Same Ratio Checks\n\t\t\t\t\t\t\t\t ************************/\n\n\t\t\t\t\t\t\t\t/* The properties below are used to determine whether the element differs sufficiently from this call's\n\t\t\t\t\t\t\t\t previously iterated element to also differ in its unit conversion ratios. If the properties match up with those\n\t\t\t\t\t\t\t\t of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,\n\t\t\t\t\t\t\t\t this is done to minimize DOM querying. */\n\t\t\t\t\t\t\t\tvar sameRatioIndicators = {\n\t\t\t\t\t\t\t\t\tmyParent: element.parentNode || document.body, /* GET */\n\t\t\t\t\t\t\t\t\tposition: CSS.getPropertyValue(element, \"position\"), /* GET */\n\t\t\t\t\t\t\t\t\tfontSize: CSS.getPropertyValue(element, \"fontSize\") /* GET */\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t/* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */\n\t\t\t\t\t\t\t\t\t\tsamePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),\n\t\t\t\t\t\t\t\t\t\t/* Determine if the same em ratio can be used. em is relative to the element's fontSize. */\n\t\t\t\t\t\t\t\t\t\tsameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);\n\n\t\t\t\t\t\t\t\t/* Store these ratio indicators call-wide for the next element to compare against. */\n\t\t\t\t\t\t\t\tcallUnitConversionData.lastParent = sameRatioIndicators.myParent;\n\t\t\t\t\t\t\t\tcallUnitConversionData.lastPosition = sameRatioIndicators.position;\n\t\t\t\t\t\t\t\tcallUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;\n\n\t\t\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t\t\t Element-Specific Units\n\t\t\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t\t\t/* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement\n\t\t\t\t\t\t\t\t of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */\n\t\t\t\t\t\t\t\tvar measurement = 100,\n\t\t\t\t\t\t\t\t\t\tunitRatios = {};\n\n\t\t\t\t\t\t\t\tif (!sameEmRatio || !samePercentRatio) {\n\t\t\t\t\t\t\t\t\tvar dummy = data && data.isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\") : document.createElement(\"div\");\n\n\t\t\t\t\t\t\t\t\tVelocity.init(dummy);\n\t\t\t\t\t\t\t\t\tsameRatioIndicators.myParent.appendChild(dummy);\n\n\t\t\t\t\t\t\t\t\t/* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.\n\t\t\t\t\t\t\t\t\t Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */\n\t\t\t\t\t\t\t\t\t/* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */\n\t\t\t\t\t\t\t\t\t$.each([\"overflow\", \"overflowX\", \"overflowY\"], function(i, property) {\n\t\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, property, \"hidden\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"position\", sameRatioIndicators.position);\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"fontSize\", sameRatioIndicators.fontSize);\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"boxSizing\", \"content-box\");\n\n\t\t\t\t\t\t\t\t\t/* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */\n\t\t\t\t\t\t\t\t\t$.each([\"minWidth\", \"maxWidth\", \"width\", \"minHeight\", \"maxHeight\", \"height\"], function(i, property) {\n\t\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, property, measurement + \"%\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t/* paddingLeft arbitrarily acts as our proxy property for the em ratio. */\n\t\t\t\t\t\t\t\t\tVelocity.CSS.setPropertyValue(dummy, \"paddingLeft\", measurement + \"em\");\n\n\t\t\t\t\t\t\t\t\t/* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, \"width\", null, true)) || 1) / measurement; /* GET */\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, \"height\", null, true)) || 1) / measurement; /* GET */\n\t\t\t\t\t\t\t\t\tunitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, \"paddingLeft\")) || 1) / measurement; /* GET */\n\n\t\t\t\t\t\t\t\t\tsameRatioIndicators.myParent.removeChild(dummy);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tunitRatios.emToPx = callUnitConversionData.lastEmToPx;\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;\n\t\t\t\t\t\t\t\t\tunitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/***************************\n\t\t\t\t\t\t\t\t Element-Agnostic Units\n\t\t\t\t\t\t\t\t ***************************/\n\n\t\t\t\t\t\t\t\t/* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked\n\t\t\t\t\t\t\t\t once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time\n\t\t\t\t\t\t\t\t that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,\n\t\t\t\t\t\t\t\t so we calculate it now. */\n\t\t\t\t\t\t\t\tif (callUnitConversionData.remToPx === null) {\n\t\t\t\t\t\t\t\t\t/* Default to browsers' default fontSize of 16px in the case of 0. */\n\t\t\t\t\t\t\t\t\tcallUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, \"fontSize\")) || 16; /* GET */\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/* Similarly, viewport units are %-relative to the window's inner dimensions. */\n\t\t\t\t\t\t\t\tif (callUnitConversionData.vwToPx === null) {\n\t\t\t\t\t\t\t\t\tcallUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */\n\t\t\t\t\t\t\t\t\tcallUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tunitRatios.remToPx = callUnitConversionData.remToPx;\n\t\t\t\t\t\t\t\tunitRatios.vwToPx = callUnitConversionData.vwToPx;\n\t\t\t\t\t\t\t\tunitRatios.vhToPx = callUnitConversionData.vhToPx;\n\n\t\t\t\t\t\t\t\tif (Velocity.debug >= 1) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"Unit ratios: \" + JSON.stringify(unitRatios), element);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn unitRatios;\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t/********************\n\t\t\t\t\t\t\t Unit Conversion\n\t\t\t\t\t\t\t ********************/\n\n\t\t\t\t\t\t\t/* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */\n\t\t\t\t\t\t\tif (/[\\/*]/.test(operator)) {\n\t\t\t\t\t\t\t\tendValueUnitType = startValueUnitType;\n\t\t\t\t\t\t\t\t/* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType\n\t\t\t\t\t\t\t\t is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend\n\t\t\t\t\t\t\t\t on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio\n\t\t\t\t\t\t\t\t would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */\n\t\t\t\t\t\t\t\t/* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */\n\t\t\t\t\t\t\t} else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {\n\t\t\t\t\t\t\t\t/* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */\n\t\t\t\t\t\t\t\t/* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively\n\t\t\t\t\t\t\t\t match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,\n\t\t\t\t\t\t\t\t which remains past the point of the animation's completion. */\n\t\t\t\t\t\t\t\tif (endValue === 0) {\n\t\t\t\t\t\t\t\t\tendValueUnitType = startValueUnitType;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).\n\t\t\t\t\t\t\t\t\t If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */\n\t\t\t\t\t\t\t\t\telementUnitConversionData = elementUnitConversionData || calculateUnitRatios();\n\n\t\t\t\t\t\t\t\t\t/* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */\n\t\t\t\t\t\t\t\t\t/* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */\n\t\t\t\t\t\t\t\t\tvar axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === \"x\") ? \"x\" : \"y\";\n\n\t\t\t\t\t\t\t\t\t/* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:\n\t\t\t\t\t\t\t\t\t 1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */\n\t\t\t\t\t\t\t\t\tswitch (startValueUnitType) {\n\t\t\t\t\t\t\t\t\t\tcase \"%\":\n\t\t\t\t\t\t\t\t\t\t\t/* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.\n\t\t\t\t\t\t\t\t\t\t\t Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value\n\t\t\t\t\t\t\t\t\t\t\t to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase \"px\":\n\t\t\t\t\t\t\t\t\t\t\t/* px acts as our midpoint in the unit conversion process; do nothing. */\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= elementUnitConversionData[startValueUnitType + \"ToPx\"];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/* Invert the px ratios to convert into to the target unit. */\n\t\t\t\t\t\t\t\t\tswitch (endValueUnitType) {\n\t\t\t\t\t\t\t\t\t\tcase \"%\":\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= 1 / (axis === \"x\" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase \"px\":\n\t\t\t\t\t\t\t\t\t\t\t/* startValue is already in px, do nothing; we're done. */\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\tstartValue *= 1 / elementUnitConversionData[endValueUnitType + \"ToPx\"];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/*********************\n\t\t\t\t\t\t\t Relative Values\n\t\t\t\t\t\t\t *********************/\n\n\t\t\t\t\t\t\t/* Operator logic must be performed last since it requires unit-normalized start and end values. */\n\t\t\t\t\t\t\t/* Note: Relative *percent values* do not behave how most people think; while one would expect \"+=50%\"\n\t\t\t\t\t\t\t to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:\n\t\t\t\t\t\t\t 50 points is added on top of the current % value. */\n\t\t\t\t\t\t\tswitch (operator) {\n\t\t\t\t\t\t\t\tcase \"+\":\n\t\t\t\t\t\t\t\t\tendValue = startValue + endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"-\":\n\t\t\t\t\t\t\t\t\tendValue = startValue - endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"*\":\n\t\t\t\t\t\t\t\t\tendValue = startValue * endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase \"/\":\n\t\t\t\t\t\t\t\t\tendValue = startValue / endValue;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/**************************\n\t\t\t\t\t\t\t tweensContainer Push\n\t\t\t\t\t\t\t **************************/\n\n\t\t\t\t\t\t\t/* Construct the per-property tween object, and push it to the element's tweensContainer. */\n\t\t\t\t\t\t\ttweensContainer[property] = {\n\t\t\t\t\t\t\t\trootPropertyValue: rootPropertyValue,\n\t\t\t\t\t\t\t\tstartValue: startValue,\n\t\t\t\t\t\t\t\tcurrentValue: startValue,\n\t\t\t\t\t\t\t\tendValue: endValue,\n\t\t\t\t\t\t\t\tunitType: endValueUnitType,\n\t\t\t\t\t\t\t\teasing: easing\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (pattern) {\n\t\t\t\t\t\t\t\ttweensContainer[property].pattern = pattern;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (Velocity.debug) {\n\t\t\t\t\t\t\t\tconsole.log(\"tweensContainer (\" + property + \"): \" + JSON.stringify(tweensContainer[property]), element);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t/* Create a tween out of each property, and append its associated data to tweensContainer. */\n\t\t\t\t\t\tfor (var property in propertiesMap) {\n\n\t\t\t\t\t\t\tif (!propertiesMap.hasOwnProperty(property)) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/* The original property name's format must be used for the parsePropertyValue() lookup,\n\t\t\t\t\t\t\t but we then use its camelCase styling to normalize it for manipulation. */\n\t\t\t\t\t\t\tvar propertyName = CSS.Names.camelCase(property),\n\t\t\t\t\t\t\t\t\tvalueData = parsePropertyValue(propertiesMap[property]);\n\n\t\t\t\t\t\t\t/* Find shorthand color properties that have been passed a hex string. */\n\t\t\t\t\t\t\t/* Would be quicker to use CSS.Lists.colors.includes() if possible */\n\t\t\t\t\t\t\tif (_inArray(CSS.Lists.colors, propertyName)) {\n\t\t\t\t\t\t\t\t/* Parse the value data for each shorthand. */\n\t\t\t\t\t\t\t\tvar endValue = valueData[0],\n\t\t\t\t\t\t\t\t\t\teasing = valueData[1],\n\t\t\t\t\t\t\t\t\t\tstartValue = valueData[2];\n\n\t\t\t\t\t\t\t\tif (CSS.RegEx.isHex.test(endValue)) {\n\t\t\t\t\t\t\t\t\t/* Convert the hex strings into their RGB component arrays. */\n\t\t\t\t\t\t\t\t\tvar colorComponents = [\"Red\", \"Green\", \"Blue\"],\n\t\t\t\t\t\t\t\t\t\t\tendValueRGB = CSS.Values.hexToRgb(endValue),\n\t\t\t\t\t\t\t\t\t\t\tstartValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;\n\n\t\t\t\t\t\t\t\t\t/* Inject the RGB component tweens into propertiesMap. */\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < colorComponents.length; i++) {\n\t\t\t\t\t\t\t\t\t\tvar dataArray = [endValueRGB[i]];\n\n\t\t\t\t\t\t\t\t\t\tif (easing) {\n\t\t\t\t\t\t\t\t\t\t\tdataArray.push(easing);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (startValueRGB !== undefined) {\n\t\t\t\t\t\t\t\t\t\t\tdataArray.push(startValueRGB[i]);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tfixPropertyValue(propertyName + colorComponents[i], dataArray);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/* If we have replaced a shortcut color value then don't update the standard property name */\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfixPropertyValue(propertyName, valueData);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Along with its property data, store a reference to the element itself onto tweensContainer. */\n\t\t\t\t\t\ttweensContainer.element = element;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*****************\n\t\t\t\t\t Call Push\n\t\t\t\t\t *****************/\n\n\t\t\t\t\t/* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not\n\t\t\t\t\t being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */\n\t\t\t\t\tif (tweensContainer.element) {\n\t\t\t\t\t\t/* Apply the \"velocity-animating\" indicator class. */\n\t\t\t\t\t\tCSS.Values.addClass(element, \"velocity-animating\");\n\n\t\t\t\t\t\t/* The call array houses the tweensContainers for each element being animated in the current call. */\n\t\t\t\t\t\tcall.push(tweensContainer);\n\n\t\t\t\t\t\tdata = Data(element);\n\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\t\t\t/* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */\n\t\t\t\t\t\t\tif (opts.queue === \"\") {\n\n\t\t\t\t\t\t\t\tdata.tweensContainer = tweensContainer;\n\t\t\t\t\t\t\t\tdata.opts = opts;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Switch on the element's animating flag. */\n\t\t\t\t\t\t\tdata.isAnimating = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Once the final element in this call's element set has been processed, push the call array onto\n\t\t\t\t\t\t Velocity.State.calls for the animation tick to immediately begin processing. */\n\t\t\t\t\t\tif (elementsIndex === elementsLength - 1) {\n\t\t\t\t\t\t\t/* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.\n\t\t\t\t\t\t\t Anything on this call container is subjected to tick() processing. */\n\t\t\t\t\t\t\tVelocity.State.calls.push([call, elements, opts, null, promiseData.resolver, null, 0]);\n\n\t\t\t\t\t\t\t/* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */\n\t\t\t\t\t\t\tif (Velocity.State.isTicking === false) {\n\t\t\t\t\t\t\t\tVelocity.State.isTicking = true;\n\n\t\t\t\t\t\t\t\t/* Start the tick loop. */\n\t\t\t\t\t\t\t\ttick();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\telementsIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* When the queue option is set to false, the call skips the element's queue and fires immediately. */\n\t\t\t\tif (opts.queue === false) {\n\t\t\t\t\t/* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),\n\t\t\t\t\t we manually inject the delay property here with an explicit setTimeout. */\n\t\t\t\t\tif (opts.delay) {\n\n\t\t\t\t\t\t/* Temporarily store delayed elements to facilitate access for global pause/resume */\n\t\t\t\t\t\tvar callIndex = Velocity.State.delayedElements.count++;\n\t\t\t\t\t\tVelocity.State.delayedElements[callIndex] = element;\n\n\t\t\t\t\t\tvar delayComplete = (function(index) {\n\t\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\t\t/* Clear the temporary element */\n\t\t\t\t\t\t\t\tVelocity.State.delayedElements[index] = false;\n\n\t\t\t\t\t\t\t\t/* Finally, issue the call */\n\t\t\t\t\t\t\t\tbuildQueue();\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t})(callIndex);\n\n\t\t\t\t\t\tData(element).delayBegin = (new Date()).getTime();\n\t\t\t\t\t\tData(element).delay = parseFloat(opts.delay);\n\t\t\t\t\t\tData(element).delayTimer = {\n\t\t\t\t\t\t\tsetTimeout: setTimeout(buildQueue, parseFloat(opts.delay)),\n\t\t\t\t\t\t\tnext: delayComplete\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbuildQueue();\n\t\t\t\t\t}\n\t\t\t\t\t/* Otherwise, the call undergoes element queueing as normal. */\n\t\t\t\t\t/* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */\n\t\t\t\t} else {\n\t\t\t\t\t$.queue(element, opts.queue, function(next, clearQueue) {\n\t\t\t\t\t\t/* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,\n\t\t\t\t\t\t so it's fine if this is repeatedly triggered for each element in the associated call.) */\n\t\t\t\t\t\tif (clearQueue === true) {\n\t\t\t\t\t\t\tif (promiseData.promise) {\n\t\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Do not continue with animation queueing. */\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.\n\t\t\t\t\t\t See completeCall() for further details. */\n\t\t\t\t\t\tVelocity.velocityQueueEntryFlag = true;\n\n\t\t\t\t\t\tbuildQueue(next);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/*********************\n\t\t\t\t Auto-Dequeuing\n\t\t\t\t *********************/\n\n\t\t\t\t/* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element\n\t\t\t\t must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking\n\t\t\t\t for the \"inprogress\" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's\n\t\t\t\t queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's\n\t\t\t\t first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */\n\t\t\t\t/* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until\n\t\t\t\t each one of the elements in the set has reached the end of its individually pre-existing queue chain. */\n\t\t\t\t/* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.\n\t\t\t\t Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */\n\t\t\t\tif ((opts.queue === \"\" || opts.queue === \"fx\") && $.queue(element)[0] !== \"inprogress\") {\n\t\t\t\t\t$.dequeue(element);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**************************\n\t\t\t Element Set Iteration\n\t\t\t **************************/\n\n\t\t\t/* If the \"nodeType\" property exists on the elements variable, we're animating a single element.\n\t\t\t Place it in an array so that $.each() can iterate over it. */\n\t\t\t$.each(elements, function(i, element) {\n\t\t\t\t/* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */\n\t\t\t\tif (Type.isNode(element)) {\n\t\t\t\t\tprocessElement(element, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/******************\n\t\t\t Option: Loop\n\t\t\t ******************/\n\n\t\t\t/* The loop option accepts an integer indicating how many times the element should loop between the values in the\n\t\t\t current call's properties map and the element's property values prior to this call. */\n\t\t\t/* Note: The loop option's logic is performed here -- after element processing -- because the current call needs\n\t\t\t to undergo its queue insertion prior to the loop option generating its series of constituent \"reverse\" calls,\n\t\t\t which chain after the current call. Two reverse calls (two \"alternations\") constitute one loop. */\n\t\t\topts = $.extend({}, Velocity.defaults, options);\n\t\t\topts.loop = parseInt(opts.loop, 10);\n\t\t\tvar reverseCallsCount = (opts.loop * 2) - 1;\n\n\t\t\tif (opts.loop) {\n\t\t\t\t/* Double the loop count to convert it into its appropriate number of \"reverse\" calls.\n\t\t\t\t Subtract 1 from the resulting value since the current call is included in the total alternation count. */\n\t\t\t\tfor (var x = 0; x < reverseCallsCount; x++) {\n\t\t\t\t\t/* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object\n\t\t\t\t\t isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse\n\t\t\t\t\t call so that the delay logic that occurs inside *Pre-Queueing* can process it. */\n\t\t\t\t\tvar reverseOptions = {\n\t\t\t\t\t\tdelay: opts.delay,\n\t\t\t\t\t\tprogress: opts.progress\n\t\t\t\t\t};\n\n\t\t\t\t\t/* If a complete callback was passed into this call, transfer it to the loop redirect's final \"reverse\" call\n\t\t\t\t\t so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */\n\t\t\t\t\tif (x === reverseCallsCount - 1) {\n\t\t\t\t\t\treverseOptions.display = opts.display;\n\t\t\t\t\t\treverseOptions.visibility = opts.visibility;\n\t\t\t\t\t\treverseOptions.complete = opts.complete;\n\t\t\t\t\t}\n\n\t\t\t\t\tanimate(elements, \"reverse\", reverseOptions);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/***************\n\t\t\t Chaining\n\t\t\t ***************/\n\n\t\t\t/* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */\n\t\t\treturn getChain();\n\t\t};\n\n\t\t/* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */\n\t\tVelocity = $.extend(animate, Velocity);\n\t\t/* For legacy support, also expose the literal animate method. */\n\t\tVelocity.animate = animate;\n\n\t\t/**************\n\t\t Timing\n\t\t **************/\n\n\t\t/* Ticker function. */\n\t\tvar ticker = window.requestAnimationFrame || rAFShim;\n\n\t\t/* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.\n\t\t To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile\n\t\t devices to avoid wasting battery power on inactive tabs. */\n\t\t/* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */\n\t\tif (!Velocity.State.isMobile && document.hidden !== undefined) {\n\t\t\tvar updateTicker = function() {\n\t\t\t\t/* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */\n\t\t\t\tif (document.hidden) {\n\t\t\t\t\tticker = function(callback) {\n\t\t\t\t\t\t/* The tick function needs a truthy first argument in order to pass its internal timestamp check. */\n\t\t\t\t\t\treturn setTimeout(function() {\n\t\t\t\t\t\t\tcallback(true);\n\t\t\t\t\t\t}, 16);\n\t\t\t\t\t};\n\n\t\t\t\t\t/* The rAF loop has been paused by the browser, so we manually restart the tick. */\n\t\t\t\t\ttick();\n\t\t\t\t} else {\n\t\t\t\t\tticker = window.requestAnimationFrame || rAFShim;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/* Page could be sitting in the background at this time (i.e. opened as new tab) so making sure we use correct ticker from the start */\n\t\t\tupdateTicker();\n\n\t\t\t/* And then run check again every time visibility changes */\n\t\t\tdocument.addEventListener(\"visibilitychange\", updateTicker);\n\t\t}\n\n\t\t/************\n\t\t Tick\n\t\t ************/\n\n\t\t/* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */\n\t\tfunction tick(timestamp) {\n\t\t\t/* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.\n\t\t\t We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever\n\t\t\t the browser's next tick sync time occurs, which results in the first elements subjected to Velocity\n\t\t\t calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore\n\t\t\t the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated\n\t\t\t by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */\n\t\t\tif (timestamp) {\n\t\t\t\t/* We normally use RAF's high resolution timestamp but as it can be significantly offset when the browser is\n\t\t\t\t under high stress we give the option for choppiness over allowing the browser to drop huge chunks of frames.\n\t\t\t\t We use performance.now() and shim it if it doesn't exist for when the tab is hidden. */\n\t\t\t\tvar timeCurrent = Velocity.timestamp && timestamp !== true ? timestamp : performance.now();\n\n\t\t\t\t/********************\n\t\t\t\t Call Iteration\n\t\t\t\t ********************/\n\n\t\t\t\tvar callsLength = Velocity.State.calls.length;\n\n\t\t\t\t/* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)\n\t\t\t\t when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation\n\t\t\t\t has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */\n\t\t\t\tif (callsLength > 10000) {\n\t\t\t\t\tVelocity.State.calls = compactSparseArray(Velocity.State.calls);\n\t\t\t\t\tcallsLength = Velocity.State.calls.length;\n\t\t\t\t}\n\n\t\t\t\t/* Iterate through each active call. */\n\t\t\t\tfor (var i = 0; i < callsLength; i++) {\n\t\t\t\t\t/* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */\n\t\t\t\t\tif (!Velocity.State.calls[i]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t/************************\n\t\t\t\t\t Call-Wide Variables\n\t\t\t\t\t ************************/\n\n\t\t\t\t\tvar callContainer = Velocity.State.calls[i],\n\t\t\t\t\t\t\tcall = callContainer[0],\n\t\t\t\t\t\t\topts = callContainer[2],\n\t\t\t\t\t\t\ttimeStart = callContainer[3],\n\t\t\t\t\t\t\tfirstTick = !!timeStart,\n\t\t\t\t\t\t\ttweenDummyValue = null,\n\t\t\t\t\t\t\tpauseObject = callContainer[5],\n\t\t\t\t\t\t\tmillisecondsEllapsed = callContainer[6];\n\n\n\n\t\t\t\t\t/* If timeStart is undefined, then this is the first time that this call has been processed by tick().\n\t\t\t\t\t We assign timeStart now so that its value is as close to the real animation start time as possible.\n\t\t\t\t\t (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay\n\t\t\t\t\t between that time and now would cause the first few frames of the tween to be skipped since\n\t\t\t\t\t percentComplete is calculated relative to timeStart.) */\n\t\t\t\t\t/* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the\n\t\t\t\t\t first tick iteration isn't wasted by animating at 0% tween completion, which would produce the\n\t\t\t\t\t same style value as the element's current value. */\n\t\t\t\t\tif (!timeStart) {\n\t\t\t\t\t\ttimeStart = Velocity.State.calls[i][3] = timeCurrent - 16;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If a pause object is present, skip processing unless it has been set to resume */\n\t\t\t\t\tif (pauseObject) {\n\t\t\t\t\t\tif (pauseObject.resume === true) {\n\t\t\t\t\t\t\t/* Update the time start to accomodate the paused completion amount */\n\t\t\t\t\t\t\ttimeStart = callContainer[3] = Math.round(timeCurrent - millisecondsEllapsed - 16);\n\n\t\t\t\t\t\t\t/* Remove pause object after processing */\n\t\t\t\t\t\t\tcallContainer[5] = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tmillisecondsEllapsed = callContainer[6] = timeCurrent - timeStart;\n\n\t\t\t\t\t/* The tween's completion percentage is relative to the tween's start time, not the tween's start value\n\t\t\t\t\t (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).\n\t\t\t\t\t Accordingly, we ensure that percentComplete does not exceed 1. */\n\t\t\t\t\tvar percentComplete = Math.min((millisecondsEllapsed) / opts.duration, 1);\n\n\t\t\t\t\t/**********************\n\t\t\t\t\t Element Iteration\n\t\t\t\t\t **********************/\n\n\t\t\t\t\t/* For every call, iterate through each of the elements in its set. */\n\t\t\t\t\tfor (var j = 0, callLength = call.length; j < callLength; j++) {\n\t\t\t\t\t\tvar tweensContainer = call[j],\n\t\t\t\t\t\t\t\telement = tweensContainer.element;\n\n\t\t\t\t\t\t/* Check to see if this element has been deleted midway through the animation by checking for the\n\t\t\t\t\t\t continued existence of its data cache. If it's gone, or the element is currently paused, skip animating this element. */\n\t\t\t\t\t\tif (!Data(element)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar transformPropertyExists = false;\n\n\t\t\t\t\t\t/**********************************\n\t\t\t\t\t\t Display & Visibility Toggling\n\t\t\t\t\t\t **********************************/\n\n\t\t\t\t\t\t/* If the display option is set to non-\"none\", set it upfront so that the element can become visible before tweening begins.\n\t\t\t\t\t\t (Otherwise, display's \"none\" value is set in completeCall() once the animation has completed.) */\n\t\t\t\t\t\tif (opts.display !== undefined && opts.display !== null && opts.display !== \"none\") {\n\t\t\t\t\t\t\tif (opts.display === \"flex\") {\n\t\t\t\t\t\t\t\tvar flexValues = [\"-webkit-box\", \"-moz-box\", \"-ms-flexbox\", \"-webkit-flex\"];\n\n\t\t\t\t\t\t\t\t$.each(flexValues, function(i, flexValue) {\n\t\t\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", flexValue);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", opts.display);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Same goes with the visibility option, but its \"none\" equivalent is \"hidden\". */\n\t\t\t\t\t\tif (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n\t\t\t\t\t\t\tCSS.setPropertyValue(element, \"visibility\", opts.visibility);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/************************\n\t\t\t\t\t\t Property Iteration\n\t\t\t\t\t\t ************************/\n\n\t\t\t\t\t\t/* For every element, iterate through each property. */\n\t\t\t\t\t\tfor (var property in tweensContainer) {\n\t\t\t\t\t\t\t/* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */\n\t\t\t\t\t\t\tif (tweensContainer.hasOwnProperty(property) && property !== \"element\") {\n\t\t\t\t\t\t\t\tvar tween = tweensContainer[property],\n\t\t\t\t\t\t\t\t\t\tcurrentValue,\n\t\t\t\t\t\t\t\t\t\t/* Easing can either be a pre-genereated function or a string that references a pre-registered easing\n\t\t\t\t\t\t\t\t\t\t on the Velocity.Easings object. In either case, return the appropriate easing *function*. */\n\t\t\t\t\t\t\t\t\t\teasing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;\n\n\t\t\t\t\t\t\t\t/******************************\n\t\t\t\t\t\t\t\t Current Value Calculation\n\t\t\t\t\t\t\t\t ******************************/\n\n\t\t\t\t\t\t\t\tif (Type.isString(tween.pattern)) {\n\t\t\t\t\t\t\t\t\tvar patternReplace = percentComplete === 1 ?\n\t\t\t\t\t\t\t\t\t\t\tfunction($0, index, round) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar result = tween.endValue[index];\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn round ? Math.round(result) : result;\n\t\t\t\t\t\t\t\t\t\t\t} :\n\t\t\t\t\t\t\t\t\t\t\tfunction($0, index, round) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar startValue = tween.startValue[index],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttweenDelta = tween.endValue[index] - startValue,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tresult = startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));\n\n\t\t\t\t\t\t\t\t\t\t\t\treturn round ? Math.round(result) : result;\n\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tcurrentValue = tween.pattern.replace(/{(\\d+)(!)?}/g, patternReplace);\n\t\t\t\t\t\t\t\t} else if (percentComplete === 1) {\n\t\t\t\t\t\t\t\t\t/* If this is the last tick pass (if we've reached 100% completion for this tween),\n\t\t\t\t\t\t\t\t\t ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */\n\t\t\t\t\t\t\t\t\tcurrentValue = tween.endValue;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/* Otherwise, calculate currentValue based on the current delta from startValue. */\n\t\t\t\t\t\t\t\t\tvar tweenDelta = tween.endValue - tween.startValue;\n\n\t\t\t\t\t\t\t\t\tcurrentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));\n\t\t\t\t\t\t\t\t\t/* If no value change is occurring, don't proceed with DOM updating. */\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!firstTick && (currentValue === tween.currentValue)) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttween.currentValue = currentValue;\n\n\t\t\t\t\t\t\t\t/* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that\n\t\t\t\t\t\t\t\t it can be passed into the progress callback. */\n\t\t\t\t\t\t\t\tif (property === \"tween\") {\n\t\t\t\t\t\t\t\t\ttweenDummyValue = currentValue;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t/******************\n\t\t\t\t\t\t\t\t\t Hooks: Part I\n\t\t\t\t\t\t\t\t\t ******************/\n\t\t\t\t\t\t\t\t\tvar hookRoot;\n\n\t\t\t\t\t\t\t\t\t/* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used\n\t\t\t\t\t\t\t\t\t for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated\n\t\t\t\t\t\t\t\t\t rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's\n\t\t\t\t\t\t\t\t\t updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that\n\t\t\t\t\t\t\t\t\t subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */\n\t\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\t\t\t\thookRoot = CSS.Hooks.getRoot(property);\n\n\t\t\t\t\t\t\t\t\t\tvar rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];\n\n\t\t\t\t\t\t\t\t\t\tif (rootPropertyValueCache) {\n\t\t\t\t\t\t\t\t\t\t\ttween.rootPropertyValue = rootPropertyValueCache;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/*****************\n\t\t\t\t\t\t\t\t\t DOM Update\n\t\t\t\t\t\t\t\t\t *****************/\n\n\t\t\t\t\t\t\t\t\t/* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */\n\t\t\t\t\t\t\t\t\t/* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */\n\t\t\t\t\t\t\t\t\tvar adjustedSetData = CSS.setPropertyValue(element, /* SET */\n\t\t\t\t\t\t\t\t\t\t\tproperty,\n\t\t\t\t\t\t\t\t\t\t\ttween.currentValue + (IE < 9 && parseFloat(currentValue) === 0 ? \"\" : tween.unitType),\n\t\t\t\t\t\t\t\t\t\t\ttween.rootPropertyValue,\n\t\t\t\t\t\t\t\t\t\t\ttween.scrollData);\n\n\t\t\t\t\t\t\t\t\t/*******************\n\t\t\t\t\t\t\t\t\t Hooks: Part II\n\t\t\t\t\t\t\t\t\t *******************/\n\n\t\t\t\t\t\t\t\t\t/* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */\n\t\t\t\t\t\t\t\t\tif (CSS.Hooks.registered[property]) {\n\t\t\t\t\t\t\t\t\t\t/* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */\n\t\t\t\t\t\t\t\t\t\tif (CSS.Normalizations.registered[hookRoot]) {\n\t\t\t\t\t\t\t\t\t\t\tData(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot](\"extract\", null, adjustedSetData[1]);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tData(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/***************\n\t\t\t\t\t\t\t\t\t Transforms\n\t\t\t\t\t\t\t\t\t ***************/\n\n\t\t\t\t\t\t\t\t\t/* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */\n\t\t\t\t\t\t\t\t\tif (adjustedSetData[0] === \"transform\") {\n\t\t\t\t\t\t\t\t\t\ttransformPropertyExists = true;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/****************\n\t\t\t\t\t\t mobileHA\n\t\t\t\t\t\t ****************/\n\n\t\t\t\t\t\t/* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.\n\t\t\t\t\t\t It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */\n\t\t\t\t\t\tif (opts.mobileHA) {\n\t\t\t\t\t\t\t/* Don't set the null transform hack if we've already done so. */\n\t\t\t\t\t\t\tif (Data(element).transformCache.translate3d === undefined) {\n\t\t\t\t\t\t\t\t/* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */\n\t\t\t\t\t\t\t\tData(element).transformCache.translate3d = \"(0px, 0px, 0px)\";\n\n\t\t\t\t\t\t\t\ttransformPropertyExists = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (transformPropertyExists) {\n\t\t\t\t\t\t\tCSS.flushTransformCache(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* The non-\"none\" display value is only applied to an element once -- when its associated call is first ticked through.\n\t\t\t\t\t Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */\n\t\t\t\t\tif (opts.display !== undefined && opts.display !== \"none\") {\n\t\t\t\t\t\tVelocity.State.calls[i][2].display = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (opts.visibility !== undefined && opts.visibility !== \"hidden\") {\n\t\t\t\t\t\tVelocity.State.calls[i][2].visibility = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */\n\t\t\t\t\tif (opts.progress) {\n\t\t\t\t\t\topts.progress.call(callContainer[1],\n\t\t\t\t\t\t\t\tcallContainer[1],\n\t\t\t\t\t\t\t\tpercentComplete,\n\t\t\t\t\t\t\t\tMath.max(0, (timeStart + opts.duration) - timeCurrent),\n\t\t\t\t\t\t\t\ttimeStart,\n\t\t\t\t\t\t\t\ttweenDummyValue);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */\n\t\t\t\t\tif (percentComplete === 1) {\n\t\t\t\t\t\tcompleteCall(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */\n\t\t\tif (Velocity.State.isTicking) {\n\t\t\t\tticker(tick);\n\t\t\t}\n\t\t}\n\n\t\t/**********************\n\t\t Call Completion\n\t\t **********************/\n\n\t\t/* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */\n\t\tfunction completeCall(callIndex, isStopped) {\n\t\t\t/* Ensure the call exists. */\n\t\t\tif (!Velocity.State.calls[callIndex]) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* Pull the metadata from the call. */\n\t\t\tvar call = Velocity.State.calls[callIndex][0],\n\t\t\t\t\telements = Velocity.State.calls[callIndex][1],\n\t\t\t\t\topts = Velocity.State.calls[callIndex][2],\n\t\t\t\t\tresolver = Velocity.State.calls[callIndex][4];\n\n\t\t\tvar remainingCallsExist = false;\n\n\t\t\t/*************************\n\t\t\t Element Finalization\n\t\t\t *************************/\n\n\t\t\tfor (var i = 0, callLength = call.length; i < callLength; i++) {\n\t\t\t\tvar element = call[i].element;\n\n\t\t\t\t/* If the user set display to \"none\" (intending to hide the element), set it now that the animation has completed. */\n\t\t\t\t/* Note: display:none isn't set when calls are manually stopped (via Velocity(\"stop\"). */\n\t\t\t\t/* Note: Display gets ignored with \"reverse\" calls and infinite loops, since this behavior would be undesirable. */\n\t\t\t\tif (!isStopped && !opts.loop) {\n\t\t\t\t\tif (opts.display === \"none\") {\n\t\t\t\t\t\tCSS.setPropertyValue(element, \"display\", opts.display);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.visibility === \"hidden\") {\n\t\t\t\t\t\tCSS.setPropertyValue(element, \"visibility\", opts.visibility);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* If the element's queue is empty (if only the \"inprogress\" item is left at position 0) or if its queue is about to run\n\t\t\t\t a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter\n\t\t\t\t an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,\n\t\t\t\t we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag\n\t\t\t\t is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */\n\t\t\t\tvar data = Data(element);\n\n\t\t\t\tif (opts.loop !== true && ($.queue(element)[1] === undefined || !/\\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {\n\t\t\t\t\t/* The element may have been deleted. Ensure that its data cache still exists before acting on it. */\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tdata.isAnimating = false;\n\t\t\t\t\t\t/* Clear the element's rootPropertyValueCache, which will become stale. */\n\t\t\t\t\t\tdata.rootPropertyValueCache = {};\n\n\t\t\t\t\t\tvar transformHAPropertyExists = false;\n\t\t\t\t\t\t/* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */\n\t\t\t\t\t\t$.each(CSS.Lists.transforms3D, function(i, transformName) {\n\t\t\t\t\t\t\tvar defaultValue = /^scale/.test(transformName) ? 1 : 0,\n\t\t\t\t\t\t\t\t\tcurrentValue = data.transformCache[transformName];\n\n\t\t\t\t\t\t\tif (data.transformCache[transformName] !== undefined && new RegExp(\"^\\\\(\" + defaultValue + \"[^.]\").test(currentValue)) {\n\t\t\t\t\t\t\t\ttransformHAPropertyExists = true;\n\n\t\t\t\t\t\t\t\tdelete data.transformCache[transformName];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t/* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */\n\t\t\t\t\t\tif (opts.mobileHA) {\n\t\t\t\t\t\t\ttransformHAPropertyExists = true;\n\t\t\t\t\t\t\tdelete data.transformCache.translate3d;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Flush the subproperty removals to the DOM. */\n\t\t\t\t\t\tif (transformHAPropertyExists) {\n\t\t\t\t\t\t\tCSS.flushTransformCache(element);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Remove the \"velocity-animating\" indicator class. */\n\t\t\t\t\t\tCSS.Values.removeClass(element, \"velocity-animating\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/*********************\n\t\t\t\t Option: Complete\n\t\t\t\t *********************/\n\n\t\t\t\t/* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */\n\t\t\t\t/* Note: Callbacks aren't fired when calls are manually stopped (via Velocity(\"stop\"). */\n\t\t\t\tif (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {\n\t\t\t\t\t/* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */\n\t\t\t\t\ttry {\n\t\t\t\t\t\topts.complete.call(elements, elements);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**********************\n\t\t\t\t Promise Resolving\n\t\t\t\t **********************/\n\n\t\t\t\t/* Note: Infinite loops don't return promises. */\n\t\t\t\tif (resolver && opts.loop !== true) {\n\t\t\t\t\tresolver(elements);\n\t\t\t\t}\n\n\t\t\t\t/****************************\n\t\t\t\t Option: Loop (Infinite)\n\t\t\t\t ****************************/\n\n\t\t\t\tif (data && opts.loop === true && !isStopped) {\n\t\t\t\t\t/* If a rotateX/Y/Z property is being animated by 360 deg with loop:true, swap tween start/end values to enable\n\t\t\t\t\t continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */\n\t\t\t\t\t$.each(data.tweensContainer, function(propertyName, tweenContainer) {\n\t\t\t\t\t\tif (/^rotate/.test(propertyName) && ((parseFloat(tweenContainer.startValue) - parseFloat(tweenContainer.endValue)) % 360 === 0)) {\n\t\t\t\t\t\t\tvar oldStartValue = tweenContainer.startValue;\n\n\t\t\t\t\t\t\ttweenContainer.startValue = tweenContainer.endValue;\n\t\t\t\t\t\t\ttweenContainer.endValue = oldStartValue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === \"%\") {\n\t\t\t\t\t\t\ttweenContainer.endValue = 0;\n\t\t\t\t\t\t\ttweenContainer.startValue = 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tVelocity(element, \"reverse\", {loop: true, delay: opts.delay});\n\t\t\t\t}\n\n\t\t\t\t/***************\n\t\t\t\t Dequeueing\n\t\t\t\t ***************/\n\n\t\t\t\t/* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),\n\t\t\t\t which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,\n\t\t\t\t $.dequeue() must still be called in order to completely clear jQuery's animation queue. */\n\t\t\t\tif (opts.queue !== false) {\n\t\t\t\t\t$.dequeue(element, opts.queue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/************************\n\t\t\t Calls Array Cleanup\n\t\t\t ************************/\n\n\t\t\t/* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().\n\t\t\t (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */\n\t\t\tVelocity.State.calls[callIndex] = false;\n\n\t\t\t/* Iterate through the calls array to determine if this was the final in-progress animation.\n\t\t\t If so, set a flag to end ticking and clear the calls array. */\n\t\t\tfor (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {\n\t\t\t\tif (Velocity.State.calls[j] !== false) {\n\t\t\t\t\tremainingCallsExist = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (remainingCallsExist === false) {\n\t\t\t\t/* tick() will detect this flag upon its next iteration and subsequently turn itself off. */\n\t\t\t\tVelocity.State.isTicking = false;\n\n\t\t\t\t/* Clear the calls array so that its length is reset. */\n\t\t\t\tdelete Velocity.State.calls;\n\t\t\t\tVelocity.State.calls = [];\n\t\t\t}\n\t\t}\n\n\t\t/******************\n\t\t Frameworks\n\t\t ******************/\n\n\t\t/* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.\n\t\t If either framework is loaded, register a \"velocity\" extension pointing to Velocity's core animate() method.  Velocity\n\t\t also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are\n\t\t accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn\n\t\t (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */\n\t\tglobal.Velocity = Velocity;\n\n\t\tif (global !== window) {\n\t\t\t/* Assign the element function to Velocity's core animate() method. */\n\t\t\tglobal.fn.velocity = animate;\n\t\t\t/* Assign the object function's defaults to Velocity's global defaults object. */\n\t\t\tglobal.fn.velocity.defaults = Velocity.defaults;\n\t\t}\n\n\t\t/***********************\n\t\t Packaged Redirects\n\t\t ***********************/\n\n\t\t/* slideUp, slideDown */\n\t\t$.each([\"Down\", \"Up\"], function(i, direction) {\n\t\t\tVelocity.Redirects[\"slide\" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {\n\t\t\t\tvar opts = $.extend({}, options),\n\t\t\t\t\t\tbegin = opts.begin,\n\t\t\t\t\t\tcomplete = opts.complete,\n\t\t\t\t\t\tinlineValues = {},\n\t\t\t\t\t\tcomputedValues = {height: \"\", marginTop: \"\", marginBottom: \"\", paddingTop: \"\", paddingBottom: \"\"};\n\n\t\t\t\tif (opts.display === undefined) {\n\t\t\t\t\t/* Show the element before slideDown begins and hide the element after slideUp completes. */\n\t\t\t\t\t/* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */\n\t\t\t\t\topts.display = (direction === \"Down\" ? (Velocity.CSS.Values.getDisplayType(element) === \"inline\" ? \"inline-block\" : \"block\") : \"none\");\n\t\t\t\t}\n\n\t\t\t\topts.begin = function() {\n\t\t\t\t\t/* If the user passed in a begin callback, fire it now. */\n\t\t\t\t\tif (elementsIndex === 0 && begin) {\n\t\t\t\t\t\tbegin.call(elements, elements);\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Cache the elements' original vertical dimensional property values so that we can animate back to them. */\n\t\t\t\t\tfor (var property in computedValues) {\n\t\t\t\t\t\tif (!computedValues.hasOwnProperty(property)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinlineValues[property] = element.style[property];\n\n\t\t\t\t\t\t/* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,\n\t\t\t\t\t\t use forcefeeding to start from computed values and animate down to 0. */\n\t\t\t\t\t\tvar propertyValue = CSS.getPropertyValue(element, property);\n\t\t\t\t\t\tcomputedValues[property] = (direction === \"Down\") ? [propertyValue, 0] : [0, propertyValue];\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Force vertical overflow content to clip so that sliding works as expected. */\n\t\t\t\t\tinlineValues.overflow = element.style.overflow;\n\t\t\t\t\telement.style.overflow = \"hidden\";\n\t\t\t\t};\n\n\t\t\t\topts.complete = function() {\n\t\t\t\t\t/* Reset element to its pre-slide inline values once its slide animation is complete. */\n\t\t\t\t\tfor (var property in inlineValues) {\n\t\t\t\t\t\tif (inlineValues.hasOwnProperty(property)) {\n\t\t\t\t\t\t\telement.style[property] = inlineValues[property];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* If the user passed in a complete callback, fire it now. */\n\t\t\t\t\tif (elementsIndex === elementsSize - 1) {\n\t\t\t\t\t\tif (complete) {\n\t\t\t\t\t\t\tcomplete.call(elements, elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (promiseData) {\n\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tVelocity(element, computedValues, opts);\n\t\t\t};\n\t\t});\n\n\t\t/* fadeIn, fadeOut */\n\t\t$.each([\"In\", \"Out\"], function(i, direction) {\n\t\t\tVelocity.Redirects[\"fade\" + direction] = function(element, options, elementsIndex, elementsSize, elements, promiseData) {\n\t\t\t\tvar opts = $.extend({}, options),\n\t\t\t\t\t\tcomplete = opts.complete,\n\t\t\t\t\t\tpropertiesMap = {opacity: (direction === \"In\") ? 1 : 0};\n\n\t\t\t\t/* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering\n\t\t\t\t callbacks by firing them only when the final element has been reached. */\n\t\t\t\tif (elementsIndex !== 0) {\n\t\t\t\t\topts.begin = null;\n\t\t\t\t}\n\t\t\t\tif (elementsIndex !== elementsSize - 1) {\n\t\t\t\t\topts.complete = null;\n\t\t\t\t} else {\n\t\t\t\t\topts.complete = function() {\n\t\t\t\t\t\tif (complete) {\n\t\t\t\t\t\t\tcomplete.call(elements, elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (promiseData) {\n\t\t\t\t\t\t\tpromiseData.resolver(elements);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t/* If a display was passed in, use it. Otherwise, default to \"none\" for fadeOut or the element-specific default for fadeIn. */\n\t\t\t\t/* Note: We allow users to pass in \"null\" to skip display setting altogether. */\n\t\t\t\tif (opts.display === undefined) {\n\t\t\t\t\topts.display = (direction === \"In\" ? \"auto\" : \"none\");\n\t\t\t\t}\n\n\t\t\t\tVelocity(this, propertiesMap, opts);\n\t\t\t};\n\t\t});\n\n\t\treturn Velocity;\n\t}((window.jQuery || window.Zepto || window), window, (window ? window.document : undefined));\n}));\n\n/******************\n Known Issues\n ******************/\n\n/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.\n Velocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties\n will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */\n"],"names":["global","factory","document","w","Error","window","this","noGlobal","arr","slice","concat","push","indexOf","class2type","toString","hasOwn","hasOwnProperty","support","version","jQuery","selector","context","fn","init","rdashAlpha","fcamelCase","all","letter","toUpperCase","prototype","call","num","length","elems","ret","merge","constructor","prevObject","callback","each","pushStack","map","elem","i","apply","arguments","eq","len","j","sort","splice","extend","options","name","src","copy","copyIsArray","clone","target","deep","isFunction","isPlainObject","isArray","undefined","Math","random","replace","msg","obj","type","Array","realStringObj","parseFloat","nodeType","isWindow","code","script","indirect","eval","trim","createElement","text","head","appendChild","parentNode","removeChild","string","rmsPrefix","nodeName","toLowerCase","isArrayLike","rtrim","results","Object","first","second","invert","callbackInverse","matches","callbackExpect","arg","value","tmp","args","proxy","guid","Date","now","Symbol","iterator","split","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","list","booleans","whitespace","identifier","pseudos","attributes","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","rinputs","rheader","rnative","rsibling","rescape","funescape","_","escaped","escapedWhitespace","high","fromCharCode","unloadHandler","childNodes","e","els","seed","m","nid","nidselect","match","groups","newSelector","newContext","ownerDocument","rquickExpr","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","getAttribute","setAttribute","expando","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","key","cacheLength","shift","markFunction","assert","div","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","MAX_NEGATIVE","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","documentElement","setDocument","node","hasCompare","parent","doc","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","find","filter","attrId","runescape","getAttributeNode","tag","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","error","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","dir","excess","unquoted","nodeNameSelector","pattern","operator","check","result","rwhitespace","what","last","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","matcher","unmatched","innerText","lang","elemLang","hash","location","activeElement","hasFocus","href","tabIndex","disabled","checked","selected","selectedIndex","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","tokens","soFar","preFilters","cached","preFilter","addCombinator","combinator","base","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","multipleContexts","contexts","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","matcherOut","matcherIn","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchAnyContext","matchContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","token","compiled","div1","defaultValue","unique","isXMLDoc","until","truncate","is","siblings","n","rneedsContext","needsContext","rsingleTag","risSimple","winnow","qualifier","not","grep","self","rootjQuery","root","parseHTML","jquery","ready","makeArray","rparentsprev","targets","l","pos","index","prevAll","get","add","sibling","contentDocument","guaranteedUnique","reverse","rnotwhite","createOptions","object","flag","Callbacks","fire","once","firing","queue","firingIndex","memory","stopOnFalse","locked","has","inArray","fireWith","fired","func","tuples","state","promise","fail","fns","Deferred","newDefer","tuple","returned","progress","notify","resolve","reject","deferred","pipe","then","stateString","disable","lock","subordinate","resolveValues","remaining","updateFunc","values","progressValues","notifyWith","resolveWith","progressContexts","resolveContexts","readyList","hold","readyWait","wait","isReady","triggerHandler","off","completed","removeEventListener","readyState","doScroll","setTimeout","access","chainable","emptyGet","raw","bulk","acceptData","owner","Data","uid","initial","defineProperty","data","prop","stored","camelCase","set","camel","register","isEmptyObject","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","parseJSON","hasData","remove","camelKey","startLength","hooks","_queueHooks","next","dequeue","stop","empty","setter","count","defer","pnum","source","rcssNum","cssExpand","isHidden","el","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","unit","cssNumber","initialInUnit","style","end","rcheckableType","rtagName","rscriptType","wrapMap","optgroup","option","tbody","tfoot","colgroup","caption","thead","th","td","getAll","setGlobalEval","refElements","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","createTextNode","_default","htmlPrefilter","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","on","types","one","origFn","event","handleObjIn","eventHandle","events","t","handleObj","special","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","delegateCount","setup","mappedTypes","origCount","namespace","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","sel","isNaN","button","original","which","charCode","keyCode","eventDoc","body","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","fixHooks","mouseHooks","keyHooks","props","Event","focus","blur","click","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","stopImmediatePropagation","orig","related","relatedTarget","rxhtmlTag","rscriptTypeMasked","rcleanScript","manipulationTarget","content","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","rchecked","html","_evalUrl","globalEval","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","insertBefore","rnoInnerhtml","append","replaceChild","insert","iframe","elemdisplay","actualDisplay","appendTo","display","detach","defaultDisplay","write","close","rmargin","rnumnonpx","getStyles","view","opener","getComputedStyle","swap","old","pixelPositionVal","boxSizingReliableVal","pixelMarginRightVal","reliableMarginLeftVal","container","backgroundClip","clearCloneStyle","cssText","computeStyleTests","divStyle","marginLeft","width","marginRight","marginDiv","curCSS","computed","minWidth","maxWidth","getPropertyValue","pixelMarginRight","addGetHookIf","conditionFn","hookFn","cssShow","position","visibility","cssNormalTransform","cssPrefixes","emptyStyle","vendorPropName","capName","setPositiveNumber","subtract","max","augmentWidthOrHeight","extra","isBorderBox","styles","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","msFullscreenElement","getClientRects","round","getBoundingClientRect","boxSizingReliable","showHide","show","hidden","origName","cssProps","cssHooks","isFinite","rdisplayswap","reliableMarginLeft","left","reliableMarginRight","prefix","suffix","expanded","parts","hide","Tween","easing","propHooks","percent","eased","duration","step","fx","p","cos","PI","fxNow","timerId","rfxtypes","rrun","createFxNow","genFx","includeWidth","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","opts","toggle","oldfire","checkDisplay","anim","dataShow","unqueued","always","overflow","overflowX","overflowY","propFilter","specialEasing","expand","properties","stopped","prefilters","tick","currentTime","startTime","tweens","run","gotoEnd","rejectWith","timer","complete","prepend","speed","opt","speeds","to","animate","optall","doAnimation","finish","clearQueue","stopQueue","timers","cssFn","interval","setInterval","clearInterval","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","bool","propName","attrNames","propFix","getter","rfocusable","rclickable","tabindex","parseInt","rclass","getClass","classes","curValue","clazz","finalValue","addClass","removeClass","stateVal","toggleClass","classNames","hasClass","rreturn","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","trigger","noBubble","parentWindow","fnOver","fnOut","mouseenter","mouseleave","focusin","simulate","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rnoContent","rprotocol","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","originalOptions","jqXHR","inspected","seekingTransport","transports","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","throws","rlocalProtocol","protocol","allTypes","String","settings","url","transport","responseHeaders","ajaxSetup","callbackContext","completeDeferred","statusCode","requestHeadersNames","responseHeadersString","lname","status","statusText","finalText","strAbort","abort","success","method","crossDomain","urlAnchor","originAnchor","host","processData","param","traditional","fireGlobals","active","hasContent","cacheURL","ifModified","lastModified","setRequestHeader","etag","contentType","accepts","headers","beforeSend","async","send","requestHeaders","nativeStatusText","modified","timeoutTimer","ajax","wrapAll","firstElementChild","wrapInner","replaceWith","visible","r20","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","v","encodeURIComponent","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","xhrSupported","cors","ajaxTransport","errorCallback","open","username","xhrFields","overrideMimeType","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","getAllResponseHeaders","ajaxPrefilter","scriptCharset","evt","oldCallbacks","rjsonp","originalSettings","callbackName","overwritten","responseContainer","jsonProp","jsonp","jsonpCallback","removeProp","createHTMLDocument","implementation","keepScripts","parsed","_load","load","params","animated","getWindow","offset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","setOffset","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","pixelPosition","Height","Width","padding","defaultExtra","funcName","margin","andSelf","addBack","define","amd","$","noConflict","_$","_jQuery","transitionEnd","transEndEventNames","emulateTransitionEnd","called","$el","transition","bsTransitionEnd","dismiss","Alert","VERSION","TRANSITION_DURATION","$this","$parent","closest","removeElement","Plugin","alert","Constructor","Button","element","$element","DEFAULTS","isLoading","setState","d","resetText","changed","$input","$btn","Carousel","$indicators","paused","sliding","$active","$items","keyboard","keydown","pause","cycle","tagName","getItemIndex","item","children","getItemForDirection","direction","activeIndex","willWrap","delta","itemIndex","that","slide","$next","isCycling","slideEvent","$nextIndicator","slidEvent","action","carousel","clickHandler","$target","slideIndex","$carousel","Collapse","$trigger","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","activesData","actives","startEvent","scrollSize","getTargetFromTrigger","isOpen","collapse","backdrop","Dropdown","clearMenus","isActive","insertAfter","desc","dropdown","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","BACKDROP_TRANSITION_DURATION","_relatedTarget","checkScrollbar","setScrollbar","escape","resize","adjustDialog","enforceFocus","hideModal","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","callbackRemove","modalIsOverflowing","scrollHeight","clientHeight","bodyIsOverflowing","fullWindowWidth","innerWidth","documentElementRect","right","abs","clientWidth","measureScrollbar","bodyPad","paddingRight","scrollDiv","modal","showEvent","Tooltip","enabled","hoverState","inState","getOptions","$viewport","viewport","hover","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","defaults","tip","isInStateTrue","inDom","$tip","tipId","getUID","setContent","placement","autoToken","autoPlace","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","bottom","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","title","getTitle","$e","isBody","elRect","isSvg","SVGElement","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","o","template","$arrow","enable","toggleEnabled","destroy","removeData","tooltip","Popover","getContent","popover","ScrollSpy","$scrollElement","offsets","activeTarget","process","refresh","getScrollHeight","offsetMethod","offsetBase","$href","maxScroll","activate","clear","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Datepicker","format","DPGlobal","parseFormat","picker","isInput","component","update","minViewMode","viewMode","color","startViewMode","weekStart","weekEnd","onRender","fillDow","fillMonths","showMode","datepicker","outerHeight","place","ev","date","formated","formatDate","newDate","parseDate","viewDate","getFullYear","getMonth","fill","dowCnt","dates","daysMin","monthsShort","year","month","currentDate","valueOf","months","prevMonth","day","getDaysInMonth","setDate","getDay","nextMonth","getDate","clsName","prevY","prevM","currentYear","yearCont","modes","navFnc","navStep","setMonth","setFullYear","min","isLeapYear","separator","setHours","setMinutes","setSeconds","setMilliseconds","cnt","substring","dd","mm","headTemplate","contTemplate","ctrlKey","metaKey","altKey","notmdproc","material","validate","ripples","togglebutton","arrive","autofill","withRipples","inputElements","checkboxElements","togglebuttonElements","radioElements","after","r","attachInputEventHandlers","checkValidity","files","attachAutofillEventHandlers","_defaults","_name","isTouch","getRelY","getRelX","getRipplesColor","rippleOn","rippleEnd","rippleOut","getNewSize","outerWidth","touches","hasTransitionSupport","WebkitTransition","MozTransition","MsTransition","OTransition","navigator","userAgent","transform","transparent","materialKit","checkScrollForTransparentNavbar","debounce","noUiSlider","immediate"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}