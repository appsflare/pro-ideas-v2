{"version":3,"file":"index.bundle.js","sources":["wwwroot/lib/jquery/dist/jquery.js","Scripts/lib/jquery-global.js","node_modules/jquery-mousewheel/jquery.mousewheel.js","node_modules/malihu-custom-scrollbar-plugin/jquery.mCustomScrollbar.js","Scripts/lib/jquery.plugins.js","wwwroot/lib/bootstrap/dist/js/bootstrap.js","Scripts/lib/bootstrap-datepicker.js","Scripts/lib/material.min.js","Scripts/lib/material-kit.js","Scripts/lib/index.js"],"sourcesContent":["/*!\r\n * jQuery JavaScript Library v2.2.0\r\n * http://jquery.com/\r\n *\r\n * Includes Sizzle.js\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2016-01-08T20:02Z\r\n */\r\n\r\n(function( global, factory ) {\r\n\r\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\r\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\r\n\t\t// is present, execute the factory and get jQuery.\r\n\t\t// For environments that do not have a `window` with a `document`\r\n\t\t// (such as Node.js), expose a factory as module.exports.\r\n\t\t// This accentuates the need for the creation of a real `window`.\r\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\r\n\t\t// See ticket #14549 for more info.\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory( global, true ) :\r\n\t\t\tfunction( w ) {\r\n\t\t\t\tif ( !w.document ) {\r\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\r\n\t\t\t\t}\r\n\t\t\t\treturn factory( w );\r\n\t\t\t};\r\n\t} else {\r\n\t\tfactory( global );\r\n\t}\r\n\r\n// Pass this if window is not defined yet\r\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\r\n\r\n// Support: Firefox 18+\r\n// Can't be in strict mode, several libs including ASP.NET trace\r\n// the stack via arguments.caller.callee and Firefox dies if\r\n// you try to trace through \"use strict\" call chains. (#13335)\r\n//\"use strict\";\r\nvar arr = [];\r\n\r\nvar document = window.document;\r\n\r\nvar slice = arr.slice;\r\n\r\nvar concat = arr.concat;\r\n\r\nvar push = arr.push;\r\n\r\nvar indexOf = arr.indexOf;\r\n\r\nvar class2type = {};\r\n\r\nvar toString = class2type.toString;\r\n\r\nvar hasOwn = class2type.hasOwnProperty;\r\n\r\nvar support = {};\r\n\r\n\r\n\r\nvar\r\n\tversion = \"2.2.0\",\r\n\r\n\t// Define a local copy of jQuery\r\n\tjQuery = function( selector, context ) {\r\n\r\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\r\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\r\n\t\treturn new jQuery.fn.init( selector, context );\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\t// Make sure we trim BOM and NBSP\r\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\r\n\r\n\t// Matches dashed string for camelizing\r\n\trmsPrefix = /^-ms-/,\r\n\trdashAlpha = /-([\\da-z])/gi,\r\n\r\n\t// Used by jQuery.camelCase as callback to replace()\r\n\tfcamelCase = function( all, letter ) {\r\n\t\treturn letter.toUpperCase();\r\n\t};\r\n\r\njQuery.fn = jQuery.prototype = {\r\n\r\n\t// The current version of jQuery being used\r\n\tjquery: version,\r\n\r\n\tconstructor: jQuery,\r\n\r\n\t// Start with an empty selector\r\n\tselector: \"\",\r\n\r\n\t// The default length of a jQuery object is 0\r\n\tlength: 0,\r\n\r\n\ttoArray: function() {\r\n\t\treturn slice.call( this );\r\n\t},\r\n\r\n\t// Get the Nth element in the matched element set OR\r\n\t// Get the whole matched element set as a clean array\r\n\tget: function( num ) {\r\n\t\treturn num != null ?\r\n\r\n\t\t\t// Return just the one element from the set\r\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\r\n\r\n\t\t\t// Return all the elements in a clean array\r\n\t\t\tslice.call( this );\r\n\t},\r\n\r\n\t// Take an array of elements and push it onto the stack\r\n\t// (returning the new matched element set)\r\n\tpushStack: function( elems ) {\r\n\r\n\t\t// Build a new jQuery matched element set\r\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\r\n\r\n\t\t// Add the old object onto the stack (as a reference)\r\n\t\tret.prevObject = this;\r\n\t\tret.context = this.context;\r\n\r\n\t\t// Return the newly-formed element set\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t// Execute a callback for every element in the matched set.\r\n\teach: function( callback ) {\r\n\t\treturn jQuery.each( this, callback );\r\n\t},\r\n\r\n\tmap: function( callback ) {\r\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\r\n\t\t\treturn callback.call( elem, i, elem );\r\n\t\t} ) );\r\n\t},\r\n\r\n\tslice: function() {\r\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\r\n\t},\r\n\r\n\tfirst: function() {\r\n\t\treturn this.eq( 0 );\r\n\t},\r\n\r\n\tlast: function() {\r\n\t\treturn this.eq( -1 );\r\n\t},\r\n\r\n\teq: function( i ) {\r\n\t\tvar len = this.length,\r\n\t\t\tj = +i + ( i < 0 ? len : 0 );\r\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\r\n\t},\r\n\r\n\tend: function() {\r\n\t\treturn this.prevObject || this.constructor();\r\n\t},\r\n\r\n\t// For internal use only.\r\n\t// Behaves like an Array's method, not like a jQuery method.\r\n\tpush: push,\r\n\tsort: arr.sort,\r\n\tsplice: arr.splice\r\n};\r\n\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\tvar options, name, src, copy, copyIsArray, clone,\r\n\t\ttarget = arguments[ 0 ] || {},\r\n\t\ti = 1,\r\n\t\tlength = arguments.length,\r\n\t\tdeep = false;\r\n\r\n\t// Handle a deep copy situation\r\n\tif ( typeof target === \"boolean\" ) {\r\n\t\tdeep = target;\r\n\r\n\t\t// Skip the boolean and the target\r\n\t\ttarget = arguments[ i ] || {};\r\n\t\ti++;\r\n\t}\r\n\r\n\t// Handle case when target is a string or something (possible in deep copy)\r\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\r\n\t\ttarget = {};\r\n\t}\r\n\r\n\t// Extend jQuery itself if only one argument is passed\r\n\tif ( i === length ) {\r\n\t\ttarget = this;\r\n\t\ti--;\r\n\t}\r\n\r\n\tfor ( ; i < length; i++ ) {\r\n\r\n\t\t// Only deal with non-null/undefined values\r\n\t\tif ( ( options = arguments[ i ] ) != null ) {\r\n\r\n\t\t\t// Extend the base object\r\n\t\t\tfor ( name in options ) {\r\n\t\t\t\tsrc = target[ name ];\r\n\t\t\t\tcopy = options[ name ];\r\n\r\n\t\t\t\t// Prevent never-ending loop\r\n\t\t\t\tif ( target === copy ) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Recurse if we're merging plain objects or arrays\r\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\r\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\r\n\r\n\t\t\t\t\tif ( copyIsArray ) {\r\n\t\t\t\t\t\tcopyIsArray = false;\r\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Never move original objects, clone them\r\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\r\n\r\n\t\t\t\t// Don't bring in undefined values\r\n\t\t\t\t} else if ( copy !== undefined ) {\r\n\t\t\t\t\ttarget[ name ] = copy;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the modified object\r\n\treturn target;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Unique for each copy of jQuery on the page\r\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\r\n\r\n\t// Assume jQuery is ready without the ready module\r\n\tisReady: true,\r\n\r\n\terror: function( msg ) {\r\n\t\tthrow new Error( msg );\r\n\t},\r\n\r\n\tnoop: function() {},\r\n\r\n\tisFunction: function( obj ) {\r\n\t\treturn jQuery.type( obj ) === \"function\";\r\n\t},\r\n\r\n\tisArray: Array.isArray,\r\n\r\n\tisWindow: function( obj ) {\r\n\t\treturn obj != null && obj === obj.window;\r\n\t},\r\n\r\n\tisNumeric: function( obj ) {\r\n\r\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n\t\t// subtraction forces infinities to NaN\r\n\t\t// adding 1 corrects loss of precision from parseFloat (#15100)\r\n\t\tvar realStringObj = obj && obj.toString();\r\n\t\treturn !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;\r\n\t},\r\n\r\n\tisPlainObject: function( obj ) {\r\n\r\n\t\t// Not plain objects:\r\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\r\n\t\t// - DOM nodes\r\n\t\t// - window\r\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif ( obj.constructor &&\r\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If the function hasn't returned already, we're confident that\r\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\r\n\t\treturn true;\r\n\t},\r\n\r\n\tisEmptyObject: function( obj ) {\r\n\t\tvar name;\r\n\t\tfor ( name in obj ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\ttype: function( obj ) {\r\n\t\tif ( obj == null ) {\r\n\t\t\treturn obj + \"\";\r\n\t\t}\r\n\r\n\t\t// Support: Android<4.0, iOS<6 (functionish RegExp)\r\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\r\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\r\n\t\t\ttypeof obj;\r\n\t},\r\n\r\n\t// Evaluates a script in a global context\r\n\tglobalEval: function( code ) {\r\n\t\tvar script,\r\n\t\t\tindirect = eval;\r\n\r\n\t\tcode = jQuery.trim( code );\r\n\r\n\t\tif ( code ) {\r\n\r\n\t\t\t// If the code includes a valid, prologue position\r\n\t\t\t// strict mode pragma, execute code by injecting a\r\n\t\t\t// script tag into the document.\r\n\t\t\tif ( code.indexOf( \"use strict\" ) === 1 ) {\r\n\t\t\t\tscript = document.createElement( \"script\" );\r\n\t\t\t\tscript.text = code;\r\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Otherwise, avoid the DOM node creation, insertion\r\n\t\t\t\t// and removal by using an indirect global eval\r\n\r\n\t\t\t\tindirect( code );\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Convert dashed to camelCase; used by the css and data modules\r\n\t// Support: IE9-11+\r\n\t// Microsoft forgot to hump their vendor prefix (#9572)\r\n\tcamelCase: function( string ) {\r\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\r\n\t},\r\n\r\n\tnodeName: function( elem, name ) {\r\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\r\n\t},\r\n\r\n\teach: function( obj, callback ) {\r\n\t\tvar length, i = 0;\r\n\r\n\t\tif ( isArrayLike( obj ) ) {\r\n\t\t\tlength = obj.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor ( i in obj ) {\r\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t},\r\n\r\n\t// Support: Android<4.1\r\n\ttrim: function( text ) {\r\n\t\treturn text == null ?\r\n\t\t\t\"\" :\r\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\r\n\t},\r\n\r\n\t// results is for internal usage only\r\n\tmakeArray: function( arr, results ) {\r\n\t\tvar ret = results || [];\r\n\r\n\t\tif ( arr != null ) {\r\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\r\n\t\t\t\tjQuery.merge( ret,\r\n\t\t\t\t\ttypeof arr === \"string\" ?\r\n\t\t\t\t\t[ arr ] : arr\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tpush.call( ret, arr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\tinArray: function( elem, arr, i ) {\r\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\r\n\t},\r\n\r\n\tmerge: function( first, second ) {\r\n\t\tvar len = +second.length,\r\n\t\t\tj = 0,\r\n\t\t\ti = first.length;\r\n\r\n\t\tfor ( ; j < len; j++ ) {\r\n\t\t\tfirst[ i++ ] = second[ j ];\r\n\t\t}\r\n\r\n\t\tfirst.length = i;\r\n\r\n\t\treturn first;\r\n\t},\r\n\r\n\tgrep: function( elems, callback, invert ) {\r\n\t\tvar callbackInverse,\r\n\t\t\tmatches = [],\r\n\t\t\ti = 0,\r\n\t\t\tlength = elems.length,\r\n\t\t\tcallbackExpect = !invert;\r\n\r\n\t\t// Go through the array, only saving the items\r\n\t\t// that pass the validator function\r\n\t\tfor ( ; i < length; i++ ) {\r\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\r\n\t\t\tif ( callbackInverse !== callbackExpect ) {\r\n\t\t\t\tmatches.push( elems[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matches;\r\n\t},\r\n\r\n\t// arg is for internal usage only\r\n\tmap: function( elems, callback, arg ) {\r\n\t\tvar length, value,\r\n\t\t\ti = 0,\r\n\t\t\tret = [];\r\n\r\n\t\t// Go through the array, translating each of the items to their new values\r\n\t\tif ( isArrayLike( elems ) ) {\r\n\t\t\tlength = elems.length;\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Go through every key on the object,\r\n\t\t} else {\r\n\t\t\tfor ( i in elems ) {\r\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\r\n\r\n\t\t\t\tif ( value != null ) {\r\n\t\t\t\t\tret.push( value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Flatten any nested arrays\r\n\t\treturn concat.apply( [], ret );\r\n\t},\r\n\r\n\t// A global GUID counter for objects\r\n\tguid: 1,\r\n\r\n\t// Bind a function to a context, optionally partially applying any\r\n\t// arguments.\r\n\tproxy: function( fn, context ) {\r\n\t\tvar tmp, args, proxy;\r\n\r\n\t\tif ( typeof context === \"string\" ) {\r\n\t\t\ttmp = fn[ context ];\r\n\t\t\tcontext = fn;\r\n\t\t\tfn = tmp;\r\n\t\t}\r\n\r\n\t\t// Quick check to determine if target is callable, in the spec\r\n\t\t// this throws a TypeError, but we will just return undefined.\r\n\t\tif ( !jQuery.isFunction( fn ) ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t\t// Simulated bind\r\n\t\targs = slice.call( arguments, 2 );\r\n\t\tproxy = function() {\r\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\r\n\t\t};\r\n\r\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\r\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\r\n\r\n\t\treturn proxy;\r\n\t},\r\n\r\n\tnow: Date.now,\r\n\r\n\t// jQuery.support is not used in Core but other projects attach their\r\n\t// properties to it so it needs to exist.\r\n\tsupport: support\r\n} );\r\n\r\n// JSHint would error on this code due to the Symbol not being defined in ES5.\r\n// Defining this global in .jshintrc would create a danger of using the global\r\n// unguarded in another place, it seems safer to just disable JSHint for these\r\n// three lines.\r\n/* jshint ignore: start */\r\nif ( typeof Symbol === \"function\" ) {\r\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\r\n}\r\n/* jshint ignore: end */\r\n\r\n// Populate the class2type map\r\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\r\nfunction( i, name ) {\r\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\r\n} );\r\n\r\nfunction isArrayLike( obj ) {\r\n\r\n\t// Support: iOS 8.2 (not reproducible in simulator)\r\n\t// `in` check used to prevent JIT error (gh-2145)\r\n\t// hasOwn isn't used here due to false negatives\r\n\t// regarding Nodelist length in IE\r\n\tvar length = !!obj && \"length\" in obj && obj.length,\r\n\t\ttype = jQuery.type( obj );\r\n\r\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn type === \"array\" || length === 0 ||\r\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\r\n}\r\nvar Sizzle =\r\n/*!\r\n * Sizzle CSS Selector Engine v2.2.1\r\n * http://sizzlejs.com/\r\n *\r\n * Copyright jQuery Foundation and other contributors\r\n * Released under the MIT license\r\n * http://jquery.org/license\r\n *\r\n * Date: 2015-10-17\r\n */\r\n(function( window ) {\r\n\r\nvar i,\r\n\tsupport,\r\n\tExpr,\r\n\tgetText,\r\n\tisXML,\r\n\ttokenize,\r\n\tcompile,\r\n\tselect,\r\n\toutermostContext,\r\n\tsortInput,\r\n\thasDuplicate,\r\n\r\n\t// Local document vars\r\n\tsetDocument,\r\n\tdocument,\r\n\tdocElem,\r\n\tdocumentIsHTML,\r\n\trbuggyQSA,\r\n\trbuggyMatches,\r\n\tmatches,\r\n\tcontains,\r\n\r\n\t// Instance-specific data\r\n\texpando = \"sizzle\" + 1 * new Date(),\r\n\tpreferredDoc = window.document,\r\n\tdirruns = 0,\r\n\tdone = 0,\r\n\tclassCache = createCache(),\r\n\ttokenCache = createCache(),\r\n\tcompilerCache = createCache(),\r\n\tsortOrder = function( a, b ) {\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t}\r\n\t\treturn 0;\r\n\t},\r\n\r\n\t// General-purpose constants\r\n\tMAX_NEGATIVE = 1 << 31,\r\n\r\n\t// Instance methods\r\n\thasOwn = ({}).hasOwnProperty,\r\n\tarr = [],\r\n\tpop = arr.pop,\r\n\tpush_native = arr.push,\r\n\tpush = arr.push,\r\n\tslice = arr.slice,\r\n\t// Use a stripped-down indexOf as it's faster than native\r\n\t// http://jsperf.com/thor-indexof-vs-for/5\r\n\tindexOf = function( list, elem ) {\r\n\t\tvar i = 0,\r\n\t\t\tlen = list.length;\r\n\t\tfor ( ; i < len; i++ ) {\r\n\t\t\tif ( list[i] === elem ) {\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t},\r\n\r\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\r\n\r\n\t// Regular expressions\r\n\r\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\r\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\r\n\r\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\r\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\r\n\r\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\r\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\r\n\t\t// Operator (capture 2)\r\n\t\t\"*([*^$|!~]?=)\" + whitespace +\r\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\r\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\r\n\t\t\"*\\\\]\",\r\n\r\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\r\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\r\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\r\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\r\n\t\t// 2. simple (capture 6)\r\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\r\n\t\t// 3. anything else (capture 2)\r\n\t\t\".*\" +\r\n\t\t\")\\\\)|)\",\r\n\r\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\r\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\r\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\r\n\r\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\r\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\r\n\r\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\r\n\r\n\trpseudo = new RegExp( pseudos ),\r\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\r\n\r\n\tmatchExpr = {\r\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\r\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\r\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\r\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\r\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\r\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\r\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\r\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\r\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\r\n\t\t// For use in libraries implementing .is()\r\n\t\t// We use this for POS matching in `select`\r\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\r\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\r\n\t},\r\n\r\n\trinputs = /^(?:input|select|textarea|button)$/i,\r\n\trheader = /^h\\d$/i,\r\n\r\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\r\n\r\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\r\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\r\n\r\n\trsibling = /[+~]/,\r\n\trescape = /'|\\\\/g,\r\n\r\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\r\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\r\n\tfunescape = function( _, escaped, escapedWhitespace ) {\r\n\t\tvar high = \"0x\" + escaped - 0x10000;\r\n\t\t// NaN means non-codepoint\r\n\t\t// Support: Firefox<24\r\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\r\n\t\treturn high !== high || escapedWhitespace ?\r\n\t\t\tescaped :\r\n\t\t\thigh < 0 ?\r\n\t\t\t\t// BMP codepoint\r\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\r\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\r\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\r\n\t},\r\n\r\n\t// Used for iframes\r\n\t// See setDocument()\r\n\t// Removing the function wrapper causes a \"Permission Denied\"\r\n\t// error in IE\r\n\tunloadHandler = function() {\r\n\t\tsetDocument();\r\n\t};\r\n\r\n// Optimize for push.apply( _, NodeList )\r\ntry {\r\n\tpush.apply(\r\n\t\t(arr = slice.call( preferredDoc.childNodes )),\r\n\t\tpreferredDoc.childNodes\r\n\t);\r\n\t// Support: Android<4.0\r\n\t// Detect silently failing push.apply\r\n\tarr[ preferredDoc.childNodes.length ].nodeType;\r\n} catch ( e ) {\r\n\tpush = { apply: arr.length ?\r\n\r\n\t\t// Leverage slice if possible\r\n\t\tfunction( target, els ) {\r\n\t\t\tpush_native.apply( target, slice.call(els) );\r\n\t\t} :\r\n\r\n\t\t// Support: IE<9\r\n\t\t// Otherwise append directly\r\n\t\tfunction( target, els ) {\r\n\t\t\tvar j = target.length,\r\n\t\t\t\ti = 0;\r\n\t\t\t// Can't trust NodeList.length\r\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\r\n\t\t\ttarget.length = j - 1;\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction Sizzle( selector, context, results, seed ) {\r\n\tvar m, i, elem, nid, nidselect, match, groups, newSelector,\r\n\t\tnewContext = context && context.ownerDocument,\r\n\r\n\t\t// nodeType defaults to 9, since context defaults to document\r\n\t\tnodeType = context ? context.nodeType : 9;\r\n\r\n\tresults = results || [];\r\n\r\n\t// Return early from calls with invalid selector or context\r\n\tif ( typeof selector !== \"string\" || !selector ||\r\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\r\n\r\n\t\treturn results;\r\n\t}\r\n\r\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\r\n\tif ( !seed ) {\r\n\r\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\r\n\t\t\tsetDocument( context );\r\n\t\t}\r\n\t\tcontext = context || document;\r\n\r\n\t\tif ( documentIsHTML ) {\r\n\r\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\r\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\r\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\r\n\r\n\t\t\t\t// ID selector\r\n\t\t\t\tif ( (m = match[1]) ) {\r\n\r\n\t\t\t\t\t// Document context\r\n\t\t\t\t\tif ( nodeType === 9 ) {\r\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\r\n\r\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\t\tif ( elem.id === m ) {\r\n\t\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Element context\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\r\n\t\t\t\t\t\t// TODO: identify versions\r\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\r\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\r\n\t\t\t\t\t\t\tcontains( context, elem ) &&\r\n\t\t\t\t\t\t\telem.id === m ) {\r\n\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Type selector\r\n\t\t\t\t} else if ( match[2] ) {\r\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\r\n\t\t\t\t\treturn results;\r\n\r\n\t\t\t\t// Class selector\r\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\r\n\t\t\t\t\tcontext.getElementsByClassName ) {\r\n\r\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\r\n\t\t\t\t\treturn results;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Take advantage of querySelectorAll\r\n\t\t\tif ( support.qsa &&\r\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\r\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\r\n\r\n\t\t\t\tif ( nodeType !== 1 ) {\r\n\t\t\t\t\tnewContext = context;\r\n\t\t\t\t\tnewSelector = selector;\r\n\r\n\t\t\t\t// qSA looks outside Element context, which is not what we want\r\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\r\n\t\t\t\t// Support: IE <=8\r\n\t\t\t\t// Exclude object elements\r\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\r\n\r\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\r\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\r\n\t\t\t\t\t\tnid = nid.replace( rescape, \"\\\\$&\" );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prefix every selector in the list\r\n\t\t\t\t\tgroups = tokenize( selector );\r\n\t\t\t\t\ti = groups.length;\r\n\t\t\t\t\tnidselect = ridentifier.test( nid ) ? \"#\" + nid : \"[id='\" + nid + \"']\";\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tgroups[i] = nidselect + \" \" + toSelector( groups[i] );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnewSelector = groups.join( \",\" );\r\n\r\n\t\t\t\t\t// Expand context for sibling selectors\r\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\r\n\t\t\t\t\t\tcontext;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( newSelector ) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tpush.apply( results,\r\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t} catch ( qsaError ) {\r\n\t\t\t\t\t} finally {\r\n\t\t\t\t\t\tif ( nid === expando ) {\r\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// All others\r\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\r\n}\r\n\r\n/**\r\n * Create key-value caches of limited size\r\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\r\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\r\n *\tdeleting the oldest entry\r\n */\r\nfunction createCache() {\r\n\tvar keys = [];\r\n\r\n\tfunction cache( key, value ) {\r\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\r\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\r\n\t\t\t// Only keep the most recent entries\r\n\t\t\tdelete cache[ keys.shift() ];\r\n\t\t}\r\n\t\treturn (cache[ key + \" \" ] = value);\r\n\t}\r\n\treturn cache;\r\n}\r\n\r\n/**\r\n * Mark a function for special use by Sizzle\r\n * @param {Function} fn The function to mark\r\n */\r\nfunction markFunction( fn ) {\r\n\tfn[ expando ] = true;\r\n\treturn fn;\r\n}\r\n\r\n/**\r\n * Support testing using an element\r\n * @param {Function} fn Passed the created div and expects a boolean result\r\n */\r\nfunction assert( fn ) {\r\n\tvar div = document.createElement(\"div\");\r\n\r\n\ttry {\r\n\t\treturn !!fn( div );\r\n\t} catch (e) {\r\n\t\treturn false;\r\n\t} finally {\r\n\t\t// Remove from its parent by default\r\n\t\tif ( div.parentNode ) {\r\n\t\t\tdiv.parentNode.removeChild( div );\r\n\t\t}\r\n\t\t// release memory in IE\r\n\t\tdiv = null;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds the same handler for all of the specified attrs\r\n * @param {String} attrs Pipe-separated list of attributes\r\n * @param {Function} handler The method that will be applied\r\n */\r\nfunction addHandle( attrs, handler ) {\r\n\tvar arr = attrs.split(\"|\"),\r\n\t\ti = arr.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tExpr.attrHandle[ arr[i] ] = handler;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks document order of two siblings\r\n * @param {Element} a\r\n * @param {Element} b\r\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\r\n */\r\nfunction siblingCheck( a, b ) {\r\n\tvar cur = b && a,\r\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\r\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\r\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\r\n\r\n\t// Use IE sourceIndex if available on both nodes\r\n\tif ( diff ) {\r\n\t\treturn diff;\r\n\t}\r\n\r\n\t// Check if b follows a\r\n\tif ( cur ) {\r\n\t\twhile ( (cur = cur.nextSibling) ) {\r\n\t\t\tif ( cur === b ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn a ? 1 : -1;\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for input types\r\n * @param {String} type\r\n */\r\nfunction createInputPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn name === \"input\" && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for buttons\r\n * @param {String} type\r\n */\r\nfunction createButtonPseudo( type ) {\r\n\treturn function( elem ) {\r\n\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\r\n\t};\r\n}\r\n\r\n/**\r\n * Returns a function to use in pseudos for positionals\r\n * @param {Function} fn\r\n */\r\nfunction createPositionalPseudo( fn ) {\r\n\treturn markFunction(function( argument ) {\r\n\t\targument = +argument;\r\n\t\treturn markFunction(function( seed, matches ) {\r\n\t\t\tvar j,\r\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\r\n\t\t\t\ti = matchIndexes.length;\r\n\r\n\t\t\t// Match elements found at the specified indexes\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\r\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n * Checks a node for validity as a Sizzle context\r\n * @param {Element|Object=} context\r\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\r\n */\r\nfunction testContext( context ) {\r\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\r\n}\r\n\r\n// Expose support vars for convenience\r\nsupport = Sizzle.support = {};\r\n\r\n/**\r\n * Detects XML nodes\r\n * @param {Element|Object} elem An element or a document\r\n * @returns {Boolean} True iff elem is a non-HTML XML node\r\n */\r\nisXML = Sizzle.isXML = function( elem ) {\r\n\t// documentElement is verified for cases where it doesn't yet exist\r\n\t// (such as loading iframes in IE - #4833)\r\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\r\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\r\n};\r\n\r\n/**\r\n * Sets document-related variables once based on the current document\r\n * @param {Element|Object} [doc] An element or document object to use to set the document\r\n * @returns {Object} Returns the current document\r\n */\r\nsetDocument = Sizzle.setDocument = function( node ) {\r\n\tvar hasCompare, parent,\r\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\r\n\r\n\t// Return early if doc is invalid or already selected\r\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\r\n\t\treturn document;\r\n\t}\r\n\r\n\t// Update global variables\r\n\tdocument = doc;\r\n\tdocElem = document.documentElement;\r\n\tdocumentIsHTML = !isXML( document );\r\n\r\n\t// Support: IE 9-11, Edge\r\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\r\n\tif ( (parent = document.defaultView) && parent.top !== parent ) {\r\n\t\t// Support: IE 11\r\n\t\tif ( parent.addEventListener ) {\r\n\t\t\tparent.addEventListener( \"unload\", unloadHandler, false );\r\n\r\n\t\t// Support: IE 9 - 10 only\r\n\t\t} else if ( parent.attachEvent ) {\r\n\t\t\tparent.attachEvent( \"onunload\", unloadHandler );\r\n\t\t}\r\n\t}\r\n\r\n\t/* Attributes\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Support: IE<8\r\n\t// Verify that getAttribute really returns attributes and not properties\r\n\t// (excepting IE8 booleans)\r\n\tsupport.attributes = assert(function( div ) {\r\n\t\tdiv.className = \"i\";\r\n\t\treturn !div.getAttribute(\"className\");\r\n\t});\r\n\r\n\t/* getElement(s)By*\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Check if getElementsByTagName(\"*\") returns only elements\r\n\tsupport.getElementsByTagName = assert(function( div ) {\r\n\t\tdiv.appendChild( document.createComment(\"\") );\r\n\t\treturn !div.getElementsByTagName(\"*\").length;\r\n\t});\r\n\r\n\t// Support: IE<9\r\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\r\n\r\n\t// Support: IE<10\r\n\t// Check if getElementById returns elements by name\r\n\t// The broken getElementById methods don't pick up programatically-set names,\r\n\t// so use a roundabout getElementsByName test\r\n\tsupport.getById = assert(function( div ) {\r\n\t\tdocElem.appendChild( div ).id = expando;\r\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\r\n\t});\r\n\r\n\t// ID find and filter\r\n\tif ( support.getById ) {\r\n\t\tExpr.find[\"ID\"] = function( id, context ) {\r\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\r\n\t\t\t\tvar m = context.getElementById( id );\r\n\t\t\t\treturn m ? [ m ] : [];\r\n\t\t\t}\r\n\t\t};\r\n\t\tExpr.filter[\"ID\"] = function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t} else {\r\n\t\t// Support: IE6/7\r\n\t\t// getElementById is not reliable as a find shortcut\r\n\t\tdelete Expr.find[\"ID\"];\r\n\r\n\t\tExpr.filter[\"ID\"] =  function( id ) {\r\n\t\t\tvar attrId = id.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\r\n\t\t\t\t\telem.getAttributeNode(\"id\");\r\n\t\t\t\treturn node && node.value === attrId;\r\n\t\t\t};\r\n\t\t};\r\n\t}\r\n\r\n\t// Tag\r\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\r\n\t\tfunction( tag, context ) {\r\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\r\n\t\t\t\treturn context.getElementsByTagName( tag );\r\n\r\n\t\t\t// DocumentFragment nodes don't have gEBTN\r\n\t\t\t} else if ( support.qsa ) {\r\n\t\t\t\treturn context.querySelectorAll( tag );\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\tfunction( tag, context ) {\r\n\t\t\tvar elem,\r\n\t\t\t\ttmp = [],\r\n\t\t\t\ti = 0,\r\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\r\n\t\t\t\tresults = context.getElementsByTagName( tag );\r\n\r\n\t\t\t// Filter out possible comments\r\n\t\t\tif ( tag === \"*\" ) {\r\n\t\t\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\ttmp.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t// Class\r\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\r\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\r\n\t\t\treturn context.getElementsByClassName( className );\r\n\t\t}\r\n\t};\r\n\r\n\t/* QSA/matchesSelector\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// QSA and matchesSelector support\r\n\r\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\r\n\trbuggyMatches = [];\r\n\r\n\t// qSa(:focus) reports false when true (Chrome 21)\r\n\t// We allow this because of a bug in IE8/9 that throws an error\r\n\t// whenever `document.activeElement` is accessed on an iframe\r\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\r\n\t// See http://bugs.jquery.com/ticket/13378\r\n\trbuggyQSA = [];\r\n\r\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\r\n\t\t// Build QSA regex\r\n\t\t// Regex strategy adopted from Diego Perini\r\n\t\tassert(function( div ) {\r\n\t\t\t// Select is set to empty string on purpose\r\n\t\t\t// This is to test IE's treatment of not explicitly\r\n\t\t\t// setting a boolean content attribute,\r\n\t\t\t// since its presence should be enough\r\n\t\t\t// http://bugs.jquery.com/ticket/12359\r\n\t\t\tdocElem.appendChild( div ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\r\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\r\n\t\t\t\t\"<option selected=''></option></select>\";\r\n\r\n\t\t\t// Support: IE8, Opera 11-12.16\r\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\r\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\r\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\r\n\t\t\tif ( div.querySelectorAll(\"[msallowcapture^='']\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\r\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\r\n\t\t\tif ( !div.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\"~=\");\r\n\t\t\t}\r\n\r\n\t\t\t// Webkit/Opera - :checked should return selected option elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\r\n\t\t\t\trbuggyQSA.push(\":checked\");\r\n\t\t\t}\r\n\r\n\t\t\t// Support: Safari 8+, iOS 8+\r\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\r\n\t\t\t// In-page `selector#id sibing-combinator selector` fails\r\n\t\t\tif ( !div.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\r\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Support: Windows 8 Native Apps\r\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\r\n\t\t\tvar input = document.createElement(\"input\");\r\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\r\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\r\n\r\n\t\t\t// Support: IE8\r\n\t\t\t// Enforce case-sensitivity of name attribute\r\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\r\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\r\n\t\t\t}\r\n\r\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\r\n\t\t\t// IE8 throws error here and will not see later tests\r\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\r\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\r\n\t\t\tdiv.querySelectorAll(\"*,:x\");\r\n\t\t\trbuggyQSA.push(\",.*:\");\r\n\t\t});\r\n\t}\r\n\r\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\r\n\t\tdocElem.webkitMatchesSelector ||\r\n\t\tdocElem.mozMatchesSelector ||\r\n\t\tdocElem.oMatchesSelector ||\r\n\t\tdocElem.msMatchesSelector) )) ) {\r\n\r\n\t\tassert(function( div ) {\r\n\t\t\t// Check to see if it's possible to do matchesSelector\r\n\t\t\t// on a disconnected node (IE 9)\r\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\r\n\r\n\t\t\t// This should fail with an exception\r\n\t\t\t// Gecko does not error, returns false instead\r\n\t\t\tmatches.call( div, \"[s!='']:x\" );\r\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\r\n\t\t});\r\n\t}\r\n\r\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\r\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\r\n\r\n\t/* Contains\r\n\t---------------------------------------------------------------------- */\r\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\r\n\r\n\t// Element contains another\r\n\t// Purposefully self-exclusive\r\n\t// As in, an element does not contain itself\r\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\r\n\t\tfunction( a, b ) {\r\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\r\n\t\t\t\tbup = b && b.parentNode;\r\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\r\n\t\t\t\tadown.contains ?\r\n\t\t\t\t\tadown.contains( bup ) :\r\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\r\n\t\t\t));\r\n\t\t} :\r\n\t\tfunction( a, b ) {\r\n\t\t\tif ( b ) {\r\n\t\t\t\twhile ( (b = b.parentNode) ) {\r\n\t\t\t\t\tif ( b === a ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t/* Sorting\r\n\t---------------------------------------------------------------------- */\r\n\r\n\t// Document order sorting\r\n\tsortOrder = hasCompare ?\r\n\tfunction( a, b ) {\r\n\r\n\t\t// Flag for duplicate removal\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// Sort on method existence if only one input has compareDocumentPosition\r\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\r\n\t\tif ( compare ) {\r\n\t\t\treturn compare;\r\n\t\t}\r\n\r\n\t\t// Calculate position if both inputs belong to the same document\r\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\r\n\t\t\ta.compareDocumentPosition( b ) :\r\n\r\n\t\t\t// Otherwise we know they are disconnected\r\n\t\t\t1;\r\n\r\n\t\t// Disconnected nodes\r\n\t\tif ( compare & 1 ||\r\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\r\n\r\n\t\t\t// Choose the first element that is related to our preferred document\r\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\r\n\t\t\t// Maintain original order\r\n\t\t\treturn sortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\t\t}\r\n\r\n\t\treturn compare & 4 ? -1 : 1;\r\n\t} :\r\n\tfunction( a, b ) {\r\n\t\t// Exit early if the nodes are identical\r\n\t\tif ( a === b ) {\r\n\t\t\thasDuplicate = true;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\taup = a.parentNode,\r\n\t\t\tbup = b.parentNode,\r\n\t\t\tap = [ a ],\r\n\t\t\tbp = [ b ];\r\n\r\n\t\t// Parentless nodes are either documents or disconnected\r\n\t\tif ( !aup || !bup ) {\r\n\t\t\treturn a === document ? -1 :\r\n\t\t\t\tb === document ? 1 :\r\n\t\t\t\taup ? -1 :\r\n\t\t\t\tbup ? 1 :\r\n\t\t\t\tsortInput ?\r\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\r\n\t\t\t\t0;\r\n\r\n\t\t// If the nodes are siblings, we can do a quick check\r\n\t\t} else if ( aup === bup ) {\r\n\t\t\treturn siblingCheck( a, b );\r\n\t\t}\r\n\r\n\t\t// Otherwise we need full lists of their ancestors for comparison\r\n\t\tcur = a;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tap.unshift( cur );\r\n\t\t}\r\n\t\tcur = b;\r\n\t\twhile ( (cur = cur.parentNode) ) {\r\n\t\t\tbp.unshift( cur );\r\n\t\t}\r\n\r\n\t\t// Walk down the tree looking for a discrepancy\r\n\t\twhile ( ap[i] === bp[i] ) {\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn i ?\r\n\t\t\t// Do a sibling check if the nodes have a common ancestor\r\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\r\n\r\n\t\t\t// Otherwise nodes in our document sort first\r\n\t\t\tap[i] === preferredDoc ? -1 :\r\n\t\t\tbp[i] === preferredDoc ? 1 :\r\n\t\t\t0;\r\n\t};\r\n\r\n\treturn document;\r\n};\r\n\r\nSizzle.matches = function( expr, elements ) {\r\n\treturn Sizzle( expr, null, null, elements );\r\n};\r\n\r\nSizzle.matchesSelector = function( elem, expr ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\t// Make sure that attribute selectors are quoted\r\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\r\n\r\n\tif ( support.matchesSelector && documentIsHTML &&\r\n\t\t!compilerCache[ expr + \" \" ] &&\r\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\r\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\r\n\r\n\t\ttry {\r\n\t\t\tvar ret = matches.call( elem, expr );\r\n\r\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\r\n\t\t\tif ( ret || support.disconnectedMatch ||\r\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\r\n\t\t\t\t\t// fragment in IE 9\r\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\r\n};\r\n\r\nSizzle.contains = function( context, elem ) {\r\n\t// Set document vars if needed\r\n\tif ( ( context.ownerDocument || context ) !== document ) {\r\n\t\tsetDocument( context );\r\n\t}\r\n\treturn contains( context, elem );\r\n};\r\n\r\nSizzle.attr = function( elem, name ) {\r\n\t// Set document vars if needed\r\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\r\n\t\tsetDocument( elem );\r\n\t}\r\n\r\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\r\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\r\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\r\n\t\t\tfn( elem, name, !documentIsHTML ) :\r\n\t\t\tundefined;\r\n\r\n\treturn val !== undefined ?\r\n\t\tval :\r\n\t\tsupport.attributes || !documentIsHTML ?\r\n\t\t\telem.getAttribute( name ) :\r\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\r\n\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n};\r\n\r\nSizzle.error = function( msg ) {\r\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\r\n};\r\n\r\n/**\r\n * Document sorting and removing duplicates\r\n * @param {ArrayLike} results\r\n */\r\nSizzle.uniqueSort = function( results ) {\r\n\tvar elem,\r\n\t\tduplicates = [],\r\n\t\tj = 0,\r\n\t\ti = 0;\r\n\r\n\t// Unless we *know* we can detect duplicates, assume their presence\r\n\thasDuplicate = !support.detectDuplicates;\r\n\tsortInput = !support.sortStable && results.slice( 0 );\r\n\tresults.sort( sortOrder );\r\n\r\n\tif ( hasDuplicate ) {\r\n\t\twhile ( (elem = results[i++]) ) {\r\n\t\t\tif ( elem === results[ i ] ) {\r\n\t\t\t\tj = duplicates.push( i );\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( j-- ) {\r\n\t\t\tresults.splice( duplicates[ j ], 1 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Clear input after sorting to release objects\r\n\t// See https://github.com/jquery/sizzle/pull/225\r\n\tsortInput = null;\r\n\r\n\treturn results;\r\n};\r\n\r\n/**\r\n * Utility function for retrieving the text value of an array of DOM nodes\r\n * @param {Array|Element} elem\r\n */\r\ngetText = Sizzle.getText = function( elem ) {\r\n\tvar node,\r\n\t\tret = \"\",\r\n\t\ti = 0,\r\n\t\tnodeType = elem.nodeType;\r\n\r\n\tif ( !nodeType ) {\r\n\t\t// If no nodeType, this is expected to be an array\r\n\t\twhile ( (node = elem[i++]) ) {\r\n\t\t\t// Do not traverse comment nodes\r\n\t\t\tret += getText( node );\r\n\t\t}\r\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\r\n\t\t// Use textContent for elements\r\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\r\n\t\tif ( typeof elem.textContent === \"string\" ) {\r\n\t\t\treturn elem.textContent;\r\n\t\t} else {\r\n\t\t\t// Traverse its children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tret += getText( elem );\r\n\t\t\t}\r\n\t\t}\r\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\r\n\t\treturn elem.nodeValue;\r\n\t}\r\n\t// Do not include comment or processing instruction nodes\r\n\r\n\treturn ret;\r\n};\r\n\r\nExpr = Sizzle.selectors = {\r\n\r\n\t// Can be adjusted by the user\r\n\tcacheLength: 50,\r\n\r\n\tcreatePseudo: markFunction,\r\n\r\n\tmatch: matchExpr,\r\n\r\n\tattrHandle: {},\r\n\r\n\tfind: {},\r\n\r\n\trelative: {\r\n\t\t\">\": { dir: \"parentNode\", first: true },\r\n\t\t\" \": { dir: \"parentNode\" },\r\n\t\t\"+\": { dir: \"previousSibling\", first: true },\r\n\t\t\"~\": { dir: \"previousSibling\" }\r\n\t},\r\n\r\n\tpreFilter: {\r\n\t\t\"ATTR\": function( match ) {\r\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\r\n\r\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\r\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\r\n\r\n\t\t\tif ( match[2] === \"~=\" ) {\r\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\r\n\t\t\t}\r\n\r\n\t\t\treturn match.slice( 0, 4 );\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( match ) {\r\n\t\t\t/* matches from matchExpr[\"CHILD\"]\r\n\t\t\t\t1 type (only|nth|...)\r\n\t\t\t\t2 what (child|of-type)\r\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\r\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\r\n\t\t\t\t5 sign of xn-component\r\n\t\t\t\t6 x of xn-component\r\n\t\t\t\t7 sign of y-component\r\n\t\t\t\t8 y of y-component\r\n\t\t\t*/\r\n\t\t\tmatch[1] = match[1].toLowerCase();\r\n\r\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\r\n\t\t\t\t// nth-* requires argument\r\n\t\t\t\tif ( !match[3] ) {\r\n\t\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\r\n\t\t\t\t// remember that false/true cast respectively to 0/1\r\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\r\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\r\n\r\n\t\t\t// other types prohibit arguments\r\n\t\t\t} else if ( match[3] ) {\r\n\t\t\t\tSizzle.error( match[0] );\r\n\t\t\t}\r\n\r\n\t\t\treturn match;\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( match ) {\r\n\t\t\tvar excess,\r\n\t\t\t\tunquoted = !match[6] && match[2];\r\n\r\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\t// Accept quoted arguments as-is\r\n\t\t\tif ( match[3] ) {\r\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\r\n\r\n\t\t\t// Strip excess characters from unquoted arguments\r\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\r\n\t\t\t\t// Get excess from tokenize (recursively)\r\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\r\n\t\t\t\t// advance to the next closing parenthesis\r\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\r\n\r\n\t\t\t\t// excess is a negative index\r\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\r\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\r\n\t\t\t}\r\n\r\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\r\n\t\t\treturn match.slice( 0, 3 );\r\n\t\t}\r\n\t},\r\n\r\n\tfilter: {\r\n\r\n\t\t\"TAG\": function( nodeNameSelector ) {\r\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn nodeNameSelector === \"*\" ?\r\n\t\t\t\tfunction() { return true; } :\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CLASS\": function( className ) {\r\n\t\t\tvar pattern = classCache[ className + \" \" ];\r\n\r\n\t\t\treturn pattern ||\r\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\r\n\t\t\t\tclassCache( className, function( elem ) {\r\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t\"ATTR\": function( name, operator, check ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar result = Sizzle.attr( elem, name );\r\n\r\n\t\t\t\tif ( result == null ) {\r\n\t\t\t\t\treturn operator === \"!=\";\r\n\t\t\t\t}\r\n\t\t\t\tif ( !operator ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult += \"\";\r\n\r\n\t\t\t\treturn operator === \"=\" ? result === check :\r\n\t\t\t\t\toperator === \"!=\" ? result !== check :\r\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\r\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\r\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\r\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\r\n\t\t\t\t\tfalse;\r\n\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\r\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\r\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\r\n\t\t\t\tofType = what === \"of-type\";\r\n\r\n\t\t\treturn first === 1 && last === 0 ?\r\n\r\n\t\t\t\t// Shortcut for :nth-*(n)\r\n\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\treturn !!elem.parentNode;\r\n\t\t\t\t} :\r\n\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\r\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\r\n\t\t\t\t\t\tparent = elem.parentNode,\r\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\r\n\t\t\t\t\t\tuseCache = !xml && !ofType,\r\n\t\t\t\t\t\tdiff = false;\r\n\r\n\t\t\t\t\tif ( parent ) {\r\n\r\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\r\n\t\t\t\t\t\tif ( simple ) {\r\n\t\t\t\t\t\t\twhile ( dir ) {\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\r\n\t\t\t\t\t\t\t\t\tif ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\r\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\r\n\r\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\r\n\t\t\t\t\t\tif ( forward && useCache ) {\r\n\r\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\r\n\r\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\tnode = parent;\r\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\r\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\r\n\r\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\r\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\r\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\r\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\r\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Use previously-cached element index if available\r\n\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\r\n\t\t\t\t\t\t\t\tnode = elem;\r\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\r\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\r\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// xml :nth-child(...)\r\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\r\n\t\t\t\t\t\t\tif ( diff === false ) {\r\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\r\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\r\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\r\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\r\n\t\t\t\t\t\t\t\t\t\t++diff ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\r\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\r\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\r\n\t\t\t\t\t\tdiff -= last;\r\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t},\r\n\r\n\t\t\"PSEUDO\": function( pseudo, argument ) {\r\n\t\t\t// pseudo-class names are case-insensitive\r\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\r\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\r\n\t\t\t// Remember that setFilters inherits from pseudos\r\n\t\t\tvar args,\r\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\r\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\r\n\r\n\t\t\t// The user may use createPseudo to indicate that\r\n\t\t\t// arguments are needed to create the filter function\r\n\t\t\t// just as Sizzle does\r\n\t\t\tif ( fn[ expando ] ) {\r\n\t\t\t\treturn fn( argument );\r\n\t\t\t}\r\n\r\n\t\t\t// But maintain support for old signatures\r\n\t\t\tif ( fn.length > 1 ) {\r\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\r\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\r\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\r\n\t\t\t\t\t\tvar idx,\r\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\r\n\t\t\t\t\t\t\ti = matched.length;\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\r\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}) :\r\n\t\t\t\t\tfunction( elem ) {\r\n\t\t\t\t\t\treturn fn( elem, 0, args );\r\n\t\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn fn;\r\n\t\t}\r\n\t},\r\n\r\n\tpseudos: {\r\n\t\t// Potentially complex pseudos\r\n\t\t\"not\": markFunction(function( selector ) {\r\n\t\t\t// Trim the selector passed to compile\r\n\t\t\t// to avoid treating leading and trailing\r\n\t\t\t// spaces as combinators\r\n\t\t\tvar input = [],\r\n\t\t\t\tresults = [],\r\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\r\n\r\n\t\t\treturn matcher[ expando ] ?\r\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\r\n\t\t\t\t\tvar elem,\r\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\r\n\t\t\t\t\t\ti = seed.length;\r\n\r\n\t\t\t\t\t// Match elements unmatched by `matcher`\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}) :\r\n\t\t\t\tfunction( elem, context, xml ) {\r\n\t\t\t\t\tinput[0] = elem;\r\n\t\t\t\t\tmatcher( input, null, xml, results );\r\n\t\t\t\t\t// Don't keep the element (issue #299)\r\n\t\t\t\t\tinput[0] = null;\r\n\t\t\t\t\treturn !results.pop();\r\n\t\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"has\": markFunction(function( selector ) {\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t\"contains\": markFunction(function( text ) {\r\n\t\t\ttext = text.replace( runescape, funescape );\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// \"Whether an element is represented by a :lang() selector\r\n\t\t// is based solely on the element's language value\r\n\t\t// being equal to the identifier C,\r\n\t\t// or beginning with the identifier C immediately followed by \"-\".\r\n\t\t// The matching of C against the element's language value is performed case-insensitively.\r\n\t\t// The identifier C does not have to be a valid language name.\"\r\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\r\n\t\t\"lang\": markFunction( function( lang ) {\r\n\t\t\t// lang value must be a valid identifier\r\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\r\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\r\n\t\t\t}\r\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\r\n\t\t\treturn function( elem ) {\r\n\t\t\t\tvar elemLang;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\r\n\t\t\t\t\t\telem.lang :\r\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\r\n\r\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\r\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\t\t}),\r\n\r\n\t\t// Miscellaneous\r\n\t\t\"target\": function( elem ) {\r\n\t\t\tvar hash = window.location && window.location.hash;\r\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\r\n\t\t},\r\n\r\n\t\t\"root\": function( elem ) {\r\n\t\t\treturn elem === docElem;\r\n\t\t},\r\n\r\n\t\t\"focus\": function( elem ) {\r\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\r\n\t\t},\r\n\r\n\t\t// Boolean properties\r\n\t\t\"enabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === false;\r\n\t\t},\r\n\r\n\t\t\"disabled\": function( elem ) {\r\n\t\t\treturn elem.disabled === true;\r\n\t\t},\r\n\r\n\t\t\"checked\": function( elem ) {\r\n\t\t\t// In CSS3, :checked should return both checked and selected elements\r\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\r\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\r\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\r\n\t\t},\r\n\r\n\t\t\"selected\": function( elem ) {\r\n\t\t\t// Accessing this property makes selected-by-default\r\n\t\t\t// options in Safari work properly\r\n\t\t\tif ( elem.parentNode ) {\r\n\t\t\t\telem.parentNode.selectedIndex;\r\n\t\t\t}\r\n\r\n\t\t\treturn elem.selected === true;\r\n\t\t},\r\n\r\n\t\t// Contents\r\n\t\t\"empty\": function( elem ) {\r\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\r\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\r\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\r\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\r\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\r\n\t\t\t\tif ( elem.nodeType < 6 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t\"parent\": function( elem ) {\r\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\r\n\t\t},\r\n\r\n\t\t// Element/input types\r\n\t\t\"header\": function( elem ) {\r\n\t\t\treturn rheader.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"input\": function( elem ) {\r\n\t\t\treturn rinputs.test( elem.nodeName );\r\n\t\t},\r\n\r\n\t\t\"button\": function( elem ) {\r\n\t\t\tvar name = elem.nodeName.toLowerCase();\r\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n\t\t},\r\n\r\n\t\t\"text\": function( elem ) {\r\n\t\t\tvar attr;\r\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\r\n\t\t\t\telem.type === \"text\" &&\r\n\r\n\t\t\t\t// Support: IE<8\r\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\r\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\r\n\t\t},\r\n\r\n\t\t// Position-in-collection\r\n\t\t\"first\": createPositionalPseudo(function() {\r\n\t\t\treturn [ 0 ];\r\n\t\t}),\r\n\r\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\treturn [ length - 1 ];\r\n\t\t}),\r\n\r\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\r\n\t\t}),\r\n\r\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\r\n\t\t\tvar i = 1;\r\n\t\t\tfor ( ; i < length; i += 2 ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; --i >= 0; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t}),\r\n\r\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\r\n\t\t\tvar i = argument < 0 ? argument + length : argument;\r\n\t\t\tfor ( ; ++i < length; ) {\r\n\t\t\t\tmatchIndexes.push( i );\r\n\t\t\t}\r\n\t\t\treturn matchIndexes;\r\n\t\t})\r\n\t}\r\n};\r\n\r\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\r\n\r\n// Add button/input type pseudos\r\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\r\n\tExpr.pseudos[ i ] = createInputPseudo( i );\r\n}\r\nfor ( i in { submit: true, reset: true } ) {\r\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\r\n}\r\n\r\n// Easy API for creating new setFilters\r\nfunction setFilters() {}\r\nsetFilters.prototype = Expr.filters = Expr.pseudos;\r\nExpr.setFilters = new setFilters();\r\n\r\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\r\n\tvar matched, match, tokens, type,\r\n\t\tsoFar, groups, preFilters,\r\n\t\tcached = tokenCache[ selector + \" \" ];\r\n\r\n\tif ( cached ) {\r\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\r\n\t}\r\n\r\n\tsoFar = selector;\r\n\tgroups = [];\r\n\tpreFilters = Expr.preFilter;\r\n\r\n\twhile ( soFar ) {\r\n\r\n\t\t// Comma and first run\r\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\r\n\t\t\tif ( match ) {\r\n\t\t\t\t// Don't consume trailing commas as valid\r\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\r\n\t\t\t}\r\n\t\t\tgroups.push( (tokens = []) );\r\n\t\t}\r\n\r\n\t\tmatched = false;\r\n\r\n\t\t// Combinators\r\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\r\n\t\t\tmatched = match.shift();\r\n\t\t\ttokens.push({\r\n\t\t\t\tvalue: matched,\r\n\t\t\t\t// Cast descendant combinators to space\r\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\r\n\t\t\t});\r\n\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t}\r\n\r\n\t\t// Filters\r\n\t\tfor ( type in Expr.filter ) {\r\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\r\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\r\n\t\t\t\tmatched = match.shift();\r\n\t\t\t\ttokens.push({\r\n\t\t\t\t\tvalue: matched,\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\tmatches: match\r\n\t\t\t\t});\r\n\t\t\t\tsoFar = soFar.slice( matched.length );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !matched ) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the length of the invalid excess\r\n\t// if we're just parsing\r\n\t// Otherwise, throw an error or return tokens\r\n\treturn parseOnly ?\r\n\t\tsoFar.length :\r\n\t\tsoFar ?\r\n\t\t\tSizzle.error( selector ) :\r\n\t\t\t// Cache the tokens\r\n\t\t\ttokenCache( selector, groups ).slice( 0 );\r\n};\r\n\r\nfunction toSelector( tokens ) {\r\n\tvar i = 0,\r\n\t\tlen = tokens.length,\r\n\t\tselector = \"\";\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tselector += tokens[i].value;\r\n\t}\r\n\treturn selector;\r\n}\r\n\r\nfunction addCombinator( matcher, combinator, base ) {\r\n\tvar dir = combinator.dir,\r\n\t\tcheckNonElements = base && dir === \"parentNode\",\r\n\t\tdoneName = done++;\r\n\r\n\treturn combinator.first ?\r\n\t\t// Check against closest ancestor/preceding element\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\treturn matcher( elem, context, xml );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\r\n\t\t// Check against all ancestor/preceding elements\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar oldCache, uniqueCache, outerCache,\r\n\t\t\t\tnewCache = [ dirruns, doneName ];\r\n\r\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\r\n\t\t\tif ( xml ) {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\r\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\r\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\r\n\r\n\t\t\t\t\t\t// Support: IE <9 only\r\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\r\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\r\n\r\n\t\t\t\t\t\tif ( (oldCache = uniqueCache[ dir ]) &&\r\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\r\n\r\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\r\n\t\t\t\t\t\t\tuniqueCache[ dir ] = newCache;\r\n\r\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\r\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n}\r\n\r\nfunction elementMatcher( matchers ) {\r\n\treturn matchers.length > 1 ?\r\n\t\tfunction( elem, context, xml ) {\r\n\t\t\tvar i = matchers.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} :\r\n\t\tmatchers[0];\r\n}\r\n\r\nfunction multipleContexts( selector, contexts, results ) {\r\n\tvar i = 0,\r\n\t\tlen = contexts.length;\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tSizzle( selector, contexts[i], results );\r\n\t}\r\n\treturn results;\r\n}\r\n\r\nfunction condense( unmatched, map, filter, context, xml ) {\r\n\tvar elem,\r\n\t\tnewUnmatched = [],\r\n\t\ti = 0,\r\n\t\tlen = unmatched.length,\r\n\t\tmapped = map != null;\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (elem = unmatched[i]) ) {\r\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\r\n\t\t\t\tnewUnmatched.push( elem );\r\n\t\t\t\tif ( mapped ) {\r\n\t\t\t\t\tmap.push( i );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn newUnmatched;\r\n}\r\n\r\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\r\n\tif ( postFilter && !postFilter[ expando ] ) {\r\n\t\tpostFilter = setMatcher( postFilter );\r\n\t}\r\n\tif ( postFinder && !postFinder[ expando ] ) {\r\n\t\tpostFinder = setMatcher( postFinder, postSelector );\r\n\t}\r\n\treturn markFunction(function( seed, results, context, xml ) {\r\n\t\tvar temp, i, elem,\r\n\t\t\tpreMap = [],\r\n\t\t\tpostMap = [],\r\n\t\t\tpreexisting = results.length,\r\n\r\n\t\t\t// Get initial elements from seed or context\r\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\r\n\r\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\r\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\r\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\r\n\t\t\t\telems,\r\n\r\n\t\t\tmatcherOut = matcher ?\r\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\r\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\r\n\r\n\t\t\t\t\t// ...intermediate processing is necessary\r\n\t\t\t\t\t[] :\r\n\r\n\t\t\t\t\t// ...otherwise use results directly\r\n\t\t\t\t\tresults :\r\n\t\t\t\tmatcherIn;\r\n\r\n\t\t// Find primary matches\r\n\t\tif ( matcher ) {\r\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\r\n\t\t}\r\n\r\n\t\t// Apply postFilter\r\n\t\tif ( postFilter ) {\r\n\t\t\ttemp = condense( matcherOut, postMap );\r\n\t\t\tpostFilter( temp, [], context, xml );\r\n\r\n\t\t\t// Un-match failing elements by moving them back to matcherIn\r\n\t\t\ti = temp.length;\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tif ( (elem = temp[i]) ) {\r\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( seed ) {\r\n\t\t\tif ( postFinder || preFilter ) {\r\n\t\t\t\tif ( postFinder ) {\r\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\r\n\t\t\t\t\ttemp = [];\r\n\t\t\t\t\ti = matcherOut.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\r\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\r\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\r\n\t\t\t\ti = matcherOut.length;\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\r\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\r\n\r\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Add elements to results, through postFinder if defined\r\n\t\t} else {\r\n\t\t\tmatcherOut = condense(\r\n\t\t\t\tmatcherOut === results ?\r\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\r\n\t\t\t\t\tmatcherOut\r\n\t\t\t);\r\n\t\t\tif ( postFinder ) {\r\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\r\n\t\t\t} else {\r\n\t\t\t\tpush.apply( results, matcherOut );\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction matcherFromTokens( tokens ) {\r\n\tvar checkContext, matcher, j,\r\n\t\tlen = tokens.length,\r\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\r\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\r\n\t\ti = leadingRelative ? 1 : 0,\r\n\r\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\r\n\t\tmatchContext = addCombinator( function( elem ) {\r\n\t\t\treturn elem === checkContext;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchAnyContext = addCombinator( function( elem ) {\r\n\t\t\treturn indexOf( checkContext, elem ) > -1;\r\n\t\t}, implicitRelative, true ),\r\n\t\tmatchers = [ function( elem, context, xml ) {\r\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\r\n\t\t\t\t(checkContext = context).nodeType ?\r\n\t\t\t\t\tmatchContext( elem, context, xml ) :\r\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\r\n\t\t\t// Avoid hanging onto element (issue #299)\r\n\t\t\tcheckContext = null;\r\n\t\t\treturn ret;\r\n\t\t} ];\r\n\r\n\tfor ( ; i < len; i++ ) {\r\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\r\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\r\n\t\t} else {\r\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\r\n\r\n\t\t\t// Return special upon seeing a positional matcher\r\n\t\t\tif ( matcher[ expando ] ) {\r\n\t\t\t\t// Find the next relative operator (if any) for proper handling\r\n\t\t\t\tj = ++i;\r\n\t\t\t\tfor ( ; j < len; j++ ) {\r\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn setMatcher(\r\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\r\n\t\t\t\t\ti > 1 && toSelector(\r\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\r\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\r\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\r\n\t\t\t\t\tmatcher,\r\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\r\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\r\n\t\t\t\t\tj < len && toSelector( tokens )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tmatchers.push( matcher );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elementMatcher( matchers );\r\n}\r\n\r\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\r\n\tvar bySet = setMatchers.length > 0,\r\n\t\tbyElement = elementMatchers.length > 0,\r\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\r\n\t\t\tvar elem, j, matcher,\r\n\t\t\t\tmatchedCount = 0,\r\n\t\t\t\ti = \"0\",\r\n\t\t\t\tunmatched = seed && [],\r\n\t\t\t\tsetMatched = [],\r\n\t\t\t\tcontextBackup = outermostContext,\r\n\t\t\t\t// We must always have either seed elements or outermost context\r\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\r\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\r\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\r\n\t\t\t\tlen = elems.length;\r\n\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\toutermostContext = context === document || context || outermost;\r\n\t\t\t}\r\n\r\n\t\t\t// Add elements passing elementMatchers directly to results\r\n\t\t\t// Support: IE<9, Safari\r\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\r\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\r\n\t\t\t\tif ( byElement && elem ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\r\n\t\t\t\t\t\tsetDocument( elem );\r\n\t\t\t\t\t\txml = !documentIsHTML;\r\n\t\t\t\t\t}\r\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\r\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\r\n\t\t\t\t\t\t\tresults.push( elem );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( outermost ) {\r\n\t\t\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Track unmatched elements for set filters\r\n\t\t\t\tif ( bySet ) {\r\n\t\t\t\t\t// They will have gone through all possible matchers\r\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\r\n\t\t\t\t\t\tmatchedCount--;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lengthen the array for every element, matched or not\r\n\t\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t\tunmatched.push( elem );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\r\n\t\t\t// makes the latter nonnegative.\r\n\t\t\tmatchedCount += i;\r\n\r\n\t\t\t// Apply set filters to unmatched elements\r\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\r\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\r\n\t\t\t// no element matchers and no seed.\r\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\r\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\r\n\t\t\t// numerically zero.\r\n\t\t\tif ( bySet && i !== matchedCount ) {\r\n\t\t\t\tj = 0;\r\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\r\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( seed ) {\r\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\r\n\t\t\t\t\tif ( matchedCount > 0 ) {\r\n\t\t\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\r\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\r\n\t\t\t\t\tsetMatched = condense( setMatched );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add matches to results\r\n\t\t\t\tpush.apply( results, setMatched );\r\n\r\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\r\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\r\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\r\n\r\n\t\t\t\t\tSizzle.uniqueSort( results );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Override manipulation of globals by nested matchers\r\n\t\t\tif ( outermost ) {\r\n\t\t\t\tdirruns = dirrunsUnique;\r\n\t\t\t\toutermostContext = contextBackup;\r\n\t\t\t}\r\n\r\n\t\t\treturn unmatched;\r\n\t\t};\r\n\r\n\treturn bySet ?\r\n\t\tmarkFunction( superMatcher ) :\r\n\t\tsuperMatcher;\r\n}\r\n\r\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\r\n\tvar i,\r\n\t\tsetMatchers = [],\r\n\t\telementMatchers = [],\r\n\t\tcached = compilerCache[ selector + \" \" ];\r\n\r\n\tif ( !cached ) {\r\n\t\t// Generate a function of recursive functions that can be used to check each element\r\n\t\tif ( !match ) {\r\n\t\t\tmatch = tokenize( selector );\r\n\t\t}\r\n\t\ti = match.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tcached = matcherFromTokens( match[i] );\r\n\t\t\tif ( cached[ expando ] ) {\r\n\t\t\t\tsetMatchers.push( cached );\r\n\t\t\t} else {\r\n\t\t\t\telementMatchers.push( cached );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Cache the compiled function\r\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\r\n\r\n\t\t// Save selector and tokenization\r\n\t\tcached.selector = selector;\r\n\t}\r\n\treturn cached;\r\n};\r\n\r\n/**\r\n * A low-level selection function that works with Sizzle's compiled\r\n *  selector functions\r\n * @param {String|Function} selector A selector or a pre-compiled\r\n *  selector function built with Sizzle.compile\r\n * @param {Element} context\r\n * @param {Array} [results]\r\n * @param {Array} [seed] A set of elements to match against\r\n */\r\nselect = Sizzle.select = function( selector, context, results, seed ) {\r\n\tvar i, tokens, token, type, find,\r\n\t\tcompiled = typeof selector === \"function\" && selector,\r\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\r\n\r\n\tresults = results || [];\r\n\r\n\t// Try to minimize operations if there is only one selector in the list and no seed\r\n\t// (the latter of which guarantees us context)\r\n\tif ( match.length === 1 ) {\r\n\r\n\t\t// Reduce context if the leading compound selector is an ID\r\n\t\ttokens = match[0] = match[0].slice( 0 );\r\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\r\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\r\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\r\n\r\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\r\n\t\t\tif ( !context ) {\r\n\t\t\t\treturn results;\r\n\r\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\r\n\t\t\t} else if ( compiled ) {\r\n\t\t\t\tcontext = context.parentNode;\r\n\t\t\t}\r\n\r\n\t\t\tselector = selector.slice( tokens.shift().value.length );\r\n\t\t}\r\n\r\n\t\t// Fetch a seed set for right-to-left matching\r\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\ttoken = tokens[i];\r\n\r\n\t\t\t// Abort if we hit a combinator\r\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( (find = Expr.find[ type ]) ) {\r\n\t\t\t\t// Search, expanding context for leading sibling combinators\r\n\t\t\t\tif ( (seed = find(\r\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\r\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\r\n\t\t\t\t)) ) {\r\n\r\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\r\n\t\t\t\t\ttokens.splice( i, 1 );\r\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\r\n\t\t\t\t\tif ( !selector ) {\r\n\t\t\t\t\t\tpush.apply( results, seed );\r\n\t\t\t\t\t\treturn results;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Compile and execute a filtering function if one is not provided\r\n\t// Provide `match` to avoid retokenization if we modified the selector above\r\n\t( compiled || compile( selector, match ) )(\r\n\t\tseed,\r\n\t\tcontext,\r\n\t\t!documentIsHTML,\r\n\t\tresults,\r\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\r\n\t);\r\n\treturn results;\r\n};\r\n\r\n// One-time assignments\r\n\r\n// Sort stability\r\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\r\n\r\n// Support: Chrome 14-35+\r\n// Always assume duplicates if they aren't passed to the comparison function\r\nsupport.detectDuplicates = !!hasDuplicate;\r\n\r\n// Initialize against the default document\r\nsetDocument();\r\n\r\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\r\n// Detached nodes confoundingly follow *each other*\r\nsupport.sortDetached = assert(function( div1 ) {\r\n\t// Should return 1, but returns 4 (following)\r\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\r\n});\r\n\r\n// Support: IE<8\r\n// Prevent attribute/property \"interpolation\"\r\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\r\nif ( !assert(function( div ) {\r\n\tdiv.innerHTML = \"<a href='#'></a>\";\r\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\r\n}) ) {\r\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use defaultValue in place of getAttribute(\"value\")\r\nif ( !support.attributes || !assert(function( div ) {\r\n\tdiv.innerHTML = \"<input/>\";\r\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\r\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\r\n}) ) {\r\n\taddHandle( \"value\", function( elem, name, isXML ) {\r\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\r\n\t\t\treturn elem.defaultValue;\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// Support: IE<9\r\n// Use getAttributeNode to fetch booleans when getAttribute lies\r\nif ( !assert(function( div ) {\r\n\treturn div.getAttribute(\"disabled\") == null;\r\n}) ) {\r\n\taddHandle( booleans, function( elem, name, isXML ) {\r\n\t\tvar val;\r\n\t\tif ( !isXML ) {\r\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\r\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\r\n\t\t\t\t\tval.value :\r\n\t\t\t\tnull;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nreturn Sizzle;\r\n\r\n})( window );\r\n\r\n\r\n\r\njQuery.find = Sizzle;\r\njQuery.expr = Sizzle.selectors;\r\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\r\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\r\njQuery.text = Sizzle.getText;\r\njQuery.isXMLDoc = Sizzle.isXML;\r\njQuery.contains = Sizzle.contains;\r\n\r\n\r\n\r\nvar dir = function( elem, dir, until ) {\r\n\tvar matched = [],\r\n\t\ttruncate = until !== undefined;\r\n\r\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\r\n\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tmatched.push( elem );\r\n\t\t}\r\n\t}\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar siblings = function( n, elem ) {\r\n\tvar matched = [];\r\n\r\n\tfor ( ; n; n = n.nextSibling ) {\r\n\t\tif ( n.nodeType === 1 && n !== elem ) {\r\n\t\t\tmatched.push( n );\r\n\t\t}\r\n\t}\r\n\r\n\treturn matched;\r\n};\r\n\r\n\r\nvar rneedsContext = jQuery.expr.match.needsContext;\r\n\r\nvar rsingleTag = ( /^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/ );\r\n\r\n\r\n\r\nvar risSimple = /^.[^:#\\[\\.,]*$/;\r\n\r\n// Implement the identical functionality for filter and not\r\nfunction winnow( elements, qualifier, not ) {\r\n\tif ( jQuery.isFunction( qualifier ) ) {\r\n\t\treturn jQuery.grep( elements, function( elem, i ) {\r\n\t\t\t/* jshint -W018 */\r\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( qualifier.nodeType ) {\r\n\t\treturn jQuery.grep( elements, function( elem ) {\r\n\t\t\treturn ( elem === qualifier ) !== not;\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tif ( typeof qualifier === \"string\" ) {\r\n\t\tif ( risSimple.test( qualifier ) ) {\r\n\t\t\treturn jQuery.filter( qualifier, elements, not );\r\n\t\t}\r\n\r\n\t\tqualifier = jQuery.filter( qualifier, elements );\r\n\t}\r\n\r\n\treturn jQuery.grep( elements, function( elem ) {\r\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\r\n\t} );\r\n}\r\n\r\njQuery.filter = function( expr, elems, not ) {\r\n\tvar elem = elems[ 0 ];\r\n\r\n\tif ( not ) {\r\n\t\texpr = \":not(\" + expr + \")\";\r\n\t}\r\n\r\n\treturn elems.length === 1 && elem.nodeType === 1 ?\r\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\r\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\r\n\t\t\treturn elem.nodeType === 1;\r\n\t\t} ) );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfind: function( selector ) {\r\n\t\tvar i,\r\n\t\t\tlen = this.length,\r\n\t\t\tret = [],\r\n\t\t\tself = this;\r\n\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\r\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} ) );\r\n\t\t}\r\n\r\n\t\tfor ( i = 0; i < len; i++ ) {\r\n\t\t\tjQuery.find( selector, self[ i ], ret );\r\n\t\t}\r\n\r\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\r\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\r\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\r\n\t\treturn ret;\r\n\t},\r\n\tfilter: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\r\n\t},\r\n\tnot: function( selector ) {\r\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\r\n\t},\r\n\tis: function( selector ) {\r\n\t\treturn !!winnow(\r\n\t\t\tthis,\r\n\r\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\r\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\r\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\r\n\t\t\t\tjQuery( selector ) :\r\n\t\t\t\tselector || [],\r\n\t\t\tfalse\r\n\t\t).length;\r\n\t}\r\n} );\r\n\r\n\r\n// Initialize a jQuery object\r\n\r\n\r\n// A central reference to the root jQuery(document)\r\nvar rootjQuery,\r\n\r\n\t// A simple way to check for HTML strings\r\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\r\n\t// Strict HTML recognition (#11290: must start with <)\r\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\r\n\r\n\tinit = jQuery.fn.init = function( selector, context, root ) {\r\n\t\tvar match, elem;\r\n\r\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\r\n\t\tif ( !selector ) {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// Method init() accepts an alternate rootjQuery\r\n\t\t// so migrate can support jQuery.sub (gh-2101)\r\n\t\troot = root || rootjQuery;\r\n\r\n\t\t// Handle HTML strings\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\t\t\tif ( selector[ 0 ] === \"<\" &&\r\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\r\n\t\t\t\tselector.length >= 3 ) {\r\n\r\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\r\n\t\t\t\tmatch = [ null, selector, null ];\r\n\r\n\t\t\t} else {\r\n\t\t\t\tmatch = rquickExpr.exec( selector );\r\n\t\t\t}\r\n\r\n\t\t\t// Match html or make sure no context is specified for #id\r\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\r\n\r\n\t\t\t\t// HANDLE: $(html) -> $(array)\r\n\t\t\t\tif ( match[ 1 ] ) {\r\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\r\n\r\n\t\t\t\t\t// Option to run scripts is true for back-compat\r\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\r\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\r\n\t\t\t\t\t\tmatch[ 1 ],\r\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\r\n\t\t\t\t\t\ttrue\r\n\t\t\t\t\t) );\r\n\r\n\t\t\t\t\t// HANDLE: $(html, props)\r\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\r\n\t\t\t\t\t\tfor ( match in context ) {\r\n\r\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\r\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\r\n\r\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t// HANDLE: $(#id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\r\n\r\n\t\t\t\t\t// Support: Blackberry 4.6\r\n\t\t\t\t\t// gEBID returns nodes no longer in the document (#6963)\r\n\t\t\t\t\tif ( elem && elem.parentNode ) {\r\n\r\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\r\n\t\t\t\t\t\tthis.length = 1;\r\n\t\t\t\t\t\tthis[ 0 ] = elem;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.context = document;\r\n\t\t\t\t\tthis.selector = selector;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t// HANDLE: $(expr, $(...))\r\n\t\t\t} else if ( !context || context.jquery ) {\r\n\t\t\t\treturn ( context || root ).find( selector );\r\n\r\n\t\t\t// HANDLE: $(expr, context)\r\n\t\t\t// (which is just equivalent to: $(context).find(expr)\r\n\t\t\t} else {\r\n\t\t\t\treturn this.constructor( context ).find( selector );\r\n\t\t\t}\r\n\r\n\t\t// HANDLE: $(DOMElement)\r\n\t\t} else if ( selector.nodeType ) {\r\n\t\t\tthis.context = this[ 0 ] = selector;\r\n\t\t\tthis.length = 1;\r\n\t\t\treturn this;\r\n\r\n\t\t// HANDLE: $(function)\r\n\t\t// Shortcut for document ready\r\n\t\t} else if ( jQuery.isFunction( selector ) ) {\r\n\t\t\treturn root.ready !== undefined ?\r\n\t\t\t\troot.ready( selector ) :\r\n\r\n\t\t\t\t// Execute immediately if ready is not present\r\n\t\t\t\tselector( jQuery );\r\n\t\t}\r\n\r\n\t\tif ( selector.selector !== undefined ) {\r\n\t\t\tthis.selector = selector.selector;\r\n\t\t\tthis.context = selector.context;\r\n\t\t}\r\n\r\n\t\treturn jQuery.makeArray( selector, this );\r\n\t};\r\n\r\n// Give the init function the jQuery prototype for later instantiation\r\ninit.prototype = jQuery.fn;\r\n\r\n// Initialize central reference\r\nrootjQuery = jQuery( document );\r\n\r\n\r\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\r\n\r\n\t// Methods guaranteed to produce a unique set when starting from a unique set\r\n\tguaranteedUnique = {\r\n\t\tchildren: true,\r\n\t\tcontents: true,\r\n\t\tnext: true,\r\n\t\tprev: true\r\n\t};\r\n\r\njQuery.fn.extend( {\r\n\thas: function( target ) {\r\n\t\tvar targets = jQuery( target, this ),\r\n\t\t\tl = targets.length;\r\n\r\n\t\treturn this.filter( function() {\r\n\t\t\tvar i = 0;\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tclosest: function( selectors, context ) {\r\n\t\tvar cur,\r\n\t\t\ti = 0,\r\n\t\t\tl = this.length,\r\n\t\t\tmatched = [],\r\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\r\n\t\t\t\tjQuery( selectors, context || this.context ) :\r\n\t\t\t\t0;\r\n\r\n\t\tfor ( ; i < l; i++ ) {\r\n\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\r\n\r\n\t\t\t\t// Always skip document fragments\r\n\t\t\t\tif ( cur.nodeType < 11 && ( pos ?\r\n\t\t\t\t\tpos.index( cur ) > -1 :\r\n\r\n\t\t\t\t\t// Don't pass non-elements to Sizzle\r\n\t\t\t\t\tcur.nodeType === 1 &&\r\n\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\r\n\r\n\t\t\t\t\tmatched.push( cur );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\r\n\t},\r\n\r\n\t// Determine the position of an element within the set\r\n\tindex: function( elem ) {\r\n\r\n\t\t// No argument, return index in parent\r\n\t\tif ( !elem ) {\r\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\r\n\t\t}\r\n\r\n\t\t// Index in selector\r\n\t\tif ( typeof elem === \"string\" ) {\r\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\r\n\t\t}\r\n\r\n\t\t// Locate the position of the desired element\r\n\t\treturn indexOf.call( this,\r\n\r\n\t\t\t// If it receives a jQuery object, the first element is used\r\n\t\t\telem.jquery ? elem[ 0 ] : elem\r\n\t\t);\r\n\t},\r\n\r\n\tadd: function( selector, context ) {\r\n\t\treturn this.pushStack(\r\n\t\t\tjQuery.uniqueSort(\r\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\r\n\t\t\t)\r\n\t\t);\r\n\t},\r\n\r\n\taddBack: function( selector ) {\r\n\t\treturn this.add( selector == null ?\r\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\r\n\t\t);\r\n\t}\r\n} );\r\n\r\nfunction sibling( cur, dir ) {\r\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\r\n\treturn cur;\r\n}\r\n\r\njQuery.each( {\r\n\tparent: function( elem ) {\r\n\t\tvar parent = elem.parentNode;\r\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\r\n\t},\r\n\tparents: function( elem ) {\r\n\t\treturn dir( elem, \"parentNode\" );\r\n\t},\r\n\tparentsUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"parentNode\", until );\r\n\t},\r\n\tnext: function( elem ) {\r\n\t\treturn sibling( elem, \"nextSibling\" );\r\n\t},\r\n\tprev: function( elem ) {\r\n\t\treturn sibling( elem, \"previousSibling\" );\r\n\t},\r\n\tnextAll: function( elem ) {\r\n\t\treturn dir( elem, \"nextSibling\" );\r\n\t},\r\n\tprevAll: function( elem ) {\r\n\t\treturn dir( elem, \"previousSibling\" );\r\n\t},\r\n\tnextUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"nextSibling\", until );\r\n\t},\r\n\tprevUntil: function( elem, i, until ) {\r\n\t\treturn dir( elem, \"previousSibling\", until );\r\n\t},\r\n\tsiblings: function( elem ) {\r\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\r\n\t},\r\n\tchildren: function( elem ) {\r\n\t\treturn siblings( elem.firstChild );\r\n\t},\r\n\tcontents: function( elem ) {\r\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\r\n\t}\r\n}, function( name, fn ) {\r\n\tjQuery.fn[ name ] = function( until, selector ) {\r\n\t\tvar matched = jQuery.map( this, fn, until );\r\n\r\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\r\n\t\t\tselector = until;\r\n\t\t}\r\n\r\n\t\tif ( selector && typeof selector === \"string\" ) {\r\n\t\t\tmatched = jQuery.filter( selector, matched );\r\n\t\t}\r\n\r\n\t\tif ( this.length > 1 ) {\r\n\r\n\t\t\t// Remove duplicates\r\n\t\t\tif ( !guaranteedUnique[ name ] ) {\r\n\t\t\t\tjQuery.uniqueSort( matched );\r\n\t\t\t}\r\n\r\n\t\t\t// Reverse order for parents* and prev-derivatives\r\n\t\t\tif ( rparentsprev.test( name ) ) {\r\n\t\t\t\tmatched.reverse();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( matched );\r\n\t};\r\n} );\r\nvar rnotwhite = ( /\\S+/g );\r\n\r\n\r\n\r\n// Convert String-formatted options into Object-formatted ones\r\nfunction createOptions( options ) {\r\n\tvar object = {};\r\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\r\n\t\tobject[ flag ] = true;\r\n\t} );\r\n\treturn object;\r\n}\r\n\r\n/*\r\n * Create a callback list using the following parameters:\r\n *\r\n *\toptions: an optional list of space-separated options that will change how\r\n *\t\t\tthe callback list behaves or a more traditional option object\r\n *\r\n * By default a callback list will act like an event callback list and can be\r\n * \"fired\" multiple times.\r\n *\r\n * Possible options:\r\n *\r\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\r\n *\r\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\r\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\r\n *\t\t\t\t\tvalues (like a Deferred)\r\n *\r\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\r\n *\r\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\r\n *\r\n */\r\njQuery.Callbacks = function( options ) {\r\n\r\n\t// Convert options from String-formatted to Object-formatted if needed\r\n\t// (we check in cache first)\r\n\toptions = typeof options === \"string\" ?\r\n\t\tcreateOptions( options ) :\r\n\t\tjQuery.extend( {}, options );\r\n\r\n\tvar // Flag to know if list is currently firing\r\n\t\tfiring,\r\n\r\n\t\t// Last fire value for non-forgettable lists\r\n\t\tmemory,\r\n\r\n\t\t// Flag to know if list was already fired\r\n\t\tfired,\r\n\r\n\t\t// Flag to prevent firing\r\n\t\tlocked,\r\n\r\n\t\t// Actual callback list\r\n\t\tlist = [],\r\n\r\n\t\t// Queue of execution data for repeatable lists\r\n\t\tqueue = [],\r\n\r\n\t\t// Index of currently firing callback (modified by add/remove as needed)\r\n\t\tfiringIndex = -1,\r\n\r\n\t\t// Fire callbacks\r\n\t\tfire = function() {\r\n\r\n\t\t\t// Enforce single-firing\r\n\t\t\tlocked = options.once;\r\n\r\n\t\t\t// Execute callbacks for all pending executions,\r\n\t\t\t// respecting firingIndex overrides and runtime changes\r\n\t\t\tfired = firing = true;\r\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\r\n\t\t\t\tmemory = queue.shift();\r\n\t\t\t\twhile ( ++firingIndex < list.length ) {\r\n\r\n\t\t\t\t\t// Run callback and check for early termination\r\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\r\n\t\t\t\t\t\toptions.stopOnFalse ) {\r\n\r\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\r\n\t\t\t\t\t\tfiringIndex = list.length;\r\n\t\t\t\t\t\tmemory = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Forget the data if we're done with it\r\n\t\t\tif ( !options.memory ) {\r\n\t\t\t\tmemory = false;\r\n\t\t\t}\r\n\r\n\t\t\tfiring = false;\r\n\r\n\t\t\t// Clean up if we're done firing for good\r\n\t\t\tif ( locked ) {\r\n\r\n\t\t\t\t// Keep an empty list if we have data for future add calls\r\n\t\t\t\tif ( memory ) {\r\n\t\t\t\t\tlist = [];\r\n\r\n\t\t\t\t// Otherwise, this object is spent\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlist = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Actual Callbacks object\r\n\t\tself = {\r\n\r\n\t\t\t// Add a callback or a collection of callbacks to the list\r\n\t\t\tadd: function() {\r\n\t\t\t\tif ( list ) {\r\n\r\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfiringIndex = list.length - 1;\r\n\t\t\t\t\t\tqueue.push( memory );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t( function add( args ) {\r\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\r\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\r\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\r\n\t\t\t\t\t\t\t\t\tlist.push( arg );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Inspect recursively\r\n\t\t\t\t\t\t\t\tadd( arg );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t} )( arguments );\r\n\r\n\t\t\t\t\tif ( memory && !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove a callback from the list\r\n\t\t\tremove: function() {\r\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\r\n\t\t\t\t\tvar index;\r\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\r\n\t\t\t\t\t\tlist.splice( index, 1 );\r\n\r\n\t\t\t\t\t\t// Handle firing indexes\r\n\t\t\t\t\t\tif ( index <= firingIndex ) {\r\n\t\t\t\t\t\t\tfiringIndex--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Check if a given callback is in the list.\r\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\r\n\t\t\thas: function( fn ) {\r\n\t\t\t\treturn fn ?\r\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\r\n\t\t\t\t\tlist.length > 0;\r\n\t\t\t},\r\n\r\n\t\t\t// Remove all callbacks from the list\r\n\t\t\tempty: function() {\r\n\t\t\t\tif ( list ) {\r\n\t\t\t\t\tlist = [];\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire and .add\r\n\t\t\t// Abort any current/pending executions\r\n\t\t\t// Clear all callbacks and values\r\n\t\t\tdisable: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tlist = memory = \"\";\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tdisabled: function() {\r\n\t\t\t\treturn !list;\r\n\t\t\t},\r\n\r\n\t\t\t// Disable .fire\r\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\r\n\t\t\t// Abort any pending executions\r\n\t\t\tlock: function() {\r\n\t\t\t\tlocked = queue = [];\r\n\t\t\t\tif ( !memory ) {\r\n\t\t\t\t\tlist = memory = \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\t\t\tlocked: function() {\r\n\t\t\t\treturn !!locked;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all callbacks with the given context and arguments\r\n\t\t\tfireWith: function( context, args ) {\r\n\t\t\t\tif ( !locked ) {\r\n\t\t\t\t\targs = args || [];\r\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\r\n\t\t\t\t\tqueue.push( args );\r\n\t\t\t\t\tif ( !firing ) {\r\n\t\t\t\t\t\tfire();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// Call all the callbacks with the given arguments\r\n\t\t\tfire: function() {\r\n\t\t\t\tself.fireWith( this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t// To know if the callbacks have already been called at least once\r\n\t\t\tfired: function() {\r\n\t\t\t\treturn !!fired;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\njQuery.extend( {\r\n\r\n\tDeferred: function( func ) {\r\n\t\tvar tuples = [\r\n\r\n\t\t\t\t// action, add listener, listener list, final state\r\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ), \"resolved\" ],\r\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ), \"rejected\" ],\r\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ) ]\r\n\t\t\t],\r\n\t\t\tstate = \"pending\",\r\n\t\t\tpromise = {\r\n\t\t\t\tstate: function() {\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t},\r\n\t\t\t\talways: function() {\r\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\r\n\t\t\t\t\tvar fns = arguments;\r\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\r\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\r\n\r\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\r\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\r\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\r\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\r\n\t\t\t\t\t\t\t\t\treturned.promise()\r\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\r\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\r\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\r\n\t\t\t\t\t\t\t\t\t\tthis === promise ? newDefer.promise() : this,\r\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tfns = null;\r\n\t\t\t\t\t} ).promise();\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Get a promise for this deferred\r\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\r\n\t\t\t\tpromise: function( obj ) {\r\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeferred = {};\r\n\r\n\t\t// Keep pipe for back-compat\r\n\t\tpromise.pipe = promise.then;\r\n\r\n\t\t// Add list-specific methods\r\n\t\tjQuery.each( tuples, function( i, tuple ) {\r\n\t\t\tvar list = tuple[ 2 ],\r\n\t\t\t\tstateString = tuple[ 3 ];\r\n\r\n\t\t\t// promise[ done | fail | progress ] = list.add\r\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\r\n\r\n\t\t\t// Handle state\r\n\t\t\tif ( stateString ) {\r\n\t\t\t\tlist.add( function() {\r\n\r\n\t\t\t\t\t// state = [ resolved | rejected ]\r\n\t\t\t\t\tstate = stateString;\r\n\r\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\r\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\r\n\t\t\t}\r\n\r\n\t\t\t// deferred[ resolve | reject | notify ]\r\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\r\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? promise : this, arguments );\r\n\t\t\t\treturn this;\r\n\t\t\t};\r\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\r\n\t\t} );\r\n\r\n\t\t// Make the deferred a promise\r\n\t\tpromise.promise( deferred );\r\n\r\n\t\t// Call given func if any\r\n\t\tif ( func ) {\r\n\t\t\tfunc.call( deferred, deferred );\r\n\t\t}\r\n\r\n\t\t// All done!\r\n\t\treturn deferred;\r\n\t},\r\n\r\n\t// Deferred helper\r\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\r\n\t\tvar i = 0,\r\n\t\t\tresolveValues = slice.call( arguments ),\r\n\t\t\tlength = resolveValues.length,\r\n\r\n\t\t\t// the count of uncompleted subordinates\r\n\t\t\tremaining = length !== 1 ||\r\n\t\t\t\t( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\r\n\r\n\t\t\t// the master Deferred.\r\n\t\t\t// If resolveValues consist of only a single Deferred, just use that.\r\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\r\n\r\n\t\t\t// Update function for both resolve and progress values\r\n\t\t\tupdateFunc = function( i, contexts, values ) {\r\n\t\t\t\treturn function( value ) {\r\n\t\t\t\t\tcontexts[ i ] = this;\r\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\r\n\t\t\t\t\tif ( values === progressValues ) {\r\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\r\n\t\t\t\t\t} else if ( !( --remaining ) ) {\r\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tprogressValues, progressContexts, resolveContexts;\r\n\r\n\t\t// Add listeners to Deferred subordinates; treat others as resolved\r\n\t\tif ( length > 1 ) {\r\n\t\t\tprogressValues = new Array( length );\r\n\t\t\tprogressContexts = new Array( length );\r\n\t\t\tresolveContexts = new Array( length );\r\n\t\t\tfor ( ; i < length; i++ ) {\r\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\r\n\t\t\t\t\tresolveValues[ i ].promise()\r\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) )\r\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\r\n\t\t\t\t\t\t.fail( deferred.reject );\r\n\t\t\t\t} else {\r\n\t\t\t\t\t--remaining;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If we're not waiting on anything, resolve the master\r\n\t\tif ( !remaining ) {\r\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\r\n\t\t}\r\n\r\n\t\treturn deferred.promise();\r\n\t}\r\n} );\r\n\r\n\r\n// The deferred used on DOM ready\r\nvar readyList;\r\n\r\njQuery.fn.ready = function( fn ) {\r\n\r\n\t// Add the callback\r\n\tjQuery.ready.promise().done( fn );\r\n\r\n\treturn this;\r\n};\r\n\r\njQuery.extend( {\r\n\r\n\t// Is the DOM ready to be used? Set to true once it occurs.\r\n\tisReady: false,\r\n\r\n\t// A counter to track how many items to wait for before\r\n\t// the ready event fires. See #6781\r\n\treadyWait: 1,\r\n\r\n\t// Hold (or release) the ready event\r\n\tholdReady: function( hold ) {\r\n\t\tif ( hold ) {\r\n\t\t\tjQuery.readyWait++;\r\n\t\t} else {\r\n\t\t\tjQuery.ready( true );\r\n\t\t}\r\n\t},\r\n\r\n\t// Handle when the DOM is ready\r\n\tready: function( wait ) {\r\n\r\n\t\t// Abort if there are pending holds or we're already ready\r\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Remember that the DOM is ready\r\n\t\tjQuery.isReady = true;\r\n\r\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\r\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are functions bound, to execute\r\n\t\treadyList.resolveWith( document, [ jQuery ] );\r\n\r\n\t\t// Trigger any bound ready events\r\n\t\tif ( jQuery.fn.triggerHandler ) {\r\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\r\n\t\t\tjQuery( document ).off( \"ready\" );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n/**\r\n * The ready event handler and self cleanup method\r\n */\r\nfunction completed() {\r\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\r\n\twindow.removeEventListener( \"load\", completed );\r\n\tjQuery.ready();\r\n}\r\n\r\njQuery.ready.promise = function( obj ) {\r\n\tif ( !readyList ) {\r\n\r\n\t\treadyList = jQuery.Deferred();\r\n\r\n\t\t// Catch cases where $(document).ready() is called\r\n\t\t// after the browser event has already occurred.\r\n\t\t// Support: IE9-10 only\r\n\t\t// Older IE sometimes signals \"interactive\" too soon\r\n\t\tif ( document.readyState === \"complete\" ||\r\n\t\t\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\r\n\r\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\r\n\t\t\twindow.setTimeout( jQuery.ready );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Use the handy event callback\r\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed );\r\n\r\n\t\t\t// A fallback to window.onload, that will always work\r\n\t\t\twindow.addEventListener( \"load\", completed );\r\n\t\t}\r\n\t}\r\n\treturn readyList.promise( obj );\r\n};\r\n\r\n// Kick off the DOM ready check even if the user does not\r\njQuery.ready.promise();\r\n\r\n\r\n\r\n\r\n// Multifunctional method to get and set values of a collection\r\n// The value/s can optionally be executed if it's a function\r\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\r\n\tvar i = 0,\r\n\t\tlen = elems.length,\r\n\t\tbulk = key == null;\r\n\r\n\t// Sets many values\r\n\tif ( jQuery.type( key ) === \"object\" ) {\r\n\t\tchainable = true;\r\n\t\tfor ( i in key ) {\r\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\r\n\t\t}\r\n\r\n\t// Sets one value\r\n\t} else if ( value !== undefined ) {\r\n\t\tchainable = true;\r\n\r\n\t\tif ( !jQuery.isFunction( value ) ) {\r\n\t\t\traw = true;\r\n\t\t}\r\n\r\n\t\tif ( bulk ) {\r\n\r\n\t\t\t// Bulk operations run against the entire set\r\n\t\t\tif ( raw ) {\r\n\t\t\t\tfn.call( elems, value );\r\n\t\t\t\tfn = null;\r\n\r\n\t\t\t// ...except when executing function values\r\n\t\t\t} else {\r\n\t\t\t\tbulk = fn;\r\n\t\t\t\tfn = function( elem, key, value ) {\r\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\tfn(\r\n\t\t\t\t\telems[ i ], key, raw ?\r\n\t\t\t\t\tvalue :\r\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn chainable ?\r\n\t\telems :\r\n\r\n\t\t// Gets\r\n\t\tbulk ?\r\n\t\t\tfn.call( elems ) :\r\n\t\t\tlen ? fn( elems[ 0 ], key ) : emptyGet;\r\n};\r\nvar acceptData = function( owner ) {\r\n\r\n\t// Accepts only:\r\n\t//  - Node\r\n\t//    - Node.ELEMENT_NODE\r\n\t//    - Node.DOCUMENT_NODE\r\n\t//  - Object\r\n\t//    - Any\r\n\t/* jshint -W018 */\r\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\r\n};\r\n\r\n\r\n\r\n\r\nfunction Data() {\r\n\tthis.expando = jQuery.expando + Data.uid++;\r\n}\r\n\r\nData.uid = 1;\r\n\r\nData.prototype = {\r\n\r\n\tregister: function( owner, initial ) {\r\n\t\tvar value = initial || {};\r\n\r\n\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t// use plain assignment\r\n\t\tif ( owner.nodeType ) {\r\n\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t// Otherwise secure it in a non-enumerable, non-writable property\r\n\t\t// configurability must be true to allow the property to be\r\n\t\t// deleted with the delete operator\r\n\t\t} else {\r\n\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\tvalue: value,\r\n\t\t\t\twritable: true,\r\n\t\t\t\tconfigurable: true\r\n\t\t\t} );\r\n\t\t}\r\n\t\treturn owner[ this.expando ];\r\n\t},\r\n\tcache: function( owner ) {\r\n\r\n\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t// but we should not, see #8335.\r\n\t\t// Always return an empty object.\r\n\t\tif ( !acceptData( owner ) ) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\r\n\t\t// Check if the owner object already has a cache\r\n\t\tvar value = owner[ this.expando ];\r\n\r\n\t\t// If not, create one\r\n\t\tif ( !value ) {\r\n\t\t\tvalue = {};\r\n\r\n\t\t\t// We can accept data for non-element nodes in modern browsers,\r\n\t\t\t// but we should not, see #8335.\r\n\t\t\t// Always return an empty object.\r\n\t\t\tif ( acceptData( owner ) ) {\r\n\r\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\r\n\t\t\t\t// use plain assignment\r\n\t\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\t\towner[ this.expando ] = value;\r\n\r\n\t\t\t\t// Otherwise secure it in a non-enumerable property\r\n\t\t\t\t// configurable must be true to allow the property to be\r\n\t\t\t\t// deleted when data is removed\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t} );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t},\r\n\tset: function( owner, data, value ) {\r\n\t\tvar prop,\r\n\t\t\tcache = this.cache( owner );\r\n\r\n\t\t// Handle: [ owner, key, value ] args\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\tcache[ data ] = value;\r\n\r\n\t\t// Handle: [ owner, { properties } ] args\r\n\t\t} else {\r\n\r\n\t\t\t// Copy the properties one-by-one to the cache object\r\n\t\t\tfor ( prop in data ) {\r\n\t\t\t\tcache[ prop ] = data[ prop ];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cache;\r\n\t},\r\n\tget: function( owner, key ) {\r\n\t\treturn key === undefined ?\r\n\t\t\tthis.cache( owner ) :\r\n\t\t\towner[ this.expando ] && owner[ this.expando ][ key ];\r\n\t},\r\n\taccess: function( owner, key, value ) {\r\n\t\tvar stored;\r\n\r\n\t\t// In cases where either:\r\n\t\t//\r\n\t\t//   1. No key was specified\r\n\t\t//   2. A string key was specified, but no value provided\r\n\t\t//\r\n\t\t// Take the \"read\" path and allow the get method to determine\r\n\t\t// which value to return, respectively either:\r\n\t\t//\r\n\t\t//   1. The entire cache object\r\n\t\t//   2. The data stored at the key\r\n\t\t//\r\n\t\tif ( key === undefined ||\r\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\r\n\r\n\t\t\tstored = this.get( owner, key );\r\n\r\n\t\t\treturn stored !== undefined ?\r\n\t\t\t\tstored : this.get( owner, jQuery.camelCase( key ) );\r\n\t\t}\r\n\r\n\t\t// When the key is not a string, or both a key and value\r\n\t\t// are specified, set or extend (existing objects) with either:\r\n\t\t//\r\n\t\t//   1. An object of properties\r\n\t\t//   2. A key and value\r\n\t\t//\r\n\t\tthis.set( owner, key, value );\r\n\r\n\t\t// Since the \"set\" path can have two possible entry points\r\n\t\t// return the expected data based on which path was taken[*]\r\n\t\treturn value !== undefined ? value : key;\r\n\t},\r\n\tremove: function( owner, key ) {\r\n\t\tvar i, name, camel,\r\n\t\t\tcache = owner[ this.expando ];\r\n\r\n\t\tif ( cache === undefined ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) {\r\n\t\t\tthis.register( owner );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Support array or space separated string of keys\r\n\t\t\tif ( jQuery.isArray( key ) ) {\r\n\r\n\t\t\t\t// If \"name\" is an array of keys...\r\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\r\n\t\t\t\t// keys will be converted to camelCase.\r\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\r\n\t\t\t\t// both plain key and camelCase key. #12786\r\n\t\t\t\t// This will only penalize the array argument path.\r\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\r\n\t\t\t} else {\r\n\t\t\t\tcamel = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Try the string as a key before any manipulation\r\n\t\t\t\tif ( key in cache ) {\r\n\t\t\t\t\tname = [ key, camel ];\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// If a key with the spaces exists, use it.\r\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\r\n\t\t\t\t\tname = camel;\r\n\t\t\t\t\tname = name in cache ?\r\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti = name.length;\r\n\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\tdelete cache[ name[ i ] ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove the expando if there's no more data\r\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\r\n\r\n\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t// Webkit & Blink performance suffers when deleting properties\r\n\t\t\t// from DOM nodes, so set to undefined instead\r\n\t\t\t// https://code.google.com/p/chromium/issues/detail?id=378607\r\n\t\t\tif ( owner.nodeType ) {\r\n\t\t\t\towner[ this.expando ] = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tdelete owner[ this.expando ];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\thasData: function( owner ) {\r\n\t\tvar cache = owner[ this.expando ];\r\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\r\n\t}\r\n};\r\nvar dataPriv = new Data();\r\n\r\nvar dataUser = new Data();\r\n\r\n\r\n\r\n//\tImplementation Summary\r\n//\r\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\r\n//\t2. Improve the module's maintainability by reducing the storage\r\n//\t\tpaths to a single mechanism.\r\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\r\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\r\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\r\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\r\n\r\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\r\n\trmultiDash = /[A-Z]/g;\r\n\r\nfunction dataAttr( elem, key, data ) {\r\n\tvar name;\r\n\r\n\t// If nothing was found internally, try to fetch any\r\n\t// data from the HTML5 data-* attribute\r\n\tif ( data === undefined && elem.nodeType === 1 ) {\r\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\r\n\t\tdata = elem.getAttribute( name );\r\n\r\n\t\tif ( typeof data === \"string\" ) {\r\n\t\t\ttry {\r\n\t\t\t\tdata = data === \"true\" ? true :\r\n\t\t\t\t\tdata === \"false\" ? false :\r\n\t\t\t\t\tdata === \"null\" ? null :\r\n\r\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\r\n\t\t\t\t\t+data + \"\" === data ? +data :\r\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\r\n\t\t\t\t\tdata;\r\n\t\t\t} catch ( e ) {}\r\n\r\n\t\t\t// Make sure we set the data so it isn't changed later\r\n\t\t\tdataUser.set( elem, key, data );\r\n\t\t} else {\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\t}\r\n\treturn data;\r\n}\r\n\r\njQuery.extend( {\r\n\thasData: function( elem ) {\r\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\r\n\t},\r\n\r\n\tdata: function( elem, name, data ) {\r\n\t\treturn dataUser.access( elem, name, data );\r\n\t},\r\n\r\n\tremoveData: function( elem, name ) {\r\n\t\tdataUser.remove( elem, name );\r\n\t},\r\n\r\n\t// TODO: Now that all calls to _data and _removeData have been replaced\r\n\t// with direct calls to dataPriv methods, these can be deprecated.\r\n\t_data: function( elem, name, data ) {\r\n\t\treturn dataPriv.access( elem, name, data );\r\n\t},\r\n\r\n\t_removeData: function( elem, name ) {\r\n\t\tdataPriv.remove( elem, name );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tdata: function( key, value ) {\r\n\t\tvar i, name, data,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tattrs = elem && elem.attributes;\r\n\r\n\t\t// Gets all values\r\n\t\tif ( key === undefined ) {\r\n\t\t\tif ( this.length ) {\r\n\t\t\t\tdata = dataUser.get( elem );\r\n\r\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\r\n\t\t\t\t\ti = attrs.length;\r\n\t\t\t\t\twhile ( i-- ) {\r\n\r\n\t\t\t\t\t\t// Support: IE11+\r\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\r\n\t\t\t\t\t\tif ( attrs[ i ] ) {\r\n\t\t\t\t\t\t\tname = attrs[ i ].name;\r\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\r\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\r\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t\t// Sets multiple values\r\n\t\tif ( typeof key === \"object\" ) {\r\n\t\t\treturn this.each( function() {\r\n\t\t\t\tdataUser.set( this, key );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar data, camelKey;\r\n\r\n\t\t\t// The calling jQuery object (element matches) is not empty\r\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\r\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\r\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\r\n\t\t\t// throw an exception if an attempt to read a data cache is made.\r\n\t\t\tif ( elem && value === undefined ) {\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key as-is\r\n\t\t\t\tdata = dataUser.get( elem, key ) ||\r\n\r\n\t\t\t\t\t// Try to find dashed key if it exists (gh-2779)\r\n\t\t\t\t\t// This is for 2.2.x only\r\n\t\t\t\t\tdataUser.get( elem, key.replace( rmultiDash, \"-$&\" ).toLowerCase() );\r\n\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcamelKey = jQuery.camelCase( key );\r\n\r\n\t\t\t\t// Attempt to get data from the cache\r\n\t\t\t\t// with the key camelized\r\n\t\t\t\tdata = dataUser.get( elem, camelKey );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attempt to \"discover\" the data in\r\n\t\t\t\t// HTML5 custom data-* attrs\r\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\r\n\t\t\t\tif ( data !== undefined ) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We tried really hard, but the data doesn't exist.\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Set the data...\r\n\t\t\tcamelKey = jQuery.camelCase( key );\r\n\t\t\tthis.each( function() {\r\n\r\n\t\t\t\t// First, attempt to store a copy or reference of any\r\n\t\t\t\t// data that might've been store with a camelCased key.\r\n\t\t\t\tvar data = dataUser.get( this, camelKey );\r\n\r\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\r\n\t\t\t\t// store property names with dashes in a camelCase form.\r\n\t\t\t\t// This might not apply to all properties...*\r\n\t\t\t\tdataUser.set( this, camelKey, value );\r\n\r\n\t\t\t\t// *... In the case of properties that might _actually_\r\n\t\t\t\t// have dashes, we need to also store a copy of that\r\n\t\t\t\t// unchanged property.\r\n\t\t\t\tif ( key.indexOf( \"-\" ) > -1 && data !== undefined ) {\r\n\t\t\t\t\tdataUser.set( this, key, value );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t}, null, value, arguments.length > 1, null, true );\r\n\t},\r\n\r\n\tremoveData: function( key ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdataUser.remove( this, key );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\njQuery.extend( {\r\n\tqueue: function( elem, type, data ) {\r\n\t\tvar queue;\r\n\r\n\t\tif ( elem ) {\r\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\r\n\t\t\tqueue = dataPriv.get( elem, type );\r\n\r\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\r\n\t\t\tif ( data ) {\r\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\r\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tqueue.push( data );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn queue || [];\r\n\t\t}\r\n\t},\r\n\r\n\tdequeue: function( elem, type ) {\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\tvar queue = jQuery.queue( elem, type ),\r\n\t\t\tstartLength = queue.length,\r\n\t\t\tfn = queue.shift(),\r\n\t\t\thooks = jQuery._queueHooks( elem, type ),\r\n\t\t\tnext = function() {\r\n\t\t\t\tjQuery.dequeue( elem, type );\r\n\t\t\t};\r\n\r\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\r\n\t\tif ( fn === \"inprogress\" ) {\r\n\t\t\tfn = queue.shift();\r\n\t\t\tstartLength--;\r\n\t\t}\r\n\r\n\t\tif ( fn ) {\r\n\r\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\r\n\t\t\t// automatically dequeued\r\n\t\t\tif ( type === \"fx\" ) {\r\n\t\t\t\tqueue.unshift( \"inprogress\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Clear up the last queue stop function\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tfn.call( elem, next, hooks );\r\n\t\t}\r\n\r\n\t\tif ( !startLength && hooks ) {\r\n\t\t\thooks.empty.fire();\r\n\t\t}\r\n\t},\r\n\r\n\t// Not public - generate a queueHooks object, or return the current one\r\n\t_queueHooks: function( elem, type ) {\r\n\t\tvar key = type + \"queueHooks\";\r\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\r\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\r\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\r\n\t\t\t} )\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tqueue: function( type, data ) {\r\n\t\tvar setter = 2;\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tdata = type;\r\n\t\t\ttype = \"fx\";\r\n\t\t\tsetter--;\r\n\t\t}\r\n\r\n\t\tif ( arguments.length < setter ) {\r\n\t\t\treturn jQuery.queue( this[ 0 ], type );\r\n\t\t}\r\n\r\n\t\treturn data === undefined ?\r\n\t\t\tthis :\r\n\t\t\tthis.each( function() {\r\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\r\n\r\n\t\t\t\t// Ensure a hooks for this queue\r\n\t\t\t\tjQuery._queueHooks( this, type );\r\n\r\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\r\n\t\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t},\r\n\tdequeue: function( type ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.dequeue( this, type );\r\n\t\t} );\r\n\t},\r\n\tclearQueue: function( type ) {\r\n\t\treturn this.queue( type || \"fx\", [] );\r\n\t},\r\n\r\n\t// Get a promise resolved when queues of a certain type\r\n\t// are emptied (fx is the type by default)\r\n\tpromise: function( type, obj ) {\r\n\t\tvar tmp,\r\n\t\t\tcount = 1,\r\n\t\t\tdefer = jQuery.Deferred(),\r\n\t\t\telements = this,\r\n\t\t\ti = this.length,\r\n\t\t\tresolve = function() {\r\n\t\t\t\tif ( !( --count ) ) {\r\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tobj = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\ttype = type || \"fx\";\r\n\r\n\t\twhile ( i-- ) {\r\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\r\n\t\t\tif ( tmp && tmp.empty ) {\r\n\t\t\t\tcount++;\r\n\t\t\t\ttmp.empty.add( resolve );\r\n\t\t\t}\r\n\t\t}\r\n\t\tresolve();\r\n\t\treturn defer.promise( obj );\r\n\t}\r\n} );\r\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\r\n\r\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\r\n\r\n\r\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\r\n\r\nvar isHidden = function( elem, el ) {\r\n\r\n\t\t// isHidden might be called from jQuery#filter function;\r\n\t\t// in that case, element will be second argument\r\n\t\telem = el || elem;\r\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" ||\r\n\t\t\t!jQuery.contains( elem.ownerDocument, elem );\r\n\t};\r\n\r\n\r\n\r\nfunction adjustCSS( elem, prop, valueParts, tween ) {\r\n\tvar adjusted,\r\n\t\tscale = 1,\r\n\t\tmaxIterations = 20,\r\n\t\tcurrentValue = tween ?\r\n\t\t\tfunction() { return tween.cur(); } :\r\n\t\t\tfunction() { return jQuery.css( elem, prop, \"\" ); },\r\n\t\tinitial = currentValue(),\r\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\r\n\r\n\t\t// Starting value computation is required for potential unit mismatches\r\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\r\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\r\n\r\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\r\n\r\n\t\t// Trust units reported by jQuery.css\r\n\t\tunit = unit || initialInUnit[ 3 ];\r\n\r\n\t\t// Make sure we update the tween properties later on\r\n\t\tvalueParts = valueParts || [];\r\n\r\n\t\t// Iteratively approximate from a nonzero starting point\r\n\t\tinitialInUnit = +initial || 1;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\r\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\r\n\t\t\tscale = scale || \".5\";\r\n\r\n\t\t\t// Adjust and apply\r\n\t\t\tinitialInUnit = initialInUnit / scale;\r\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\r\n\r\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\r\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\r\n\t\t} while (\r\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\r\n\t\t);\r\n\t}\r\n\r\n\tif ( valueParts ) {\r\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\r\n\r\n\t\t// Apply relative offset (+=/-=) if specified\r\n\t\tadjusted = valueParts[ 1 ] ?\r\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\r\n\t\t\t+valueParts[ 2 ];\r\n\t\tif ( tween ) {\r\n\t\t\ttween.unit = unit;\r\n\t\t\ttween.start = initialInUnit;\r\n\t\t\ttween.end = adjusted;\r\n\t\t}\r\n\t}\r\n\treturn adjusted;\r\n}\r\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\r\n\r\nvar rtagName = ( /<([\\w:-]+)/ );\r\n\r\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\r\n\r\n\r\n\r\n// We have to close these tags to support XHTML (#13200)\r\nvar wrapMap = {\r\n\r\n\t// Support: IE9\r\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\r\n\r\n\t// XHTML parsers do not magically insert elements in the\r\n\t// same way that tag soup parsers do. So we cannot shorten\r\n\t// this by omitting <tbody> or other required elements.\r\n\tthead: [ 1, \"<table>\", \"</table>\" ],\r\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\r\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\r\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\r\n\r\n\t_default: [ 0, \"\", \"\" ]\r\n};\r\n\r\n// Support: IE9\r\nwrapMap.optgroup = wrapMap.option;\r\n\r\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\r\nwrapMap.th = wrapMap.td;\r\n\r\n\r\nfunction getAll( context, tag ) {\r\n\r\n\t// Support: IE9-11+\r\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\r\n\tvar ret = typeof context.getElementsByTagName !== \"undefined\" ?\r\n\t\t\tcontext.getElementsByTagName( tag || \"*\" ) :\r\n\t\t\ttypeof context.querySelectorAll !== \"undefined\" ?\r\n\t\t\t\tcontext.querySelectorAll( tag || \"*\" ) :\r\n\t\t\t[];\r\n\r\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\r\n\t\tjQuery.merge( [ context ], ret ) :\r\n\t\tret;\r\n}\r\n\r\n\r\n// Mark scripts as having already been evaluated\r\nfunction setGlobalEval( elems, refElements ) {\r\n\tvar i = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\tdataPriv.set(\r\n\t\t\telems[ i ],\r\n\t\t\t\"globalEval\",\r\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nvar rhtml = /<|&#?\\w+;/;\r\n\r\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\r\n\tvar elem, tmp, tag, wrap, contains, j,\r\n\t\tfragment = context.createDocumentFragment(),\r\n\t\tnodes = [],\r\n\t\ti = 0,\r\n\t\tl = elems.length;\r\n\r\n\tfor ( ; i < l; i++ ) {\r\n\t\telem = elems[ i ];\r\n\r\n\t\tif ( elem || elem === 0 ) {\r\n\r\n\t\t\t// Add nodes directly\r\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\r\n\r\n\t\t\t// Convert non-html into a text node\r\n\t\t\t} else if ( !rhtml.test( elem ) ) {\r\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\r\n\r\n\t\t\t// Convert html into DOM nodes\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\r\n\r\n\t\t\t\t// Deserialize a standard representation\r\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\r\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\r\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\r\n\r\n\t\t\t\t// Descend through wrappers to the right content\r\n\t\t\t\tj = wrap[ 0 ];\r\n\t\t\t\twhile ( j-- ) {\r\n\t\t\t\t\ttmp = tmp.lastChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\r\n\r\n\t\t\t\t// Remember the top-level container\r\n\t\t\t\ttmp = fragment.firstChild;\r\n\r\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\r\n\t\t\t\ttmp.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Remove wrapper from fragment\r\n\tfragment.textContent = \"\";\r\n\r\n\ti = 0;\r\n\twhile ( ( elem = nodes[ i++ ] ) ) {\r\n\r\n\t\t// Skip elements already in the context collection (trac-4087)\r\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\r\n\t\t\tif ( ignored ) {\r\n\t\t\t\tignored.push( elem );\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Append to fragment\r\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tif ( contains ) {\r\n\t\t\tsetGlobalEval( tmp );\r\n\t\t}\r\n\r\n\t\t// Capture executables\r\n\t\tif ( scripts ) {\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\r\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\r\n\t\t\t\t\tscripts.push( elem );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn fragment;\r\n}\r\n\r\n\r\n( function() {\r\n\tvar fragment = document.createDocumentFragment(),\r\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\r\n\t\tinput = document.createElement( \"input\" );\r\n\r\n\t// Support: Android 4.0-4.3, Safari<=5.1\r\n\t// Check state lost if the name is set (#11217)\r\n\t// Support: Windows Web Apps (WWA)\r\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\r\n\tinput.setAttribute( \"type\", \"radio\" );\r\n\tinput.setAttribute( \"checked\", \"checked\" );\r\n\tinput.setAttribute( \"name\", \"t\" );\r\n\r\n\tdiv.appendChild( input );\r\n\r\n\t// Support: Safari<=5.1, Android<4.2\r\n\t// Older WebKit doesn't clone checked state correctly in fragments\r\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\r\n\r\n\t// Support: IE<=11+\r\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\r\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\r\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\r\n} )();\r\n\r\n\r\nvar\r\n\trkeyEvent = /^key/,\r\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\r\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\r\n\r\nfunction returnTrue() {\r\n\treturn true;\r\n}\r\n\r\nfunction returnFalse() {\r\n\treturn false;\r\n}\r\n\r\n// Support: IE9\r\n// See #13393 for more info\r\nfunction safeActiveElement() {\r\n\ttry {\r\n\t\treturn document.activeElement;\r\n\t} catch ( err ) { }\r\n}\r\n\r\nfunction on( elem, types, selector, data, fn, one ) {\r\n\tvar origFn, type;\r\n\r\n\t// Types can be a map of types/handlers\r\n\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t// ( types-Object, selector, data )\r\n\t\tif ( typeof selector !== \"string\" ) {\r\n\r\n\t\t\t// ( types-Object, data )\r\n\t\t\tdata = data || selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tfor ( type in types ) {\r\n\t\t\ton( elem, type, selector, data, types[ type ], one );\r\n\t\t}\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tif ( data == null && fn == null ) {\r\n\r\n\t\t// ( types, fn )\r\n\t\tfn = selector;\r\n\t\tdata = selector = undefined;\r\n\t} else if ( fn == null ) {\r\n\t\tif ( typeof selector === \"string\" ) {\r\n\r\n\t\t\t// ( types, selector, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = undefined;\r\n\t\t} else {\r\n\r\n\t\t\t// ( types, data, fn )\r\n\t\t\tfn = data;\r\n\t\t\tdata = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t}\r\n\tif ( fn === false ) {\r\n\t\tfn = returnFalse;\r\n\t} else if ( !fn ) {\r\n\t\treturn this;\r\n\t}\r\n\r\n\tif ( one === 1 ) {\r\n\t\torigFn = fn;\r\n\t\tfn = function( event ) {\r\n\r\n\t\t\t// Can use an empty set, since event contains the info\r\n\t\t\tjQuery().off( event );\r\n\t\t\treturn origFn.apply( this, arguments );\r\n\t\t};\r\n\r\n\t\t// Use same guid so caller can remove using origFn\r\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\r\n\t}\r\n\treturn elem.each( function() {\r\n\t\tjQuery.event.add( this, types, fn, data, selector );\r\n\t} );\r\n}\r\n\r\n/*\r\n * Helper functions for managing events -- not part of the public interface.\r\n * Props to Dean Edwards' addEvent library for many of the ideas.\r\n */\r\njQuery.event = {\r\n\r\n\tglobal: {},\r\n\r\n\tadd: function( elem, types, handler, data, selector ) {\r\n\r\n\t\tvar handleObjIn, eventHandle, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.get( elem );\r\n\r\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\r\n\t\tif ( !elemData ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Caller can pass in an object of custom data in lieu of the handler\r\n\t\tif ( handler.handler ) {\r\n\t\t\thandleObjIn = handler;\r\n\t\t\thandler = handleObjIn.handler;\r\n\t\t\tselector = handleObjIn.selector;\r\n\t\t}\r\n\r\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\r\n\t\tif ( !handler.guid ) {\r\n\t\t\thandler.guid = jQuery.guid++;\r\n\t\t}\r\n\r\n\t\t// Init the element's event structure and main handler, if this is the first\r\n\t\tif ( !( events = elemData.events ) ) {\r\n\t\t\tevents = elemData.events = {};\r\n\t\t}\r\n\t\tif ( !( eventHandle = elemData.handle ) ) {\r\n\t\t\teventHandle = elemData.handle = function( e ) {\r\n\r\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\r\n\t\t\t\t// when an event is called after a page has unloaded\r\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\r\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// Handle multiple events separated by a space\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\t// If event changes its type, use the special event handlers for the changed type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// If selector defined, determine special event api type, otherwise given type\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\r\n\t\t\t// Update special based on newly reset type\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\r\n\t\t\t// handleObj is passed to all event handlers\r\n\t\t\thandleObj = jQuery.extend( {\r\n\t\t\t\ttype: type,\r\n\t\t\t\torigType: origType,\r\n\t\t\t\tdata: data,\r\n\t\t\t\thandler: handler,\r\n\t\t\t\tguid: handler.guid,\r\n\t\t\t\tselector: selector,\r\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\r\n\t\t\t\tnamespace: namespaces.join( \".\" )\r\n\t\t\t}, handleObjIn );\r\n\r\n\t\t\t// Init the event handler queue if we're the first\r\n\t\t\tif ( !( handlers = events[ type ] ) ) {\r\n\t\t\t\thandlers = events[ type ] = [];\r\n\t\t\t\thandlers.delegateCount = 0;\r\n\r\n\t\t\t\t// Only use addEventListener if the special events handler returns false\r\n\t\t\t\tif ( !special.setup ||\r\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\r\n\r\n\t\t\t\t\tif ( elem.addEventListener ) {\r\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( special.add ) {\r\n\t\t\t\tspecial.add.call( elem, handleObj );\r\n\r\n\t\t\t\tif ( !handleObj.handler.guid ) {\r\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Add to the element's handler list, delegates in front\r\n\t\t\tif ( selector ) {\r\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\r\n\t\t\t} else {\r\n\t\t\t\thandlers.push( handleObj );\r\n\t\t\t}\r\n\r\n\t\t\t// Keep track of which events have ever been used, for event optimization\r\n\t\t\tjQuery.event.global[ type ] = true;\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Detach an event or set of events from an element\r\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\r\n\r\n\t\tvar j, origCount, tmp,\r\n\t\t\tevents, t, handleObj,\r\n\t\t\tspecial, handlers, type, namespaces, origType,\r\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\r\n\r\n\t\tif ( !elemData || !( events = elemData.events ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Once for each type.namespace in types; type may be omitted\r\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\r\n\t\tt = types.length;\r\n\t\twhile ( t-- ) {\r\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\r\n\t\t\ttype = origType = tmp[ 1 ];\r\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\r\n\r\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\r\n\t\t\tif ( !type ) {\r\n\t\t\t\tfor ( type in events ) {\r\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\r\n\t\t\thandlers = events[ type ] || [];\r\n\t\t\ttmp = tmp[ 2 ] &&\r\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\r\n\r\n\t\t\t// Remove matching events\r\n\t\t\torigCount = j = handlers.length;\r\n\t\t\twhile ( j-- ) {\r\n\t\t\t\thandleObj = handlers[ j ];\r\n\r\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\r\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\r\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\r\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\r\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\r\n\t\t\t\t\thandlers.splice( j, 1 );\r\n\r\n\t\t\t\t\tif ( handleObj.selector ) {\r\n\t\t\t\t\t\thandlers.delegateCount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( special.remove ) {\r\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\r\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\r\n\t\t\tif ( origCount && !handlers.length ) {\r\n\t\t\t\tif ( !special.teardown ||\r\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\r\n\r\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete events[ type ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Remove data and the expando if it's no longer used\r\n\t\tif ( jQuery.isEmptyObject( events ) ) {\r\n\t\t\tdataPriv.remove( elem, \"handle events\" );\r\n\t\t}\r\n\t},\r\n\r\n\tdispatch: function( event ) {\r\n\r\n\t\t// Make a writable jQuery.Event from the native event object\r\n\t\tevent = jQuery.event.fix( event );\r\n\r\n\t\tvar i, j, ret, matched, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\targs = slice.call( arguments ),\r\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\r\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\r\n\r\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\r\n\t\targs[ 0 ] = event;\r\n\t\tevent.delegateTarget = this;\r\n\r\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\r\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine handlers\r\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\r\n\r\n\t\t// Run delegates first; they may want to stop propagation beneath us\r\n\t\ti = 0;\r\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\t\t\tevent.currentTarget = matched.elem;\r\n\r\n\t\t\tj = 0;\r\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\r\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\r\n\r\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\r\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\r\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\r\n\r\n\t\t\t\t\tevent.handleObj = handleObj;\r\n\t\t\t\t\tevent.data = handleObj.data;\r\n\r\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\r\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\r\n\r\n\t\t\t\t\tif ( ret !== undefined ) {\r\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\r\n\t\t\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Call the postDispatch hook for the mapped type\r\n\t\tif ( special.postDispatch ) {\r\n\t\t\tspecial.postDispatch.call( this, event );\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\thandlers: function( event, handlers ) {\r\n\t\tvar i, matches, sel, handleObj,\r\n\t\t\thandlerQueue = [],\r\n\t\t\tdelegateCount = handlers.delegateCount,\r\n\t\t\tcur = event.target;\r\n\r\n\t\t// Support (at least): Chrome, IE9\r\n\t\t// Find delegate handlers\r\n\t\t// Black-hole SVG <use> instance trees (#13180)\r\n\t\t//\r\n\t\t// Support: Firefox<=42+\r\n\t\t// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)\r\n\t\tif ( delegateCount && cur.nodeType &&\r\n\t\t\t( event.type !== \"click\" || isNaN( event.button ) || event.button < 1 ) ) {\r\n\r\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\r\n\r\n\t\t\t\t// Don't check non-elements (#13208)\r\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\r\n\t\t\t\tif ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== \"click\" ) ) {\r\n\t\t\t\t\tmatches = [];\r\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\r\n\t\t\t\t\t\thandleObj = handlers[ i ];\r\n\r\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\r\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\r\n\r\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\r\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\r\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\r\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( matches[ sel ] ) {\r\n\t\t\t\t\t\t\tmatches.push( handleObj );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( matches.length ) {\r\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matches } );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add the remaining (directly-bound) handlers\r\n\t\tif ( delegateCount < handlers.length ) {\r\n\t\t\thandlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );\r\n\t\t}\r\n\r\n\t\treturn handlerQueue;\r\n\t},\r\n\r\n\t// Includes some event props shared by KeyEvent and MouseEvent\r\n\tprops: ( \"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase \" +\r\n\t\t\"metaKey relatedTarget shiftKey target timeStamp view which\" ).split( \" \" ),\r\n\r\n\tfixHooks: {},\r\n\r\n\tkeyHooks: {\r\n\t\tprops: \"char charCode key keyCode\".split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\r\n\t\t\t// Add which for key events\r\n\t\t\tif ( event.which == null ) {\r\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tmouseHooks: {\r\n\t\tprops: ( \"button buttons clientX clientY offsetX offsetY pageX pageY \" +\r\n\t\t\t\"screenX screenY toElement\" ).split( \" \" ),\r\n\t\tfilter: function( event, original ) {\r\n\t\t\tvar eventDoc, doc, body,\r\n\t\t\t\tbutton = original.button;\r\n\r\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\r\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\r\n\t\t\t\teventDoc = event.target.ownerDocument || document;\r\n\t\t\t\tdoc = eventDoc.documentElement;\r\n\t\t\t\tbody = eventDoc.body;\r\n\r\n\t\t\t\tevent.pageX = original.clientX +\r\n\t\t\t\t\t( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientLeft || body && body.clientLeft || 0 );\r\n\t\t\t\tevent.pageY = original.clientY +\r\n\t\t\t\t\t( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -\r\n\t\t\t\t\t( doc && doc.clientTop  || body && body.clientTop  || 0 );\r\n\t\t\t}\r\n\r\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\r\n\t\t\t// Note: button is not normalized, so don't use it\r\n\t\t\tif ( !event.which && button !== undefined ) {\r\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\r\n\t\t\t}\r\n\r\n\t\t\treturn event;\r\n\t\t}\r\n\t},\r\n\r\n\tfix: function( event ) {\r\n\t\tif ( event[ jQuery.expando ] ) {\r\n\t\t\treturn event;\r\n\t\t}\r\n\r\n\t\t// Create a writable copy of the event object and normalize some properties\r\n\t\tvar i, prop, copy,\r\n\t\t\ttype = event.type,\r\n\t\t\toriginalEvent = event,\r\n\t\t\tfixHook = this.fixHooks[ type ];\r\n\r\n\t\tif ( !fixHook ) {\r\n\t\t\tthis.fixHooks[ type ] = fixHook =\r\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\r\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\r\n\t\t\t\t{};\r\n\t\t}\r\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\r\n\r\n\t\tevent = new jQuery.Event( originalEvent );\r\n\r\n\t\ti = copy.length;\r\n\t\twhile ( i-- ) {\r\n\t\t\tprop = copy[ i ];\r\n\t\t\tevent[ prop ] = originalEvent[ prop ];\r\n\t\t}\r\n\r\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\r\n\t\t// All events should have a target; Cordova deviceready doesn't\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = document;\r\n\t\t}\r\n\r\n\t\t// Support: Safari 6.0+, Chrome<28\r\n\t\t// Target should not be a text node (#504, #13143)\r\n\t\tif ( event.target.nodeType === 3 ) {\r\n\t\t\tevent.target = event.target.parentNode;\r\n\t\t}\r\n\r\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\r\n\t},\r\n\r\n\tspecial: {\r\n\t\tload: {\r\n\r\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\r\n\t\t\tnoBubble: true\r\n\t\t},\r\n\t\tfocus: {\r\n\r\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\r\n\t\t\t\t\tthis.focus();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusin\"\r\n\t\t},\r\n\t\tblur: {\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\r\n\t\t\t\t\tthis.blur();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdelegateType: \"focusout\"\r\n\t\t},\r\n\t\tclick: {\r\n\r\n\t\t\t// For checkbox, fire native event so checked state will be right\r\n\t\t\ttrigger: function() {\r\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\r\n\t\t\t\t\tthis.click();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\r\n\t\t\t_default: function( event ) {\r\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tbeforeunload: {\r\n\t\t\tpostDispatch: function( event ) {\r\n\r\n\t\t\t\t// Support: Firefox 20+\r\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\r\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\r\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.removeEvent = function( elem, type, handle ) {\r\n\r\n\t// This \"if\" is needed for plain objects\r\n\tif ( elem.removeEventListener ) {\r\n\t\telem.removeEventListener( type, handle );\r\n\t}\r\n};\r\n\r\njQuery.Event = function( src, props ) {\r\n\r\n\t// Allow instantiation without the 'new' keyword\r\n\tif ( !( this instanceof jQuery.Event ) ) {\r\n\t\treturn new jQuery.Event( src, props );\r\n\t}\r\n\r\n\t// Event object\r\n\tif ( src && src.type ) {\r\n\t\tthis.originalEvent = src;\r\n\t\tthis.type = src.type;\r\n\r\n\t\t// Events bubbling up the document may have been marked as prevented\r\n\t\t// by a handler lower down the tree; reflect the correct value.\r\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\r\n\t\t\t\tsrc.defaultPrevented === undefined &&\r\n\r\n\t\t\t\t// Support: Android<4.0\r\n\t\t\t\tsrc.returnValue === false ?\r\n\t\t\treturnTrue :\r\n\t\t\treturnFalse;\r\n\r\n\t// Event type\r\n\t} else {\r\n\t\tthis.type = src;\r\n\t}\r\n\r\n\t// Put explicitly provided properties onto the event object\r\n\tif ( props ) {\r\n\t\tjQuery.extend( this, props );\r\n\t}\r\n\r\n\t// Create a timestamp if incoming event doesn't have one\r\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\r\n\r\n\t// Mark it as fixed\r\n\tthis[ jQuery.expando ] = true;\r\n};\r\n\r\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\r\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\r\njQuery.Event.prototype = {\r\n\tconstructor: jQuery.Event,\r\n\tisDefaultPrevented: returnFalse,\r\n\tisPropagationStopped: returnFalse,\r\n\tisImmediatePropagationStopped: returnFalse,\r\n\r\n\tpreventDefault: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isDefaultPrevented = returnTrue;\r\n\r\n\t\tif ( e ) {\r\n\t\t\te.preventDefault();\r\n\t\t}\r\n\t},\r\n\tstopPropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isPropagationStopped = returnTrue;\r\n\r\n\t\tif ( e ) {\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t},\r\n\tstopImmediatePropagation: function() {\r\n\t\tvar e = this.originalEvent;\r\n\r\n\t\tthis.isImmediatePropagationStopped = returnTrue;\r\n\r\n\t\tif ( e ) {\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t}\r\n\r\n\t\tthis.stopPropagation();\r\n\t}\r\n};\r\n\r\n// Create mouseenter/leave events using mouseover/out and event-time checks\r\n// so that event delegation works in jQuery.\r\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\r\n//\r\n// Support: Safari 7 only\r\n// Safari sends mouseenter too often; see:\r\n// https://code.google.com/p/chromium/issues/detail?id=470258\r\n// for the description of the bug (it existed in older Chrome versions as well).\r\njQuery.each( {\r\n\tmouseenter: \"mouseover\",\r\n\tmouseleave: \"mouseout\",\r\n\tpointerenter: \"pointerover\",\r\n\tpointerleave: \"pointerout\"\r\n}, function( orig, fix ) {\r\n\tjQuery.event.special[ orig ] = {\r\n\t\tdelegateType: fix,\r\n\t\tbindType: fix,\r\n\r\n\t\thandle: function( event ) {\r\n\t\t\tvar ret,\r\n\t\t\t\ttarget = this,\r\n\t\t\t\trelated = event.relatedTarget,\r\n\t\t\t\thandleObj = event.handleObj;\r\n\r\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\r\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\r\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\r\n\t\t\t\tevent.type = handleObj.origType;\r\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\r\n\t\t\t\tevent.type = fix;\r\n\t\t\t}\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\ton: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn );\r\n\t},\r\n\tone: function( types, selector, data, fn ) {\r\n\t\treturn on( this, types, selector, data, fn, 1 );\r\n\t},\r\n\toff: function( types, selector, fn ) {\r\n\t\tvar handleObj, type;\r\n\t\tif ( types && types.preventDefault && types.handleObj ) {\r\n\r\n\t\t\t// ( event )  dispatched jQuery.Event\r\n\t\t\thandleObj = types.handleObj;\r\n\t\t\tjQuery( types.delegateTarget ).off(\r\n\t\t\t\thandleObj.namespace ?\r\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\r\n\t\t\t\t\thandleObj.origType,\r\n\t\t\t\thandleObj.selector,\r\n\t\t\t\thandleObj.handler\r\n\t\t\t);\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( typeof types === \"object\" ) {\r\n\r\n\t\t\t// ( types-object [, selector] )\r\n\t\t\tfor ( type in types ) {\r\n\t\t\t\tthis.off( type, selector, types[ type ] );\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\tif ( selector === false || typeof selector === \"function\" ) {\r\n\r\n\t\t\t// ( types [, fn] )\r\n\t\t\tfn = selector;\r\n\t\t\tselector = undefined;\r\n\t\t}\r\n\t\tif ( fn === false ) {\r\n\t\t\tfn = returnFalse;\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.remove( this, types, fn, selector );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nvar\r\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,\r\n\r\n\t// Support: IE 10-11, Edge 10240+\r\n\t// In IE/Edge using regex groups here causes severe slowdowns.\r\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\r\n\trnoInnerhtml = /<script|<style|<link/i,\r\n\r\n\t// checked=\"checked\" or checked\r\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\r\n\trscriptTypeMasked = /^true\\/(.*)/,\r\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\r\n\r\nfunction manipulationTarget( elem, content ) {\r\n\tif ( jQuery.nodeName( elem, \"table\" ) &&\r\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\r\n\r\n\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\n// Replace/restore the type attribute of script elements for safe DOM manipulation\r\nfunction disableScript( elem ) {\r\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\r\n\treturn elem;\r\n}\r\nfunction restoreScript( elem ) {\r\n\tvar match = rscriptTypeMasked.exec( elem.type );\r\n\r\n\tif ( match ) {\r\n\t\telem.type = match[ 1 ];\r\n\t} else {\r\n\t\telem.removeAttribute( \"type\" );\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\nfunction cloneCopyEvent( src, dest ) {\r\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\r\n\r\n\tif ( dest.nodeType !== 1 ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// 1. Copy private data: events, handlers, etc.\r\n\tif ( dataPriv.hasData( src ) ) {\r\n\t\tpdataOld = dataPriv.access( src );\r\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\r\n\t\tevents = pdataOld.events;\r\n\r\n\t\tif ( events ) {\r\n\t\t\tdelete pdataCur.handle;\r\n\t\t\tpdataCur.events = {};\r\n\r\n\t\t\tfor ( type in events ) {\r\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\r\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 2. Copy user data\r\n\tif ( dataUser.hasData( src ) ) {\r\n\t\tudataOld = dataUser.access( src );\r\n\t\tudataCur = jQuery.extend( {}, udataOld );\r\n\r\n\t\tdataUser.set( dest, udataCur );\r\n\t}\r\n}\r\n\r\n// Fix IE bugs, see support tests\r\nfunction fixInput( src, dest ) {\r\n\tvar nodeName = dest.nodeName.toLowerCase();\r\n\r\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\r\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\r\n\t\tdest.checked = src.checked;\r\n\r\n\t// Fails to return the selected option to the default selected state when cloning options\r\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\r\n\t\tdest.defaultValue = src.defaultValue;\r\n\t}\r\n}\r\n\r\nfunction domManip( collection, args, callback, ignored ) {\r\n\r\n\t// Flatten any nested arrays\r\n\targs = concat.apply( [], args );\r\n\r\n\tvar fragment, first, scripts, hasScripts, node, doc,\r\n\t\ti = 0,\r\n\t\tl = collection.length,\r\n\t\tiNoClone = l - 1,\r\n\t\tvalue = args[ 0 ],\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t// We can't cloneNode fragments that contain checked, in WebKit\r\n\tif ( isFunction ||\r\n\t\t\t( l > 1 && typeof value === \"string\" &&\r\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\r\n\t\treturn collection.each( function( index ) {\r\n\t\t\tvar self = collection.eq( index );\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\r\n\t\t\t}\r\n\t\t\tdomManip( self, args, callback, ignored );\r\n\t\t} );\r\n\t}\r\n\r\n\tif ( l ) {\r\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\r\n\t\tfirst = fragment.firstChild;\r\n\r\n\t\tif ( fragment.childNodes.length === 1 ) {\r\n\t\t\tfragment = first;\r\n\t\t}\r\n\r\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\r\n\t\tif ( first || ignored ) {\r\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\r\n\t\t\thasScripts = scripts.length;\r\n\r\n\t\t\t// Use the original fragment for the last item\r\n\t\t\t// instead of the first because it can end up\r\n\t\t\t// being emptied incorrectly in certain situations (#8070).\r\n\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\tnode = fragment;\r\n\r\n\t\t\t\tif ( i !== iNoClone ) {\r\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\r\n\r\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\r\n\t\t\t\t\tif ( hasScripts ) {\r\n\r\n\t\t\t\t\t\t// Support: Android<4.1, PhantomJS<2\r\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\r\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallback.call( collection[ i ], node, i );\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasScripts ) {\r\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\r\n\r\n\t\t\t\t// Reenable scripts\r\n\t\t\t\tjQuery.map( scripts, restoreScript );\r\n\r\n\t\t\t\t// Evaluate executable scripts on first document insertion\r\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\r\n\t\t\t\t\tnode = scripts[ i ];\r\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\r\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\r\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\r\n\r\n\t\t\t\t\t\tif ( node.src ) {\r\n\r\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\r\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\r\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn collection;\r\n}\r\n\r\nfunction remove( elem, selector, keepData ) {\r\n\tvar node,\r\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\r\n\t\ti = 0;\r\n\r\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\r\n\t\tif ( !keepData && node.nodeType === 1 ) {\r\n\t\t\tjQuery.cleanData( getAll( node ) );\r\n\t\t}\r\n\r\n\t\tif ( node.parentNode ) {\r\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\r\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\r\n\t\t\t}\r\n\t\t\tnode.parentNode.removeChild( node );\r\n\t\t}\r\n\t}\r\n\r\n\treturn elem;\r\n}\r\n\r\njQuery.extend( {\r\n\thtmlPrefilter: function( html ) {\r\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n\t},\r\n\r\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\r\n\t\tvar i, l, srcElements, destElements,\r\n\t\t\tclone = elem.cloneNode( true ),\r\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\r\n\r\n\t\t// Fix IE cloning issues\r\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\r\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\r\n\t\t\tdestElements = getAll( clone );\r\n\t\t\tsrcElements = getAll( elem );\r\n\r\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Copy the events from the original to the clone\r\n\t\tif ( dataAndEvents ) {\r\n\t\t\tif ( deepDataAndEvents ) {\r\n\t\t\t\tsrcElements = srcElements || getAll( elem );\r\n\t\t\t\tdestElements = destElements || getAll( clone );\r\n\r\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\r\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcloneCopyEvent( elem, clone );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Preserve script evaluation history\r\n\t\tdestElements = getAll( clone, \"script\" );\r\n\t\tif ( destElements.length > 0 ) {\r\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\r\n\t\t}\r\n\r\n\t\t// Return the cloned set\r\n\t\treturn clone;\r\n\t},\r\n\r\n\tcleanData: function( elems ) {\r\n\t\tvar data, elem, type,\r\n\t\t\tspecial = jQuery.event.special,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\r\n\t\t\tif ( acceptData( elem ) ) {\r\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\r\n\t\t\t\t\tif ( data.events ) {\r\n\t\t\t\t\t\tfor ( type in data.events ) {\r\n\t\t\t\t\t\t\tif ( special[ type ] ) {\r\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\r\n\r\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\r\n\r\n\t\t\t\t\t// Support: Chrome <= 35-45+\r\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\r\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\t// Keep domManip exposed until 3.0 (gh-2225)\r\n\tdomManip: domManip,\r\n\r\n\tdetach: function( selector ) {\r\n\t\treturn remove( this, selector, true );\r\n\t},\r\n\r\n\tremove: function( selector ) {\r\n\t\treturn remove( this, selector );\r\n\t},\r\n\r\n\ttext: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\treturn value === undefined ?\r\n\t\t\t\tjQuery.text( this ) :\r\n\t\t\t\tthis.empty().each( function() {\r\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\t\t\tthis.textContent = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\tappend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.appendChild( elem );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tprepend: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\r\n\t\t\t\tvar target = manipulationTarget( this, elem );\r\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tbefore: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tafter: function() {\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tif ( this.parentNode ) {\r\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\tempty: function() {\r\n\t\tvar elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\r\n\t\t\tif ( elem.nodeType === 1 ) {\r\n\r\n\t\t\t\t// Prevent memory leaks\r\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\r\n\t\t\t\t// Remove any remaining nodes\r\n\t\t\t\telem.textContent = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\r\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\r\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\r\n\r\n\t\treturn this.map( function() {\r\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\r\n\t\t} );\r\n\t},\r\n\r\n\thtml: function( value ) {\r\n\t\treturn access( this, function( value ) {\r\n\t\t\tvar elem = this[ 0 ] || {},\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = this.length;\r\n\r\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\r\n\t\t\t\treturn elem.innerHTML;\r\n\t\t\t}\r\n\r\n\t\t\t// See if we can take a shortcut and just use innerHTML\r\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\r\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\r\n\r\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfor ( ; i < l; i++ ) {\r\n\t\t\t\t\t\telem = this[ i ] || {};\r\n\r\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\r\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\r\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\r\n\t\t\t\t\t\t\telem.innerHTML = value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telem = 0;\r\n\r\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\r\n\t\t\t\t} catch ( e ) {}\r\n\t\t\t}\r\n\r\n\t\t\tif ( elem ) {\r\n\t\t\t\tthis.empty().append( value );\r\n\t\t\t}\r\n\t\t}, null, value, arguments.length );\r\n\t},\r\n\r\n\treplaceWith: function() {\r\n\t\tvar ignored = [];\r\n\r\n\t\t// Make the changes, replacing each non-ignored context element with the new content\r\n\t\treturn domManip( this, arguments, function( elem ) {\r\n\t\t\tvar parent = this.parentNode;\r\n\r\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\r\n\t\t\t\tjQuery.cleanData( getAll( this ) );\r\n\t\t\t\tif ( parent ) {\r\n\t\t\t\t\tparent.replaceChild( elem, this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Force callback invocation\r\n\t\t}, ignored );\r\n\t}\r\n} );\r\n\r\njQuery.each( {\r\n\tappendTo: \"append\",\r\n\tprependTo: \"prepend\",\r\n\tinsertBefore: \"before\",\r\n\tinsertAfter: \"after\",\r\n\treplaceAll: \"replaceWith\"\r\n}, function( name, original ) {\r\n\tjQuery.fn[ name ] = function( selector ) {\r\n\t\tvar elems,\r\n\t\t\tret = [],\r\n\t\t\tinsert = jQuery( selector ),\r\n\t\t\tlast = insert.length - 1,\r\n\t\t\ti = 0;\r\n\r\n\t\tfor ( ; i <= last; i++ ) {\r\n\t\t\telems = i === last ? this : this.clone( true );\r\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\r\n\r\n\t\t\t// Support: QtWebKit\r\n\t\t\t// .get() because push.apply(_, arraylike) throws\r\n\t\t\tpush.apply( ret, elems.get() );\r\n\t\t}\r\n\r\n\t\treturn this.pushStack( ret );\r\n\t};\r\n} );\r\n\r\n\r\nvar iframe,\r\n\telemdisplay = {\r\n\r\n\t\t// Support: Firefox\r\n\t\t// We have to pre-define these values for FF (#10227)\r\n\t\tHTML: \"block\",\r\n\t\tBODY: \"block\"\r\n\t};\r\n\r\n/**\r\n * Retrieve the actual display of a element\r\n * @param {String} name nodeName of the element\r\n * @param {Object} doc Document object\r\n */\r\n\r\n// Called only from within defaultDisplay\r\nfunction actualDisplay( name, doc ) {\r\n\tvar elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\r\n\r\n\t\tdisplay = jQuery.css( elem[ 0 ], \"display\" );\r\n\r\n\t// We don't have any data stored on the element,\r\n\t// so use \"detach\" method as fast way to get rid of the element\r\n\telem.detach();\r\n\r\n\treturn display;\r\n}\r\n\r\n/**\r\n * Try to determine the default display value of an element\r\n * @param {String} nodeName\r\n */\r\nfunction defaultDisplay( nodeName ) {\r\n\tvar doc = document,\r\n\t\tdisplay = elemdisplay[ nodeName ];\r\n\r\n\tif ( !display ) {\r\n\t\tdisplay = actualDisplay( nodeName, doc );\r\n\r\n\t\t// If the simple way fails, read from inside an iframe\r\n\t\tif ( display === \"none\" || !display ) {\r\n\r\n\t\t\t// Use the already-created iframe if possible\r\n\t\t\tiframe = ( iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" ) )\r\n\t\t\t\t.appendTo( doc.documentElement );\r\n\r\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\r\n\t\t\tdoc = iframe[ 0 ].contentDocument;\r\n\r\n\t\t\t// Support: IE\r\n\t\t\tdoc.write();\r\n\t\t\tdoc.close();\r\n\r\n\t\t\tdisplay = actualDisplay( nodeName, doc );\r\n\t\t\tiframe.detach();\r\n\t\t}\r\n\r\n\t\t// Store the correct default display\r\n\t\telemdisplay[ nodeName ] = display;\r\n\t}\r\n\r\n\treturn display;\r\n}\r\nvar rmargin = ( /^margin/ );\r\n\r\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\r\n\r\nvar getStyles = function( elem ) {\r\n\r\n\t\t// Support: IE<=11+, Firefox<=30+ (#15098, #14150)\r\n\t\t// IE throws on elements created in popups\r\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n\t\tvar view = elem.ownerDocument.defaultView;\r\n\r\n\t\tif ( !view.opener ) {\r\n\t\t\tview = window;\r\n\t\t}\r\n\r\n\t\treturn view.getComputedStyle( elem );\r\n\t};\r\n\r\nvar swap = function( elem, options, callback, args ) {\r\n\tvar ret, name,\r\n\t\told = {};\r\n\r\n\t// Remember the old values, and insert the new ones\r\n\tfor ( name in options ) {\r\n\t\told[ name ] = elem.style[ name ];\r\n\t\telem.style[ name ] = options[ name ];\r\n\t}\r\n\r\n\tret = callback.apply( elem, args || [] );\r\n\r\n\t// Revert the old values\r\n\tfor ( name in options ) {\r\n\t\telem.style[ name ] = old[ name ];\r\n\t}\r\n\r\n\treturn ret;\r\n};\r\n\r\n\r\nvar documentElement = document.documentElement;\r\n\r\n\r\n\r\n( function() {\r\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\r\n\t\tcontainer = document.createElement( \"div\" ),\r\n\t\tdiv = document.createElement( \"div\" );\r\n\r\n\t// Finish early in limited (non-browser) environments\r\n\tif ( !div.style ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Support: IE9-11+\r\n\t// Style of cloned element affects source element cloned (#8908)\r\n\tdiv.style.backgroundClip = \"content-box\";\r\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\r\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\r\n\r\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\r\n\t\t\"padding:0;margin-top:1px;position:absolute\";\r\n\tcontainer.appendChild( div );\r\n\r\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\r\n\t// so they're executed at the same time to save the second computation.\r\n\tfunction computeStyleTests() {\r\n\t\tdiv.style.cssText =\r\n\r\n\t\t\t// Support: Firefox<29, Android 2.3\r\n\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;\" +\r\n\t\t\t\"position:relative;display:block;\" +\r\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\r\n\t\t\t\"top:1%;width:50%\";\r\n\t\tdiv.innerHTML = \"\";\r\n\t\tdocumentElement.appendChild( container );\r\n\r\n\t\tvar divStyle = window.getComputedStyle( div );\r\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\r\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\r\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\r\n\r\n\t\t// Support: Android 4.0 - 4.3 only\r\n\t\t// Some styles come back with percentage values, even though they shouldn't\r\n\t\tdiv.style.marginRight = \"50%\";\r\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\r\n\r\n\t\tdocumentElement.removeChild( container );\r\n\t}\r\n\r\n\tjQuery.extend( support, {\r\n\t\tpixelPosition: function() {\r\n\r\n\t\t\t// This test is executed only once but we still do memoizing\r\n\t\t\t// since we can use the boxSizingReliable pre-computing.\r\n\t\t\t// No need to check if the test was already performed, though.\r\n\t\t\tcomputeStyleTests();\r\n\t\t\treturn pixelPositionVal;\r\n\t\t},\r\n\t\tboxSizingReliable: function() {\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn boxSizingReliableVal;\r\n\t\t},\r\n\t\tpixelMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 4.0-4.3\r\n\t\t\t// We're checking for boxSizingReliableVal here instead of pixelMarginRightVal\r\n\t\t\t// since that compresses better and they're computed together anyway.\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn pixelMarginRightVal;\r\n\t\t},\r\n\t\treliableMarginLeft: function() {\r\n\r\n\t\t\t// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37\r\n\t\t\tif ( boxSizingReliableVal == null ) {\r\n\t\t\t\tcomputeStyleTests();\r\n\t\t\t}\r\n\t\t\treturn reliableMarginLeftVal;\r\n\t\t},\r\n\t\treliableMarginRight: function() {\r\n\r\n\t\t\t// Support: Android 2.3\r\n\t\t\t// Check if div with explicit width and no margin-right incorrectly\r\n\t\t\t// gets computed margin-right based on width of container. (#3333)\r\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\r\n\t\t\t// This support function is only executed once so no memoizing is needed.\r\n\t\t\tvar ret,\r\n\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\r\n\r\n\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\r\n\t\t\tmarginDiv.style.cssText = div.style.cssText =\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Vendor-prefix box-sizing\r\n\t\t\t\t\"-webkit-box-sizing:content-box;box-sizing:content-box;\" +\r\n\t\t\t\t\"display:block;margin:0;border:0;padding:0\";\r\n\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\r\n\t\t\tdiv.style.width = \"1px\";\r\n\t\t\tdocumentElement.appendChild( container );\r\n\r\n\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv ).marginRight );\r\n\r\n\t\t\tdocumentElement.removeChild( container );\r\n\t\t\tdiv.removeChild( marginDiv );\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\t} );\r\n} )();\r\n\r\n\r\nfunction curCSS( elem, name, computed ) {\r\n\tvar width, minWidth, maxWidth, ret,\r\n\t\tstyle = elem.style;\r\n\r\n\tcomputed = computed || getStyles( elem );\r\n\r\n\t// Support: IE9\r\n\t// getPropertyValue is only needed for .css('filter') (#12537)\r\n\tif ( computed ) {\r\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\r\n\r\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\r\n\t\t\tret = jQuery.style( elem, name );\r\n\t\t}\r\n\r\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\r\n\t\t// Android Browser returns percentage for some values,\r\n\t\t// but width seems to be reliably pixels.\r\n\t\t// This is against the CSSOM draft spec:\r\n\t\t// http://dev.w3.org/csswg/cssom/#resolved-values\r\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\r\n\r\n\t\t\t// Remember the original values\r\n\t\t\twidth = style.width;\r\n\t\t\tminWidth = style.minWidth;\r\n\t\t\tmaxWidth = style.maxWidth;\r\n\r\n\t\t\t// Put in the new values to get a computed value out\r\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\r\n\t\t\tret = computed.width;\r\n\r\n\t\t\t// Revert the changed values\r\n\t\t\tstyle.width = width;\r\n\t\t\tstyle.minWidth = minWidth;\r\n\t\t\tstyle.maxWidth = maxWidth;\r\n\t\t}\r\n\t}\r\n\r\n\treturn ret !== undefined ?\r\n\r\n\t\t// Support: IE9-11+\r\n\t\t// IE returns zIndex value as an integer.\r\n\t\tret + \"\" :\r\n\t\tret;\r\n}\r\n\r\n\r\nfunction addGetHookIf( conditionFn, hookFn ) {\r\n\r\n\t// Define the hook, we'll check on the first run if it's really needed.\r\n\treturn {\r\n\t\tget: function() {\r\n\t\t\tif ( conditionFn() ) {\r\n\r\n\t\t\t\t// Hook not needed (or it's not possible to use it due\r\n\t\t\t\t// to missing dependency), remove it.\r\n\t\t\t\tdelete this.get;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\r\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\nvar\r\n\r\n\t// Swappable if display is none or starts with table\r\n\t// except \"table\", \"table-cell\", or \"table-caption\"\r\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\r\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\r\n\r\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\r\n\tcssNormalTransform = {\r\n\t\tletterSpacing: \"0\",\r\n\t\tfontWeight: \"400\"\r\n\t},\r\n\r\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ],\r\n\temptyStyle = document.createElement( \"div\" ).style;\r\n\r\n// Return a css property mapped to a potentially vendor prefixed property\r\nfunction vendorPropName( name ) {\r\n\r\n\t// Shortcut for names that are not vendor prefixed\r\n\tif ( name in emptyStyle ) {\r\n\t\treturn name;\r\n\t}\r\n\r\n\t// Check for vendor prefixed names\r\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\r\n\t\ti = cssPrefixes.length;\r\n\r\n\twhile ( i-- ) {\r\n\t\tname = cssPrefixes[ i ] + capName;\r\n\t\tif ( name in emptyStyle ) {\r\n\t\t\treturn name;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction setPositiveNumber( elem, value, subtract ) {\r\n\r\n\t// Any relative (+/-) values have already been\r\n\t// normalized at this point\r\n\tvar matches = rcssNum.exec( value );\r\n\treturn matches ?\r\n\r\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\r\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\r\n\t\tvalue;\r\n}\r\n\r\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\r\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\r\n\r\n\t\t// If we already have the right measurement, avoid augmentation\r\n\t\t4 :\r\n\r\n\t\t// Otherwise initialize for horizontal or vertical properties\r\n\t\tname === \"width\" ? 1 : 0,\r\n\r\n\t\tval = 0;\r\n\r\n\tfor ( ; i < 4; i += 2 ) {\r\n\r\n\t\t// Both box models exclude margin, so add it if we want it\r\n\t\tif ( extra === \"margin\" ) {\r\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\r\n\t\t}\r\n\r\n\t\tif ( isBorderBox ) {\r\n\r\n\t\t\t// border-box includes padding, so remove it if we want content\r\n\t\t\tif ( extra === \"content\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\t\t\t}\r\n\r\n\t\t\t// At this point, extra isn't border nor margin, so remove border\r\n\t\t\tif ( extra !== \"margin\" ) {\r\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t} else {\r\n\r\n\t\t\t// At this point, extra isn't content, so add padding\r\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\r\n\r\n\t\t\t// At this point, extra isn't content nor padding, so add border\r\n\t\t\tif ( extra !== \"padding\" ) {\r\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn val;\r\n}\r\n\r\nfunction getWidthOrHeight( elem, name, extra ) {\r\n\r\n\t// Start with offset property, which is equivalent to the border-box value\r\n\tvar valueIsBorderBox = true,\r\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\r\n\t\tstyles = getStyles( elem ),\r\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\r\n\r\n\t// Support: IE11 only\r\n\t// In IE 11 fullscreen elements inside of an iframe have\r\n\t// 100x too small dimensions (gh-1764).\r\n\tif ( document.msFullscreenElement && window.top !== window ) {\r\n\r\n\t\t// Support: IE11 only\r\n\t\t// Running getBoundingClientRect on a disconnected node\r\n\t\t// in IE throws an error.\r\n\t\tif ( elem.getClientRects().length ) {\r\n\t\t\tval = Math.round( elem.getBoundingClientRect()[ name ] * 100 );\r\n\t\t}\r\n\t}\r\n\r\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\r\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\r\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\r\n\tif ( val <= 0 || val == null ) {\r\n\r\n\t\t// Fall back to computed then uncomputed css if necessary\r\n\t\tval = curCSS( elem, name, styles );\r\n\t\tif ( val < 0 || val == null ) {\r\n\t\t\tval = elem.style[ name ];\r\n\t\t}\r\n\r\n\t\t// Computed unit is not pixels. Stop here and return.\r\n\t\tif ( rnumnonpx.test( val ) ) {\r\n\t\t\treturn val;\r\n\t\t}\r\n\r\n\t\t// Check for style in case a browser which returns unreliable values\r\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\r\n\t\tvalueIsBorderBox = isBorderBox &&\r\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\r\n\r\n\t\t// Normalize \"\", auto, and prepare for extra\r\n\t\tval = parseFloat( val ) || 0;\r\n\t}\r\n\r\n\t// Use the active box-sizing model to add/subtract irrelevant styles\r\n\treturn ( val +\r\n\t\taugmentWidthOrHeight(\r\n\t\t\telem,\r\n\t\t\tname,\r\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\r\n\t\t\tvalueIsBorderBox,\r\n\t\t\tstyles\r\n\t\t)\r\n\t) + \"px\";\r\n}\r\n\r\nfunction showHide( elements, show ) {\r\n\tvar display, elem, hidden,\r\n\t\tvalues = [],\r\n\t\tindex = 0,\r\n\t\tlength = elements.length;\r\n\r\n\tfor ( ; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tvalues[ index ] = dataPriv.get( elem, \"olddisplay\" );\r\n\t\tdisplay = elem.style.display;\r\n\t\tif ( show ) {\r\n\r\n\t\t\t// Reset the inline display of this element to learn if it is\r\n\t\t\t// being hidden by cascaded rules or not\r\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\r\n\t\t\t\telem.style.display = \"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Set elements which have been overridden with display: none\r\n\t\t\t// in a stylesheet to whatever the default browser style is\r\n\t\t\t// for such an element\r\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\r\n\t\t\t\tvalues[ index ] = dataPriv.access(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\tdefaultDisplay( elem.nodeName )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\thidden = isHidden( elem );\r\n\r\n\t\t\tif ( display !== \"none\" || !hidden ) {\r\n\t\t\t\tdataPriv.set(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\t\"olddisplay\",\r\n\t\t\t\t\thidden ? display : jQuery.css( elem, \"display\" )\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Set the display of most of the elements in a second loop\r\n\t// to avoid the constant reflow\r\n\tfor ( index = 0; index < length; index++ ) {\r\n\t\telem = elements[ index ];\r\n\t\tif ( !elem.style ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\r\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn elements;\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Add in style property hooks for overriding the default\r\n\t// behavior of getting and setting a style property\r\n\tcssHooks: {\r\n\t\topacity: {\r\n\t\t\tget: function( elem, computed ) {\r\n\t\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t\t// We should always get a number back from opacity\r\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\r\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t// Don't automatically add \"px\" to these possibly-unitless properties\r\n\tcssNumber: {\r\n\t\t\"animationIterationCount\": true,\r\n\t\t\"columnCount\": true,\r\n\t\t\"fillOpacity\": true,\r\n\t\t\"flexGrow\": true,\r\n\t\t\"flexShrink\": true,\r\n\t\t\"fontWeight\": true,\r\n\t\t\"lineHeight\": true,\r\n\t\t\"opacity\": true,\r\n\t\t\"order\": true,\r\n\t\t\"orphans\": true,\r\n\t\t\"widows\": true,\r\n\t\t\"zIndex\": true,\r\n\t\t\"zoom\": true\r\n\t},\r\n\r\n\t// Add in properties whose names you wish to fix before\r\n\t// setting or getting the value\r\n\tcssProps: {\r\n\t\t\"float\": \"cssFloat\"\r\n\t},\r\n\r\n\t// Get and set the style property on a DOM Node\r\n\tstyle: function( elem, name, value, extra ) {\r\n\r\n\t\t// Don't set styles on text and comment nodes\r\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tvar ret, type, hooks,\r\n\t\t\torigName = jQuery.camelCase( name ),\r\n\t\t\tstyle = elem.style;\r\n\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Gets hook for the prefixed version, then unprefixed version\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// Check if we're setting a value\r\n\t\tif ( value !== undefined ) {\r\n\t\t\ttype = typeof value;\r\n\r\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\r\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\r\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\r\n\r\n\t\t\t\t// Fixes bug #9237\r\n\t\t\t\ttype = \"number\";\r\n\t\t\t}\r\n\r\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\r\n\t\t\tif ( value == null || value !== value ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\r\n\t\t\tif ( type === \"number\" ) {\r\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\r\n\t\t\t}\r\n\r\n\t\t\t// Support: IE9-11+\r\n\t\t\t// background-* props affect original clone's values\r\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\r\n\t\t\t\tstyle[ name ] = \"inherit\";\r\n\t\t\t}\r\n\r\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\r\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\tstyle[ name ] = value;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// If a hook was provided get the non-computed value from there\r\n\t\t\tif ( hooks && \"get\" in hooks &&\r\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\r\n\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise just get the value from the style object\r\n\t\t\treturn style[ name ];\r\n\t\t}\r\n\t},\r\n\r\n\tcss: function( elem, name, extra, styles ) {\r\n\t\tvar val, num, hooks,\r\n\t\t\torigName = jQuery.camelCase( name );\r\n\r\n\t\t// Make sure that we're working with the right name\r\n\t\tname = jQuery.cssProps[ origName ] ||\r\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\r\n\r\n\t\t// Try prefixed name followed by the unprefixed name\r\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\r\n\r\n\t\t// If a hook was provided get the computed value from there\r\n\t\tif ( hooks && \"get\" in hooks ) {\r\n\t\t\tval = hooks.get( elem, true, extra );\r\n\t\t}\r\n\r\n\t\t// Otherwise, if a way to get the computed value exists, use that\r\n\t\tif ( val === undefined ) {\r\n\t\t\tval = curCSS( elem, name, styles );\r\n\t\t}\r\n\r\n\t\t// Convert \"normal\" to computed value\r\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\r\n\t\t\tval = cssNormalTransform[ name ];\r\n\t\t}\r\n\r\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\r\n\t\tif ( extra === \"\" || extra ) {\r\n\t\t\tnum = parseFloat( val );\r\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\r\n\tjQuery.cssHooks[ name ] = {\r\n\t\tget: function( elem, computed, extra ) {\r\n\t\t\tif ( computed ) {\r\n\r\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\r\n\t\t\t\t// but it must have a current display style that would benefit\r\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\r\n\t\t\t\t\telem.offsetWidth === 0 ?\r\n\t\t\t\t\t\tswap( elem, cssShow, function() {\r\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\r\n\t\t\t\t\t\t} ) :\r\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tset: function( elem, value, extra ) {\r\n\t\t\tvar matches,\r\n\t\t\t\tstyles = extra && getStyles( elem ),\r\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\r\n\t\t\t\t\telem,\r\n\t\t\t\t\tname,\r\n\t\t\t\t\textra,\r\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\r\n\t\t\t\t\tstyles\r\n\t\t\t\t);\r\n\r\n\t\t\t// Convert to pixels if value adjustment is needed\r\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\r\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\r\n\r\n\t\t\t\telem.style[ name ] = value;\r\n\t\t\t\tvalue = jQuery.css( elem, name );\r\n\t\t\t}\r\n\r\n\t\t\treturn setPositiveNumber( elem, value, subtract );\r\n\t\t}\r\n\t};\r\n} );\r\n\r\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\r\n\t\t\t\telem.getBoundingClientRect().left -\r\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\r\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\r\n\t\t\t\t\t} )\r\n\t\t\t\t) + \"px\";\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// Support: Android 2.3\r\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\r\n\tfunction( elem, computed ) {\r\n\t\tif ( computed ) {\r\n\t\t\treturn swap( elem, { \"display\": \"inline-block\" },\r\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// These hooks are used by animate to expand properties\r\njQuery.each( {\r\n\tmargin: \"\",\r\n\tpadding: \"\",\r\n\tborder: \"Width\"\r\n}, function( prefix, suffix ) {\r\n\tjQuery.cssHooks[ prefix + suffix ] = {\r\n\t\texpand: function( value ) {\r\n\t\t\tvar i = 0,\r\n\t\t\t\texpanded = {},\r\n\r\n\t\t\t\t// Assumes a single number if not a string\r\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\r\n\r\n\t\t\tfor ( ; i < 4; i++ ) {\r\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\r\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\r\n\t\t\t}\r\n\r\n\t\t\treturn expanded;\r\n\t\t}\r\n\t};\r\n\r\n\tif ( !rmargin.test( prefix ) ) {\r\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\r\n\t}\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\tcss: function( name, value ) {\r\n\t\treturn access( this, function( elem, name, value ) {\r\n\t\t\tvar styles, len,\r\n\t\t\t\tmap = {},\r\n\t\t\t\ti = 0;\r\n\r\n\t\t\tif ( jQuery.isArray( name ) ) {\r\n\t\t\t\tstyles = getStyles( elem );\r\n\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tfor ( ; i < len; i++ ) {\r\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn map;\r\n\t\t\t}\r\n\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tjQuery.style( elem, name, value ) :\r\n\t\t\t\tjQuery.css( elem, name );\r\n\t\t}, name, value, arguments.length > 1 );\r\n\t},\r\n\tshow: function() {\r\n\t\treturn showHide( this, true );\r\n\t},\r\n\thide: function() {\r\n\t\treturn showHide( this );\r\n\t},\r\n\ttoggle: function( state ) {\r\n\t\tif ( typeof state === \"boolean\" ) {\r\n\t\t\treturn state ? this.show() : this.hide();\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tif ( isHidden( this ) ) {\r\n\t\t\t\tjQuery( this ).show();\r\n\t\t\t} else {\r\n\t\t\t\tjQuery( this ).hide();\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n\r\nfunction Tween( elem, options, prop, end, easing ) {\r\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\r\n}\r\njQuery.Tween = Tween;\r\n\r\nTween.prototype = {\r\n\tconstructor: Tween,\r\n\tinit: function( elem, options, prop, end, easing, unit ) {\r\n\t\tthis.elem = elem;\r\n\t\tthis.prop = prop;\r\n\t\tthis.easing = easing || jQuery.easing._default;\r\n\t\tthis.options = options;\r\n\t\tthis.start = this.now = this.cur();\r\n\t\tthis.end = end;\r\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\r\n\t},\r\n\tcur: function() {\r\n\t\tvar hooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\treturn hooks && hooks.get ?\r\n\t\t\thooks.get( this ) :\r\n\t\t\tTween.propHooks._default.get( this );\r\n\t},\r\n\trun: function( percent ) {\r\n\t\tvar eased,\r\n\t\t\thooks = Tween.propHooks[ this.prop ];\r\n\r\n\t\tif ( this.options.duration ) {\r\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\r\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.pos = eased = percent;\r\n\t\t}\r\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\r\n\r\n\t\tif ( this.options.step ) {\r\n\t\t\tthis.options.step.call( this.elem, this.now, this );\r\n\t\t}\r\n\r\n\t\tif ( hooks && hooks.set ) {\r\n\t\t\thooks.set( this );\r\n\t\t} else {\r\n\t\t\tTween.propHooks._default.set( this );\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nTween.prototype.init.prototype = Tween.prototype;\r\n\r\nTween.propHooks = {\r\n\t_default: {\r\n\t\tget: function( tween ) {\r\n\t\t\tvar result;\r\n\r\n\t\t\t// Use a property on the element directly when it is not a DOM element,\r\n\t\t\t// or when there is no matching style property that exists.\r\n\t\t\tif ( tween.elem.nodeType !== 1 ||\r\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\r\n\t\t\t\treturn tween.elem[ tween.prop ];\r\n\t\t\t}\r\n\r\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\r\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\r\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\r\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\r\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\r\n\r\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\r\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\r\n\t\t},\r\n\t\tset: function( tween ) {\r\n\r\n\t\t\t// Use step hook for back compat.\r\n\t\t\t// Use cssHook if its there.\r\n\t\t\t// Use .style if available and use plain properties where available.\r\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\r\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\r\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\r\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\r\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\r\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\r\n\t\t\t} else {\r\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Support: IE9\r\n// Panic based approach to setting things on disconnected nodes\r\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\r\n\tset: function( tween ) {\r\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\r\n\t\t\ttween.elem[ tween.prop ] = tween.now;\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.easing = {\r\n\tlinear: function( p ) {\r\n\t\treturn p;\r\n\t},\r\n\tswing: function( p ) {\r\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\r\n\t},\r\n\t_default: \"swing\"\r\n};\r\n\r\njQuery.fx = Tween.prototype.init;\r\n\r\n// Back Compat <1.8 extension point\r\njQuery.fx.step = {};\r\n\r\n\r\n\r\n\r\nvar\r\n\tfxNow, timerId,\r\n\trfxtypes = /^(?:toggle|show|hide)$/,\r\n\trrun = /queueHooks$/;\r\n\r\n// Animations created synchronously will run synchronously\r\nfunction createFxNow() {\r\n\twindow.setTimeout( function() {\r\n\t\tfxNow = undefined;\r\n\t} );\r\n\treturn ( fxNow = jQuery.now() );\r\n}\r\n\r\n// Generate parameters to create a standard animation\r\nfunction genFx( type, includeWidth ) {\r\n\tvar which,\r\n\t\ti = 0,\r\n\t\tattrs = { height: type };\r\n\r\n\t// If we include width, step value is 1 to do all cssExpand values,\r\n\t// otherwise step value is 2 to skip over Left and Right\r\n\tincludeWidth = includeWidth ? 1 : 0;\r\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\r\n\t\twhich = cssExpand[ i ];\r\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\r\n\t}\r\n\r\n\tif ( includeWidth ) {\r\n\t\tattrs.opacity = attrs.width = type;\r\n\t}\r\n\r\n\treturn attrs;\r\n}\r\n\r\nfunction createTween( value, prop, animation ) {\r\n\tvar tween,\r\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\r\n\t\tindex = 0,\r\n\t\tlength = collection.length;\r\n\tfor ( ; index < length; index++ ) {\r\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\r\n\r\n\t\t\t// We're done with this property\r\n\t\t\treturn tween;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction defaultPrefilter( elem, props, opts ) {\r\n\t/* jshint validthis: true */\r\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\r\n\t\tanim = this,\r\n\t\torig = {},\r\n\t\tstyle = elem.style,\r\n\t\thidden = elem.nodeType && isHidden( elem ),\r\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\r\n\r\n\t// Handle queue: false promises\r\n\tif ( !opts.queue ) {\r\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\r\n\t\tif ( hooks.unqueued == null ) {\r\n\t\t\thooks.unqueued = 0;\r\n\t\t\toldfire = hooks.empty.fire;\r\n\t\t\thooks.empty.fire = function() {\r\n\t\t\t\tif ( !hooks.unqueued ) {\r\n\t\t\t\t\toldfire();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\thooks.unqueued++;\r\n\r\n\t\tanim.always( function() {\r\n\r\n\t\t\t// Ensure the complete handler is called before this completes\r\n\t\t\tanim.always( function() {\r\n\t\t\t\thooks.unqueued--;\r\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\r\n\t\t\t\t\thooks.empty.fire();\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\t// Height/width overflow pass\r\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\r\n\r\n\t\t// Make sure that nothing sneaks out\r\n\t\t// Record all 3 overflow attributes because IE9-10 do not\r\n\t\t// change the overflow attribute when overflowX and\r\n\t\t// overflowY are set to the same value\r\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\r\n\r\n\t\t// Set display property to inline-block for height/width\r\n\t\t// animations on inline elements that are having width/height animated\r\n\t\tdisplay = jQuery.css( elem, \"display\" );\r\n\r\n\t\t// Test default display if display is currently \"none\"\r\n\t\tcheckDisplay = display === \"none\" ?\r\n\t\t\tdataPriv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\r\n\r\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\r\n\t\t\tstyle.display = \"inline-block\";\r\n\t\t}\r\n\t}\r\n\r\n\tif ( opts.overflow ) {\r\n\t\tstyle.overflow = \"hidden\";\r\n\t\tanim.always( function() {\r\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\r\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\r\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\r\n\t\t} );\r\n\t}\r\n\r\n\t// show/hide pass\r\n\tfor ( prop in props ) {\r\n\t\tvalue = props[ prop ];\r\n\t\tif ( rfxtypes.exec( value ) ) {\r\n\t\t\tdelete props[ prop ];\r\n\t\t\ttoggle = toggle || value === \"toggle\";\r\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\r\n\r\n\t\t\t\t// If there is dataShow left over from a stopped hide or show\r\n\t\t\t\t// and we are going to proceed with show, we should pretend to be hidden\r\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\r\n\t\t\t\t\thidden = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\r\n\r\n\t\t// Any non-fx value stops us from restoring the original display value\r\n\t\t} else {\r\n\t\t\tdisplay = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !jQuery.isEmptyObject( orig ) ) {\r\n\t\tif ( dataShow ) {\r\n\t\t\tif ( \"hidden\" in dataShow ) {\r\n\t\t\t\thidden = dataShow.hidden;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", {} );\r\n\t\t}\r\n\r\n\t\t// Store state if its toggle - enables .stop().toggle() to \"reverse\"\r\n\t\tif ( toggle ) {\r\n\t\t\tdataShow.hidden = !hidden;\r\n\t\t}\r\n\t\tif ( hidden ) {\r\n\t\t\tjQuery( elem ).show();\r\n\t\t} else {\r\n\t\t\tanim.done( function() {\r\n\t\t\t\tjQuery( elem ).hide();\r\n\t\t\t} );\r\n\t\t}\r\n\t\tanim.done( function() {\r\n\t\t\tvar prop;\r\n\r\n\t\t\tdataPriv.remove( elem, \"fxshow\" );\r\n\t\t\tfor ( prop in orig ) {\r\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\r\n\t\t\t}\r\n\t\t} );\r\n\t\tfor ( prop in orig ) {\r\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\r\n\r\n\t\t\tif ( !( prop in dataShow ) ) {\r\n\t\t\t\tdataShow[ prop ] = tween.start;\r\n\t\t\t\tif ( hidden ) {\r\n\t\t\t\t\ttween.end = tween.start;\r\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\r\n\t} else if ( ( display === \"none\" ? defaultDisplay( elem.nodeName ) : display ) === \"inline\" ) {\r\n\t\tstyle.display = display;\r\n\t}\r\n}\r\n\r\nfunction propFilter( props, specialEasing ) {\r\n\tvar index, name, easing, value, hooks;\r\n\r\n\t// camelCase, specialEasing and expand cssHook pass\r\n\tfor ( index in props ) {\r\n\t\tname = jQuery.camelCase( index );\r\n\t\teasing = specialEasing[ name ];\r\n\t\tvalue = props[ index ];\r\n\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\teasing = value[ 1 ];\r\n\t\t\tvalue = props[ index ] = value[ 0 ];\r\n\t\t}\r\n\r\n\t\tif ( index !== name ) {\r\n\t\t\tprops[ name ] = value;\r\n\t\t\tdelete props[ index ];\r\n\t\t}\r\n\r\n\t\thooks = jQuery.cssHooks[ name ];\r\n\t\tif ( hooks && \"expand\" in hooks ) {\r\n\t\t\tvalue = hooks.expand( value );\r\n\t\t\tdelete props[ name ];\r\n\r\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\r\n\t\t\t// Reusing 'index' because we have the correct \"name\"\r\n\t\t\tfor ( index in value ) {\r\n\t\t\t\tif ( !( index in props ) ) {\r\n\t\t\t\t\tprops[ index ] = value[ index ];\r\n\t\t\t\t\tspecialEasing[ index ] = easing;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tspecialEasing[ name ] = easing;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction Animation( elem, properties, options ) {\r\n\tvar result,\r\n\t\tstopped,\r\n\t\tindex = 0,\r\n\t\tlength = Animation.prefilters.length,\r\n\t\tdeferred = jQuery.Deferred().always( function() {\r\n\r\n\t\t\t// Don't match elem in the :animated selector\r\n\t\t\tdelete tick.elem;\r\n\t\t} ),\r\n\t\ttick = function() {\r\n\t\t\tif ( stopped ) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar currentTime = fxNow || createFxNow(),\r\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\r\n\r\n\t\t\t\t// Support: Android 2.3\r\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\r\n\t\t\t\ttemp = remaining / animation.duration || 0,\r\n\t\t\t\tpercent = 1 - temp,\r\n\t\t\t\tindex = 0,\r\n\t\t\t\tlength = animation.tweens.length;\r\n\r\n\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\tanimation.tweens[ index ].run( percent );\r\n\t\t\t}\r\n\r\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\r\n\r\n\t\t\tif ( percent < 1 && length ) {\r\n\t\t\t\treturn remaining;\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t},\r\n\t\tanimation = deferred.promise( {\r\n\t\t\telem: elem,\r\n\t\t\tprops: jQuery.extend( {}, properties ),\r\n\t\t\topts: jQuery.extend( true, {\r\n\t\t\t\tspecialEasing: {},\r\n\t\t\t\teasing: jQuery.easing._default\r\n\t\t\t}, options ),\r\n\t\t\toriginalProperties: properties,\r\n\t\t\toriginalOptions: options,\r\n\t\t\tstartTime: fxNow || createFxNow(),\r\n\t\t\tduration: options.duration,\r\n\t\t\ttweens: [],\r\n\t\t\tcreateTween: function( prop, end ) {\r\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\r\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\r\n\t\t\t\tanimation.tweens.push( tween );\r\n\t\t\t\treturn tween;\r\n\t\t\t},\r\n\t\t\tstop: function( gotoEnd ) {\r\n\t\t\t\tvar index = 0,\r\n\r\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\r\n\t\t\t\t\t// otherwise we skip this part\r\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\r\n\t\t\t\tif ( stopped ) {\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t\tstopped = true;\r\n\t\t\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\r\n\t\t\t\tif ( gotoEnd ) {\r\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\r\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\r\n\t\t\t\t}\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t} ),\r\n\t\tprops = animation.props;\r\n\r\n\tpropFilter( props, animation.opts.specialEasing );\r\n\r\n\tfor ( ; index < length ; index++ ) {\r\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\r\n\t\tif ( result ) {\r\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\r\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\r\n\t\t\t\t\tjQuery.proxy( result.stop, result );\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tjQuery.map( props, createTween, animation );\r\n\r\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\r\n\t\tanimation.opts.start.call( elem, animation );\r\n\t}\r\n\r\n\tjQuery.fx.timer(\r\n\t\tjQuery.extend( tick, {\r\n\t\t\telem: elem,\r\n\t\t\tanim: animation,\r\n\t\t\tqueue: animation.opts.queue\r\n\t\t} )\r\n\t);\r\n\r\n\t// attach callbacks from options\r\n\treturn animation.progress( animation.opts.progress )\r\n\t\t.done( animation.opts.done, animation.opts.complete )\r\n\t\t.fail( animation.opts.fail )\r\n\t\t.always( animation.opts.always );\r\n}\r\n\r\njQuery.Animation = jQuery.extend( Animation, {\r\n\ttweeners: {\r\n\t\t\"*\": [ function( prop, value ) {\r\n\t\t\tvar tween = this.createTween( prop, value );\r\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\r\n\t\t\treturn tween;\r\n\t\t} ]\r\n\t},\r\n\r\n\ttweener: function( props, callback ) {\r\n\t\tif ( jQuery.isFunction( props ) ) {\r\n\t\t\tcallback = props;\r\n\t\t\tprops = [ \"*\" ];\r\n\t\t} else {\r\n\t\t\tprops = props.match( rnotwhite );\r\n\t\t}\r\n\r\n\t\tvar prop,\r\n\t\t\tindex = 0,\r\n\t\t\tlength = props.length;\r\n\r\n\t\tfor ( ; index < length ; index++ ) {\r\n\t\t\tprop = props[ index ];\r\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\r\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\r\n\t\t}\r\n\t},\r\n\r\n\tprefilters: [ defaultPrefilter ],\r\n\r\n\tprefilter: function( callback, prepend ) {\r\n\t\tif ( prepend ) {\r\n\t\t\tAnimation.prefilters.unshift( callback );\r\n\t\t} else {\r\n\t\t\tAnimation.prefilters.push( callback );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\njQuery.speed = function( speed, easing, fn ) {\r\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\r\n\t\tcomplete: fn || !fn && easing ||\r\n\t\t\tjQuery.isFunction( speed ) && speed,\r\n\t\tduration: speed,\r\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\r\n\t};\r\n\r\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ?\r\n\t\topt.duration : opt.duration in jQuery.fx.speeds ?\r\n\t\t\tjQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\r\n\r\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\r\n\tif ( opt.queue == null || opt.queue === true ) {\r\n\t\topt.queue = \"fx\";\r\n\t}\r\n\r\n\t// Queueing\r\n\topt.old = opt.complete;\r\n\r\n\topt.complete = function() {\r\n\t\tif ( jQuery.isFunction( opt.old ) ) {\r\n\t\t\topt.old.call( this );\r\n\t\t}\r\n\r\n\t\tif ( opt.queue ) {\r\n\t\t\tjQuery.dequeue( this, opt.queue );\r\n\t\t}\r\n\t};\r\n\r\n\treturn opt;\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tfadeTo: function( speed, to, easing, callback ) {\r\n\r\n\t\t// Show any hidden elements after setting opacity to 0\r\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\r\n\r\n\t\t\t// Animate to the value specified\r\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\r\n\t},\r\n\tanimate: function( prop, speed, easing, callback ) {\r\n\t\tvar empty = jQuery.isEmptyObject( prop ),\r\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\r\n\t\t\tdoAnimation = function() {\r\n\r\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\r\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\r\n\r\n\t\t\t\t// Empty animations, or finishing resolves immediately\r\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\r\n\t\t\t\t\tanim.stop( true );\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tdoAnimation.finish = doAnimation;\r\n\r\n\t\treturn empty || optall.queue === false ?\r\n\t\t\tthis.each( doAnimation ) :\r\n\t\t\tthis.queue( optall.queue, doAnimation );\r\n\t},\r\n\tstop: function( type, clearQueue, gotoEnd ) {\r\n\t\tvar stopQueue = function( hooks ) {\r\n\t\t\tvar stop = hooks.stop;\r\n\t\t\tdelete hooks.stop;\r\n\t\t\tstop( gotoEnd );\r\n\t\t};\r\n\r\n\t\tif ( typeof type !== \"string\" ) {\r\n\t\t\tgotoEnd = clearQueue;\r\n\t\t\tclearQueue = type;\r\n\t\t\ttype = undefined;\r\n\t\t}\r\n\t\tif ( clearQueue && type !== false ) {\r\n\t\t\tthis.queue( type || \"fx\", [] );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar dequeue = true,\r\n\t\t\t\tindex = type != null && type + \"queueHooks\",\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tdata = dataPriv.get( this );\r\n\r\n\t\t\tif ( index ) {\r\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\r\n\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor ( index in data ) {\r\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\r\n\t\t\t\t\t\tstopQueue( data[ index ] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this &&\r\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\r\n\r\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\r\n\t\t\t\t\tdequeue = false;\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Start the next in the queue if the last step wasn't forced.\r\n\t\t\t// Timers currently will call their complete callbacks, which\r\n\t\t\t// will dequeue but only if they were gotoEnd.\r\n\t\t\tif ( dequeue || !gotoEnd ) {\r\n\t\t\t\tjQuery.dequeue( this, type );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\tfinish: function( type ) {\r\n\t\tif ( type !== false ) {\r\n\t\t\ttype = type || \"fx\";\r\n\t\t}\r\n\t\treturn this.each( function() {\r\n\t\t\tvar index,\r\n\t\t\t\tdata = dataPriv.get( this ),\r\n\t\t\t\tqueue = data[ type + \"queue\" ],\r\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\r\n\t\t\t\ttimers = jQuery.timers,\r\n\t\t\t\tlength = queue ? queue.length : 0;\r\n\r\n\t\t\t// Enable finishing flag on private data\r\n\t\t\tdata.finish = true;\r\n\r\n\t\t\t// Empty the queue first\r\n\t\t\tjQuery.queue( this, type, [] );\r\n\r\n\t\t\tif ( hooks && hooks.stop ) {\r\n\t\t\t\thooks.stop.call( this, true );\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any active animations, and finish them\r\n\t\t\tfor ( index = timers.length; index--; ) {\r\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\r\n\t\t\t\t\ttimers[ index ].anim.stop( true );\r\n\t\t\t\t\ttimers.splice( index, 1 );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Look for any animations in the old queue and finish them\r\n\t\t\tfor ( index = 0; index < length; index++ ) {\r\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\r\n\t\t\t\t\tqueue[ index ].finish.call( this );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Turn off finishing flag\r\n\t\t\tdelete data.finish;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\r\n\tvar cssFn = jQuery.fn[ name ];\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn speed == null || typeof speed === \"boolean\" ?\r\n\t\t\tcssFn.apply( this, arguments ) :\r\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\r\n\t};\r\n} );\r\n\r\n// Generate shortcuts for custom animations\r\njQuery.each( {\r\n\tslideDown: genFx( \"show\" ),\r\n\tslideUp: genFx( \"hide\" ),\r\n\tslideToggle: genFx( \"toggle\" ),\r\n\tfadeIn: { opacity: \"show\" },\r\n\tfadeOut: { opacity: \"hide\" },\r\n\tfadeToggle: { opacity: \"toggle\" }\r\n}, function( name, props ) {\r\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\r\n\t\treturn this.animate( props, speed, easing, callback );\r\n\t};\r\n} );\r\n\r\njQuery.timers = [];\r\njQuery.fx.tick = function() {\r\n\tvar timer,\r\n\t\ti = 0,\r\n\t\ttimers = jQuery.timers;\r\n\r\n\tfxNow = jQuery.now();\r\n\r\n\tfor ( ; i < timers.length; i++ ) {\r\n\t\ttimer = timers[ i ];\r\n\r\n\t\t// Checks the timer has not already been removed\r\n\t\tif ( !timer() && timers[ i ] === timer ) {\r\n\t\t\ttimers.splice( i--, 1 );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( !timers.length ) {\r\n\t\tjQuery.fx.stop();\r\n\t}\r\n\tfxNow = undefined;\r\n};\r\n\r\njQuery.fx.timer = function( timer ) {\r\n\tjQuery.timers.push( timer );\r\n\tif ( timer() ) {\r\n\t\tjQuery.fx.start();\r\n\t} else {\r\n\t\tjQuery.timers.pop();\r\n\t}\r\n};\r\n\r\njQuery.fx.interval = 13;\r\njQuery.fx.start = function() {\r\n\tif ( !timerId ) {\r\n\t\ttimerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );\r\n\t}\r\n};\r\n\r\njQuery.fx.stop = function() {\r\n\twindow.clearInterval( timerId );\r\n\r\n\ttimerId = null;\r\n};\r\n\r\njQuery.fx.speeds = {\r\n\tslow: 600,\r\n\tfast: 200,\r\n\r\n\t// Default speed\r\n\t_default: 400\r\n};\r\n\r\n\r\n// Based off of the plugin by Clint Helfers, with permission.\r\n// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\r\njQuery.fn.delay = function( time, type ) {\r\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\r\n\ttype = type || \"fx\";\r\n\r\n\treturn this.queue( type, function( next, hooks ) {\r\n\t\tvar timeout = window.setTimeout( next, time );\r\n\t\thooks.stop = function() {\r\n\t\t\twindow.clearTimeout( timeout );\r\n\t\t};\r\n\t} );\r\n};\r\n\r\n\r\n( function() {\r\n\tvar input = document.createElement( \"input\" ),\r\n\t\tselect = document.createElement( \"select\" ),\r\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\r\n\r\n\tinput.type = \"checkbox\";\r\n\r\n\t// Support: iOS<=5.1, Android<=4.2+\r\n\t// Default value for a checkbox should be \"on\"\r\n\tsupport.checkOn = input.value !== \"\";\r\n\r\n\t// Support: IE<=11+\r\n\t// Must access selectedIndex to make default options select\r\n\tsupport.optSelected = opt.selected;\r\n\r\n\t// Support: Android<=2.3\r\n\t// Options inside disabled selects are incorrectly marked as disabled\r\n\tselect.disabled = true;\r\n\tsupport.optDisabled = !opt.disabled;\r\n\r\n\t// Support: IE<=11+\r\n\t// An input loses its value after becoming a radio\r\n\tinput = document.createElement( \"input\" );\r\n\tinput.value = \"t\";\r\n\tinput.type = \"radio\";\r\n\tsupport.radioValue = input.value === \"t\";\r\n} )();\r\n\r\n\r\nvar boolHook,\r\n\tattrHandle = jQuery.expr.attrHandle;\r\n\r\njQuery.fn.extend( {\r\n\tattr: function( name, value ) {\r\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveAttr: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.removeAttr( this, name );\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tattr: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set attributes on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Fallback to prop when attributes are not supported\r\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\r\n\t\t\treturn jQuery.prop( elem, name, value );\r\n\t\t}\r\n\r\n\t\t// All attributes are lowercase\r\n\t\t// Grab necessary hook if one is defined\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\t\t\tname = name.toLowerCase();\r\n\t\t\thooks = jQuery.attrHooks[ name ] ||\r\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( value === null ) {\r\n\t\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\telem.setAttribute( name, value + \"\" );\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tret = jQuery.find.attr( elem, name );\r\n\r\n\t\t// Non-existent attributes return null, we normalize to undefined\r\n\t\treturn ret == null ? undefined : ret;\r\n\t},\r\n\r\n\tattrHooks: {\r\n\t\ttype: {\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\r\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\r\n\t\t\t\t\tvar val = elem.value;\r\n\t\t\t\t\telem.setAttribute( \"type\", value );\r\n\t\t\t\t\tif ( val ) {\r\n\t\t\t\t\t\telem.value = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tremoveAttr: function( elem, value ) {\r\n\t\tvar name, propName,\r\n\t\t\ti = 0,\r\n\t\t\tattrNames = value && value.match( rnotwhite );\r\n\r\n\t\tif ( attrNames && elem.nodeType === 1 ) {\r\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\r\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\r\n\r\n\t\t\t\t// Boolean attributes get special treatment (#10870)\r\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\r\n\r\n\t\t\t\t\t// Set corresponding property to false\r\n\t\t\t\t\telem[ propName ] = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\telem.removeAttribute( name );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Hooks for boolean attributes\r\nboolHook = {\r\n\tset: function( elem, value, name ) {\r\n\t\tif ( value === false ) {\r\n\r\n\t\t\t// Remove boolean attributes when set to false\r\n\t\t\tjQuery.removeAttr( elem, name );\r\n\t\t} else {\r\n\t\t\telem.setAttribute( name, name );\r\n\t\t}\r\n\t\treturn name;\r\n\t}\r\n};\r\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\r\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\r\n\r\n\tattrHandle[ name ] = function( elem, name, isXML ) {\r\n\t\tvar ret, handle;\r\n\t\tif ( !isXML ) {\r\n\r\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\r\n\t\t\thandle = attrHandle[ name ];\r\n\t\t\tattrHandle[ name ] = ret;\r\n\t\t\tret = getter( elem, name, isXML ) != null ?\r\n\t\t\t\tname.toLowerCase() :\r\n\t\t\t\tnull;\r\n\t\t\tattrHandle[ name ] = handle;\r\n\t\t}\r\n\t\treturn ret;\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\r\n\trclickable = /^(?:a|area)$/i;\r\n\r\njQuery.fn.extend( {\r\n\tprop: function( name, value ) {\r\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\r\n\t},\r\n\r\n\tremoveProp: function( name ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tprop: function( elem, name, value ) {\r\n\t\tvar ret, hooks,\r\n\t\t\tnType = elem.nodeType;\r\n\r\n\t\t// Don't get/set properties on text, comment and attribute nodes\r\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\r\n\r\n\t\t\t// Fix name and attach hooks\r\n\t\t\tname = jQuery.propFix[ name ] || name;\r\n\t\t\thooks = jQuery.propHooks[ name ];\r\n\t\t}\r\n\r\n\t\tif ( value !== undefined ) {\r\n\t\t\tif ( hooks && \"set\" in hooks &&\r\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn ( elem[ name ] = value );\r\n\t\t}\r\n\r\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\treturn elem[ name ];\r\n\t},\r\n\r\n\tpropHooks: {\r\n\t\ttabIndex: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// elem.tabIndex doesn't always return the\r\n\t\t\t\t// correct value when it hasn't been explicitly set\r\n\t\t\t\t// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\r\n\t\t\t\t// Use proper attribute retrieval(#12072)\r\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\r\n\r\n\t\t\t\treturn tabindex ?\r\n\t\t\t\t\tparseInt( tabindex, 10 ) :\r\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\r\n\t\t\t\t\t\trclickable.test( elem.nodeName ) && elem.href ?\r\n\t\t\t\t\t\t\t0 :\r\n\t\t\t\t\t\t\t-1;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tpropFix: {\r\n\t\t\"for\": \"htmlFor\",\r\n\t\t\"class\": \"className\"\r\n\t}\r\n} );\r\n\r\nif ( !support.optSelected ) {\r\n\tjQuery.propHooks.selected = {\r\n\t\tget: function( elem ) {\r\n\t\t\tvar parent = elem.parentNode;\r\n\t\t\tif ( parent && parent.parentNode ) {\r\n\t\t\t\tparent.parentNode.selectedIndex;\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n}\r\n\r\njQuery.each( [\r\n\t\"tabIndex\",\r\n\t\"readOnly\",\r\n\t\"maxLength\",\r\n\t\"cellSpacing\",\r\n\t\"cellPadding\",\r\n\t\"rowSpan\",\r\n\t\"colSpan\",\r\n\t\"useMap\",\r\n\t\"frameBorder\",\r\n\t\"contentEditable\"\r\n], function() {\r\n\tjQuery.propFix[ this.toLowerCase() ] = this;\r\n} );\r\n\r\n\r\n\r\n\r\nvar rclass = /[\\t\\r\\n\\f]/g;\r\n\r\nfunction getClass( elem ) {\r\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\r\n}\r\n\r\njQuery.fn.extend( {\r\n\taddClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\r\n\t\t\t\t\t\t\tcur += clazz + \" \";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tremoveClass: function( value ) {\r\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\r\n\t\t\ti = 0;\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( j ) {\r\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\treturn this.attr( \"class\", \"\" );\r\n\t\t}\r\n\r\n\t\tif ( typeof value === \"string\" && value ) {\r\n\t\t\tclasses = value.match( rnotwhite ) || [];\r\n\r\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\t\tcurValue = getClass( elem );\r\n\r\n\t\t\t\t// This expression is here for better compressibility (see addClass)\r\n\t\t\t\tcur = elem.nodeType === 1 &&\r\n\t\t\t\t\t( \" \" + curValue + \" \" ).replace( rclass, \" \" );\r\n\r\n\t\t\t\tif ( cur ) {\r\n\t\t\t\t\tj = 0;\r\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\r\n\r\n\t\t\t\t\t\t// Remove *all* instances\r\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\r\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\r\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\r\n\t\t\t\t\tif ( curValue !== finalValue ) {\r\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\ttoggleClass: function( value, stateVal ) {\r\n\t\tvar type = typeof value;\r\n\r\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\r\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( value ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).toggleClass(\r\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\r\n\t\t\t\t\tstateVal\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar className, i, self, classNames;\r\n\r\n\t\t\tif ( type === \"string\" ) {\r\n\r\n\t\t\t\t// Toggle individual class names\r\n\t\t\t\ti = 0;\r\n\t\t\t\tself = jQuery( this );\r\n\t\t\t\tclassNames = value.match( rnotwhite ) || [];\r\n\r\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\r\n\r\n\t\t\t\t\t// Check each className given, space separated list\r\n\t\t\t\t\tif ( self.hasClass( className ) ) {\r\n\t\t\t\t\t\tself.removeClass( className );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.addClass( className );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t// Toggle whole class name\r\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\r\n\t\t\t\tclassName = getClass( this );\r\n\t\t\t\tif ( className ) {\r\n\r\n\t\t\t\t\t// Store className if set\r\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// If the element has a class name or if we're passed `false`,\r\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\r\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\r\n\t\t\t\t// falling back to the empty string if nothing was stored.\r\n\t\t\t\tif ( this.setAttribute ) {\r\n\t\t\t\t\tthis.setAttribute( \"class\",\r\n\t\t\t\t\t\tclassName || value === false ?\r\n\t\t\t\t\t\t\"\" :\r\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\thasClass: function( selector ) {\r\n\t\tvar className, elem,\r\n\t\t\ti = 0;\r\n\r\n\t\tclassName = \" \" + selector + \" \";\r\n\t\twhile ( ( elem = this[ i++ ] ) ) {\r\n\t\t\tif ( elem.nodeType === 1 &&\r\n\t\t\t\t( \" \" + getClass( elem ) + \" \" ).replace( rclass, \" \" )\r\n\t\t\t\t\t.indexOf( className ) > -1\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar rreturn = /\\r/g;\r\n\r\njQuery.fn.extend( {\r\n\tval: function( value ) {\r\n\t\tvar hooks, ret, isFunction,\r\n\t\t\telem = this[ 0 ];\r\n\r\n\t\tif ( !arguments.length ) {\r\n\t\t\tif ( elem ) {\r\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\r\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\r\n\r\n\t\t\t\tif ( hooks &&\r\n\t\t\t\t\t\"get\" in hooks &&\r\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn ret;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tret = elem.value;\r\n\r\n\t\t\t\treturn typeof ret === \"string\" ?\r\n\r\n\t\t\t\t\t// Handle most common string cases\r\n\t\t\t\t\tret.replace( rreturn, \"\" ) :\r\n\r\n\t\t\t\t\t// Handle cases where value is null/undef or number\r\n\t\t\t\t\tret == null ? \"\" : ret;\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tisFunction = jQuery.isFunction( value );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tvar val;\r\n\r\n\t\t\tif ( this.nodeType !== 1 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( isFunction ) {\r\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\r\n\t\t\t} else {\r\n\t\t\t\tval = value;\r\n\t\t\t}\r\n\r\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\r\n\t\t\tif ( val == null ) {\r\n\t\t\t\tval = \"\";\r\n\r\n\t\t\t} else if ( typeof val === \"number\" ) {\r\n\t\t\t\tval += \"\";\r\n\r\n\t\t\t} else if ( jQuery.isArray( val ) ) {\r\n\t\t\t\tval = jQuery.map( val, function( value ) {\r\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\r\n\t\t\t\t} );\r\n\t\t\t}\r\n\r\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\r\n\r\n\t\t\t// If set returns undefined, fall back to normal setting\r\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\r\n\t\t\t\tthis.value = val;\r\n\t\t\t}\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\njQuery.extend( {\r\n\tvalHooks: {\r\n\t\toption: {\r\n\t\t\tget: function( elem ) {\r\n\r\n\t\t\t\t// Support: IE<11\r\n\t\t\t\t// option.value not trimmed (#14858)\r\n\t\t\t\treturn jQuery.trim( elem.value );\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\tget: function( elem ) {\r\n\t\t\t\tvar value, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tindex = elem.selectedIndex,\r\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\r\n\t\t\t\t\tvalues = one ? null : [],\r\n\t\t\t\t\tmax = one ? index + 1 : options.length,\r\n\t\t\t\t\ti = index < 0 ?\r\n\t\t\t\t\t\tmax :\r\n\t\t\t\t\t\tone ? index : 0;\r\n\r\n\t\t\t\t// Loop through all the selected options\r\n\t\t\t\tfor ( ; i < max; i++ ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\r\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\r\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\r\n\r\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\r\n\t\t\t\t\t\t\t( support.optDisabled ?\r\n\t\t\t\t\t\t\t\t!option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\r\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\r\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n\t\t\t\t\t\t// Get the specific value for the option\r\n\t\t\t\t\t\tvalue = jQuery( option ).val();\r\n\r\n\t\t\t\t\t\t// We don't need an array for one selects\r\n\t\t\t\t\t\tif ( one ) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Multi-Selects return an array\r\n\t\t\t\t\t\tvalues.push( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn values;\r\n\t\t\t},\r\n\r\n\t\t\tset: function( elem, value ) {\r\n\t\t\t\tvar optionSet, option,\r\n\t\t\t\t\toptions = elem.options,\r\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\r\n\t\t\t\t\ti = options.length;\r\n\r\n\t\t\t\twhile ( i-- ) {\r\n\t\t\t\t\toption = options[ i ];\r\n\t\t\t\t\tif ( option.selected =\r\n\t\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\toptionSet = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\r\n\t\t\t\tif ( !optionSet ) {\r\n\t\t\t\t\telem.selectedIndex = -1;\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Radios and checkboxes getter/setter\r\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\r\n\tjQuery.valHooks[ this ] = {\r\n\t\tset: function( elem, value ) {\r\n\t\t\tif ( jQuery.isArray( value ) ) {\r\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tif ( !support.checkOn ) {\r\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\r\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Return jQuery for attributes-only inclusion\r\n\r\n\r\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\r\n\r\njQuery.extend( jQuery.event, {\r\n\r\n\ttrigger: function( event, data, elem, onlyHandlers ) {\r\n\r\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\r\n\t\t\teventPath = [ elem || document ],\r\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\r\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\r\n\r\n\t\tcur = tmp = elem = elem || document;\r\n\r\n\t\t// Don't do events on text and comment nodes\r\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\r\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\r\n\r\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\r\n\t\t\tnamespaces = type.split( \".\" );\r\n\t\t\ttype = namespaces.shift();\r\n\t\t\tnamespaces.sort();\r\n\t\t}\r\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\r\n\r\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\r\n\t\tevent = event[ jQuery.expando ] ?\r\n\t\t\tevent :\r\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\r\n\r\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\r\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\r\n\t\tevent.namespace = namespaces.join( \".\" );\r\n\t\tevent.rnamespace = event.namespace ?\r\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\r\n\t\t\tnull;\r\n\r\n\t\t// Clean up the event in case it is being reused\r\n\t\tevent.result = undefined;\r\n\t\tif ( !event.target ) {\r\n\t\t\tevent.target = elem;\r\n\t\t}\r\n\r\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\r\n\t\tdata = data == null ?\r\n\t\t\t[ event ] :\r\n\t\t\tjQuery.makeArray( data, [ event ] );\r\n\r\n\t\t// Allow special events to draw outside the lines\r\n\t\tspecial = jQuery.event.special[ type ] || {};\r\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\r\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\r\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\tbubbleType = special.delegateType || type;\r\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\r\n\t\t\t\tcur = cur.parentNode;\r\n\t\t\t}\r\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\r\n\t\t\t\teventPath.push( cur );\r\n\t\t\t\ttmp = cur;\r\n\t\t\t}\r\n\r\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\r\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\r\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Fire handlers on the event path\r\n\t\ti = 0;\r\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\r\n\r\n\t\t\tevent.type = i > 1 ?\r\n\t\t\t\tbubbleType :\r\n\t\t\t\tspecial.bindType || type;\r\n\r\n\t\t\t// jQuery handler\r\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\r\n\t\t\t\tdataPriv.get( cur, \"handle\" );\r\n\t\t\tif ( handle ) {\r\n\t\t\t\thandle.apply( cur, data );\r\n\t\t\t}\r\n\r\n\t\t\t// Native handler\r\n\t\t\thandle = ontype && cur[ ontype ];\r\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\r\n\t\t\t\tevent.result = handle.apply( cur, data );\r\n\t\t\t\tif ( event.result === false ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tevent.type = type;\r\n\r\n\t\t// If nobody prevented the default action, do it now\r\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\r\n\r\n\t\t\tif ( ( !special._default ||\r\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\r\n\t\t\t\tacceptData( elem ) ) {\r\n\r\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\r\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\r\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\r\n\t\t\t\t\ttmp = elem[ ontype ];\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\r\n\t\t\t\t\tjQuery.event.triggered = type;\r\n\t\t\t\t\telem[ type ]();\r\n\t\t\t\t\tjQuery.event.triggered = undefined;\r\n\r\n\t\t\t\t\tif ( tmp ) {\r\n\t\t\t\t\t\telem[ ontype ] = tmp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn event.result;\r\n\t},\r\n\r\n\t// Piggyback on a donor event to simulate a different one\r\n\tsimulate: function( type, elem, event ) {\r\n\t\tvar e = jQuery.extend(\r\n\t\t\tnew jQuery.Event(),\r\n\t\t\tevent,\r\n\t\t\t{\r\n\t\t\t\ttype: type,\r\n\t\t\t\tisSimulated: true\r\n\r\n\t\t\t\t// Previously, `originalEvent: {}` was set here, so stopPropagation call\r\n\t\t\t\t// would not be triggered on donor event, since in our own\r\n\t\t\t\t// jQuery.event.stopPropagation function we had a check for existence of\r\n\t\t\t\t// originalEvent.stopPropagation method, so, consequently it would be a noop.\r\n\t\t\t\t//\r\n\t\t\t\t// But now, this \"simulate\" function is used only for events\r\n\t\t\t\t// for which stopPropagation() is noop, so there is no need for that anymore.\r\n\t\t\t\t//\r\n\t\t\t\t// For the compat branch though, guard for \"click\" and \"submit\"\r\n\t\t\t\t// events is still used, but was moved to jQuery.event.stopPropagation function\r\n\t\t\t\t// because `originalEvent` should point to the original event for the constancy\r\n\t\t\t\t// with other events and for more focused logic\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tjQuery.event.trigger( e, null, elem );\r\n\r\n\t\tif ( e.isDefaultPrevented() ) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\r\n\ttrigger: function( type, data ) {\r\n\t\treturn this.each( function() {\r\n\t\t\tjQuery.event.trigger( type, data, this );\r\n\t\t} );\r\n\t},\r\n\ttriggerHandler: function( type, data ) {\r\n\t\tvar elem = this[ 0 ];\r\n\t\tif ( elem ) {\r\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n\r\njQuery.each( ( \"blur focus focusin focusout load resize scroll unload click dblclick \" +\r\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\r\n\t\"change select submit keydown keypress keyup error contextmenu\" ).split( \" \" ),\r\n\tfunction( i, name ) {\r\n\r\n\t// Handle event binding\r\n\tjQuery.fn[ name ] = function( data, fn ) {\r\n\t\treturn arguments.length > 0 ?\r\n\t\t\tthis.on( name, null, data, fn ) :\r\n\t\t\tthis.trigger( name );\r\n\t};\r\n} );\r\n\r\njQuery.fn.extend( {\r\n\thover: function( fnOver, fnOut ) {\r\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nsupport.focusin = \"onfocusin\" in window;\r\n\r\n\r\n// Support: Firefox\r\n// Firefox doesn't have focus(in | out) events\r\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\r\n//\r\n// Support: Chrome, Safari\r\n// focus(in | out) events fire after focus & blur events,\r\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\r\n// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857\r\nif ( !support.focusin ) {\r\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\r\n\r\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\r\n\t\tvar handler = function( event ) {\r\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\r\n\t\t};\r\n\r\n\t\tjQuery.event.special[ fix ] = {\r\n\t\t\tsetup: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\r\n\t\t\t\t}\r\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\r\n\t\t\t},\r\n\t\t\tteardown: function() {\r\n\t\t\t\tvar doc = this.ownerDocument || this,\r\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\r\n\r\n\t\t\t\tif ( !attaches ) {\r\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\r\n\t\t\t\t\tdataPriv.remove( doc, fix );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t} );\r\n}\r\nvar location = window.location;\r\n\r\nvar nonce = jQuery.now();\r\n\r\nvar rquery = ( /\\?/ );\r\n\r\n\r\n\r\n// Support: Android 2.3\r\n// Workaround failure to string-cast null input\r\njQuery.parseJSON = function( data ) {\r\n\treturn JSON.parse( data + \"\" );\r\n};\r\n\r\n\r\n// Cross-browser xml parsing\r\njQuery.parseXML = function( data ) {\r\n\tvar xml;\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// Support: IE9\r\n\ttry {\r\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\r\n\t} catch ( e ) {\r\n\t\txml = undefined;\r\n\t}\r\n\r\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\r\n\t\tjQuery.error( \"Invalid XML: \" + data );\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\nvar\r\n\trhash = /#.*$/,\r\n\trts = /([?&])_=[^&]*/,\r\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\r\n\r\n\t// #7653, #8125, #8152: local protocol detection\r\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\r\n\trnoContent = /^(?:GET|HEAD)$/,\r\n\trprotocol = /^\\/\\//,\r\n\r\n\t/* Prefilters\r\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\r\n\t * 2) These are called:\r\n\t *    - BEFORE asking for a transport\r\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\r\n\t * 3) key is the dataType\r\n\t * 4) the catchall symbol \"*\" can be used\r\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\r\n\t */\r\n\tprefilters = {},\r\n\r\n\t/* Transports bindings\r\n\t * 1) key is the dataType\r\n\t * 2) the catchall symbol \"*\" can be used\r\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\r\n\t */\r\n\ttransports = {},\r\n\r\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\r\n\tallTypes = \"*/\".concat( \"*\" ),\r\n\r\n\t// Anchor tag for parsing the document origin\r\n\toriginAnchor = document.createElement( \"a\" );\r\n\toriginAnchor.href = location.href;\r\n\r\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\r\nfunction addToPrefiltersOrTransports( structure ) {\r\n\r\n\t// dataTypeExpression is optional and defaults to \"*\"\r\n\treturn function( dataTypeExpression, func ) {\r\n\r\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\r\n\t\t\tfunc = dataTypeExpression;\r\n\t\t\tdataTypeExpression = \"*\";\r\n\t\t}\r\n\r\n\t\tvar dataType,\r\n\t\t\ti = 0,\r\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\r\n\r\n\t\tif ( jQuery.isFunction( func ) ) {\r\n\r\n\t\t\t// For each dataType in the dataTypeExpression\r\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\r\n\r\n\t\t\t\t// Prepend if requested\r\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\r\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\r\n\r\n\t\t\t\t// Otherwise append\r\n\t\t\t\t} else {\r\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\n// Base inspection function for prefilters and transports\r\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\r\n\r\n\tvar inspected = {},\r\n\t\tseekingTransport = ( structure === transports );\r\n\r\n\tfunction inspect( dataType ) {\r\n\t\tvar selected;\r\n\t\tinspected[ dataType ] = true;\r\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\r\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\r\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\r\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\r\n\r\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\r\n\t\t\t\tinspect( dataTypeOrTransport );\r\n\t\t\t\treturn false;\r\n\t\t\t} else if ( seekingTransport ) {\r\n\t\t\t\treturn !( selected = dataTypeOrTransport );\r\n\t\t\t}\r\n\t\t} );\r\n\t\treturn selected;\r\n\t}\r\n\r\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\r\n}\r\n\r\n// A special extend for ajax options\r\n// that takes \"flat\" options (not to be deep extended)\r\n// Fixes #9887\r\nfunction ajaxExtend( target, src ) {\r\n\tvar key, deep,\r\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\r\n\r\n\tfor ( key in src ) {\r\n\t\tif ( src[ key ] !== undefined ) {\r\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\r\n\t\t}\r\n\t}\r\n\tif ( deep ) {\r\n\t\tjQuery.extend( true, target, deep );\r\n\t}\r\n\r\n\treturn target;\r\n}\r\n\r\n/* Handles responses to an ajax request:\r\n * - finds the right dataType (mediates between content-type and expected dataType)\r\n * - returns the corresponding response\r\n */\r\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\r\n\r\n\tvar ct, type, finalDataType, firstDataType,\r\n\t\tcontents = s.contents,\r\n\t\tdataTypes = s.dataTypes;\r\n\r\n\t// Remove auto dataType and get content-type in the process\r\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\r\n\t\tdataTypes.shift();\r\n\t\tif ( ct === undefined ) {\r\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\r\n\t\t}\r\n\t}\r\n\r\n\t// Check if we're dealing with a known content-type\r\n\tif ( ct ) {\r\n\t\tfor ( type in contents ) {\r\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\r\n\t\t\t\tdataTypes.unshift( type );\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Check to see if we have a response for the expected dataType\r\n\tif ( dataTypes[ 0 ] in responses ) {\r\n\t\tfinalDataType = dataTypes[ 0 ];\r\n\t} else {\r\n\r\n\t\t// Try convertible dataTypes\r\n\t\tfor ( type in responses ) {\r\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\r\n\t\t\t\tfinalDataType = type;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif ( !firstDataType ) {\r\n\t\t\t\tfirstDataType = type;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Or just use first one\r\n\t\tfinalDataType = finalDataType || firstDataType;\r\n\t}\r\n\r\n\t// If we found a dataType\r\n\t// We add the dataType to the list if needed\r\n\t// and return the corresponding response\r\n\tif ( finalDataType ) {\r\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\r\n\t\t\tdataTypes.unshift( finalDataType );\r\n\t\t}\r\n\t\treturn responses[ finalDataType ];\r\n\t}\r\n}\r\n\r\n/* Chain conversions given the request and the original response\r\n * Also sets the responseXXX fields on the jqXHR instance\r\n */\r\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\r\n\tvar conv2, current, conv, tmp, prev,\r\n\t\tconverters = {},\r\n\r\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\r\n\t\tdataTypes = s.dataTypes.slice();\r\n\r\n\t// Create converters map with lowercased keys\r\n\tif ( dataTypes[ 1 ] ) {\r\n\t\tfor ( conv in s.converters ) {\r\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\r\n\t\t}\r\n\t}\r\n\r\n\tcurrent = dataTypes.shift();\r\n\r\n\t// Convert to each sequential dataType\r\n\twhile ( current ) {\r\n\r\n\t\tif ( s.responseFields[ current ] ) {\r\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\r\n\t\t}\r\n\r\n\t\t// Apply the dataFilter if provided\r\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\r\n\t\t\tresponse = s.dataFilter( response, s.dataType );\r\n\t\t}\r\n\r\n\t\tprev = current;\r\n\t\tcurrent = dataTypes.shift();\r\n\r\n\t\tif ( current ) {\r\n\r\n\t\t// There's only work to do if current dataType is non-auto\r\n\t\t\tif ( current === \"*\" ) {\r\n\r\n\t\t\t\tcurrent = prev;\r\n\r\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\r\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\r\n\r\n\t\t\t\t// Seek a direct converter\r\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\r\n\r\n\t\t\t\t// If none found, seek a pair\r\n\t\t\t\tif ( !conv ) {\r\n\t\t\t\t\tfor ( conv2 in converters ) {\r\n\r\n\t\t\t\t\t\t// If conv2 outputs current\r\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\r\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\r\n\r\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\r\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\r\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\r\n\t\t\t\t\t\t\tif ( conv ) {\r\n\r\n\t\t\t\t\t\t\t\t// Condense equivalence converters\r\n\t\t\t\t\t\t\t\tif ( conv === true ) {\r\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\r\n\r\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\r\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\r\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\r\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply converter (if not an equivalence)\r\n\t\t\t\tif ( conv !== true ) {\r\n\r\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\r\n\t\t\t\t\tif ( conv && s.throws ) {\r\n\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tresponse = conv( response );\r\n\t\t\t\t\t\t} catch ( e ) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\r\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { state: \"success\", data: response };\r\n}\r\n\r\njQuery.extend( {\r\n\r\n\t// Counter for holding the number of active queries\r\n\tactive: 0,\r\n\r\n\t// Last-Modified header cache for next request\r\n\tlastModified: {},\r\n\tetag: {},\r\n\r\n\tajaxSettings: {\r\n\t\turl: location.href,\r\n\t\ttype: \"GET\",\r\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\r\n\t\tglobal: true,\r\n\t\tprocessData: true,\r\n\t\tasync: true,\r\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n\t\t/*\r\n\t\ttimeout: 0,\r\n\t\tdata: null,\r\n\t\tdataType: null,\r\n\t\tusername: null,\r\n\t\tpassword: null,\r\n\t\tcache: null,\r\n\t\tthrows: false,\r\n\t\ttraditional: false,\r\n\t\theaders: {},\r\n\t\t*/\r\n\r\n\t\taccepts: {\r\n\t\t\t\"*\": allTypes,\r\n\t\t\ttext: \"text/plain\",\r\n\t\t\thtml: \"text/html\",\r\n\t\t\txml: \"application/xml, text/xml\",\r\n\t\t\tjson: \"application/json, text/javascript\"\r\n\t\t},\r\n\r\n\t\tcontents: {\r\n\t\t\txml: /\\bxml\\b/,\r\n\t\t\thtml: /\\bhtml/,\r\n\t\t\tjson: /\\bjson\\b/\r\n\t\t},\r\n\r\n\t\tresponseFields: {\r\n\t\t\txml: \"responseXML\",\r\n\t\t\ttext: \"responseText\",\r\n\t\t\tjson: \"responseJSON\"\r\n\t\t},\r\n\r\n\t\t// Data converters\r\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\r\n\t\tconverters: {\r\n\r\n\t\t\t// Convert anything to text\r\n\t\t\t\"* text\": String,\r\n\r\n\t\t\t// Text to html (true = no transformation)\r\n\t\t\t\"text html\": true,\r\n\r\n\t\t\t// Evaluate text as a json expression\r\n\t\t\t\"text json\": jQuery.parseJSON,\r\n\r\n\t\t\t// Parse text as xml\r\n\t\t\t\"text xml\": jQuery.parseXML\r\n\t\t},\r\n\r\n\t\t// For options that shouldn't be deep extended:\r\n\t\t// you can add your own custom options here if\r\n\t\t// and when you create one that shouldn't be\r\n\t\t// deep extended (see ajaxExtend)\r\n\t\tflatOptions: {\r\n\t\t\turl: true,\r\n\t\t\tcontext: true\r\n\t\t}\r\n\t},\r\n\r\n\t// Creates a full fledged settings object into target\r\n\t// with both ajaxSettings and settings fields.\r\n\t// If target is omitted, writes into ajaxSettings.\r\n\tajaxSetup: function( target, settings ) {\r\n\t\treturn settings ?\r\n\r\n\t\t\t// Building a settings object\r\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\r\n\r\n\t\t\t// Extending ajaxSettings\r\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\r\n\t},\r\n\r\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\r\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\r\n\r\n\t// Main method\r\n\tajax: function( url, options ) {\r\n\r\n\t\t// If url is an object, simulate pre-1.5 signature\r\n\t\tif ( typeof url === \"object\" ) {\r\n\t\t\toptions = url;\r\n\t\t\turl = undefined;\r\n\t\t}\r\n\r\n\t\t// Force options to be an object\r\n\t\toptions = options || {};\r\n\r\n\t\tvar transport,\r\n\r\n\t\t\t// URL without anti-cache param\r\n\t\t\tcacheURL,\r\n\r\n\t\t\t// Response headers\r\n\t\t\tresponseHeadersString,\r\n\t\t\tresponseHeaders,\r\n\r\n\t\t\t// timeout handle\r\n\t\t\ttimeoutTimer,\r\n\r\n\t\t\t// Url cleanup var\r\n\t\t\turlAnchor,\r\n\r\n\t\t\t// To know if global events are to be dispatched\r\n\t\t\tfireGlobals,\r\n\r\n\t\t\t// Loop variable\r\n\t\t\ti,\r\n\r\n\t\t\t// Create the final options object\r\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\r\n\r\n\t\t\t// Callbacks context\r\n\t\t\tcallbackContext = s.context || s,\r\n\r\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\r\n\t\t\tglobalEventContext = s.context &&\r\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\r\n\t\t\t\t\tjQuery( callbackContext ) :\r\n\t\t\t\t\tjQuery.event,\r\n\r\n\t\t\t// Deferreds\r\n\t\t\tdeferred = jQuery.Deferred(),\r\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tstatusCode = s.statusCode || {},\r\n\r\n\t\t\t// Headers (they are sent all at once)\r\n\t\t\trequestHeaders = {},\r\n\t\t\trequestHeadersNames = {},\r\n\r\n\t\t\t// The jqXHR state\r\n\t\t\tstate = 0,\r\n\r\n\t\t\t// Default abort message\r\n\t\t\tstrAbort = \"canceled\",\r\n\r\n\t\t\t// Fake xhr\r\n\t\t\tjqXHR = {\r\n\t\t\t\treadyState: 0,\r\n\r\n\t\t\t\t// Builds headers hashtable if needed\r\n\t\t\t\tgetResponseHeader: function( key ) {\r\n\t\t\t\t\tvar match;\r\n\t\t\t\t\tif ( state === 2 ) {\r\n\t\t\t\t\t\tif ( !responseHeaders ) {\r\n\t\t\t\t\t\t\tresponseHeaders = {};\r\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\r\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn match == null ? null : match;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Raw string\r\n\t\t\t\tgetAllResponseHeaders: function() {\r\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Caches the header\r\n\t\t\t\tsetRequestHeader: function( name, value ) {\r\n\t\t\t\t\tvar lname = name.toLowerCase();\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\r\n\t\t\t\t\t\trequestHeaders[ name ] = value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Overrides response content-type header\r\n\t\t\t\toverrideMimeType: function( type ) {\r\n\t\t\t\t\tif ( !state ) {\r\n\t\t\t\t\t\ts.mimeType = type;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Status-dependent callbacks\r\n\t\t\t\tstatusCode: function( map ) {\r\n\t\t\t\t\tvar code;\r\n\t\t\t\t\tif ( map ) {\r\n\t\t\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\t\t\tfor ( code in map ) {\r\n\r\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\r\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\r\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Cancel the request\r\n\t\t\t\tabort: function( statusText ) {\r\n\t\t\t\t\tvar finalText = statusText || strAbort;\r\n\t\t\t\t\tif ( transport ) {\r\n\t\t\t\t\t\ttransport.abort( finalText );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdone( 0, finalText );\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t// Attach deferreds\r\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\r\n\t\tjqXHR.success = jqXHR.done;\r\n\t\tjqXHR.error = jqXHR.fail;\r\n\r\n\t\t// Remove hash character (#7531: and string promotion)\r\n\t\t// Add protocol if not provided (prefilters might expect it)\r\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\r\n\t\t// We also use the url parameter if available\r\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" ).replace( rhash, \"\" )\r\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\r\n\r\n\t\t// Alias method option to type as per ticket #12004\r\n\t\ts.type = options.method || options.type || s.method || s.type;\r\n\r\n\t\t// Extract dataTypes list\r\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\r\n\r\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\r\n\t\tif ( s.crossDomain == null ) {\r\n\t\t\turlAnchor = document.createElement( \"a\" );\r\n\r\n\t\t\t// Support: IE8-11+\r\n\t\t\t// IE throws exception if url is malformed, e.g. http://example.com:80x/\r\n\t\t\ttry {\r\n\t\t\t\turlAnchor.href = s.url;\r\n\r\n\t\t\t\t// Support: IE8-11+\r\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\r\n\t\t\t\turlAnchor.href = urlAnchor.href;\r\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\r\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\r\n\t\t\t\t// it can be rejected by the transport if it is invalid\r\n\t\t\t\ts.crossDomain = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Convert data if not already a string\r\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\r\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\r\n\t\t}\r\n\r\n\t\t// Apply prefilters\r\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\r\n\r\n\t\t// If request was aborted inside a prefilter, stop there\r\n\t\tif ( state === 2 ) {\r\n\t\t\treturn jqXHR;\r\n\t\t}\r\n\r\n\t\t// We can fire global events as of now if asked to\r\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\r\n\t\tfireGlobals = jQuery.event && s.global;\r\n\r\n\t\t// Watch for a new set of requests\r\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\r\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\r\n\t\t}\r\n\r\n\t\t// Uppercase the type\r\n\t\ts.type = s.type.toUpperCase();\r\n\r\n\t\t// Determine if request has content\r\n\t\ts.hasContent = !rnoContent.test( s.type );\r\n\r\n\t\t// Save the URL in case we're toying with the If-Modified-Since\r\n\t\t// and/or If-None-Match header later on\r\n\t\tcacheURL = s.url;\r\n\r\n\t\t// More options handling for requests with no content\r\n\t\tif ( !s.hasContent ) {\r\n\r\n\t\t\t// If data is available, append data to url\r\n\t\t\tif ( s.data ) {\r\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\r\n\r\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\r\n\t\t\t\tdelete s.data;\r\n\t\t\t}\r\n\r\n\t\t\t// Add anti-cache in url if needed\r\n\t\t\tif ( s.cache === false ) {\r\n\t\t\t\ts.url = rts.test( cacheURL ) ?\r\n\r\n\t\t\t\t\t// If there is already a '_' parameter, set its value\r\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\r\n\r\n\t\t\t\t\t// Otherwise add one to the end\r\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\tif ( s.ifModified ) {\r\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\r\n\t\t\t}\r\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\r\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Set the correct header, if data is being sent\r\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\r\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\r\n\t\t}\r\n\r\n\t\t// Set the Accepts header for the server, depending on the dataType\r\n\t\tjqXHR.setRequestHeader(\r\n\t\t\t\"Accept\",\r\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\r\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\r\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\r\n\t\t\t\ts.accepts[ \"*\" ]\r\n\t\t);\r\n\r\n\t\t// Check for headers option\r\n\t\tfor ( i in s.headers ) {\r\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\r\n\t\t}\r\n\r\n\t\t// Allow custom headers/mimetypes and early abort\r\n\t\tif ( s.beforeSend &&\r\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\r\n\r\n\t\t\t// Abort if not done already and return\r\n\t\t\treturn jqXHR.abort();\r\n\t\t}\r\n\r\n\t\t// Aborting is no longer a cancellation\r\n\t\tstrAbort = \"abort\";\r\n\r\n\t\t// Install callbacks on deferreds\r\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\r\n\t\t\tjqXHR[ i ]( s[ i ] );\r\n\t\t}\r\n\r\n\t\t// Get transport\r\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\r\n\r\n\t\t// If no transport, we auto-abort\r\n\t\tif ( !transport ) {\r\n\t\t\tdone( -1, \"No Transport\" );\r\n\t\t} else {\r\n\t\t\tjqXHR.readyState = 1;\r\n\r\n\t\t\t// Send global event\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\r\n\t\t\t}\r\n\r\n\t\t\t// If request was aborted inside ajaxSend, stop there\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn jqXHR;\r\n\t\t\t}\r\n\r\n\t\t\t// Timeout\r\n\t\t\tif ( s.async && s.timeout > 0 ) {\r\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\r\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\r\n\t\t\t\t}, s.timeout );\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tstate = 1;\r\n\t\t\t\ttransport.send( requestHeaders, done );\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t// Propagate exception as error if not done\r\n\t\t\t\tif ( state < 2 ) {\r\n\t\t\t\t\tdone( -1, e );\r\n\r\n\t\t\t\t// Simply rethrow otherwise\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Callback for when everything is done\r\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\r\n\t\t\tvar isSuccess, success, error, response, modified,\r\n\t\t\t\tstatusText = nativeStatusText;\r\n\r\n\t\t\t// Called once\r\n\t\t\tif ( state === 2 ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// State is \"done\" now\r\n\t\t\tstate = 2;\r\n\r\n\t\t\t// Clear timeout if it exists\r\n\t\t\tif ( timeoutTimer ) {\r\n\t\t\t\twindow.clearTimeout( timeoutTimer );\r\n\t\t\t}\r\n\r\n\t\t\t// Dereference transport for early garbage collection\r\n\t\t\t// (no matter how long the jqXHR object will be used)\r\n\t\t\ttransport = undefined;\r\n\r\n\t\t\t// Cache response headers\r\n\t\t\tresponseHeadersString = headers || \"\";\r\n\r\n\t\t\t// Set readyState\r\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\r\n\r\n\t\t\t// Determine if successful\r\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\r\n\r\n\t\t\t// Get response data\r\n\t\t\tif ( responses ) {\r\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\r\n\t\t\t}\r\n\r\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\r\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\r\n\r\n\t\t\t// If successful, handle type chaining\r\n\t\t\tif ( isSuccess ) {\r\n\r\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\r\n\t\t\t\tif ( s.ifModified ) {\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\r\n\t\t\t\t\tif ( modified ) {\r\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if no content\r\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\r\n\t\t\t\t\tstatusText = \"nocontent\";\r\n\r\n\t\t\t\t// if not modified\r\n\t\t\t\t} else if ( status === 304 ) {\r\n\t\t\t\t\tstatusText = \"notmodified\";\r\n\r\n\t\t\t\t// If we have data, let's convert it\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstatusText = response.state;\r\n\t\t\t\t\tsuccess = response.data;\r\n\t\t\t\t\terror = response.error;\r\n\t\t\t\t\tisSuccess = !error;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\r\n\t\t\t\terror = statusText;\r\n\t\t\t\tif ( status || !statusText ) {\r\n\t\t\t\t\tstatusText = \"error\";\r\n\t\t\t\t\tif ( status < 0 ) {\r\n\t\t\t\t\t\tstatus = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set data for the fake xhr object\r\n\t\t\tjqXHR.status = status;\r\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\r\n\r\n\t\t\t// Success/Error\r\n\t\t\tif ( isSuccess ) {\r\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\r\n\t\t\t} else {\r\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Status-dependent callbacks\r\n\t\t\tjqXHR.statusCode( statusCode );\r\n\t\t\tstatusCode = undefined;\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\r\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\r\n\t\t\t}\r\n\r\n\t\t\t// Complete\r\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\r\n\r\n\t\t\tif ( fireGlobals ) {\r\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\r\n\r\n\t\t\t\t// Handle the global AJAX counter\r\n\t\t\t\tif ( !( --jQuery.active ) ) {\r\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn jqXHR;\r\n\t},\r\n\r\n\tgetJSON: function( url, data, callback ) {\r\n\t\treturn jQuery.get( url, data, callback, \"json\" );\r\n\t},\r\n\r\n\tgetScript: function( url, callback ) {\r\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\r\n\t}\r\n} );\r\n\r\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\r\n\tjQuery[ method ] = function( url, data, callback, type ) {\r\n\r\n\t\t// Shift arguments if data argument was omitted\r\n\t\tif ( jQuery.isFunction( data ) ) {\r\n\t\t\ttype = type || callback;\r\n\t\t\tcallback = data;\r\n\t\t\tdata = undefined;\r\n\t\t}\r\n\r\n\t\t// The url can be an options object (which then must have .url)\r\n\t\treturn jQuery.ajax( jQuery.extend( {\r\n\t\t\turl: url,\r\n\t\t\ttype: method,\r\n\t\t\tdataType: type,\r\n\t\t\tdata: data,\r\n\t\t\tsuccess: callback\r\n\t\t}, jQuery.isPlainObject( url ) && url ) );\r\n\t};\r\n} );\r\n\r\n\r\njQuery._evalUrl = function( url ) {\r\n\treturn jQuery.ajax( {\r\n\t\turl: url,\r\n\r\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\r\n\t\ttype: \"GET\",\r\n\t\tdataType: \"script\",\r\n\t\tasync: false,\r\n\t\tglobal: false,\r\n\t\t\"throws\": true\r\n\t} );\r\n};\r\n\r\n\r\njQuery.fn.extend( {\r\n\twrapAll: function( html ) {\r\n\t\tvar wrap;\r\n\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapAll( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\tif ( this[ 0 ] ) {\r\n\r\n\t\t\t// The elements to wrap the target around\r\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\r\n\r\n\t\t\tif ( this[ 0 ].parentNode ) {\r\n\t\t\t\twrap.insertBefore( this[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\twrap.map( function() {\r\n\t\t\t\tvar elem = this;\r\n\r\n\t\t\t\twhile ( elem.firstElementChild ) {\r\n\t\t\t\t\telem = elem.firstElementChild;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn elem;\r\n\t\t\t} ).append( this );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twrapInner: function( html ) {\r\n\t\tif ( jQuery.isFunction( html ) ) {\r\n\t\t\treturn this.each( function( i ) {\r\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\r\n\t\t\t} );\r\n\t\t}\r\n\r\n\t\treturn this.each( function() {\r\n\t\t\tvar self = jQuery( this ),\r\n\t\t\t\tcontents = self.contents();\r\n\r\n\t\t\tif ( contents.length ) {\r\n\t\t\t\tcontents.wrapAll( html );\r\n\r\n\t\t\t} else {\r\n\t\t\t\tself.append( html );\r\n\t\t\t}\r\n\t\t} );\r\n\t},\r\n\r\n\twrap: function( html ) {\r\n\t\tvar isFunction = jQuery.isFunction( html );\r\n\r\n\t\treturn this.each( function( i ) {\r\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\r\n\t\t} );\r\n\t},\r\n\r\n\tunwrap: function() {\r\n\t\treturn this.parent().each( function() {\r\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\r\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\r\n\t\t\t}\r\n\t\t} ).end();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.expr.filters.hidden = function( elem ) {\r\n\treturn !jQuery.expr.filters.visible( elem );\r\n};\r\njQuery.expr.filters.visible = function( elem ) {\r\n\r\n\t// Support: Opera <= 12.12\r\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\r\n\t// Use OR instead of AND as the element is not visible if either is true\r\n\t// See tickets #10406 and #13132\r\n\treturn elem.offsetWidth > 0 || elem.offsetHeight > 0 || elem.getClientRects().length > 0;\r\n};\r\n\r\n\r\n\r\n\r\nvar r20 = /%20/g,\r\n\trbracket = /\\[\\]$/,\r\n\trCRLF = /\\r?\\n/g,\r\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\r\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\r\n\r\nfunction buildParams( prefix, obj, traditional, add ) {\r\n\tvar name;\r\n\r\n\tif ( jQuery.isArray( obj ) ) {\r\n\r\n\t\t// Serialize array item.\r\n\t\tjQuery.each( obj, function( i, v ) {\r\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\r\n\r\n\t\t\t\t// Treat each array item as a scalar.\r\n\t\t\t\tadd( prefix, v );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\r\n\t\t\t\tbuildParams(\r\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\r\n\t\t\t\t\tv,\r\n\t\t\t\t\ttraditional,\r\n\t\t\t\t\tadd\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\r\n\r\n\t\t// Serialize object item.\r\n\t\tfor ( name in obj ) {\r\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// Serialize scalar item.\r\n\t\tadd( prefix, obj );\r\n\t}\r\n}\r\n\r\n// Serialize an array of form elements or a set of\r\n// key/values into a query string\r\njQuery.param = function( a, traditional ) {\r\n\tvar prefix,\r\n\t\ts = [],\r\n\t\tadd = function( key, value ) {\r\n\r\n\t\t\t// If value is a function, invoke it and return its value\r\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\r\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\r\n\t\t};\r\n\r\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\r\n\tif ( traditional === undefined ) {\r\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\r\n\t}\r\n\r\n\t// If an array was passed in, assume that it is an array of form elements.\r\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\r\n\r\n\t\t// Serialize the form elements\r\n\t\tjQuery.each( a, function() {\r\n\t\t\tadd( this.name, this.value );\r\n\t\t} );\r\n\r\n\t} else {\r\n\r\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\r\n\t\t// did it), otherwise encode params recursively.\r\n\t\tfor ( prefix in a ) {\r\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the resulting serialization\r\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\r\n};\r\n\r\njQuery.fn.extend( {\r\n\tserialize: function() {\r\n\t\treturn jQuery.param( this.serializeArray() );\r\n\t},\r\n\tserializeArray: function() {\r\n\t\treturn this.map( function() {\r\n\r\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\r\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\r\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\r\n\t\t} )\r\n\t\t.filter( function() {\r\n\t\t\tvar type = this.type;\r\n\r\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\r\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\r\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\r\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\r\n\t\t} )\r\n\t\t.map( function( i, elem ) {\r\n\t\t\tvar val = jQuery( this ).val();\r\n\r\n\t\t\treturn val == null ?\r\n\t\t\t\tnull :\r\n\t\t\t\tjQuery.isArray( val ) ?\r\n\t\t\t\t\tjQuery.map( val, function( val ) {\r\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t\t\t\t} ) :\r\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\r\n\t\t} ).get();\r\n\t}\r\n} );\r\n\r\n\r\njQuery.ajaxSettings.xhr = function() {\r\n\ttry {\r\n\t\treturn new window.XMLHttpRequest();\r\n\t} catch ( e ) {}\r\n};\r\n\r\nvar xhrSuccessStatus = {\r\n\r\n\t\t// File protocol always yields status code 0, assume 200\r\n\t\t0: 200,\r\n\r\n\t\t// Support: IE9\r\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\r\n\t\t1223: 204\r\n\t},\r\n\txhrSupported = jQuery.ajaxSettings.xhr();\r\n\r\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\r\nsupport.ajax = xhrSupported = !!xhrSupported;\r\n\r\njQuery.ajaxTransport( function( options ) {\r\n\tvar callback, errorCallback;\r\n\r\n\t// Cross domain only allowed if supported through XMLHttpRequest\r\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\r\n\t\treturn {\r\n\t\t\tsend: function( headers, complete ) {\r\n\t\t\t\tvar i,\r\n\t\t\t\t\txhr = options.xhr();\r\n\r\n\t\t\t\txhr.open(\r\n\t\t\t\t\toptions.type,\r\n\t\t\t\t\toptions.url,\r\n\t\t\t\t\toptions.async,\r\n\t\t\t\t\toptions.username,\r\n\t\t\t\t\toptions.password\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Apply custom fields if provided\r\n\t\t\t\tif ( options.xhrFields ) {\r\n\t\t\t\t\tfor ( i in options.xhrFields ) {\r\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Override mime type if needed\r\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\r\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// X-Requested-With header\r\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\r\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\r\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\r\n\t\t\t\t// For same-domain requests, won't change header if already provided.\r\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\r\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set headers\r\n\t\t\t\tfor ( i in headers ) {\r\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callback\r\n\t\t\t\tcallback = function( type ) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\r\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\r\n\r\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\r\n\t\t\t\t\t\t\t\txhr.abort();\r\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\r\n\r\n\t\t\t\t\t\t\t\t// Support: IE9\r\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\r\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\r\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\r\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcomplete(\r\n\r\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\r\n\t\t\t\t\t\t\t\t\t\txhr.status,\r\n\t\t\t\t\t\t\t\t\t\txhr.statusText\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcomplete(\r\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\r\n\t\t\t\t\t\t\t\t\txhr.statusText,\r\n\r\n\t\t\t\t\t\t\t\t\t// Support: IE9 only\r\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\r\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\r\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\r\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\r\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\r\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\r\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Listen to events\r\n\t\t\t\txhr.onload = callback();\r\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\r\n\r\n\t\t\t\t// Support: IE9\r\n\t\t\t\t// Use onreadystatechange to replace onabort\r\n\t\t\t\t// to handle uncaught aborts\r\n\t\t\t\tif ( xhr.onabort !== undefined ) {\r\n\t\t\t\t\txhr.onabort = errorCallback;\r\n\t\t\t\t} else {\r\n\t\t\t\t\txhr.onreadystatechange = function() {\r\n\r\n\t\t\t\t\t\t// Check readyState before timeout as it changes\r\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\r\n\r\n\t\t\t\t\t\t\t// Allow onerror to be called first,\r\n\t\t\t\t\t\t\t// but that will not handle a native abort\r\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\r\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\r\n\t\t\t\t\t\t\twindow.setTimeout( function() {\r\n\t\t\t\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\t\t\t\terrorCallback();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create the abort callback\r\n\t\t\t\tcallback = callback( \"abort\" );\r\n\r\n\t\t\t\ttry {\r\n\r\n\t\t\t\t\t// Do send the request (this may raise an exception)\r\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\r\n\t\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\r\n\t\t\t\t\tif ( callback ) {\r\n\t\t\t\t\t\tthrow e;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Install script dataType\r\njQuery.ajaxSetup( {\r\n\taccepts: {\r\n\t\tscript: \"text/javascript, application/javascript, \" +\r\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\r\n\t},\r\n\tcontents: {\r\n\t\tscript: /\\b(?:java|ecma)script\\b/\r\n\t},\r\n\tconverters: {\r\n\t\t\"text script\": function( text ) {\r\n\t\t\tjQuery.globalEval( text );\r\n\t\t\treturn text;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n// Handle cache's special case and crossDomain\r\njQuery.ajaxPrefilter( \"script\", function( s ) {\r\n\tif ( s.cache === undefined ) {\r\n\t\ts.cache = false;\r\n\t}\r\n\tif ( s.crossDomain ) {\r\n\t\ts.type = \"GET\";\r\n\t}\r\n} );\r\n\r\n// Bind script tag hack transport\r\njQuery.ajaxTransport( \"script\", function( s ) {\r\n\r\n\t// This transport only deals with cross domain requests\r\n\tif ( s.crossDomain ) {\r\n\t\tvar script, callback;\r\n\t\treturn {\r\n\t\t\tsend: function( _, complete ) {\r\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\r\n\t\t\t\t\tcharset: s.scriptCharset,\r\n\t\t\t\t\tsrc: s.url\r\n\t\t\t\t} ).on(\r\n\t\t\t\t\t\"load error\",\r\n\t\t\t\t\tcallback = function( evt ) {\r\n\t\t\t\t\t\tscript.remove();\r\n\t\t\t\t\t\tcallback = null;\r\n\t\t\t\t\t\tif ( evt ) {\r\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\r\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\r\n\t\t\t},\r\n\t\t\tabort: function() {\r\n\t\t\t\tif ( callback ) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\nvar oldCallbacks = [],\r\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\r\n\r\n// Default jsonp settings\r\njQuery.ajaxSetup( {\r\n\tjsonp: \"callback\",\r\n\tjsonpCallback: function() {\r\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\r\n\t\tthis[ callback ] = true;\r\n\t\treturn callback;\r\n\t}\r\n} );\r\n\r\n// Detect, normalize options and install callbacks for jsonp requests\r\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\r\n\r\n\tvar callbackName, overwritten, responseContainer,\r\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\r\n\t\t\t\"url\" :\r\n\t\t\ttypeof s.data === \"string\" &&\r\n\t\t\t\t( s.contentType || \"\" )\r\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\r\n\t\t\t\trjsonp.test( s.data ) && \"data\"\r\n\t\t);\r\n\r\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\r\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\r\n\r\n\t\t// Get callback name, remembering preexisting value associated with it\r\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\r\n\t\t\ts.jsonpCallback() :\r\n\t\t\ts.jsonpCallback;\r\n\r\n\t\t// Insert callback into url or form data\r\n\t\tif ( jsonProp ) {\r\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\r\n\t\t} else if ( s.jsonp !== false ) {\r\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\r\n\t\t}\r\n\r\n\t\t// Use data converter to retrieve json after script execution\r\n\t\ts.converters[ \"script json\" ] = function() {\r\n\t\t\tif ( !responseContainer ) {\r\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\r\n\t\t\t}\r\n\t\t\treturn responseContainer[ 0 ];\r\n\t\t};\r\n\r\n\t\t// Force json dataType\r\n\t\ts.dataTypes[ 0 ] = \"json\";\r\n\r\n\t\t// Install callback\r\n\t\toverwritten = window[ callbackName ];\r\n\t\twindow[ callbackName ] = function() {\r\n\t\t\tresponseContainer = arguments;\r\n\t\t};\r\n\r\n\t\t// Clean-up function (fires after converters)\r\n\t\tjqXHR.always( function() {\r\n\r\n\t\t\t// If previous value didn't exist - remove it\r\n\t\t\tif ( overwritten === undefined ) {\r\n\t\t\t\tjQuery( window ).removeProp( callbackName );\r\n\r\n\t\t\t// Otherwise restore preexisting value\r\n\t\t\t} else {\r\n\t\t\t\twindow[ callbackName ] = overwritten;\r\n\t\t\t}\r\n\r\n\t\t\t// Save back as free\r\n\t\t\tif ( s[ callbackName ] ) {\r\n\r\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\r\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\r\n\r\n\t\t\t\t// Save the callback name for future use\r\n\t\t\t\toldCallbacks.push( callbackName );\r\n\t\t\t}\r\n\r\n\t\t\t// Call if it was a function and we have a response\r\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\r\n\t\t\t\toverwritten( responseContainer[ 0 ] );\r\n\t\t\t}\r\n\r\n\t\t\tresponseContainer = overwritten = undefined;\r\n\t\t} );\r\n\r\n\t\t// Delegate to script\r\n\t\treturn \"script\";\r\n\t}\r\n} );\r\n\r\n\r\n\r\n\r\n// Support: Safari 8+\r\n// In Safari 8 documents created via document.implementation.createHTMLDocument\r\n// collapse sibling forms: the second one becomes a child of the first one.\r\n// Because of that, this security measure has to be disabled in Safari 8.\r\n// https://bugs.webkit.org/show_bug.cgi?id=137337\r\nsupport.createHTMLDocument = ( function() {\r\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\r\n\tbody.innerHTML = \"<form></form><form></form>\";\r\n\treturn body.childNodes.length === 2;\r\n} )();\r\n\r\n\r\n// Argument \"data\" should be string of html\r\n// context (optional): If specified, the fragment will be created in this context,\r\n// defaults to document\r\n// keepScripts (optional): If true, will include scripts passed in the html string\r\njQuery.parseHTML = function( data, context, keepScripts ) {\r\n\tif ( !data || typeof data !== \"string\" ) {\r\n\t\treturn null;\r\n\t}\r\n\tif ( typeof context === \"boolean\" ) {\r\n\t\tkeepScripts = context;\r\n\t\tcontext = false;\r\n\t}\r\n\r\n\t// Stop scripts or inline event handlers from being executed immediately\r\n\t// by using document.implementation\r\n\tcontext = context || ( support.createHTMLDocument ?\r\n\t\tdocument.implementation.createHTMLDocument( \"\" ) :\r\n\t\tdocument );\r\n\r\n\tvar parsed = rsingleTag.exec( data ),\r\n\t\tscripts = !keepScripts && [];\r\n\r\n\t// Single tag\r\n\tif ( parsed ) {\r\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\r\n\t}\r\n\r\n\tparsed = buildFragment( [ data ], context, scripts );\r\n\r\n\tif ( scripts && scripts.length ) {\r\n\t\tjQuery( scripts ).remove();\r\n\t}\r\n\r\n\treturn jQuery.merge( [], parsed.childNodes );\r\n};\r\n\r\n\r\n// Keep a copy of the old load method\r\nvar _load = jQuery.fn.load;\r\n\r\n/**\r\n * Load a url into a page\r\n */\r\njQuery.fn.load = function( url, params, callback ) {\r\n\tif ( typeof url !== \"string\" && _load ) {\r\n\t\treturn _load.apply( this, arguments );\r\n\t}\r\n\r\n\tvar selector, type, response,\r\n\t\tself = this,\r\n\t\toff = url.indexOf( \" \" );\r\n\r\n\tif ( off > -1 ) {\r\n\t\tselector = jQuery.trim( url.slice( off ) );\r\n\t\turl = url.slice( 0, off );\r\n\t}\r\n\r\n\t// If it's a function\r\n\tif ( jQuery.isFunction( params ) ) {\r\n\r\n\t\t// We assume that it's the callback\r\n\t\tcallback = params;\r\n\t\tparams = undefined;\r\n\r\n\t// Otherwise, build a param string\r\n\t} else if ( params && typeof params === \"object\" ) {\r\n\t\ttype = \"POST\";\r\n\t}\r\n\r\n\t// If we have elements to modify, make the request\r\n\tif ( self.length > 0 ) {\r\n\t\tjQuery.ajax( {\r\n\t\t\turl: url,\r\n\r\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\r\n\t\t\t// Make value of this field explicit since\r\n\t\t\t// user can override it through ajaxSetup method\r\n\t\t\ttype: type || \"GET\",\r\n\t\t\tdataType: \"html\",\r\n\t\t\tdata: params\r\n\t\t} ).done( function( responseText ) {\r\n\r\n\t\t\t// Save response for use in complete callback\r\n\t\t\tresponse = arguments;\r\n\r\n\t\t\tself.html( selector ?\r\n\r\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\r\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\r\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\r\n\r\n\t\t\t\t// Otherwise use the full result\r\n\t\t\t\tresponseText );\r\n\r\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\r\n\t\t// but they are ignored because response was set above.\r\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\r\n\t\t} ).always( callback && function( jqXHR, status ) {\r\n\t\t\tself.each( function() {\r\n\t\t\t\tcallback.apply( self, response || [ jqXHR.responseText, status, jqXHR ] );\r\n\t\t\t} );\r\n\t\t} );\r\n\t}\r\n\r\n\treturn this;\r\n};\r\n\r\n\r\n\r\n\r\n// Attach a bunch of functions for handling common AJAX events\r\njQuery.each( [\r\n\t\"ajaxStart\",\r\n\t\"ajaxStop\",\r\n\t\"ajaxComplete\",\r\n\t\"ajaxError\",\r\n\t\"ajaxSuccess\",\r\n\t\"ajaxSend\"\r\n], function( i, type ) {\r\n\tjQuery.fn[ type ] = function( fn ) {\r\n\t\treturn this.on( type, fn );\r\n\t};\r\n} );\r\n\r\n\r\n\r\n\r\njQuery.expr.filters.animated = function( elem ) {\r\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\r\n\t\treturn elem === fn.elem;\r\n\t} ).length;\r\n};\r\n\r\n\r\n\r\n\r\n/**\r\n * Gets a window from an element\r\n */\r\nfunction getWindow( elem ) {\r\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\r\n}\r\n\r\njQuery.offset = {\r\n\tsetOffset: function( elem, options, i ) {\r\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\r\n\t\t\tposition = jQuery.css( elem, \"position\" ),\r\n\t\t\tcurElem = jQuery( elem ),\r\n\t\t\tprops = {};\r\n\r\n\t\t// Set position first, in-case top/left are set even on static elem\r\n\t\tif ( position === \"static\" ) {\r\n\t\t\telem.style.position = \"relative\";\r\n\t\t}\r\n\r\n\t\tcurOffset = curElem.offset();\r\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\r\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\r\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\r\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\r\n\r\n\t\t// Need to be able to calculate position if either\r\n\t\t// top or left is auto and position is either absolute or fixed\r\n\t\tif ( calculatePosition ) {\r\n\t\t\tcurPosition = curElem.position();\r\n\t\t\tcurTop = curPosition.top;\r\n\t\t\tcurLeft = curPosition.left;\r\n\r\n\t\t} else {\r\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\r\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\r\n\t\t}\r\n\r\n\t\tif ( jQuery.isFunction( options ) ) {\r\n\r\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\r\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\r\n\t\t}\r\n\r\n\t\tif ( options.top != null ) {\r\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\r\n\t\t}\r\n\t\tif ( options.left != null ) {\r\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\r\n\t\t}\r\n\r\n\t\tif ( \"using\" in options ) {\r\n\t\t\toptions.using.call( elem, props );\r\n\r\n\t\t} else {\r\n\t\t\tcurElem.css( props );\r\n\t\t}\r\n\t}\r\n};\r\n\r\njQuery.fn.extend( {\r\n\toffset: function( options ) {\r\n\t\tif ( arguments.length ) {\r\n\t\t\treturn options === undefined ?\r\n\t\t\t\tthis :\r\n\t\t\t\tthis.each( function( i ) {\r\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\r\n\t\t\t\t} );\r\n\t\t}\r\n\r\n\t\tvar docElem, win,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tbox = { top: 0, left: 0 },\r\n\t\t\tdoc = elem && elem.ownerDocument;\r\n\r\n\t\tif ( !doc ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdocElem = doc.documentElement;\r\n\r\n\t\t// Make sure it's not a disconnected DOM node\r\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\r\n\t\t\treturn box;\r\n\t\t}\r\n\r\n\t\tbox = elem.getBoundingClientRect();\r\n\t\twin = getWindow( doc );\r\n\t\treturn {\r\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\r\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\r\n\t\t};\r\n\t},\r\n\r\n\tposition: function() {\r\n\t\tif ( !this[ 0 ] ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar offsetParent, offset,\r\n\t\t\telem = this[ 0 ],\r\n\t\t\tparentOffset = { top: 0, left: 0 };\r\n\r\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\r\n\t\t// because it is its only offset parent\r\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\r\n\r\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\r\n\t\t\toffset = elem.getBoundingClientRect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Get *real* offsetParent\r\n\t\t\toffsetParent = this.offsetParent();\r\n\r\n\t\t\t// Get correct offsets\r\n\t\t\toffset = this.offset();\r\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\r\n\t\t\t\tparentOffset = offsetParent.offset();\r\n\t\t\t}\r\n\r\n\t\t\t// Add offsetParent borders\r\n\t\t\t// Subtract offsetParent scroll positions\r\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ) -\r\n\t\t\t\toffsetParent.scrollTop();\r\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true ) -\r\n\t\t\t\toffsetParent.scrollLeft();\r\n\t\t}\r\n\r\n\t\t// Subtract parent offsets and element margins\r\n\t\treturn {\r\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\r\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\r\n\t\t};\r\n\t},\r\n\r\n\t// This method will return documentElement in the following cases:\r\n\t// 1) For the element inside the iframe without offsetParent, this method will return\r\n\t//    documentElement of the parent window\r\n\t// 2) For the hidden or detached element\r\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\r\n\t//\r\n\t// but those exceptions were never presented as a real life use-cases\r\n\t// and might be considered as more preferable results.\r\n\t//\r\n\t// This logic, however, is not guaranteed and can change at any point in the future\r\n\toffsetParent: function() {\r\n\t\treturn this.map( function() {\r\n\t\t\tvar offsetParent = this.offsetParent;\r\n\r\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\r\n\t\t\t\toffsetParent = offsetParent.offsetParent;\r\n\t\t\t}\r\n\r\n\t\t\treturn offsetParent || documentElement;\r\n\t\t} );\r\n\t}\r\n} );\r\n\r\n// Create scrollLeft and scrollTop methods\r\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\r\n\tvar top = \"pageYOffset\" === prop;\r\n\r\n\tjQuery.fn[ method ] = function( val ) {\r\n\t\treturn access( this, function( elem, method, val ) {\r\n\t\t\tvar win = getWindow( elem );\r\n\r\n\t\t\tif ( val === undefined ) {\r\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( win ) {\r\n\t\t\t\twin.scrollTo(\r\n\t\t\t\t\t!top ? val : win.pageXOffset,\r\n\t\t\t\t\ttop ? val : win.pageYOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\t\t\t\telem[ method ] = val;\r\n\t\t\t}\r\n\t\t}, method, val, arguments.length );\r\n\t};\r\n} );\r\n\r\n// Support: Safari<7-8+, Chrome<37-44+\r\n// Add the top/left cssHooks using jQuery.fn.position\r\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\r\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\r\n// getComputedStyle returns percent when specified for top/left/bottom/right;\r\n// rather than make the css module depend on the offset module, just check for it here\r\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\r\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\r\n\t\tfunction( elem, computed ) {\r\n\t\t\tif ( computed ) {\r\n\t\t\t\tcomputed = curCSS( elem, prop );\r\n\r\n\t\t\t\t// If curCSS returns percentage, fallback to offset\r\n\t\t\t\treturn rnumnonpx.test( computed ) ?\r\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\r\n\t\t\t\t\tcomputed;\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n} );\r\n\r\n\r\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\r\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\r\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\r\n\t\tfunction( defaultExtra, funcName ) {\r\n\r\n\t\t// Margin is only for outerHeight, outerWidth\r\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\r\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\r\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\r\n\r\n\t\t\treturn access( this, function( elem, type, value ) {\r\n\t\t\t\tvar doc;\r\n\r\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\r\n\r\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\r\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\r\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\r\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Get document width or height\r\n\t\t\t\tif ( elem.nodeType === 9 ) {\r\n\t\t\t\t\tdoc = elem.documentElement;\r\n\r\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\r\n\t\t\t\t\t// whichever is greatest\r\n\t\t\t\t\treturn Math.max(\r\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\r\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\r\n\t\t\t\t\t\tdoc[ \"client\" + name ]\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn value === undefined ?\r\n\r\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\r\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\r\n\r\n\t\t\t\t\t// Set width or height on the element\r\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\r\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\r\n\t\t};\r\n\t} );\r\n} );\r\n\r\n\r\njQuery.fn.extend( {\r\n\r\n\tbind: function( types, data, fn ) {\r\n\t\treturn this.on( types, null, data, fn );\r\n\t},\r\n\tunbind: function( types, fn ) {\r\n\t\treturn this.off( types, null, fn );\r\n\t},\r\n\r\n\tdelegate: function( selector, types, data, fn ) {\r\n\t\treturn this.on( types, selector, data, fn );\r\n\t},\r\n\tundelegate: function( selector, types, fn ) {\r\n\r\n\t\t// ( namespace ) or ( selector, types [, fn] )\r\n\t\treturn arguments.length === 1 ?\r\n\t\t\tthis.off( selector, \"**\" ) :\r\n\t\t\tthis.off( types, selector || \"**\", fn );\r\n\t},\r\n\tsize: function() {\r\n\t\treturn this.length;\r\n\t}\r\n} );\r\n\r\njQuery.fn.andSelf = jQuery.fn.addBack;\r\n\r\n\r\n\r\n\r\n// Register as a named AMD module, since jQuery can be concatenated with other\r\n// files that may use define, but not via a proper concatenation script that\r\n// understands anonymous AMD modules. A named AMD is safest and most robust\r\n// way to register. Lowercase jquery is used because AMD module names are\r\n// derived from file names, and jQuery is normally delivered in a lowercase\r\n// file name. Do this after creating the global so that if an AMD module wants\r\n// to call noConflict to hide this version of jQuery, it will work.\r\n\r\n// Note that for maximum portability, libraries that are not jQuery should\r\n// declare themselves as anonymous modules, and avoid setting a global if an\r\n// AMD loader is present. jQuery is a special case. For more information, see\r\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\r\n\r\nif ( typeof define === \"function\" && define.amd ) {\r\n\tdefine( \"jquery\", [], function() {\r\n\t\treturn jQuery;\r\n\t} );\r\n}\r\n\r\n\r\n\r\nvar\r\n\r\n\t// Map over jQuery in case of overwrite\r\n\t_jQuery = window.jQuery,\r\n\r\n\t// Map over the $ in case of overwrite\r\n\t_$ = window.$;\r\n\r\njQuery.noConflict = function( deep ) {\r\n\tif ( window.$ === jQuery ) {\r\n\t\twindow.$ = _$;\r\n\t}\r\n\r\n\tif ( deep && window.jQuery === jQuery ) {\r\n\t\twindow.jQuery = _jQuery;\r\n\t}\r\n\r\n\treturn jQuery;\r\n};\r\n\r\n// Expose jQuery and $ identifiers, even in AMD\r\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\r\n// and CommonJS for browser emulators (#13566)\r\nif ( !noGlobal ) {\r\n\twindow.jQuery = window.$ = jQuery;\r\n}\r\n\r\nreturn jQuery;\r\n}));\r\n","﻿import $ from 'jquery';\r\nwindow.jQuery = $;\r\nwindow.$ = $;","/*!\n * jQuery Mousewheel 3.1.13\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n */\n\n(function (factory) {\n    if ( typeof define === 'function' && define.amd ) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify\n        module.exports = factory;\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n\n    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],\n        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?\n                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\n        slice  = Array.prototype.slice,\n        nullLowestDeltaTimeout, lowestDelta;\n\n    if ( $.event.fixHooks ) {\n        for ( var i = toFix.length; i; ) {\n            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;\n        }\n    }\n\n    var special = $.event.special.mousewheel = {\n        version: '3.1.12',\n\n        setup: function() {\n            if ( this.addEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.addEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n            // Store the line height and page height for this particular element\n            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));\n            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));\n        },\n\n        teardown: function() {\n            if ( this.removeEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.removeEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n            // Clean up the data we added to the element\n            $.removeData(this, 'mousewheel-line-height');\n            $.removeData(this, 'mousewheel-page-height');\n        },\n\n        getLineHeight: function(elem) {\n            var $elem = $(elem),\n                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();\n            if (!$parent.length) {\n                $parent = $('body');\n            }\n            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;\n        },\n\n        getPageHeight: function(elem) {\n            return $(elem).height();\n        },\n\n        settings: {\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\n            normalizeOffset: true  // calls getBoundingClientRect for each event\n        }\n    };\n\n    $.fn.extend({\n        mousewheel: function(fn) {\n            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');\n        },\n\n        unmousewheel: function(fn) {\n            return this.unbind('mousewheel', fn);\n        }\n    });\n\n\n    function handler(event) {\n        var orgEvent   = event || window.event,\n            args       = slice.call(arguments, 1),\n            delta      = 0,\n            deltaX     = 0,\n            deltaY     = 0,\n            absDelta   = 0,\n            offsetX    = 0,\n            offsetY    = 0;\n        event = $.event.fix(orgEvent);\n        event.type = 'mousewheel';\n\n        // Old school scrollwheel delta\n        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }\n        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }\n        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }\n        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }\n\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n            deltaX = deltaY * -1;\n            deltaY = 0;\n        }\n\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n        delta = deltaY === 0 ? deltaX : deltaY;\n\n        // New school wheel delta (wheel event)\n        if ( 'deltaY' in orgEvent ) {\n            deltaY = orgEvent.deltaY * -1;\n            delta  = deltaY;\n        }\n        if ( 'deltaX' in orgEvent ) {\n            deltaX = orgEvent.deltaX;\n            if ( deltaY === 0 ) { delta  = deltaX * -1; }\n        }\n\n        // No change actually happened, no reason to go any further\n        if ( deltaY === 0 && deltaX === 0 ) { return; }\n\n        // Need to convert lines and pages to pixels if we aren't already in pixels\n        // There are three delta modes:\n        //   * deltaMode 0 is by pixels, nothing to do\n        //   * deltaMode 1 is by lines\n        //   * deltaMode 2 is by pages\n        if ( orgEvent.deltaMode === 1 ) {\n            var lineHeight = $.data(this, 'mousewheel-line-height');\n            delta  *= lineHeight;\n            deltaY *= lineHeight;\n            deltaX *= lineHeight;\n        } else if ( orgEvent.deltaMode === 2 ) {\n            var pageHeight = $.data(this, 'mousewheel-page-height');\n            delta  *= pageHeight;\n            deltaY *= pageHeight;\n            deltaX *= pageHeight;\n        }\n\n        // Store lowest absolute delta to normalize the delta values\n        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\n\n        if ( !lowestDelta || absDelta < lowestDelta ) {\n            lowestDelta = absDelta;\n\n            // Adjust older deltas if necessary\n            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n                lowestDelta /= 40;\n            }\n        }\n\n        // Adjust older deltas if necessary\n        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n            // Divide all the things by 40!\n            delta  /= 40;\n            deltaX /= 40;\n            deltaY /= 40;\n        }\n\n        // Get a whole, normalized value for the deltas\n        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\n        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\n        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\n\n        // Normalise offsetX and offsetY properties\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\n            var boundingRect = this.getBoundingClientRect();\n            offsetX = event.clientX - boundingRect.left;\n            offsetY = event.clientY - boundingRect.top;\n        }\n\n        // Add information to the event object\n        event.deltaX = deltaX;\n        event.deltaY = deltaY;\n        event.deltaFactor = lowestDelta;\n        event.offsetX = offsetX;\n        event.offsetY = offsetY;\n        // Go ahead and set deltaMode to 0 since we converted to pixels\n        // Although this is a little odd since we overwrite the deltaX/Y\n        // properties with normalized deltas.\n        event.deltaMode = 0;\n\n        // Add event and delta to the front of the arguments\n        args.unshift(event, delta, deltaX, deltaY);\n\n        // Clearout lowestDelta after sometime to better\n        // handle multiple device types that give different\n        // a different lowestDelta\n        // Ex: trackpad = 3 and mouse wheel = 120\n        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\n        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\n\n        return ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n\n    function nullLowestDelta() {\n        lowestDelta = null;\n    }\n\n    function shouldAdjustOldDeltas(orgEvent, absDelta) {\n        // If this is an older event and the delta is divisable by 120,\n        // then we are assuming that the browser is treating this as an\n        // older mouse wheel event and that we should divide the deltas\n        // by 40 to try and get a more usable deltaFactor.\n        // Side note, this actually impacts the reported scroll distance\n        // in older browsers and can cause scrolling to be slower than native.\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\n    }\n\n}));\n","/*\r\n== malihu jquery custom scrollbar plugin == \r\nVersion: 3.1.5 \r\nPlugin URI: http://manos.malihu.gr/jquery-custom-content-scroller \r\nAuthor: malihu\r\nAuthor URI: http://manos.malihu.gr\r\nLicense: MIT License (MIT)\r\n*/\r\n\r\n/*\r\nCopyright Manos Malihutsakis (email: manos@malihu.gr)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n*/\r\n\r\n/*\r\nThe code below is fairly long, fully commented and should be normally used in development. \r\nFor production, use either the minified jquery.mCustomScrollbar.min.js script or \r\nthe production-ready jquery.mCustomScrollbar.concat.min.js which contains the plugin \r\nand dependencies (minified). \r\n*/\r\n\r\n(function(factory){\r\n\tif(typeof define===\"function\" && define.amd){\r\n\t\tdefine([\"jquery\"],factory);\r\n\t}else if(typeof module!==\"undefined\" && module.exports){\r\n\t\tmodule.exports=factory;\r\n\t}else{\r\n\t\tfactory(jQuery,window,document);\r\n\t}\r\n}(function($){\r\n(function(init){\r\n\tvar _rjs=typeof define===\"function\" && define.amd, /* RequireJS */\r\n\t\t_njs=typeof module !== \"undefined\" && module.exports, /* NodeJS */\r\n\t\t_dlp=(\"https:\"==document.location.protocol) ? \"https:\" : \"http:\", /* location protocol */\r\n\t\t_url=\"cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js\";\r\n\tif(!_rjs){\r\n\t\tif(_njs){\r\n\t\t\trequire(\"jquery-mousewheel\")($);\r\n\t\t}else{\r\n\t\t\t/* load jquery-mousewheel plugin (via CDN) if it's not present or not loaded via RequireJS \r\n\t\t\t(works when mCustomScrollbar fn is called on window load) */\r\n\t\t\t$.event.special.mousewheel || $(\"head\").append(decodeURI(\"%3Cscript src=\"+_dlp+\"//\"+_url+\"%3E%3C/script%3E\"));\r\n\t\t}\r\n\t}\r\n\tinit();\r\n}(function(){\r\n\t\r\n\t/* \r\n\t----------------------------------------\r\n\tPLUGIN NAMESPACE, PREFIX, DEFAULT SELECTOR(S) \r\n\t----------------------------------------\r\n\t*/\r\n\t\r\n\tvar pluginNS=\"mCustomScrollbar\",\r\n\t\tpluginPfx=\"mCS\",\r\n\t\tdefaultSelector=\".mCustomScrollbar\",\r\n\t\r\n\t\r\n\t\t\r\n\t\r\n\t\r\n\t/* \r\n\t----------------------------------------\r\n\tDEFAULT OPTIONS \r\n\t----------------------------------------\r\n\t*/\r\n\t\r\n\t\tdefaults={\r\n\t\t\t/*\r\n\t\t\tset element/content width/height programmatically \r\n\t\t\tvalues: boolean, pixels, percentage \r\n\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t-------------------------------------\r\n\t\t\t\tsetWidth\t\t\t\t\tfalse\r\n\t\t\t\tsetHeight\t\t\t\t\tfalse\r\n\t\t\t*/\r\n\t\t\t/*\r\n\t\t\tset the initial css top property of content  \r\n\t\t\tvalues: string (e.g. \"-100px\", \"10%\" etc.)\r\n\t\t\t*/\r\n\t\t\tsetTop:0,\r\n\t\t\t/*\r\n\t\t\tset the initial css left property of content  \r\n\t\t\tvalues: string (e.g. \"-100px\", \"10%\" etc.)\r\n\t\t\t*/\r\n\t\t\tsetLeft:0,\r\n\t\t\t/* \r\n\t\t\tscrollbar axis (vertical and/or horizontal scrollbars) \r\n\t\t\tvalues (string): \"y\", \"x\", \"yx\"\r\n\t\t\t*/\r\n\t\t\taxis:\"y\",\r\n\t\t\t/*\r\n\t\t\tposition of scrollbar relative to content  \r\n\t\t\tvalues (string): \"inside\", \"outside\" (\"outside\" requires elements with position:relative)\r\n\t\t\t*/\r\n\t\t\tscrollbarPosition:\"inside\",\r\n\t\t\t/*\r\n\t\t\tscrolling inertia\r\n\t\t\tvalues: integer (milliseconds)\r\n\t\t\t*/\r\n\t\t\tscrollInertia:950,\r\n\t\t\t/* \r\n\t\t\tauto-adjust scrollbar dragger length\r\n\t\t\tvalues: boolean\r\n\t\t\t*/\r\n\t\t\tautoDraggerLength:true,\r\n\t\t\t/*\r\n\t\t\tauto-hide scrollbar when idle \r\n\t\t\tvalues: boolean\r\n\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t-------------------------------------\r\n\t\t\t\tautoHideScrollbar\t\t\tfalse\r\n\t\t\t*/\r\n\t\t\t/*\r\n\t\t\tauto-expands scrollbar on mouse-over and dragging\r\n\t\t\tvalues: boolean\r\n\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t-------------------------------------\r\n\t\t\t\tautoExpandScrollbar\t\t\tfalse\r\n\t\t\t*/\r\n\t\t\t/*\r\n\t\t\talways show scrollbar, even when there's nothing to scroll \r\n\t\t\tvalues: integer (0=disable, 1=always show dragger rail and buttons, 2=always show dragger rail, dragger and buttons), boolean\r\n\t\t\t*/\r\n\t\t\talwaysShowScrollbar:0,\r\n\t\t\t/*\r\n\t\t\tscrolling always snaps to a multiple of this number in pixels\r\n\t\t\tvalues: integer, array ([y,x])\r\n\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t-------------------------------------\r\n\t\t\t\tsnapAmount\t\t\t\t\tnull\r\n\t\t\t*/\r\n\t\t\t/*\r\n\t\t\twhen snapping, snap with this number in pixels as an offset \r\n\t\t\tvalues: integer\r\n\t\t\t*/\r\n\t\t\tsnapOffset:0,\r\n\t\t\t/* \r\n\t\t\tmouse-wheel scrolling\r\n\t\t\t*/\r\n\t\t\tmouseWheel:{\r\n\t\t\t\t/* \r\n\t\t\t\tenable mouse-wheel scrolling\r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t*/\r\n\t\t\t\tenable:true,\r\n\t\t\t\t/* \r\n\t\t\t\tscrolling amount in pixels\r\n\t\t\t\tvalues: \"auto\", integer \r\n\t\t\t\t*/\r\n\t\t\t\tscrollAmount:\"auto\",\r\n\t\t\t\t/* \r\n\t\t\t\tmouse-wheel scrolling axis \r\n\t\t\t\tthe default scrolling direction when both vertical and horizontal scrollbars are present \r\n\t\t\t\tvalues (string): \"y\", \"x\" \r\n\t\t\t\t*/\r\n\t\t\t\taxis:\"y\",\r\n\t\t\t\t/* \r\n\t\t\t\tprevent the default behaviour which automatically scrolls the parent element(s) when end of scrolling is reached \r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tpreventDefault\t\t\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tthe reported mouse-wheel delta value. The number of lines (translated to pixels) one wheel notch scrolls.  \r\n\t\t\t\tvalues: \"auto\", integer \r\n\t\t\t\t\"auto\" uses the default OS/browser value \r\n\t\t\t\t*/\r\n\t\t\t\tdeltaFactor:\"auto\",\r\n\t\t\t\t/*\r\n\t\t\t\tnormalize mouse-wheel delta to -1 or 1 (disables mouse-wheel acceleration) \r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tnormalizeDelta\t\t\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tinvert mouse-wheel scrolling direction \r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tinvert\t\t\t\t\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tthe tags that disable mouse-wheel when cursor is over them\r\n\t\t\t\t*/\r\n\t\t\t\tdisableOver:[\"select\",\"option\",\"keygen\",\"datalist\",\"textarea\"]\r\n\t\t\t},\r\n\t\t\t/* \r\n\t\t\tscrollbar buttons\r\n\t\t\t*/\r\n\t\t\tscrollButtons:{ \r\n\t\t\t\t/*\r\n\t\t\t\tenable scrollbar buttons\r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tenable\t\t\t\t\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tscrollbar buttons scrolling type \r\n\t\t\t\tvalues (string): \"stepless\", \"stepped\"\r\n\t\t\t\t*/\r\n\t\t\t\tscrollType:\"stepless\",\r\n\t\t\t\t/*\r\n\t\t\t\tscrolling amount in pixels\r\n\t\t\t\tvalues: \"auto\", integer \r\n\t\t\t\t*/\r\n\t\t\t\tscrollAmount:\"auto\"\r\n\t\t\t\t/*\r\n\t\t\t\ttabindex of the scrollbar buttons\r\n\t\t\t\tvalues: false, integer\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\ttabindex\t\t\t\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\t/* \r\n\t\t\tkeyboard scrolling\r\n\t\t\t*/\r\n\t\t\tkeyboard:{ \r\n\t\t\t\t/*\r\n\t\t\t\tenable scrolling via keyboard\r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t*/\r\n\t\t\t\tenable:true,\r\n\t\t\t\t/*\r\n\t\t\t\tkeyboard scrolling type \r\n\t\t\t\tvalues (string): \"stepless\", \"stepped\"\r\n\t\t\t\t*/\r\n\t\t\t\tscrollType:\"stepless\",\r\n\t\t\t\t/*\r\n\t\t\t\tscrolling amount in pixels\r\n\t\t\t\tvalues: \"auto\", integer \r\n\t\t\t\t*/\r\n\t\t\t\tscrollAmount:\"auto\"\r\n\t\t\t},\r\n\t\t\t/*\r\n\t\t\tenable content touch-swipe scrolling \r\n\t\t\tvalues: boolean, integer, string (number)\r\n\t\t\tinteger values define the axis-specific minimum amount required for scrolling momentum\r\n\t\t\t*/\r\n\t\t\tcontentTouchScroll:25,\r\n\t\t\t/*\r\n\t\t\tenable/disable document (default) touch-swipe scrolling \r\n\t\t\t*/\r\n\t\t\tdocumentTouchScroll:true,\r\n\t\t\t/*\r\n\t\t\tadvanced option parameters\r\n\t\t\t*/\r\n\t\t\tadvanced:{\r\n\t\t\t\t/*\r\n\t\t\t\tauto-expand content horizontally (for \"x\" or \"yx\" axis) \r\n\t\t\t\tvalues: boolean, integer (the value 2 forces the non scrollHeight/scrollWidth method, the value 3 forces the scrollHeight/scrollWidth method)\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tautoExpandHorizontalScroll\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tauto-scroll to elements with focus\r\n\t\t\t\t*/\r\n\t\t\t\tautoScrollOnFocus:\"input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']\",\r\n\t\t\t\t/*\r\n\t\t\t\tauto-update scrollbars on content, element or viewport resize \r\n\t\t\t\tshould be true for fluid layouts/elements, adding/removing content dynamically, hiding/showing elements, content with images etc. \r\n\t\t\t\tvalues: boolean\r\n\t\t\t\t*/\r\n\t\t\t\tupdateOnContentResize:true,\r\n\t\t\t\t/*\r\n\t\t\t\tauto-update scrollbars each time each image inside the element is fully loaded \r\n\t\t\t\tvalues: \"auto\", boolean\r\n\t\t\t\t*/\r\n\t\t\t\tupdateOnImageLoad:\"auto\",\r\n\t\t\t\t/*\r\n\t\t\t\tauto-update scrollbars based on the amount and size changes of specific selectors \r\n\t\t\t\tuseful when you need to update the scrollbar(s) automatically, each time a type of element is added, removed or changes its size \r\n\t\t\t\tvalues: boolean, string (e.g. \"ul li\" will auto-update scrollbars each time list-items inside the element are changed) \r\n\t\t\t\ta value of true (boolean) will auto-update scrollbars each time any element is changed\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tupdateOnSelectorChange\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\textra selectors that'll allow scrollbar dragging upon mousemove/up, pointermove/up, touchend etc. (e.g. \"selector-1, selector-2\")\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\textraDraggableSelectors\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\textra selectors that'll release scrollbar dragging upon mouseup, pointerup, touchend etc. (e.g. \"selector-1, selector-2\")\r\n\t\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\treleaseDraggableSelectors\tnull\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tauto-update timeout \r\n\t\t\t\tvalues: integer (milliseconds)\r\n\t\t\t\t*/\r\n\t\t\t\tautoUpdateTimeout:60\r\n\t\t\t},\r\n\t\t\t/* \r\n\t\t\tscrollbar theme \r\n\t\t\tvalues: string (see CSS/plugin URI for a list of ready-to-use themes)\r\n\t\t\t*/\r\n\t\t\ttheme:\"light\",\r\n\t\t\t/*\r\n\t\t\tuser defined callback functions\r\n\t\t\t*/\r\n\t\t\tcallbacks:{\r\n\t\t\t\t/*\r\n\t\t\t\tAvailable callbacks: \r\n\t\t\t\t\tcallback\t\t\t\t\tdefault\r\n\t\t\t\t\t-------------------------------------\r\n\t\t\t\t\tonCreate\t\t\t\t\tnull\r\n\t\t\t\t\tonInit\t\t\t\t\t\tnull\r\n\t\t\t\t\tonScrollStart\t\t\t\tnull\r\n\t\t\t\t\tonScroll\t\t\t\t\tnull\r\n\t\t\t\t\tonTotalScroll\t\t\t\tnull\r\n\t\t\t\t\tonTotalScrollBack\t\t\tnull\r\n\t\t\t\t\twhileScrolling\t\t\t\tnull\r\n\t\t\t\t\tonOverflowY\t\t\t\t\tnull\r\n\t\t\t\t\tonOverflowX\t\t\t\t\tnull\r\n\t\t\t\t\tonOverflowYNone\t\t\t\tnull\r\n\t\t\t\t\tonOverflowXNone\t\t\t\tnull\r\n\t\t\t\t\tonImageLoad\t\t\t\t\tnull\r\n\t\t\t\t\tonSelectorChange\t\t\tnull\r\n\t\t\t\t\tonBeforeUpdate\t\t\t\tnull\r\n\t\t\t\t\tonUpdate\t\t\t\t\tnull\r\n\t\t\t\t*/\r\n\t\t\t\tonTotalScrollOffset:0,\r\n\t\t\t\tonTotalScrollBackOffset:0,\r\n\t\t\t\talwaysTriggerOffsets:true\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\tadd scrollbar(s) on all elements matching the current selector, now and in the future \r\n\t\t\tvalues: boolean, string \r\n\t\t\tstring values: \"on\" (enable), \"once\" (disable after first invocation), \"off\" (disable)\r\n\t\t\tliveSelector values: string (selector)\r\n\t\t\t\toption\t\t\t\t\t\tdefault\r\n\t\t\t\t-------------------------------------\r\n\t\t\t\tlive\t\t\t\t\t\tfalse\r\n\t\t\t\tliveSelector\t\t\t\tnull\r\n\t\t\t*/\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/* \r\n\t----------------------------------------\r\n\tVARS, CONSTANTS \r\n\t----------------------------------------\r\n\t*/\r\n\t\r\n\t\ttotalInstances=0, /* plugin instances amount */\r\n\t\tliveTimers={}, /* live option timers */\r\n\t\toldIE=(window.attachEvent && !window.addEventListener) ? 1 : 0, /* detect IE < 9 */\r\n\t\ttouchActive=false,touchable, /* global touch vars (for touch and pointer events) */\r\n\t\t/* general plugin classes */\r\n\t\tclasses=[\r\n\t\t\t\"mCSB_dragger_onDrag\",\"mCSB_scrollTools_onDrag\",\"mCS_img_loaded\",\"mCS_disabled\",\"mCS_destroyed\",\"mCS_no_scrollbar\",\r\n\t\t\t\"mCS-autoHide\",\"mCS-dir-rtl\",\"mCS_no_scrollbar_y\",\"mCS_no_scrollbar_x\",\"mCS_y_hidden\",\"mCS_x_hidden\",\"mCSB_draggerContainer\",\r\n\t\t\t\"mCSB_buttonUp\",\"mCSB_buttonDown\",\"mCSB_buttonLeft\",\"mCSB_buttonRight\"\r\n\t\t],\r\n\t\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/* \r\n\t----------------------------------------\r\n\tMETHODS \r\n\t----------------------------------------\r\n\t*/\r\n\t\r\n\t\tmethods={\r\n\t\t\t\r\n\t\t\t/* \r\n\t\t\tplugin initialization method \r\n\t\t\tcreates the scrollbar(s), plugin data object and options\r\n\t\t\t----------------------------------------\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tinit:function(options){\r\n\t\t\t\t\r\n\t\t\t\tvar options=$.extend(true,{},defaults,options),\r\n\t\t\t\t\tselector=_selector.call(this); /* validate selector */\r\n\t\t\t\t\r\n\t\t\t\t/* \r\n\t\t\t\tif live option is enabled, monitor for elements matching the current selector and \r\n\t\t\t\tapply scrollbar(s) when found (now and in the future) \r\n\t\t\t\t*/\r\n\t\t\t\tif(options.live){\r\n\t\t\t\t\tvar liveSelector=options.liveSelector || this.selector || defaultSelector, /* live selector(s) */\r\n\t\t\t\t\t\t$liveSelector=$(liveSelector); /* live selector(s) as jquery object */\r\n\t\t\t\t\tif(options.live===\"off\"){\r\n\t\t\t\t\t\t/* \r\n\t\t\t\t\t\tdisable live if requested \r\n\t\t\t\t\t\tusage: $(selector).mCustomScrollbar({live:\"off\"}); \r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\tremoveLiveTimers(liveSelector);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tliveTimers[liveSelector]=setTimeout(function(){\r\n\t\t\t\t\t\t/* call mCustomScrollbar fn on live selector(s) every half-second */\r\n\t\t\t\t\t\t$liveSelector.mCustomScrollbar(options);\r\n\t\t\t\t\t\tif(options.live===\"once\" && $liveSelector.length){\r\n\t\t\t\t\t\t\t/* disable live after first invocation */\r\n\t\t\t\t\t\t\tremoveLiveTimers(liveSelector);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},500);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tremoveLiveTimers(liveSelector);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t/* options backward compatibility (for versions < 3.0.0) and normalization */\r\n\t\t\t\toptions.setWidth=(options.set_width) ? options.set_width : options.setWidth;\r\n\t\t\t\toptions.setHeight=(options.set_height) ? options.set_height : options.setHeight;\r\n\t\t\t\toptions.axis=(options.horizontalScroll) ? \"x\" : _findAxis(options.axis);\r\n\t\t\t\toptions.scrollInertia=options.scrollInertia>0 && options.scrollInertia<17 ? 17 : options.scrollInertia;\r\n\t\t\t\tif(typeof options.mouseWheel!==\"object\" &&  options.mouseWheel==true){ /* old school mouseWheel option (non-object) */\r\n\t\t\t\t\toptions.mouseWheel={enable:true,scrollAmount:\"auto\",axis:\"y\",preventDefault:false,deltaFactor:\"auto\",normalizeDelta:false,invert:false}\r\n\t\t\t\t}\r\n\t\t\t\toptions.mouseWheel.scrollAmount=!options.mouseWheelPixels ? options.mouseWheel.scrollAmount : options.mouseWheelPixels;\r\n\t\t\t\toptions.mouseWheel.normalizeDelta=!options.advanced.normalizeMouseWheelDelta ? options.mouseWheel.normalizeDelta : options.advanced.normalizeMouseWheelDelta;\r\n\t\t\t\toptions.scrollButtons.scrollType=_findScrollButtonsType(options.scrollButtons.scrollType); \r\n\t\t\t\t\r\n\t\t\t\t_theme(options); /* theme-specific options */\r\n\t\t\t\t\r\n\t\t\t\t/* plugin constructor */\r\n\t\t\t\treturn $(selector).each(function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar $this=$(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!$this.data(pluginPfx)){ /* prevent multiple instantiations */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t/* store options and create objects in jquery data */\r\n\t\t\t\t\t\t$this.data(pluginPfx,{\r\n\t\t\t\t\t\t\tidx:++totalInstances, /* instance index */\r\n\t\t\t\t\t\t\topt:options, /* options */\r\n\t\t\t\t\t\t\tscrollRatio:{y:null,x:null}, /* scrollbar to content ratio */\r\n\t\t\t\t\t\t\toverflowed:null, /* overflowed axis */\r\n\t\t\t\t\t\t\tcontentReset:{y:null,x:null}, /* object to check when content resets */\r\n\t\t\t\t\t\t\tbindEvents:false, /* object to check if events are bound */\r\n\t\t\t\t\t\t\ttweenRunning:false, /* object to check if tween is running */\r\n\t\t\t\t\t\t\tsequential:{}, /* sequential scrolling object */\r\n\t\t\t\t\t\t\tlangDir:$this.css(\"direction\"), /* detect/store direction (ltr or rtl) */\r\n\t\t\t\t\t\t\tcbOffsets:null, /* object to check whether callback offsets always trigger */\r\n\t\t\t\t\t\t\t/* \r\n\t\t\t\t\t\t\tobject to check how scrolling events where last triggered \r\n\t\t\t\t\t\t\t\"internal\" (default - triggered by this script), \"external\" (triggered by other scripts, e.g. via scrollTo method) \r\n\t\t\t\t\t\t\tusage: object.data(\"mCS\").trigger\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\ttrigger:null,\r\n\t\t\t\t\t\t\t/* \r\n\t\t\t\t\t\t\tobject to check for changes in elements in order to call the update method automatically \r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\tpoll:{size:{o:0,n:0},img:{o:0,n:0},change:{o:0,n:0}}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\t\t\t\t/* HTML data attributes */\r\n\t\t\t\t\t\t\thtmlDataAxis=$this.data(\"mcs-axis\"),htmlDataSbPos=$this.data(\"mcs-scrollbar-position\"),htmlDataTheme=$this.data(\"mcs-theme\");\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\tif(htmlDataAxis){o.axis=htmlDataAxis;} /* usage example: data-mcs-axis=\"y\" */\r\n\t\t\t\t\t\tif(htmlDataSbPos){o.scrollbarPosition=htmlDataSbPos;} /* usage example: data-mcs-scrollbar-position=\"outside\" */\r\n\t\t\t\t\t\tif(htmlDataTheme){ /* usage example: data-mcs-theme=\"minimal\" */\r\n\t\t\t\t\t\t\to.theme=htmlDataTheme;\r\n\t\t\t\t\t\t\t_theme(o); /* theme-specific options */\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_pluginMarkup.call(this); /* add plugin markup */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(d && o.callbacks.onCreate && typeof o.callbacks.onCreate===\"function\"){o.callbacks.onCreate.call(this);} /* callbacks: onCreate */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$(\"#mCSB_\"+d.idx+\"_container img:not(.\"+classes[2]+\")\").addClass(classes[2]); /* flag loaded images */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmethods.update.call(null,$this); /* call the update method */\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t/* ---------------------------------------- */\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/* \r\n\t\t\tplugin update method \r\n\t\t\tupdates content and scrollbar(s) values, events and status \r\n\t\t\t----------------------------------------\r\n\t\t\tusage: $(selector).mCustomScrollbar(\"update\");\r\n\t\t\t*/\r\n\t\t\t\r\n\t\t\tupdate:function(el,cb){\r\n\t\t\t\t\r\n\t\t\t\tvar selector=el || _selector.call(this); /* validate selector */\r\n\t\t\t\t\r\n\t\t\t\treturn $(selector).each(function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar $this=$(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif($this.data(pluginPfx)){ /* check if plugin has initialized */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\t\t\t\tmCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(!mCSB_container.length){return;}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(d.tweenRunning){_stop($this);} /* stop any running tweens while updating */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(cb && d && o.callbacks.onBeforeUpdate && typeof o.callbacks.onBeforeUpdate===\"function\"){o.callbacks.onBeforeUpdate.call(this);} /* callbacks: onBeforeUpdate */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* if element was disabled or destroyed, remove class(es) */\r\n\t\t\t\t\t\tif($this.hasClass(classes[3])){$this.removeClass(classes[3]);}\r\n\t\t\t\t\t\tif($this.hasClass(classes[4])){$this.removeClass(classes[4]);}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* css flexbox fix, detect/set max-height */\r\n\t\t\t\t\t\tmCustomScrollBox.css(\"max-height\",\"none\");\r\n\t\t\t\t\t\tif(mCustomScrollBox.height()!==$this.height()){mCustomScrollBox.css(\"max-height\",$this.height());}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_expandContentHorizontally.call(this); /* expand content horizontally */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(o.axis!==\"y\" && !o.advanced.autoExpandHorizontalScroll){\r\n\t\t\t\t\t\t\tmCSB_container.css(\"width\",_contentWidth(mCSB_container));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\td.overflowed=_overflowed.call(this); /* determine if scrolling is required */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_scrollbarVisibility.call(this); /* show/hide scrollbar(s) */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* auto-adjust scrollbar dragger length analogous to content */\r\n\t\t\t\t\t\tif(o.autoDraggerLength){_setDraggerLength.call(this);}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_scrollRatio.call(this); /* calculate and store scrollbar to content ratio */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_bindEvents.call(this); /* bind scrollbar events */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* reset scrolling position and/or events */\r\n\t\t\t\t\t\tvar to=[Math.abs(mCSB_container[0].offsetTop),Math.abs(mCSB_container[0].offsetLeft)];\r\n\t\t\t\t\t\tif(o.axis!==\"x\"){ /* y/yx axis */\r\n\t\t\t\t\t\t\tif(!d.overflowed[0]){ /* y scrolling is not required */\r\n\t\t\t\t\t\t\t\t_resetContentPosition.call(this); /* reset content position */\r\n\t\t\t\t\t\t\t\tif(o.axis===\"y\"){\r\n\t\t\t\t\t\t\t\t\t_unbindEvents.call(this);\r\n\t\t\t\t\t\t\t\t}else if(o.axis===\"yx\" && d.overflowed[1]){\r\n\t\t\t\t\t\t\t\t\t_scrollTo($this,to[1].toString(),{dir:\"x\",dur:0,overwrite:\"none\"});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else if(mCSB_dragger[0].height()>mCSB_dragger[0].parent().height()){\r\n\t\t\t\t\t\t\t\t_resetContentPosition.call(this); /* reset content position */\r\n\t\t\t\t\t\t\t}else{ /* y scrolling is required */\r\n\t\t\t\t\t\t\t\t_scrollTo($this,to[0].toString(),{dir:\"y\",dur:0,overwrite:\"none\"});\r\n\t\t\t\t\t\t\t\td.contentReset.y=null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(o.axis!==\"y\"){ /* x/yx axis */\r\n\t\t\t\t\t\t\tif(!d.overflowed[1]){ /* x scrolling is not required */\r\n\t\t\t\t\t\t\t\t_resetContentPosition.call(this); /* reset content position */\r\n\t\t\t\t\t\t\t\tif(o.axis===\"x\"){\r\n\t\t\t\t\t\t\t\t\t_unbindEvents.call(this);\r\n\t\t\t\t\t\t\t\t}else if(o.axis===\"yx\" && d.overflowed[0]){\r\n\t\t\t\t\t\t\t\t\t_scrollTo($this,to[0].toString(),{dir:\"y\",dur:0,overwrite:\"none\"});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else if(mCSB_dragger[1].width()>mCSB_dragger[1].parent().width()){\r\n\t\t\t\t\t\t\t\t_resetContentPosition.call(this); /* reset content position */\r\n\t\t\t\t\t\t\t}else{ /* x scrolling is required */\r\n\t\t\t\t\t\t\t\t_scrollTo($this,to[1].toString(),{dir:\"x\",dur:0,overwrite:\"none\"});\r\n\t\t\t\t\t\t\t\td.contentReset.x=null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* callbacks: onImageLoad, onSelectorChange, onUpdate */\r\n\t\t\t\t\t\tif(cb && d){\r\n\t\t\t\t\t\t\tif(cb===2 && o.callbacks.onImageLoad && typeof o.callbacks.onImageLoad===\"function\"){\r\n\t\t\t\t\t\t\t\to.callbacks.onImageLoad.call(this);\r\n\t\t\t\t\t\t\t}else if(cb===3 && o.callbacks.onSelectorChange && typeof o.callbacks.onSelectorChange===\"function\"){\r\n\t\t\t\t\t\t\t\to.callbacks.onSelectorChange.call(this);\r\n\t\t\t\t\t\t\t}else if(o.callbacks.onUpdate && typeof o.callbacks.onUpdate===\"function\"){\r\n\t\t\t\t\t\t\t\to.callbacks.onUpdate.call(this);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_autoUpdate.call(this); /* initialize automatic updating (for dynamic content, fluid layouts etc.) */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t/* ---------------------------------------- */\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/* \r\n\t\t\tplugin scrollTo method \r\n\t\t\ttriggers a scrolling event to a specific value\r\n\t\t\t----------------------------------------\r\n\t\t\tusage: $(selector).mCustomScrollbar(\"scrollTo\",value,options);\r\n\t\t\t*/\r\n\t\t\r\n\t\t\tscrollTo:function(val,options){\r\n\t\t\t\t\r\n\t\t\t\t/* prevent silly things like $(selector).mCustomScrollbar(\"scrollTo\",undefined); */\r\n\t\t\t\tif(typeof val==\"undefined\" || val==null){return;}\r\n\t\t\t\t\r\n\t\t\t\tvar selector=_selector.call(this); /* validate selector */\r\n\t\t\t\t\r\n\t\t\t\treturn $(selector).each(function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar $this=$(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif($this.data(pluginPfx)){ /* check if plugin has initialized */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tvar d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\t\t\t\t/* method default options */\r\n\t\t\t\t\t\t\tmethodDefaults={\r\n\t\t\t\t\t\t\t\ttrigger:\"external\", /* method is by default triggered externally (e.g. from other scripts) */\r\n\t\t\t\t\t\t\t\tscrollInertia:o.scrollInertia, /* scrolling inertia (animation duration) */\r\n\t\t\t\t\t\t\t\tscrollEasing:\"mcsEaseInOut\", /* animation easing */\r\n\t\t\t\t\t\t\t\tmoveDragger:false, /* move dragger instead of content */\r\n\t\t\t\t\t\t\t\ttimeout:60, /* scroll-to delay */\r\n\t\t\t\t\t\t\t\tcallbacks:true, /* enable/disable callbacks */\r\n\t\t\t\t\t\t\t\tonStart:true,\r\n\t\t\t\t\t\t\t\tonUpdate:true,\r\n\t\t\t\t\t\t\t\tonComplete:true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tmethodOptions=$.extend(true,{},methodDefaults,options),\r\n\t\t\t\t\t\t\tto=_arr.call(this,val),dur=methodOptions.scrollInertia>0 && methodOptions.scrollInertia<17 ? 17 : methodOptions.scrollInertia;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* translate yx values to actual scroll-to positions */\r\n\t\t\t\t\t\tto[0]=_to.call(this,to[0],\"y\");\r\n\t\t\t\t\t\tto[1]=_to.call(this,to[1],\"x\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* \r\n\t\t\t\t\t\tcheck if scroll-to value moves the dragger instead of content. \r\n\t\t\t\t\t\tOnly pixel values apply on dragger (e.g. 100, \"100px\", \"-=100\" etc.) \r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\tif(methodOptions.moveDragger){\r\n\t\t\t\t\t\t\tto[0]*=d.scrollRatio.y;\r\n\t\t\t\t\t\t\tto[1]*=d.scrollRatio.x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tmethodOptions.dur=_isTabHidden() ? 0 : dur; //skip animations if browser tab is hidden\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsetTimeout(function(){ \r\n\t\t\t\t\t\t\t/* do the scrolling */\r\n\t\t\t\t\t\t\tif(to[0]!==null && typeof to[0]!==\"undefined\" && o.axis!==\"x\" && d.overflowed[0]){ /* scroll y */\r\n\t\t\t\t\t\t\t\tmethodOptions.dir=\"y\";\r\n\t\t\t\t\t\t\t\tmethodOptions.overwrite=\"all\";\r\n\t\t\t\t\t\t\t\t_scrollTo($this,to[0].toString(),methodOptions);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(to[1]!==null && typeof to[1]!==\"undefined\" && o.axis!==\"y\" && d.overflowed[1]){ /* scroll x */\r\n\t\t\t\t\t\t\t\tmethodOptions.dir=\"x\";\r\n\t\t\t\t\t\t\t\tmethodOptions.overwrite=\"none\";\r\n\t\t\t\t\t\t\t\t_scrollTo($this,to[1].toString(),methodOptions);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},methodOptions.timeout);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t/* ---------------------------------------- */\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tplugin stop method \r\n\t\t\tstops scrolling animation\r\n\t\t\t----------------------------------------\r\n\t\t\tusage: $(selector).mCustomScrollbar(\"stop\");\r\n\t\t\t*/\r\n\t\t\tstop:function(){\r\n\t\t\t\t\r\n\t\t\t\tvar selector=_selector.call(this); /* validate selector */\r\n\t\t\t\t\r\n\t\t\t\treturn $(selector).each(function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar $this=$(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif($this.data(pluginPfx)){ /* check if plugin has initialized */\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t_stop($this);\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t/* ---------------------------------------- */\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tplugin disable method \r\n\t\t\ttemporarily disables the scrollbar(s) \r\n\t\t\t----------------------------------------\r\n\t\t\tusage: $(selector).mCustomScrollbar(\"disable\",reset); \r\n\t\t\treset (boolean): resets content position to 0 \r\n\t\t\t*/\r\n\t\t\tdisable:function(r){\r\n\t\t\t\t\r\n\t\t\t\tvar selector=_selector.call(this); /* validate selector */\r\n\t\t\t\t\r\n\t\t\t\treturn $(selector).each(function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar $this=$(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif($this.data(pluginPfx)){ /* check if plugin has initialized */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar d=$this.data(pluginPfx);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_autoUpdate.call(this,\"remove\"); /* remove automatic updating */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_unbindEvents.call(this); /* unbind events */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(r){_resetContentPosition.call(this);} /* reset content position */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_scrollbarVisibility.call(this,true); /* show/hide scrollbar(s) */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$this.addClass(classes[3]); /* add disable class */\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\t/* ---------------------------------------- */\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tplugin destroy method \r\n\t\t\tcompletely removes the scrollbar(s) and returns the element to its original state\r\n\t\t\t----------------------------------------\r\n\t\t\tusage: $(selector).mCustomScrollbar(\"destroy\"); \r\n\t\t\t*/\r\n\t\t\tdestroy:function(){\r\n\t\t\t\t\r\n\t\t\t\tvar selector=_selector.call(this); /* validate selector */\r\n\t\t\t\t\r\n\t\t\t\treturn $(selector).each(function(){\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar $this=$(this);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif($this.data(pluginPfx)){ /* check if plugin has initialized */\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tvar d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\t\t\t\tscrollbar=$(\".mCSB_\"+d.idx+\"_scrollbar\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tif(o.live){removeLiveTimers(o.liveSelector || $(selector).selector);} /* remove live timers */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_autoUpdate.call(this,\"remove\"); /* remove automatic updating */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_unbindEvents.call(this); /* unbind events */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_resetContentPosition.call(this); /* reset content position */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$this.removeData(pluginPfx); /* remove plugin data object */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_delete(this,\"mcs\"); /* delete callbacks object */\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t/* remove plugin markup */\r\n\t\t\t\t\t\tscrollbar.remove(); /* remove scrollbar(s) first (those can be either inside or outside plugin's inner wrapper) */\r\n\t\t\t\t\t\tmCSB_container.find(\"img.\"+classes[2]).removeClass(classes[2]); /* remove loaded images flag */\r\n\t\t\t\t\t\tmCustomScrollBox.replaceWith(mCSB_container.contents()); /* replace plugin's inner wrapper with the original content */\r\n\t\t\t\t\t\t/* remove plugin classes from the element and add destroy class */\r\n\t\t\t\t\t\t$this.removeClass(pluginNS+\" _\"+pluginPfx+\"_\"+d.idx+\" \"+classes[6]+\" \"+classes[7]+\" \"+classes[5]+\" \"+classes[3]).addClass(classes[4]);\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t/* ---------------------------------------- */\r\n\t\t\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\t/* \r\n\t----------------------------------------\r\n\tFUNCTIONS\r\n\t----------------------------------------\r\n\t*/\r\n\t\r\n\t\t/* validates selector (if selector is invalid or undefined uses the default one) */\r\n\t\t_selector=function(){\r\n\t\t\treturn (typeof $(this)!==\"object\" || $(this).length<1) ? defaultSelector : this;\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* changes options according to theme */\r\n\t\t_theme=function(obj){\r\n\t\t\tvar fixedSizeScrollbarThemes=[\"rounded\",\"rounded-dark\",\"rounded-dots\",\"rounded-dots-dark\"],\r\n\t\t\t\tnonExpandedScrollbarThemes=[\"rounded-dots\",\"rounded-dots-dark\",\"3d\",\"3d-dark\",\"3d-thick\",\"3d-thick-dark\",\"inset\",\"inset-dark\",\"inset-2\",\"inset-2-dark\",\"inset-3\",\"inset-3-dark\"],\r\n\t\t\t\tdisabledScrollButtonsThemes=[\"minimal\",\"minimal-dark\"],\r\n\t\t\t\tenabledAutoHideScrollbarThemes=[\"minimal\",\"minimal-dark\"],\r\n\t\t\t\tscrollbarPositionOutsideThemes=[\"minimal\",\"minimal-dark\"];\r\n\t\t\tobj.autoDraggerLength=$.inArray(obj.theme,fixedSizeScrollbarThemes) > -1 ? false : obj.autoDraggerLength;\r\n\t\t\tobj.autoExpandScrollbar=$.inArray(obj.theme,nonExpandedScrollbarThemes) > -1 ? false : obj.autoExpandScrollbar;\r\n\t\t\tobj.scrollButtons.enable=$.inArray(obj.theme,disabledScrollButtonsThemes) > -1 ? false : obj.scrollButtons.enable;\r\n\t\t\tobj.autoHideScrollbar=$.inArray(obj.theme,enabledAutoHideScrollbarThemes) > -1 ? true : obj.autoHideScrollbar;\r\n\t\t\tobj.scrollbarPosition=$.inArray(obj.theme,scrollbarPositionOutsideThemes) > -1 ? \"outside\" : obj.scrollbarPosition;\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* live option timers removal */\r\n\t\tremoveLiveTimers=function(selector){\r\n\t\t\tif(liveTimers[selector]){\r\n\t\t\t\tclearTimeout(liveTimers[selector]);\r\n\t\t\t\t_delete(liveTimers,selector);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* normalizes axis option to valid values: \"y\", \"x\", \"yx\" */\r\n\t\t_findAxis=function(val){\r\n\t\t\treturn (val===\"yx\" || val===\"xy\" || val===\"auto\") ? \"yx\" : (val===\"x\" || val===\"horizontal\") ? \"x\" : \"y\";\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* normalizes scrollButtons.scrollType option to valid values: \"stepless\", \"stepped\" */\r\n\t\t_findScrollButtonsType=function(val){\r\n\t\t\treturn (val===\"stepped\" || val===\"pixels\" || val===\"step\" || val===\"click\") ? \"stepped\" : \"stepless\";\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* generates plugin markup */\r\n\t\t_pluginMarkup=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\texpandClass=o.autoExpandScrollbar ? \" \"+classes[1]+\"_expand\" : \"\",\r\n\t\t\t\tscrollbar=[\"<div id='mCSB_\"+d.idx+\"_scrollbar_vertical' class='mCSB_scrollTools mCSB_\"+d.idx+\"_scrollbar mCS-\"+o.theme+\" mCSB_scrollTools_vertical\"+expandClass+\"'><div class='\"+classes[12]+\"'><div id='mCSB_\"+d.idx+\"_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>\",\"<div id='mCSB_\"+d.idx+\"_scrollbar_horizontal' class='mCSB_scrollTools mCSB_\"+d.idx+\"_scrollbar mCS-\"+o.theme+\" mCSB_scrollTools_horizontal\"+expandClass+\"'><div class='\"+classes[12]+\"'><div id='mCSB_\"+d.idx+\"_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>\"],\r\n\t\t\t\twrapperClass=o.axis===\"yx\" ? \"mCSB_vertical_horizontal\" : o.axis===\"x\" ? \"mCSB_horizontal\" : \"mCSB_vertical\",\r\n\t\t\t\tscrollbars=o.axis===\"yx\" ? scrollbar[0]+scrollbar[1] : o.axis===\"x\" ? scrollbar[1] : scrollbar[0],\r\n\t\t\t\tcontentWrapper=o.axis===\"yx\" ? \"<div id='mCSB_\"+d.idx+\"_container_wrapper' class='mCSB_container_wrapper' />\" : \"\",\r\n\t\t\t\tautoHideClass=o.autoHideScrollbar ? \" \"+classes[6] : \"\",\r\n\t\t\t\tscrollbarDirClass=(o.axis!==\"x\" && d.langDir===\"rtl\") ? \" \"+classes[7] : \"\";\r\n\t\t\tif(o.setWidth){$this.css(\"width\",o.setWidth);} /* set element width */\r\n\t\t\tif(o.setHeight){$this.css(\"height\",o.setHeight);} /* set element height */\r\n\t\t\to.setLeft=(o.axis!==\"y\" && d.langDir===\"rtl\") ? \"989999px\" : o.setLeft; /* adjust left position for rtl direction */\r\n\t\t\t$this.addClass(pluginNS+\" _\"+pluginPfx+\"_\"+d.idx+autoHideClass+scrollbarDirClass).wrapInner(\"<div id='mCSB_\"+d.idx+\"' class='mCustomScrollBox mCS-\"+o.theme+\" \"+wrapperClass+\"'><div id='mCSB_\"+d.idx+\"_container' class='mCSB_container' style='position:relative; top:\"+o.setTop+\"; left:\"+o.setLeft+\";' dir='\"+d.langDir+\"' /></div>\");\r\n\t\t\tvar mCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\");\r\n\t\t\tif(o.axis!==\"y\" && !o.advanced.autoExpandHorizontalScroll){\r\n\t\t\t\tmCSB_container.css(\"width\",_contentWidth(mCSB_container));\r\n\t\t\t}\r\n\t\t\tif(o.scrollbarPosition===\"outside\"){\r\n\t\t\t\tif($this.css(\"position\")===\"static\"){ /* requires elements with non-static position */\r\n\t\t\t\t\t$this.css(\"position\",\"relative\");\r\n\t\t\t\t}\r\n\t\t\t\t$this.css(\"overflow\",\"visible\");\r\n\t\t\t\tmCustomScrollBox.addClass(\"mCSB_outside\").after(scrollbars);\r\n\t\t\t}else{\r\n\t\t\t\tmCustomScrollBox.addClass(\"mCSB_inside\").append(scrollbars);\r\n\t\t\t\tmCSB_container.wrap(contentWrapper);\r\n\t\t\t}\r\n\t\t\t_scrollButtons.call(this); /* add scrollbar buttons */\r\n\t\t\t/* minimum dragger length */\r\n\t\t\tvar mCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")];\r\n\t\t\tmCSB_dragger[0].css(\"min-height\",mCSB_dragger[0].height());\r\n\t\t\tmCSB_dragger[1].css(\"min-width\",mCSB_dragger[1].width());\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* calculates content width */\r\n\t\t_contentWidth=function(el){\r\n\t\t\tvar val=[el[0].scrollWidth,Math.max.apply(Math,el.children().map(function(){return $(this).outerWidth(true);}).get())],w=el.parent().width();\r\n\t\t\treturn val[0]>w ? val[0] : val[1]>w ? val[1] : \"100%\";\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* expands content horizontally */\r\n\t\t_expandContentHorizontally=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\");\r\n\t\t\tif(o.advanced.autoExpandHorizontalScroll && o.axis!==\"y\"){\r\n\t\t\t\t/* calculate scrollWidth */\r\n\t\t\t\tmCSB_container.css({\"width\":\"auto\",\"min-width\":0,\"overflow-x\":\"scroll\"});\r\n\t\t\t\tvar w=Math.ceil(mCSB_container[0].scrollWidth);\r\n\t\t\t\tif(o.advanced.autoExpandHorizontalScroll===3 || (o.advanced.autoExpandHorizontalScroll!==2 && w>mCSB_container.parent().width())){\r\n\t\t\t\t\tmCSB_container.css({\"width\":w,\"min-width\":\"100%\",\"overflow-x\":\"inherit\"});\r\n\t\t\t\t}else{\r\n\t\t\t\t\t/* \r\n\t\t\t\t\twrap content with an infinite width div and set its position to absolute and width to auto. \r\n\t\t\t\t\tSetting width to auto before calculating the actual width is important! \r\n\t\t\t\t\tWe must let the browser set the width as browser zoom values are impossible to calculate.\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tmCSB_container.css({\"overflow-x\":\"inherit\",\"position\":\"absolute\"})\r\n\t\t\t\t\t\t.wrap(\"<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />\")\r\n\t\t\t\t\t\t.css({ /* set actual width, original position and un-wrap */\r\n\t\t\t\t\t\t\t/* \r\n\t\t\t\t\t\t\tget the exact width (with decimals) and then round-up. \r\n\t\t\t\t\t\t\tUsing jquery outerWidth() will round the width value which will mess up with inner elements that have non-integer width\r\n\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\"width\":(Math.ceil(mCSB_container[0].getBoundingClientRect().right+0.4)-Math.floor(mCSB_container[0].getBoundingClientRect().left)),\r\n\t\t\t\t\t\t\t\"min-width\":\"100%\",\r\n\t\t\t\t\t\t\t\"position\":\"relative\"\r\n\t\t\t\t\t\t}).unwrap();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* adds scrollbar buttons */\r\n\t\t_scrollButtons=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tmCSB_scrollTools=$(\".mCSB_\"+d.idx+\"_scrollbar:first\"),\r\n\t\t\t\ttabindex=!_isNumeric(o.scrollButtons.tabindex) ? \"\" : \"tabindex='\"+o.scrollButtons.tabindex+\"'\",\r\n\t\t\t\tbtnHTML=[\r\n\t\t\t\t\t\"<a href='#' class='\"+classes[13]+\"' \"+tabindex+\" />\",\r\n\t\t\t\t\t\"<a href='#' class='\"+classes[14]+\"' \"+tabindex+\" />\",\r\n\t\t\t\t\t\"<a href='#' class='\"+classes[15]+\"' \"+tabindex+\" />\",\r\n\t\t\t\t\t\"<a href='#' class='\"+classes[16]+\"' \"+tabindex+\" />\"\r\n\t\t\t\t],\r\n\t\t\t\tbtn=[(o.axis===\"x\" ? btnHTML[2] : btnHTML[0]),(o.axis===\"x\" ? btnHTML[3] : btnHTML[1]),btnHTML[2],btnHTML[3]];\r\n\t\t\tif(o.scrollButtons.enable){\r\n\t\t\t\tmCSB_scrollTools.prepend(btn[0]).append(btn[1]).next(\".mCSB_scrollTools\").prepend(btn[2]).append(btn[3]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* auto-adjusts scrollbar dragger length */\r\n\t\t_setDraggerLength=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tmCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")],\r\n\t\t\t\tratio=[mCustomScrollBox.height()/mCSB_container.outerHeight(false),mCustomScrollBox.width()/mCSB_container.outerWidth(false)],\r\n\t\t\t\tl=[\r\n\t\t\t\t\tparseInt(mCSB_dragger[0].css(\"min-height\")),Math.round(ratio[0]*mCSB_dragger[0].parent().height()),\r\n\t\t\t\t\tparseInt(mCSB_dragger[1].css(\"min-width\")),Math.round(ratio[1]*mCSB_dragger[1].parent().width())\r\n\t\t\t\t],\r\n\t\t\t\th=oldIE && (l[1]<l[0]) ? l[0] : l[1],w=oldIE && (l[3]<l[2]) ? l[2] : l[3];\r\n\t\t\tmCSB_dragger[0].css({\r\n\t\t\t\t\"height\":h,\"max-height\":(mCSB_dragger[0].parent().height()-10)\r\n\t\t\t}).find(\".mCSB_dragger_bar\").css({\"line-height\":l[0]+\"px\"});\r\n\t\t\tmCSB_dragger[1].css({\r\n\t\t\t\t\"width\":w,\"max-width\":(mCSB_dragger[1].parent().width()-10)\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* calculates scrollbar to content ratio */\r\n\t\t_scrollRatio=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tmCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")],\r\n\t\t\t\tscrollAmount=[mCSB_container.outerHeight(false)-mCustomScrollBox.height(),mCSB_container.outerWidth(false)-mCustomScrollBox.width()],\r\n\t\t\t\tratio=[\r\n\t\t\t\t\tscrollAmount[0]/(mCSB_dragger[0].parent().height()-mCSB_dragger[0].height()),\r\n\t\t\t\t\tscrollAmount[1]/(mCSB_dragger[1].parent().width()-mCSB_dragger[1].width())\r\n\t\t\t\t];\r\n\t\t\td.scrollRatio={y:ratio[0],x:ratio[1]};\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* toggles scrolling classes */\r\n\t\t_onDragClasses=function(el,action,xpnd){\r\n\t\t\tvar expandClass=xpnd ? classes[0]+\"_expanded\" : \"\",\r\n\t\t\t\tscrollbar=el.closest(\".mCSB_scrollTools\");\r\n\t\t\tif(action===\"active\"){\r\n\t\t\t\tel.toggleClass(classes[0]+\" \"+expandClass); scrollbar.toggleClass(classes[1]); \r\n\t\t\t\tel[0]._draggable=el[0]._draggable ? 0 : 1;\r\n\t\t\t}else{\r\n\t\t\t\tif(!el[0]._draggable){\r\n\t\t\t\t\tif(action===\"hide\"){\r\n\t\t\t\t\t\tel.removeClass(classes[0]); scrollbar.removeClass(classes[1]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tel.addClass(classes[0]); scrollbar.addClass(classes[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* checks if content overflows its container to determine if scrolling is required */\r\n\t\t_overflowed=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tcontentHeight=d.overflowed==null ? mCSB_container.height() : mCSB_container.outerHeight(false),\r\n\t\t\t\tcontentWidth=d.overflowed==null ? mCSB_container.width() : mCSB_container.outerWidth(false),\r\n\t\t\t\th=mCSB_container[0].scrollHeight,w=mCSB_container[0].scrollWidth;\r\n\t\t\tif(h>contentHeight){contentHeight=h;}\r\n\t\t\tif(w>contentWidth){contentWidth=w;}\r\n\t\t\treturn [contentHeight>mCustomScrollBox.height(),contentWidth>mCustomScrollBox.width()];\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* resets content position to 0 */\r\n\t\t_resetContentPosition=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tmCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")];\r\n\t\t\t_stop($this); /* stop any current scrolling before resetting */\r\n\t\t\tif((o.axis!==\"x\" && !d.overflowed[0]) || (o.axis===\"y\" && d.overflowed[0])){ /* reset y */\r\n\t\t\t\tmCSB_dragger[0].add(mCSB_container).css(\"top\",0);\r\n\t\t\t\t_scrollTo($this,\"_resetY\");\r\n\t\t\t}\r\n\t\t\tif((o.axis!==\"y\" && !d.overflowed[1]) || (o.axis===\"x\" && d.overflowed[1])){ /* reset x */\r\n\t\t\t\tvar cx=dx=0;\r\n\t\t\t\tif(d.langDir===\"rtl\"){ /* adjust left position for rtl direction */\r\n\t\t\t\t\tcx=mCustomScrollBox.width()-mCSB_container.outerWidth(false);\r\n\t\t\t\t\tdx=Math.abs(cx/d.scrollRatio.x);\r\n\t\t\t\t}\r\n\t\t\t\tmCSB_container.css(\"left\",cx);\r\n\t\t\t\tmCSB_dragger[1].css(\"left\",dx);\r\n\t\t\t\t_scrollTo($this,\"_resetX\");\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* binds scrollbar events */\r\n\t\t_bindEvents=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt;\r\n\t\t\tif(!d.bindEvents){ /* check if events are already bound */\r\n\t\t\t\t_draggable.call(this);\r\n\t\t\t\tif(o.contentTouchScroll){_contentDraggable.call(this);}\r\n\t\t\t\t_selectable.call(this);\r\n\t\t\t\tif(o.mouseWheel.enable){ /* bind mousewheel fn when plugin is available */\r\n\t\t\t\t\tfunction _mwt(){\r\n\t\t\t\t\t\tmousewheelTimeout=setTimeout(function(){\r\n\t\t\t\t\t\t\tif(!$.event.special.mousewheel){\r\n\t\t\t\t\t\t\t\t_mwt();\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tclearTimeout(mousewheelTimeout);\r\n\t\t\t\t\t\t\t\t_mousewheel.call($this[0]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},100);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar mousewheelTimeout;\r\n\t\t\t\t\t_mwt();\r\n\t\t\t\t}\r\n\t\t\t\t_draggerRail.call(this);\r\n\t\t\t\t_wrapperScroll.call(this);\r\n\t\t\t\tif(o.advanced.autoScrollOnFocus){_focus.call(this);}\r\n\t\t\t\tif(o.scrollButtons.enable){_buttons.call(this);}\r\n\t\t\t\tif(o.keyboard.enable){_keyboard.call(this);}\r\n\t\t\t\td.bindEvents=true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* unbinds scrollbar events */\r\n\t\t_unbindEvents=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tsb=\".mCSB_\"+d.idx+\"_scrollbar\",\r\n\t\t\t\tsel=$(\"#mCSB_\"+d.idx+\",#mCSB_\"+d.idx+\"_container,#mCSB_\"+d.idx+\"_container_wrapper,\"+sb+\" .\"+classes[12]+\",#mCSB_\"+d.idx+\"_dragger_vertical,#mCSB_\"+d.idx+\"_dragger_horizontal,\"+sb+\">a\"),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\");\r\n\t\t\tif(o.advanced.releaseDraggableSelectors){sel.add($(o.advanced.releaseDraggableSelectors));}\r\n\t\t\tif(o.advanced.extraDraggableSelectors){sel.add($(o.advanced.extraDraggableSelectors));}\r\n\t\t\tif(d.bindEvents){ /* check if events are bound */\r\n\t\t\t\t/* unbind namespaced events from document/selectors */\r\n\t\t\t\t$(document).add($(!_canAccessIFrame() || top.document)).unbind(\".\"+namespace);\r\n\t\t\t\tsel.each(function(){\r\n\t\t\t\t\t$(this).unbind(\".\"+namespace);\r\n\t\t\t\t});\r\n\t\t\t\t/* clear and delete timeouts/objects */\r\n\t\t\t\tclearTimeout($this[0]._focusTimeout); _delete($this[0],\"_focusTimeout\");\r\n\t\t\t\tclearTimeout(d.sequential.step); _delete(d.sequential,\"step\");\r\n\t\t\t\tclearTimeout(mCSB_container[0].onCompleteTimeout); _delete(mCSB_container[0],\"onCompleteTimeout\");\r\n\t\t\t\td.bindEvents=false;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* toggles scrollbar visibility */\r\n\t\t_scrollbarVisibility=function(disabled){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tcontentWrapper=$(\"#mCSB_\"+d.idx+\"_container_wrapper\"),\r\n\t\t\t\tcontent=contentWrapper.length ? contentWrapper : $(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tscrollbar=[$(\"#mCSB_\"+d.idx+\"_scrollbar_vertical\"),$(\"#mCSB_\"+d.idx+\"_scrollbar_horizontal\")],\r\n\t\t\t\tmCSB_dragger=[scrollbar[0].find(\".mCSB_dragger\"),scrollbar[1].find(\".mCSB_dragger\")];\r\n\t\t\tif(o.axis!==\"x\"){\r\n\t\t\t\tif(d.overflowed[0] && !disabled){\r\n\t\t\t\t\tscrollbar[0].add(mCSB_dragger[0]).add(scrollbar[0].children(\"a\")).css(\"display\",\"block\");\r\n\t\t\t\t\tcontent.removeClass(classes[8]+\" \"+classes[10]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(o.alwaysShowScrollbar){\r\n\t\t\t\t\t\tif(o.alwaysShowScrollbar!==2){mCSB_dragger[0].css(\"display\",\"none\");}\r\n\t\t\t\t\t\tcontent.removeClass(classes[10]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tscrollbar[0].css(\"display\",\"none\");\r\n\t\t\t\t\t\tcontent.addClass(classes[10]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent.addClass(classes[8]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(o.axis!==\"y\"){\r\n\t\t\t\tif(d.overflowed[1] && !disabled){\r\n\t\t\t\t\tscrollbar[1].add(mCSB_dragger[1]).add(scrollbar[1].children(\"a\")).css(\"display\",\"block\");\r\n\t\t\t\t\tcontent.removeClass(classes[9]+\" \"+classes[11]);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(o.alwaysShowScrollbar){\r\n\t\t\t\t\t\tif(o.alwaysShowScrollbar!==2){mCSB_dragger[1].css(\"display\",\"none\");}\r\n\t\t\t\t\t\tcontent.removeClass(classes[11]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tscrollbar[1].css(\"display\",\"none\");\r\n\t\t\t\t\t\tcontent.addClass(classes[11]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent.addClass(classes[9]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!d.overflowed[0] && !d.overflowed[1]){\r\n\t\t\t\t$this.addClass(classes[5]);\r\n\t\t\t}else{\r\n\t\t\t\t$this.removeClass(classes[5]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* returns input coordinates of pointer, touch and mouse events (relative to document) */\r\n\t\t_coordinates=function(e){\r\n\t\t\tvar t=e.type,o=e.target.ownerDocument!==document && frameElement!==null ? [$(frameElement).offset().top,$(frameElement).offset().left] : null,\r\n\t\t\t\tio=_canAccessIFrame() && e.target.ownerDocument!==top.document && frameElement!==null ? [$(e.view.frameElement).offset().top,$(e.view.frameElement).offset().left] : [0,0];\r\n\t\t\tswitch(t){\r\n\t\t\t\tcase \"pointerdown\": case \"MSPointerDown\": case \"pointermove\": case \"MSPointerMove\": case \"pointerup\": case \"MSPointerUp\":\r\n\t\t\t\t\treturn o ? [e.originalEvent.pageY-o[0]+io[0],e.originalEvent.pageX-o[1]+io[1],false] : [e.originalEvent.pageY,e.originalEvent.pageX,false];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"touchstart\": case \"touchmove\": case \"touchend\":\r\n\t\t\t\t\tvar touch=e.originalEvent.touches[0] || e.originalEvent.changedTouches[0],\r\n\t\t\t\t\t\ttouches=e.originalEvent.touches.length || e.originalEvent.changedTouches.length;\r\n\t\t\t\t\treturn e.target.ownerDocument!==document ? [touch.screenY,touch.screenX,touches>1] : [touch.pageY,touch.pageX,touches>1];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn o ? [e.pageY-o[0]+io[0],e.pageX-o[1]+io[1],false] : [e.pageY,e.pageX,false];\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tSCROLLBAR DRAG EVENTS\r\n\t\tscrolls content via scrollbar dragging \r\n\t\t*/\r\n\t\t_draggable=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tdraggerId=[\"mCSB_\"+d.idx+\"_dragger_vertical\",\"mCSB_\"+d.idx+\"_dragger_horizontal\"],\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tmCSB_dragger=$(\"#\"+draggerId[0]+\",#\"+draggerId[1]),\r\n\t\t\t\tdraggable,dragY,dragX,\r\n\t\t\t\trds=o.advanced.releaseDraggableSelectors ? mCSB_dragger.add($(o.advanced.releaseDraggableSelectors)) : mCSB_dragger,\r\n\t\t\t\teds=o.advanced.extraDraggableSelectors ? $(!_canAccessIFrame() || top.document).add($(o.advanced.extraDraggableSelectors)) : $(!_canAccessIFrame() || top.document);\r\n\t\t\tmCSB_dragger.bind(\"contextmenu.\"+namespace,function(e){\r\n\t\t\t\te.preventDefault(); //prevent right click\r\n\t\t\t}).bind(\"mousedown.\"+namespace+\" touchstart.\"+namespace+\" pointerdown.\"+namespace+\" MSPointerDown.\"+namespace,function(e){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(!_mouseBtnLeft(e)){return;} /* left mouse button only */\r\n\t\t\t\ttouchActive=true;\r\n\t\t\t\tif(oldIE){document.onselectstart=function(){return false;}} /* disable text selection for IE < 9 */\r\n\t\t\t\t_iframe.call(mCSB_container,false); /* enable scrollbar dragging over iframes by disabling their events */\r\n\t\t\t\t_stop($this);\r\n\t\t\t\tdraggable=$(this);\r\n\t\t\t\tvar offset=draggable.offset(),y=_coordinates(e)[0]-offset.top,x=_coordinates(e)[1]-offset.left,\r\n\t\t\t\t\th=draggable.height()+offset.top,w=draggable.width()+offset.left;\r\n\t\t\t\tif(y<h && y>0 && x<w && x>0){\r\n\t\t\t\t\tdragY=y; \r\n\t\t\t\t\tdragX=x;\r\n\t\t\t\t}\r\n\t\t\t\t_onDragClasses(draggable,\"active\",o.autoExpandScrollbar); \r\n\t\t\t}).bind(\"touchmove.\"+namespace,function(e){\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar offset=draggable.offset(),y=_coordinates(e)[0]-offset.top,x=_coordinates(e)[1]-offset.left;\r\n\t\t\t\t_drag(dragY,dragX,y,x);\r\n\t\t\t});\r\n\t\t\t$(document).add(eds).bind(\"mousemove.\"+namespace+\" pointermove.\"+namespace+\" MSPointerMove.\"+namespace,function(e){\r\n\t\t\t\tif(draggable){\r\n\t\t\t\t\tvar offset=draggable.offset(),y=_coordinates(e)[0]-offset.top,x=_coordinates(e)[1]-offset.left;\r\n\t\t\t\t\tif(dragY===y && dragX===x){return;} /* has it really moved? */\r\n\t\t\t\t\t_drag(dragY,dragX,y,x);\r\n\t\t\t\t}\r\n\t\t\t}).add(rds).bind(\"mouseup.\"+namespace+\" touchend.\"+namespace+\" pointerup.\"+namespace+\" MSPointerUp.\"+namespace,function(e){\r\n\t\t\t\tif(draggable){\r\n\t\t\t\t\t_onDragClasses(draggable,\"active\",o.autoExpandScrollbar); \r\n\t\t\t\t\tdraggable=null;\r\n\t\t\t\t}\r\n\t\t\t\ttouchActive=false;\r\n\t\t\t\tif(oldIE){document.onselectstart=null;} /* enable text selection for IE < 9 */\r\n\t\t\t\t_iframe.call(mCSB_container,true); /* enable iframes events */\r\n\t\t\t});\r\n\t\t\tfunction _drag(dragY,dragX,y,x){\r\n\t\t\t\tmCSB_container[0].idleTimer=o.scrollInertia<233 ? 250 : 0;\r\n\t\t\t\tif(draggable.attr(\"id\")===draggerId[1]){\r\n\t\t\t\t\tvar dir=\"x\",to=((draggable[0].offsetLeft-dragX)+x)*d.scrollRatio.x;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar dir=\"y\",to=((draggable[0].offsetTop-dragY)+y)*d.scrollRatio.y;\r\n\t\t\t\t}\r\n\t\t\t\t_scrollTo($this,to.toString(),{dir:dir,drag:true});\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tTOUCH SWIPE EVENTS\r\n\t\tscrolls content via touch swipe \r\n\t\tEmulates the native touch-swipe scrolling with momentum found in iOS, Android and WP devices \r\n\t\t*/\r\n\t\t_contentDraggable=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tmCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")],\r\n\t\t\t\tdraggable,dragY,dragX,touchStartY,touchStartX,touchMoveY=[],touchMoveX=[],startTime,runningTime,endTime,distance,speed,amount,\r\n\t\t\t\tdurA=0,durB,overwrite=o.axis===\"yx\" ? \"none\" : \"all\",touchIntent=[],touchDrag,docDrag,\r\n\t\t\t\tiframe=mCSB_container.find(\"iframe\"),\r\n\t\t\t\tevents=[\r\n\t\t\t\t\t\"touchstart.\"+namespace+\" pointerdown.\"+namespace+\" MSPointerDown.\"+namespace, //start\r\n\t\t\t\t\t\"touchmove.\"+namespace+\" pointermove.\"+namespace+\" MSPointerMove.\"+namespace, //move\r\n\t\t\t\t\t\"touchend.\"+namespace+\" pointerup.\"+namespace+\" MSPointerUp.\"+namespace //end\r\n\t\t\t\t],\r\n\t\t\t\ttouchAction=document.body.style.touchAction!==undefined && document.body.style.touchAction!==\"\";\r\n\t\t\tmCSB_container.bind(events[0],function(e){\r\n\t\t\t\t_onTouchstart(e);\r\n\t\t\t}).bind(events[1],function(e){\r\n\t\t\t\t_onTouchmove(e);\r\n\t\t\t});\r\n\t\t\tmCustomScrollBox.bind(events[0],function(e){\r\n\t\t\t\t_onTouchstart2(e);\r\n\t\t\t}).bind(events[2],function(e){\r\n\t\t\t\t_onTouchend(e);\r\n\t\t\t});\r\n\t\t\tif(iframe.length){\r\n\t\t\t\tiframe.each(function(){\r\n\t\t\t\t\t$(this).bind(\"load\",function(){\r\n\t\t\t\t\t\t/* bind events on accessible iframes */\r\n\t\t\t\t\t\tif(_canAccessIFrame(this)){\r\n\t\t\t\t\t\t\t$(this.contentDocument || this.contentWindow.document).bind(events[0],function(e){\r\n\t\t\t\t\t\t\t\t_onTouchstart(e);\r\n\t\t\t\t\t\t\t\t_onTouchstart2(e);\r\n\t\t\t\t\t\t\t}).bind(events[1],function(e){\r\n\t\t\t\t\t\t\t\t_onTouchmove(e);\r\n\t\t\t\t\t\t\t}).bind(events[2],function(e){\r\n\t\t\t\t\t\t\t\t_onTouchend(e);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfunction _onTouchstart(e){\r\n\t\t\t\tif(!_pointerTouch(e) || touchActive || _coordinates(e)[2]){touchable=0; return;}\r\n\t\t\t\ttouchable=1; touchDrag=0; docDrag=0; draggable=1;\r\n\t\t\t\t$this.removeClass(\"mCS_touch_action\");\r\n\t\t\t\tvar offset=mCSB_container.offset();\r\n\t\t\t\tdragY=_coordinates(e)[0]-offset.top;\r\n\t\t\t\tdragX=_coordinates(e)[1]-offset.left;\r\n\t\t\t\ttouchIntent=[_coordinates(e)[0],_coordinates(e)[1]];\r\n\t\t\t}\r\n\t\t\tfunction _onTouchmove(e){\r\n\t\t\t\tif(!_pointerTouch(e) || touchActive || _coordinates(e)[2]){return;}\r\n\t\t\t\tif(!o.documentTouchScroll){e.preventDefault();} \r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\tif(docDrag && !touchDrag){return;}\r\n\t\t\t\tif(draggable){\r\n\t\t\t\t\trunningTime=_getTime();\r\n\t\t\t\t\tvar offset=mCustomScrollBox.offset(),y=_coordinates(e)[0]-offset.top,x=_coordinates(e)[1]-offset.left,\r\n\t\t\t\t\t\teasing=\"mcsLinearOut\";\r\n\t\t\t\t\ttouchMoveY.push(y);\r\n\t\t\t\t\ttouchMoveX.push(x);\r\n\t\t\t\t\ttouchIntent[2]=Math.abs(_coordinates(e)[0]-touchIntent[0]); touchIntent[3]=Math.abs(_coordinates(e)[1]-touchIntent[1]);\r\n\t\t\t\t\tif(d.overflowed[0]){\r\n\t\t\t\t\t\tvar limit=mCSB_dragger[0].parent().height()-mCSB_dragger[0].height(),\r\n\t\t\t\t\t\t\tprevent=((dragY-y)>0 && (y-dragY)>-(limit*d.scrollRatio.y) && (touchIntent[3]*2<touchIntent[2] || o.axis===\"yx\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(d.overflowed[1]){\r\n\t\t\t\t\t\tvar limitX=mCSB_dragger[1].parent().width()-mCSB_dragger[1].width(),\r\n\t\t\t\t\t\t\tpreventX=((dragX-x)>0 && (x-dragX)>-(limitX*d.scrollRatio.x) && (touchIntent[2]*2<touchIntent[3] || o.axis===\"yx\"));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(prevent || preventX){ /* prevent native document scrolling */\r\n\t\t\t\t\t\tif(!touchAction){e.preventDefault();} \r\n\t\t\t\t\t\ttouchDrag=1;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tdocDrag=1;\r\n\t\t\t\t\t\t$this.addClass(\"mCS_touch_action\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(touchAction){e.preventDefault();} \r\n\t\t\t\t\tamount=o.axis===\"yx\" ? [(dragY-y),(dragX-x)] : o.axis===\"x\" ? [null,(dragX-x)] : [(dragY-y),null];\r\n\t\t\t\t\tmCSB_container[0].idleTimer=250;\r\n\t\t\t\t\tif(d.overflowed[0]){_drag(amount[0],durA,easing,\"y\",\"all\",true);}\r\n\t\t\t\t\tif(d.overflowed[1]){_drag(amount[1],durA,easing,\"x\",overwrite,true);}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction _onTouchstart2(e){\r\n\t\t\t\tif(!_pointerTouch(e) || touchActive || _coordinates(e)[2]){touchable=0; return;}\r\n\t\t\t\ttouchable=1;\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t_stop($this);\r\n\t\t\t\tstartTime=_getTime();\r\n\t\t\t\tvar offset=mCustomScrollBox.offset();\r\n\t\t\t\ttouchStartY=_coordinates(e)[0]-offset.top;\r\n\t\t\t\ttouchStartX=_coordinates(e)[1]-offset.left;\r\n\t\t\t\ttouchMoveY=[]; touchMoveX=[];\r\n\t\t\t}\r\n\t\t\tfunction _onTouchend(e){\r\n\t\t\t\tif(!_pointerTouch(e) || touchActive || _coordinates(e)[2]){return;}\r\n\t\t\t\tdraggable=0;\r\n\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\ttouchDrag=0; docDrag=0;\r\n\t\t\t\tendTime=_getTime();\r\n\t\t\t\tvar offset=mCustomScrollBox.offset(),y=_coordinates(e)[0]-offset.top,x=_coordinates(e)[1]-offset.left;\r\n\t\t\t\tif((endTime-runningTime)>30){return;}\r\n\t\t\t\tspeed=1000/(endTime-startTime);\r\n\t\t\t\tvar easing=\"mcsEaseOut\",slow=speed<2.5,\r\n\t\t\t\t\tdiff=slow ? [touchMoveY[touchMoveY.length-2],touchMoveX[touchMoveX.length-2]] : [0,0];\r\n\t\t\t\tdistance=slow ? [(y-diff[0]),(x-diff[1])] : [y-touchStartY,x-touchStartX];\r\n\t\t\t\tvar absDistance=[Math.abs(distance[0]),Math.abs(distance[1])];\r\n\t\t\t\tspeed=slow ? [Math.abs(distance[0]/4),Math.abs(distance[1]/4)] : [speed,speed];\r\n\t\t\t\tvar a=[\r\n\t\t\t\t\tMath.abs(mCSB_container[0].offsetTop)-(distance[0]*_m((absDistance[0]/speed[0]),speed[0])),\r\n\t\t\t\t\tMath.abs(mCSB_container[0].offsetLeft)-(distance[1]*_m((absDistance[1]/speed[1]),speed[1]))\r\n\t\t\t\t];\r\n\t\t\t\tamount=o.axis===\"yx\" ? [a[0],a[1]] : o.axis===\"x\" ? [null,a[1]] : [a[0],null];\r\n\t\t\t\tdurB=[(absDistance[0]*4)+o.scrollInertia,(absDistance[1]*4)+o.scrollInertia];\r\n\t\t\t\tvar md=parseInt(o.contentTouchScroll) || 0; /* absolute minimum distance required */\r\n\t\t\t\tamount[0]=absDistance[0]>md ? amount[0] : 0;\r\n\t\t\t\tamount[1]=absDistance[1]>md ? amount[1] : 0;\r\n\t\t\t\tif(d.overflowed[0]){_drag(amount[0],durB[0],easing,\"y\",overwrite,false);}\r\n\t\t\t\tif(d.overflowed[1]){_drag(amount[1],durB[1],easing,\"x\",overwrite,false);}\r\n\t\t\t}\r\n\t\t\tfunction _m(ds,s){\r\n\t\t\t\tvar r=[s*1.5,s*2,s/1.5,s/2];\r\n\t\t\t\tif(ds>90){\r\n\t\t\t\t\treturn s>4 ? r[0] : r[3];\r\n\t\t\t\t}else if(ds>60){\r\n\t\t\t\t\treturn s>3 ? r[3] : r[2];\r\n\t\t\t\t}else if(ds>30){\r\n\t\t\t\t\treturn s>8 ? r[1] : s>6 ? r[0] : s>4 ? s : r[2];\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn s>8 ? s : r[3];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction _drag(amount,dur,easing,dir,overwrite,drag){\r\n\t\t\t\tif(!amount){return;}\r\n\t\t\t\t_scrollTo($this,amount.toString(),{dur:dur,scrollEasing:easing,dir:dir,overwrite:overwrite,drag:drag});\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tSELECT TEXT EVENTS \r\n\t\tscrolls content when text is selected \r\n\t\t*/\r\n\t\t_selectable=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,seq=d.sequential,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\twrapper=mCSB_container.parent(),\r\n\t\t\t\taction;\r\n\t\t\tmCSB_container.bind(\"mousedown.\"+namespace,function(e){\r\n\t\t\t\tif(touchable){return;}\r\n\t\t\t\tif(!action){action=1; touchActive=true;}\r\n\t\t\t}).add(document).bind(\"mousemove.\"+namespace,function(e){\r\n\t\t\t\tif(!touchable && action && _sel()){\r\n\t\t\t\t\tvar offset=mCSB_container.offset(),\r\n\t\t\t\t\t\ty=_coordinates(e)[0]-offset.top+mCSB_container[0].offsetTop,x=_coordinates(e)[1]-offset.left+mCSB_container[0].offsetLeft;\r\n\t\t\t\t\tif(y>0 && y<wrapper.height() && x>0 && x<wrapper.width()){\r\n\t\t\t\t\t\tif(seq.step){_seq(\"off\",null,\"stepped\");}\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(o.axis!==\"x\" && d.overflowed[0]){\r\n\t\t\t\t\t\t\tif(y<0){\r\n\t\t\t\t\t\t\t\t_seq(\"on\",38);\r\n\t\t\t\t\t\t\t}else if(y>wrapper.height()){\r\n\t\t\t\t\t\t\t\t_seq(\"on\",40);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(o.axis!==\"y\" && d.overflowed[1]){\r\n\t\t\t\t\t\t\tif(x<0){\r\n\t\t\t\t\t\t\t\t_seq(\"on\",37);\r\n\t\t\t\t\t\t\t}else if(x>wrapper.width()){\r\n\t\t\t\t\t\t\t\t_seq(\"on\",39);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).bind(\"mouseup.\"+namespace+\" dragend.\"+namespace,function(e){\r\n\t\t\t\tif(touchable){return;}\r\n\t\t\t\tif(action){action=0; _seq(\"off\",null);}\r\n\t\t\t\ttouchActive=false;\r\n\t\t\t});\r\n\t\t\tfunction _sel(){\r\n\t\t\t\treturn \twindow.getSelection ? window.getSelection().toString() : \r\n\t\t\t\t\t\tdocument.selection && document.selection.type!=\"Control\" ? document.selection.createRange().text : 0;\r\n\t\t\t}\r\n\t\t\tfunction _seq(a,c,s){\r\n\t\t\t\tseq.type=s && action ? \"stepped\" : \"stepless\";\r\n\t\t\t\tseq.scrollAmount=10;\r\n\t\t\t\t_sequentialScroll($this,a,c,\"mcsLinearOut\",s ? 60 : null);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tMOUSE WHEEL EVENT\r\n\t\tscrolls content via mouse-wheel \r\n\t\tvia mouse-wheel plugin (https://github.com/brandonaaron/jquery-mousewheel)\r\n\t\t*/\r\n\t\t_mousewheel=function(){\r\n\t\t\tif(!$(this).data(pluginPfx)){return;} /* Check if the scrollbar is ready to use mousewheel events (issue: #185) */\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_dragger=[$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\")],\r\n\t\t\t\tiframe=$(\"#mCSB_\"+d.idx+\"_container\").find(\"iframe\");\r\n\t\t\tif(iframe.length){\r\n\t\t\t\tiframe.each(function(){\r\n\t\t\t\t\t$(this).bind(\"load\",function(){\r\n\t\t\t\t\t\t/* bind events on accessible iframes */\r\n\t\t\t\t\t\tif(_canAccessIFrame(this)){\r\n\t\t\t\t\t\t\t$(this.contentDocument || this.contentWindow.document).bind(\"mousewheel.\"+namespace,function(e,delta){\r\n\t\t\t\t\t\t\t\t_onMousewheel(e,delta);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tmCustomScrollBox.bind(\"mousewheel.\"+namespace,function(e,delta){\r\n\t\t\t\t_onMousewheel(e,delta);\r\n\t\t\t});\r\n\t\t\tfunction _onMousewheel(e,delta){\r\n\t\t\t\t_stop($this);\r\n\t\t\t\tif(_disableMousewheel($this,e.target)){return;} /* disables mouse-wheel when hovering specific elements */\r\n\t\t\t\tvar deltaFactor=o.mouseWheel.deltaFactor!==\"auto\" ? parseInt(o.mouseWheel.deltaFactor) : (oldIE && e.deltaFactor<100) ? 100 : e.deltaFactor || 100,\r\n\t\t\t\t\tdur=o.scrollInertia;\r\n\t\t\t\tif(o.axis===\"x\" || o.mouseWheel.axis===\"x\"){\r\n\t\t\t\t\tvar dir=\"x\",\r\n\t\t\t\t\t\tpx=[Math.round(deltaFactor*d.scrollRatio.x),parseInt(o.mouseWheel.scrollAmount)],\r\n\t\t\t\t\t\tamount=o.mouseWheel.scrollAmount!==\"auto\" ? px[1] : px[0]>=mCustomScrollBox.width() ? mCustomScrollBox.width()*0.9 : px[0],\r\n\t\t\t\t\t\tcontentPos=Math.abs($(\"#mCSB_\"+d.idx+\"_container\")[0].offsetLeft),\r\n\t\t\t\t\t\tdraggerPos=mCSB_dragger[1][0].offsetLeft,\r\n\t\t\t\t\t\tlimit=mCSB_dragger[1].parent().width()-mCSB_dragger[1].width(),\r\n\t\t\t\t\t\tdlt=o.mouseWheel.axis===\"y\" ? (e.deltaY || delta) : e.deltaX;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar dir=\"y\",\r\n\t\t\t\t\t\tpx=[Math.round(deltaFactor*d.scrollRatio.y),parseInt(o.mouseWheel.scrollAmount)],\r\n\t\t\t\t\t\tamount=o.mouseWheel.scrollAmount!==\"auto\" ? px[1] : px[0]>=mCustomScrollBox.height() ? mCustomScrollBox.height()*0.9 : px[0],\r\n\t\t\t\t\t\tcontentPos=Math.abs($(\"#mCSB_\"+d.idx+\"_container\")[0].offsetTop),\r\n\t\t\t\t\t\tdraggerPos=mCSB_dragger[0][0].offsetTop,\r\n\t\t\t\t\t\tlimit=mCSB_dragger[0].parent().height()-mCSB_dragger[0].height(),\r\n\t\t\t\t\t\tdlt=e.deltaY || delta;\r\n\t\t\t\t}\r\n\t\t\t\tif((dir===\"y\" && !d.overflowed[0]) || (dir===\"x\" && !d.overflowed[1])){return;}\r\n\t\t\t\tif(o.mouseWheel.invert || e.webkitDirectionInvertedFromDevice){dlt=-dlt;}\r\n\t\t\t\tif(o.mouseWheel.normalizeDelta){dlt=dlt<0 ? -1 : 1;}\r\n\t\t\t\tif((dlt>0 && draggerPos!==0) || (dlt<0 && draggerPos!==limit) || o.mouseWheel.preventDefault){\r\n\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tif(e.deltaFactor<5 && !o.mouseWheel.normalizeDelta){\r\n\t\t\t\t\t//very low deltaFactor values mean some kind of delta acceleration (e.g. osx trackpad), so adjusting scrolling accordingly\r\n\t\t\t\t\tamount=e.deltaFactor; dur=17;\r\n\t\t\t\t}\r\n\t\t\t\t_scrollTo($this,(contentPos-(dlt*amount)).toString(),{dir:dir,dur:dur});\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* checks if iframe can be accessed */\r\n\t\t_canAccessIFrameCache=new Object(),\r\n\t\t_canAccessIFrame=function(iframe){\r\n\t\t    var result=false,cacheKey=false,html=null;\r\n\t\t    if(iframe===undefined){\r\n\t\t\t\tcacheKey=\"#empty\";\r\n\t\t    }else if($(iframe).attr(\"id\")!==undefined){\r\n\t\t\t\tcacheKey=$(iframe).attr(\"id\");\r\n\t\t    }\r\n\t\t\tif(cacheKey!==false && _canAccessIFrameCache[cacheKey]!==undefined){\r\n\t\t\t\treturn _canAccessIFrameCache[cacheKey];\r\n\t\t\t}\r\n\t\t\tif(!iframe){\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvar doc=top.document;\r\n\t\t\t\t\thtml=doc.body.innerHTML;\r\n\t\t\t\t}catch(err){/* do nothing */}\r\n\t\t\t\tresult=(html!==null);\r\n\t\t\t}else{\r\n\t\t\t\ttry{\r\n\t\t\t\t\tvar doc=iframe.contentDocument || iframe.contentWindow.document;\r\n\t\t\t\t\thtml=doc.body.innerHTML;\r\n\t\t\t\t}catch(err){/* do nothing */}\r\n\t\t\t\tresult=(html!==null);\r\n\t\t\t}\r\n\t\t\tif(cacheKey!==false){_canAccessIFrameCache[cacheKey]=result;}\r\n\t\t\treturn result;\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* switches iframe's pointer-events property (drag, mousewheel etc. over cross-domain iframes) */\r\n\t\t_iframe=function(evt){\r\n\t\t\tvar el=this.find(\"iframe\");\r\n\t\t\tif(!el.length){return;} /* check if content contains iframes */\r\n\t\t\tvar val=!evt ? \"none\" : \"auto\";\r\n\t\t\tel.css(\"pointer-events\",val); /* for IE11, iframe's display property should not be \"block\" */\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* disables mouse-wheel when hovering specific elements like select, datalist etc. */\r\n\t\t_disableMousewheel=function(el,target){\r\n\t\t\tvar tag=target.nodeName.toLowerCase(),\r\n\t\t\t\ttags=el.data(pluginPfx).opt.mouseWheel.disableOver,\r\n\t\t\t\t/* elements that require focus */\r\n\t\t\t\tfocusTags=[\"select\",\"textarea\"];\r\n\t\t\treturn $.inArray(tag,tags) > -1 && !($.inArray(tag,focusTags) > -1 && !$(target).is(\":focus\"));\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tDRAGGER RAIL CLICK EVENT\r\n\t\tscrolls content via dragger rail \r\n\t\t*/\r\n\t\t_draggerRail=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\twrapper=mCSB_container.parent(),\r\n\t\t\t\tmCSB_draggerContainer=$(\".mCSB_\"+d.idx+\"_scrollbar .\"+classes[12]),\r\n\t\t\t\tclickable;\r\n\t\t\tmCSB_draggerContainer.bind(\"mousedown.\"+namespace+\" touchstart.\"+namespace+\" pointerdown.\"+namespace+\" MSPointerDown.\"+namespace,function(e){\r\n\t\t\t\ttouchActive=true;\r\n\t\t\t\tif(!$(e.target).hasClass(\"mCSB_dragger\")){clickable=1;}\r\n\t\t\t}).bind(\"touchend.\"+namespace+\" pointerup.\"+namespace+\" MSPointerUp.\"+namespace,function(e){\r\n\t\t\t\ttouchActive=false;\r\n\t\t\t}).bind(\"click.\"+namespace,function(e){\r\n\t\t\t\tif(!clickable){return;}\r\n\t\t\t\tclickable=0;\r\n\t\t\t\tif($(e.target).hasClass(classes[12]) || $(e.target).hasClass(\"mCSB_draggerRail\")){\r\n\t\t\t\t\t_stop($this);\r\n\t\t\t\t\tvar el=$(this),mCSB_dragger=el.find(\".mCSB_dragger\");\r\n\t\t\t\t\tif(el.parent(\".mCSB_scrollTools_horizontal\").length>0){\r\n\t\t\t\t\t\tif(!d.overflowed[1]){return;}\r\n\t\t\t\t\t\tvar dir=\"x\",\r\n\t\t\t\t\t\t\tclickDir=e.pageX>mCSB_dragger.offset().left ? -1 : 1,\r\n\t\t\t\t\t\t\tto=Math.abs(mCSB_container[0].offsetLeft)-(clickDir*(wrapper.width()*0.9));\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(!d.overflowed[0]){return;}\r\n\t\t\t\t\t\tvar dir=\"y\",\r\n\t\t\t\t\t\t\tclickDir=e.pageY>mCSB_dragger.offset().top ? -1 : 1,\r\n\t\t\t\t\t\t\tto=Math.abs(mCSB_container[0].offsetTop)-(clickDir*(wrapper.height()*0.9));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_scrollTo($this,to.toString(),{dir:dir,scrollEasing:\"mcsEaseInOut\"});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tFOCUS EVENT\r\n\t\tscrolls content via element focus (e.g. clicking an input, pressing TAB key etc.)\r\n\t\t*/\r\n\t\t_focus=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\twrapper=mCSB_container.parent();\r\n\t\t\tmCSB_container.bind(\"focusin.\"+namespace,function(e){\r\n\t\t\t\tvar el=$(document.activeElement),\r\n\t\t\t\t\tnested=mCSB_container.find(\".mCustomScrollBox\").length,\r\n\t\t\t\t\tdur=0;\r\n\t\t\t\tif(!el.is(o.advanced.autoScrollOnFocus)){return;}\r\n\t\t\t\t_stop($this);\r\n\t\t\t\tclearTimeout($this[0]._focusTimeout);\r\n\t\t\t\t$this[0]._focusTimer=nested ? (dur+17)*nested : 0;\r\n\t\t\t\t$this[0]._focusTimeout=setTimeout(function(){\r\n\t\t\t\t\tvar\tto=[_childPos(el)[0],_childPos(el)[1]],\r\n\t\t\t\t\t\tcontentPos=[mCSB_container[0].offsetTop,mCSB_container[0].offsetLeft],\r\n\t\t\t\t\t\tisVisible=[\r\n\t\t\t\t\t\t\t(contentPos[0]+to[0]>=0 && contentPos[0]+to[0]<wrapper.height()-el.outerHeight(false)),\r\n\t\t\t\t\t\t\t(contentPos[1]+to[1]>=0 && contentPos[0]+to[1]<wrapper.width()-el.outerWidth(false))\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\toverwrite=(o.axis===\"yx\" && !isVisible[0] && !isVisible[1]) ? \"none\" : \"all\";\r\n\t\t\t\t\tif(o.axis!==\"x\" && !isVisible[0]){\r\n\t\t\t\t\t\t_scrollTo($this,to[0].toString(),{dir:\"y\",scrollEasing:\"mcsEaseInOut\",overwrite:overwrite,dur:dur});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(o.axis!==\"y\" && !isVisible[1]){\r\n\t\t\t\t\t\t_scrollTo($this,to[1].toString(),{dir:\"x\",scrollEasing:\"mcsEaseInOut\",overwrite:overwrite,dur:dur});\r\n\t\t\t\t\t}\r\n\t\t\t\t},$this[0]._focusTimer);\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* sets content wrapper scrollTop/scrollLeft always to 0 */\r\n\t\t_wrapperScroll=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\twrapper=$(\"#mCSB_\"+d.idx+\"_container\").parent();\r\n\t\t\twrapper.bind(\"scroll.\"+namespace,function(e){\r\n\t\t\t\tif(wrapper.scrollTop()!==0 || wrapper.scrollLeft()!==0){\r\n\t\t\t\t\t$(\".mCSB_\"+d.idx+\"_scrollbar\").css(\"visibility\",\"hidden\"); /* hide scrollbar(s) */\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tBUTTONS EVENTS\r\n\t\tscrolls content via up, down, left and right buttons \r\n\t\t*/\r\n\t\t_buttons=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,seq=d.sequential,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tsel=\".mCSB_\"+d.idx+\"_scrollbar\",\r\n\t\t\t\tbtn=$(sel+\">a\");\r\n\t\t\tbtn.bind(\"contextmenu.\"+namespace,function(e){\r\n\t\t\t\te.preventDefault(); //prevent right click\r\n\t\t\t}).bind(\"mousedown.\"+namespace+\" touchstart.\"+namespace+\" pointerdown.\"+namespace+\" MSPointerDown.\"+namespace+\" mouseup.\"+namespace+\" touchend.\"+namespace+\" pointerup.\"+namespace+\" MSPointerUp.\"+namespace+\" mouseout.\"+namespace+\" pointerout.\"+namespace+\" MSPointerOut.\"+namespace+\" click.\"+namespace,function(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(!_mouseBtnLeft(e)){return;} /* left mouse button only */\r\n\t\t\t\tvar btnClass=$(this).attr(\"class\");\r\n\t\t\t\tseq.type=o.scrollButtons.scrollType;\r\n\t\t\t\tswitch(e.type){\r\n\t\t\t\t\tcase \"mousedown\": case \"touchstart\": case \"pointerdown\": case \"MSPointerDown\":\r\n\t\t\t\t\t\tif(seq.type===\"stepped\"){return;}\r\n\t\t\t\t\t\ttouchActive=true;\r\n\t\t\t\t\t\td.tweenRunning=false;\r\n\t\t\t\t\t\t_seq(\"on\",btnClass);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"mouseup\": case \"touchend\": case \"pointerup\": case \"MSPointerUp\":\r\n\t\t\t\t\tcase \"mouseout\": case \"pointerout\": case \"MSPointerOut\":\r\n\t\t\t\t\t\tif(seq.type===\"stepped\"){return;}\r\n\t\t\t\t\t\ttouchActive=false;\r\n\t\t\t\t\t\tif(seq.dir){_seq(\"off\",btnClass);}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"click\":\r\n\t\t\t\t\t\tif(seq.type!==\"stepped\" || d.tweenRunning){return;}\r\n\t\t\t\t\t\t_seq(\"on\",btnClass);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tfunction _seq(a,c){\r\n\t\t\t\t\tseq.scrollAmount=o.scrollButtons.scrollAmount;\r\n\t\t\t\t\t_sequentialScroll($this,a,c);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tKEYBOARD EVENTS\r\n\t\tscrolls content via keyboard \r\n\t\tKeys: up arrow, down arrow, left arrow, right arrow, PgUp, PgDn, Home, End\r\n\t\t*/\r\n\t\t_keyboard=function(){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,seq=d.sequential,\r\n\t\t\t\tnamespace=pluginPfx+\"_\"+d.idx,\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\twrapper=mCSB_container.parent(),\r\n\t\t\t\teditables=\"input,textarea,select,datalist,keygen,[contenteditable='true']\",\r\n\t\t\t\tiframe=mCSB_container.find(\"iframe\"),\r\n\t\t\t\tevents=[\"blur.\"+namespace+\" keydown.\"+namespace+\" keyup.\"+namespace];\r\n\t\t\tif(iframe.length){\r\n\t\t\t\tiframe.each(function(){\r\n\t\t\t\t\t$(this).bind(\"load\",function(){\r\n\t\t\t\t\t\t/* bind events on accessible iframes */\r\n\t\t\t\t\t\tif(_canAccessIFrame(this)){\r\n\t\t\t\t\t\t\t$(this.contentDocument || this.contentWindow.document).bind(events[0],function(e){\r\n\t\t\t\t\t\t\t\t_onKeyboard(e);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tmCustomScrollBox.attr(\"tabindex\",\"0\").bind(events[0],function(e){\r\n\t\t\t\t_onKeyboard(e);\r\n\t\t\t});\r\n\t\t\tfunction _onKeyboard(e){\r\n\t\t\t\tswitch(e.type){\r\n\t\t\t\t\tcase \"blur\":\r\n\t\t\t\t\t\tif(d.tweenRunning && seq.dir){_seq(\"off\",null);}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"keydown\": case \"keyup\":\r\n\t\t\t\t\t\tvar code=e.keyCode ? e.keyCode : e.which,action=\"on\";\r\n\t\t\t\t\t\tif((o.axis!==\"x\" && (code===38 || code===40)) || (o.axis!==\"y\" && (code===37 || code===39))){\r\n\t\t\t\t\t\t\t/* up (38), down (40), left (37), right (39) arrows */\r\n\t\t\t\t\t\t\tif(((code===38 || code===40) && !d.overflowed[0]) || ((code===37 || code===39) && !d.overflowed[1])){return;}\r\n\t\t\t\t\t\t\tif(e.type===\"keyup\"){action=\"off\";}\r\n\t\t\t\t\t\t\tif(!$(document.activeElement).is(editables)){\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\t_seq(action,code);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(code===33 || code===34){\r\n\t\t\t\t\t\t\t/* PgUp (33), PgDn (34) */\r\n\t\t\t\t\t\t\tif(d.overflowed[0] || d.overflowed[1]){\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(e.type===\"keyup\"){\r\n\t\t\t\t\t\t\t\t_stop($this);\r\n\t\t\t\t\t\t\t\tvar keyboardDir=code===34 ? -1 : 1;\r\n\t\t\t\t\t\t\t\tif(o.axis===\"x\" || (o.axis===\"yx\" && d.overflowed[1] && !d.overflowed[0])){\r\n\t\t\t\t\t\t\t\t\tvar dir=\"x\",to=Math.abs(mCSB_container[0].offsetLeft)-(keyboardDir*(wrapper.width()*0.9));\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tvar dir=\"y\",to=Math.abs(mCSB_container[0].offsetTop)-(keyboardDir*(wrapper.height()*0.9));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_scrollTo($this,to.toString(),{dir:dir,scrollEasing:\"mcsEaseInOut\"});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else if(code===35 || code===36){\r\n\t\t\t\t\t\t\t/* End (35), Home (36) */\r\n\t\t\t\t\t\t\tif(!$(document.activeElement).is(editables)){\r\n\t\t\t\t\t\t\t\tif(d.overflowed[0] || d.overflowed[1]){\r\n\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(e.type===\"keyup\"){\r\n\t\t\t\t\t\t\t\t\tif(o.axis===\"x\" || (o.axis===\"yx\" && d.overflowed[1] && !d.overflowed[0])){\r\n\t\t\t\t\t\t\t\t\t\tvar dir=\"x\",to=code===35 ? Math.abs(wrapper.width()-mCSB_container.outerWidth(false)) : 0;\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\tvar dir=\"y\",to=code===35 ? Math.abs(wrapper.height()-mCSB_container.outerHeight(false)) : 0;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t_scrollTo($this,to.toString(),{dir:dir,scrollEasing:\"mcsEaseInOut\"});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tfunction _seq(a,c){\r\n\t\t\t\t\tseq.type=o.keyboard.scrollType;\r\n\t\t\t\t\tseq.scrollAmount=o.keyboard.scrollAmount;\r\n\t\t\t\t\tif(seq.type===\"stepped\" && d.tweenRunning){return;}\r\n\t\t\t\t\t_sequentialScroll($this,a,c);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* scrolls content sequentially (used when scrolling via buttons, keyboard arrows etc.) */\r\n\t\t_sequentialScroll=function(el,action,trigger,e,s){\r\n\t\t\tvar d=el.data(pluginPfx),o=d.opt,seq=d.sequential,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\tonce=seq.type===\"stepped\" ? true : false,\r\n\t\t\t\tsteplessSpeed=o.scrollInertia < 26 ? 26 : o.scrollInertia, /* 26/1.5=17 */\r\n\t\t\t\tsteppedSpeed=o.scrollInertia < 1 ? 17 : o.scrollInertia;\r\n\t\t\tswitch(action){\r\n\t\t\t\tcase \"on\":\r\n\t\t\t\t\tseq.dir=[\r\n\t\t\t\t\t\t(trigger===classes[16] || trigger===classes[15] || trigger===39 || trigger===37 ? \"x\" : \"y\"),\r\n\t\t\t\t\t\t(trigger===classes[13] || trigger===classes[15] || trigger===38 || trigger===37 ? -1 : 1)\r\n\t\t\t\t\t];\r\n\t\t\t\t\t_stop(el);\r\n\t\t\t\t\tif(_isNumeric(trigger) && seq.type===\"stepped\"){return;}\r\n\t\t\t\t\t_on(once);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"off\":\r\n\t\t\t\t\t_off();\r\n\t\t\t\t\tif(once || (d.tweenRunning && seq.dir)){\r\n\t\t\t\t\t\t_on(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/* starts sequence */\r\n\t\t\tfunction _on(once){\r\n\t\t\t\tif(o.snapAmount){seq.scrollAmount=!(o.snapAmount instanceof Array) ? o.snapAmount : seq.dir[0]===\"x\" ? o.snapAmount[1] : o.snapAmount[0];} /* scrolling snapping */\r\n\t\t\t\tvar c=seq.type!==\"stepped\", /* continuous scrolling */\r\n\t\t\t\t\tt=s ? s : !once ? 1000/60 : c ? steplessSpeed/1.5 : steppedSpeed, /* timer */\r\n\t\t\t\t\tm=!once ? 2.5 : c ? 7.5 : 40, /* multiplier */\r\n\t\t\t\t\tcontentPos=[Math.abs(mCSB_container[0].offsetTop),Math.abs(mCSB_container[0].offsetLeft)],\r\n\t\t\t\t\tratio=[d.scrollRatio.y>10 ? 10 : d.scrollRatio.y,d.scrollRatio.x>10 ? 10 : d.scrollRatio.x],\r\n\t\t\t\t\tamount=seq.dir[0]===\"x\" ? contentPos[1]+(seq.dir[1]*(ratio[1]*m)) : contentPos[0]+(seq.dir[1]*(ratio[0]*m)),\r\n\t\t\t\t\tpx=seq.dir[0]===\"x\" ? contentPos[1]+(seq.dir[1]*parseInt(seq.scrollAmount)) : contentPos[0]+(seq.dir[1]*parseInt(seq.scrollAmount)),\r\n\t\t\t\t\tto=seq.scrollAmount!==\"auto\" ? px : amount,\r\n\t\t\t\t\teasing=e ? e : !once ? \"mcsLinear\" : c ? \"mcsLinearOut\" : \"mcsEaseInOut\",\r\n\t\t\t\t\tonComplete=!once ? false : true;\r\n\t\t\t\tif(once && t<17){\r\n\t\t\t\t\tto=seq.dir[0]===\"x\" ? contentPos[1] : contentPos[0];\r\n\t\t\t\t}\r\n\t\t\t\t_scrollTo(el,to.toString(),{dir:seq.dir[0],scrollEasing:easing,dur:t,onComplete:onComplete});\r\n\t\t\t\tif(once){\r\n\t\t\t\t\tseq.dir=false;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tclearTimeout(seq.step);\r\n\t\t\t\tseq.step=setTimeout(function(){\r\n\t\t\t\t\t_on();\r\n\t\t\t\t},t);\r\n\t\t\t}\r\n\t\t\t/* stops sequence */\r\n\t\t\tfunction _off(){\r\n\t\t\t\tclearTimeout(seq.step);\r\n\t\t\t\t_delete(seq,\"step\");\r\n\t\t\t\t_stop(el);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* returns a yx array from value */\r\n\t\t_arr=function(val){\r\n\t\t\tvar o=$(this).data(pluginPfx).opt,vals=[];\r\n\t\t\tif(typeof val===\"function\"){val=val();} /* check if the value is a single anonymous function */\r\n\t\t\t/* check if value is object or array, its length and create an array with yx values */\r\n\t\t\tif(!(val instanceof Array)){ /* object value (e.g. {y:\"100\",x:\"100\"}, 100 etc.) */\r\n\t\t\t\tvals[0]=val.y ? val.y : val.x || o.axis===\"x\" ? null : val;\r\n\t\t\t\tvals[1]=val.x ? val.x : val.y || o.axis===\"y\" ? null : val;\r\n\t\t\t}else{ /* array value (e.g. [100,100]) */\r\n\t\t\t\tvals=val.length>1 ? [val[0],val[1]] : o.axis===\"x\" ? [null,val[0]] : [val[0],null];\r\n\t\t\t}\r\n\t\t\t/* check if array values are anonymous functions */\r\n\t\t\tif(typeof vals[0]===\"function\"){vals[0]=vals[0]();}\r\n\t\t\tif(typeof vals[1]===\"function\"){vals[1]=vals[1]();}\r\n\t\t\treturn vals;\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* translates values (e.g. \"top\", 100, \"100px\", \"#id\") to actual scroll-to positions */\r\n\t\t_to=function(val,dir){\r\n\t\t\tif(val==null || typeof val==\"undefined\"){return;}\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\twrapper=mCSB_container.parent(),\r\n\t\t\t\tt=typeof val;\r\n\t\t\tif(!dir){dir=o.axis===\"x\" ? \"x\" : \"y\";}\r\n\t\t\tvar contentLength=dir===\"x\" ? mCSB_container.outerWidth(false)-wrapper.width() : mCSB_container.outerHeight(false)-wrapper.height(),\r\n\t\t\t\tcontentPos=dir===\"x\" ? mCSB_container[0].offsetLeft : mCSB_container[0].offsetTop,\r\n\t\t\t\tcssProp=dir===\"x\" ? \"left\" : \"top\";\r\n\t\t\tswitch(t){\r\n\t\t\t\tcase \"function\": /* this currently is not used. Consider removing it */\r\n\t\t\t\t\treturn val();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"object\": /* js/jquery object */\r\n\t\t\t\t\tvar obj=val.jquery ? val : $(val);\r\n\t\t\t\t\tif(!obj.length){return;}\r\n\t\t\t\t\treturn dir===\"x\" ? _childPos(obj)[1] : _childPos(obj)[0];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"string\": case \"number\":\r\n\t\t\t\t\tif(_isNumeric(val)){ /* numeric value */\r\n\t\t\t\t\t\treturn Math.abs(val);\r\n\t\t\t\t\t}else if(val.indexOf(\"%\")!==-1){ /* percentage value */\r\n\t\t\t\t\t\treturn Math.abs(contentLength*parseInt(val)/100);\r\n\t\t\t\t\t}else if(val.indexOf(\"-=\")!==-1){ /* decrease value */\r\n\t\t\t\t\t\treturn Math.abs(contentPos-parseInt(val.split(\"-=\")[1]));\r\n\t\t\t\t\t}else if(val.indexOf(\"+=\")!==-1){ /* inrease value */\r\n\t\t\t\t\t\tvar p=(contentPos+parseInt(val.split(\"+=\")[1]));\r\n\t\t\t\t\t\treturn p>=0 ? 0 : Math.abs(p);\r\n\t\t\t\t\t}else if(val.indexOf(\"px\")!==-1 && _isNumeric(val.split(\"px\")[0])){ /* pixels string value (e.g. \"100px\") */\r\n\t\t\t\t\t\treturn Math.abs(val.split(\"px\")[0]);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(val===\"top\" || val===\"left\"){ /* special strings */\r\n\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t}else if(val===\"bottom\"){\r\n\t\t\t\t\t\t\treturn Math.abs(wrapper.height()-mCSB_container.outerHeight(false));\r\n\t\t\t\t\t\t}else if(val===\"right\"){\r\n\t\t\t\t\t\t\treturn Math.abs(wrapper.width()-mCSB_container.outerWidth(false));\r\n\t\t\t\t\t\t}else if(val===\"first\" || val===\"last\"){\r\n\t\t\t\t\t\t\tvar obj=mCSB_container.find(\":\"+val);\r\n\t\t\t\t\t\t\treturn dir===\"x\" ? _childPos(obj)[1] : _childPos(obj)[0];\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tif($(val).length){ /* jquery selector */\r\n\t\t\t\t\t\t\t\treturn dir===\"x\" ? _childPos($(val))[1] : _childPos($(val))[0];\r\n\t\t\t\t\t\t\t}else{ /* other values (e.g. \"100em\") */\r\n\t\t\t\t\t\t\t\tmCSB_container.css(cssProp,val);\r\n\t\t\t\t\t\t\t\tmethods.update.call(null,$this[0]);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* calls the update method automatically */\r\n\t\t_autoUpdate=function(rem){\r\n\t\t\tvar $this=$(this),d=$this.data(pluginPfx),o=d.opt,\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\");\r\n\t\t\tif(rem){\r\n\t\t\t\t/* \r\n\t\t\t\tremoves autoUpdate timer \r\n\t\t\t\tusage: _autoUpdate.call(this,\"remove\");\r\n\t\t\t\t*/\r\n\t\t\t\tclearTimeout(mCSB_container[0].autoUpdate);\r\n\t\t\t\t_delete(mCSB_container[0],\"autoUpdate\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tupd();\r\n\t\t\tfunction upd(){\r\n\t\t\t\tclearTimeout(mCSB_container[0].autoUpdate);\r\n\t\t\t\tif($this.parents(\"html\").length===0){\r\n\t\t\t\t\t/* check element in dom tree */\r\n\t\t\t\t\t$this=null;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tmCSB_container[0].autoUpdate=setTimeout(function(){\r\n\t\t\t\t\t/* update on specific selector(s) length and size change */\r\n\t\t\t\t\tif(o.advanced.updateOnSelectorChange){\r\n\t\t\t\t\t\td.poll.change.n=sizesSum();\r\n\t\t\t\t\t\tif(d.poll.change.n!==d.poll.change.o){\r\n\t\t\t\t\t\t\td.poll.change.o=d.poll.change.n;\r\n\t\t\t\t\t\t\tdoUpd(3);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* update on main element and scrollbar size changes */\r\n\t\t\t\t\tif(o.advanced.updateOnContentResize){\r\n\t\t\t\t\t\td.poll.size.n=$this[0].scrollHeight+$this[0].scrollWidth+mCSB_container[0].offsetHeight+$this[0].offsetHeight+$this[0].offsetWidth;\r\n\t\t\t\t\t\tif(d.poll.size.n!==d.poll.size.o){\r\n\t\t\t\t\t\t\td.poll.size.o=d.poll.size.n;\r\n\t\t\t\t\t\t\tdoUpd(1);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* update on image load */\r\n\t\t\t\t\tif(o.advanced.updateOnImageLoad){\r\n\t\t\t\t\t\tif(!(o.advanced.updateOnImageLoad===\"auto\" && o.axis===\"y\")){ //by default, it doesn't run on vertical content\r\n\t\t\t\t\t\t\td.poll.img.n=mCSB_container.find(\"img\").length;\r\n\t\t\t\t\t\t\tif(d.poll.img.n!==d.poll.img.o){\r\n\t\t\t\t\t\t\t\td.poll.img.o=d.poll.img.n;\r\n\t\t\t\t\t\t\t\tmCSB_container.find(\"img\").each(function(){\r\n\t\t\t\t\t\t\t\t\timgLoader(this);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(o.advanced.updateOnSelectorChange || o.advanced.updateOnContentResize || o.advanced.updateOnImageLoad){upd();}\r\n\t\t\t\t},o.advanced.autoUpdateTimeout);\r\n\t\t\t}\r\n\t\t\t/* a tiny image loader */\r\n\t\t\tfunction imgLoader(el){\r\n\t\t\t\tif($(el).hasClass(classes[2])){doUpd(); return;}\r\n\t\t\t\tvar img=new Image();\r\n\t\t\t\tfunction createDelegate(contextObject,delegateMethod){\r\n\t\t\t\t\treturn function(){return delegateMethod.apply(contextObject,arguments);}\r\n\t\t\t\t}\r\n\t\t\t\tfunction imgOnLoad(){\r\n\t\t\t\t\tthis.onload=null;\r\n\t\t\t\t\t$(el).addClass(classes[2]);\r\n\t\t\t\t\tdoUpd(2);\r\n\t\t\t\t}\r\n\t\t\t\timg.onload=createDelegate(img,imgOnLoad);\r\n\t\t\t\timg.src=el.src;\r\n\t\t\t}\r\n\t\t\t/* returns the total height and width sum of all elements matching the selector */\r\n\t\t\tfunction sizesSum(){\r\n\t\t\t\tif(o.advanced.updateOnSelectorChange===true){o.advanced.updateOnSelectorChange=\"*\";}\r\n\t\t\t\tvar total=0,sel=mCSB_container.find(o.advanced.updateOnSelectorChange);\r\n\t\t\t\tif(o.advanced.updateOnSelectorChange && sel.length>0){sel.each(function(){total+=this.offsetHeight+this.offsetWidth;});}\r\n\t\t\t\treturn total;\r\n\t\t\t}\r\n\t\t\t/* calls the update method */\r\n\t\t\tfunction doUpd(cb){\r\n\t\t\t\tclearTimeout(mCSB_container[0].autoUpdate);\r\n\t\t\t\tmethods.update.call(null,$this[0],cb);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* snaps scrolling to a multiple of a pixels number */\r\n\t\t_snapAmount=function(to,amount,offset){\r\n\t\t\treturn (Math.round(to/amount)*amount-offset); \r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* stops content and scrollbar animations */\r\n\t\t_stop=function(el){\r\n\t\t\tvar d=el.data(pluginPfx),\r\n\t\t\t\tsel=$(\"#mCSB_\"+d.idx+\"_container,#mCSB_\"+d.idx+\"_container_wrapper,#mCSB_\"+d.idx+\"_dragger_vertical,#mCSB_\"+d.idx+\"_dragger_horizontal\");\r\n\t\t\tsel.each(function(){\r\n\t\t\t\t_stopTween.call(this);\r\n\t\t\t});\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tANIMATES CONTENT \r\n\t\tThis is where the actual scrolling happens\r\n\t\t*/\r\n\t\t_scrollTo=function(el,to,options){\r\n\t\t\tvar d=el.data(pluginPfx),o=d.opt,\r\n\t\t\t\tdefaults={\r\n\t\t\t\t\ttrigger:\"internal\",\r\n\t\t\t\t\tdir:\"y\",\r\n\t\t\t\t\tscrollEasing:\"mcsEaseOut\",\r\n\t\t\t\t\tdrag:false,\r\n\t\t\t\t\tdur:o.scrollInertia,\r\n\t\t\t\t\toverwrite:\"all\",\r\n\t\t\t\t\tcallbacks:true,\r\n\t\t\t\t\tonStart:true,\r\n\t\t\t\t\tonUpdate:true,\r\n\t\t\t\t\tonComplete:true\r\n\t\t\t\t},\r\n\t\t\t\toptions=$.extend(defaults,options),\r\n\t\t\t\tdur=[options.dur,(options.drag ? 0 : options.dur)],\r\n\t\t\t\tmCustomScrollBox=$(\"#mCSB_\"+d.idx),\r\n\t\t\t\tmCSB_container=$(\"#mCSB_\"+d.idx+\"_container\"),\r\n\t\t\t\twrapper=mCSB_container.parent(),\r\n\t\t\t\ttotalScrollOffsets=o.callbacks.onTotalScrollOffset ? _arr.call(el,o.callbacks.onTotalScrollOffset) : [0,0],\r\n\t\t\t\ttotalScrollBackOffsets=o.callbacks.onTotalScrollBackOffset ? _arr.call(el,o.callbacks.onTotalScrollBackOffset) : [0,0];\r\n\t\t\td.trigger=options.trigger;\r\n\t\t\tif(wrapper.scrollTop()!==0 || wrapper.scrollLeft()!==0){ /* always reset scrollTop/Left */\r\n\t\t\t\t$(\".mCSB_\"+d.idx+\"_scrollbar\").css(\"visibility\",\"visible\");\r\n\t\t\t\twrapper.scrollTop(0).scrollLeft(0);\r\n\t\t\t}\r\n\t\t\tif(to===\"_resetY\" && !d.contentReset.y){\r\n\t\t\t\t/* callbacks: onOverflowYNone */\r\n\t\t\t\tif(_cb(\"onOverflowYNone\")){o.callbacks.onOverflowYNone.call(el[0]);}\r\n\t\t\t\td.contentReset.y=1;\r\n\t\t\t}\r\n\t\t\tif(to===\"_resetX\" && !d.contentReset.x){\r\n\t\t\t\t/* callbacks: onOverflowXNone */\r\n\t\t\t\tif(_cb(\"onOverflowXNone\")){o.callbacks.onOverflowXNone.call(el[0]);}\r\n\t\t\t\td.contentReset.x=1;\r\n\t\t\t}\r\n\t\t\tif(to===\"_resetY\" || to===\"_resetX\"){return;}\r\n\t\t\tif((d.contentReset.y || !el[0].mcs) && d.overflowed[0]){\r\n\t\t\t\t/* callbacks: onOverflowY */\r\n\t\t\t\tif(_cb(\"onOverflowY\")){o.callbacks.onOverflowY.call(el[0]);}\r\n\t\t\t\td.contentReset.x=null;\r\n\t\t\t}\r\n\t\t\tif((d.contentReset.x || !el[0].mcs) && d.overflowed[1]){\r\n\t\t\t\t/* callbacks: onOverflowX */\r\n\t\t\t\tif(_cb(\"onOverflowX\")){o.callbacks.onOverflowX.call(el[0]);}\r\n\t\t\t\td.contentReset.x=null;\r\n\t\t\t}\r\n\t\t\tif(o.snapAmount){ /* scrolling snapping */\r\n\t\t\t\tvar snapAmount=!(o.snapAmount instanceof Array) ? o.snapAmount : options.dir===\"x\" ? o.snapAmount[1] : o.snapAmount[0];\r\n\t\t\t\tto=_snapAmount(to,snapAmount,o.snapOffset);\r\n\t\t\t}\r\n\t\t\tswitch(options.dir){\r\n\t\t\t\tcase \"x\":\r\n\t\t\t\t\tvar mCSB_dragger=$(\"#mCSB_\"+d.idx+\"_dragger_horizontal\"),\r\n\t\t\t\t\t\tproperty=\"left\",\r\n\t\t\t\t\t\tcontentPos=mCSB_container[0].offsetLeft,\r\n\t\t\t\t\t\tlimit=[\r\n\t\t\t\t\t\t\tmCustomScrollBox.width()-mCSB_container.outerWidth(false),\r\n\t\t\t\t\t\t\tmCSB_dragger.parent().width()-mCSB_dragger.width()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tscrollTo=[to,to===0 ? 0 : (to/d.scrollRatio.x)],\r\n\t\t\t\t\t\ttso=totalScrollOffsets[1],\r\n\t\t\t\t\t\ttsbo=totalScrollBackOffsets[1],\r\n\t\t\t\t\t\ttotalScrollOffset=tso>0 ? tso/d.scrollRatio.x : 0,\r\n\t\t\t\t\t\ttotalScrollBackOffset=tsbo>0 ? tsbo/d.scrollRatio.x : 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"y\":\r\n\t\t\t\t\tvar mCSB_dragger=$(\"#mCSB_\"+d.idx+\"_dragger_vertical\"),\r\n\t\t\t\t\t\tproperty=\"top\",\r\n\t\t\t\t\t\tcontentPos=mCSB_container[0].offsetTop,\r\n\t\t\t\t\t\tlimit=[\r\n\t\t\t\t\t\t\tmCustomScrollBox.height()-mCSB_container.outerHeight(false),\r\n\t\t\t\t\t\t\tmCSB_dragger.parent().height()-mCSB_dragger.height()\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tscrollTo=[to,to===0 ? 0 : (to/d.scrollRatio.y)],\r\n\t\t\t\t\t\ttso=totalScrollOffsets[0],\r\n\t\t\t\t\t\ttsbo=totalScrollBackOffsets[0],\r\n\t\t\t\t\t\ttotalScrollOffset=tso>0 ? tso/d.scrollRatio.y : 0,\r\n\t\t\t\t\t\ttotalScrollBackOffset=tsbo>0 ? tsbo/d.scrollRatio.y : 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(scrollTo[1]<0 || (scrollTo[0]===0 && scrollTo[1]===0)){\r\n\t\t\t\tscrollTo=[0,0];\r\n\t\t\t}else if(scrollTo[1]>=limit[1]){\r\n\t\t\t\tscrollTo=[limit[0],limit[1]];\r\n\t\t\t}else{\r\n\t\t\t\tscrollTo[0]=-scrollTo[0];\r\n\t\t\t}\r\n\t\t\tif(!el[0].mcs){\r\n\t\t\t\t_mcs();  /* init mcs object (once) to make it available before callbacks */\r\n\t\t\t\tif(_cb(\"onInit\")){o.callbacks.onInit.call(el[0]);} /* callbacks: onInit */\r\n\t\t\t}\r\n\t\t\tclearTimeout(mCSB_container[0].onCompleteTimeout);\r\n\t\t\t_tweenTo(mCSB_dragger[0],property,Math.round(scrollTo[1]),dur[1],options.scrollEasing);\r\n\t\t\tif(!d.tweenRunning && ((contentPos===0 && scrollTo[0]>=0) || (contentPos===limit[0] && scrollTo[0]<=limit[0]))){return;}\r\n\t\t\t_tweenTo(mCSB_container[0],property,Math.round(scrollTo[0]),dur[0],options.scrollEasing,options.overwrite,{\r\n\t\t\t\tonStart:function(){\r\n\t\t\t\t\tif(options.callbacks && options.onStart && !d.tweenRunning){\r\n\t\t\t\t\t\t/* callbacks: onScrollStart */\r\n\t\t\t\t\t\tif(_cb(\"onScrollStart\")){_mcs(); o.callbacks.onScrollStart.call(el[0]);}\r\n\t\t\t\t\t\td.tweenRunning=true;\r\n\t\t\t\t\t\t_onDragClasses(mCSB_dragger);\r\n\t\t\t\t\t\td.cbOffsets=_cbOffsets();\r\n\t\t\t\t\t}\r\n\t\t\t\t},onUpdate:function(){\r\n\t\t\t\t\tif(options.callbacks && options.onUpdate){\r\n\t\t\t\t\t\t/* callbacks: whileScrolling */\r\n\t\t\t\t\t\tif(_cb(\"whileScrolling\")){_mcs(); o.callbacks.whileScrolling.call(el[0]);}\r\n\t\t\t\t\t}\r\n\t\t\t\t},onComplete:function(){\r\n\t\t\t\t\tif(options.callbacks && options.onComplete){\r\n\t\t\t\t\t\tif(o.axis===\"yx\"){clearTimeout(mCSB_container[0].onCompleteTimeout);}\r\n\t\t\t\t\t\tvar t=mCSB_container[0].idleTimer || 0;\r\n\t\t\t\t\t\tmCSB_container[0].onCompleteTimeout=setTimeout(function(){\r\n\t\t\t\t\t\t\t/* callbacks: onScroll, onTotalScroll, onTotalScrollBack */\r\n\t\t\t\t\t\t\tif(_cb(\"onScroll\")){_mcs(); o.callbacks.onScroll.call(el[0]);}\r\n\t\t\t\t\t\t\tif(_cb(\"onTotalScroll\") && scrollTo[1]>=limit[1]-totalScrollOffset && d.cbOffsets[0]){_mcs(); o.callbacks.onTotalScroll.call(el[0]);}\r\n\t\t\t\t\t\t\tif(_cb(\"onTotalScrollBack\") && scrollTo[1]<=totalScrollBackOffset && d.cbOffsets[1]){_mcs(); o.callbacks.onTotalScrollBack.call(el[0]);}\r\n\t\t\t\t\t\t\td.tweenRunning=false;\r\n\t\t\t\t\t\t\tmCSB_container[0].idleTimer=0;\r\n\t\t\t\t\t\t\t_onDragClasses(mCSB_dragger,\"hide\");\r\n\t\t\t\t\t\t},t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t/* checks if callback function exists */\r\n\t\t\tfunction _cb(cb){\r\n\t\t\t\treturn d && o.callbacks[cb] && typeof o.callbacks[cb]===\"function\";\r\n\t\t\t}\r\n\t\t\t/* checks whether callback offsets always trigger */\r\n\t\t\tfunction _cbOffsets(){\r\n\t\t\t\treturn [o.callbacks.alwaysTriggerOffsets || contentPos>=limit[0]+tso,o.callbacks.alwaysTriggerOffsets || contentPos<=-tsbo];\r\n\t\t\t}\r\n\t\t\t/* \r\n\t\t\tpopulates object with useful values for the user \r\n\t\t\tvalues: \r\n\t\t\t\tcontent: this.mcs.content\r\n\t\t\t\tcontent top position: this.mcs.top \r\n\t\t\t\tcontent left position: this.mcs.left \r\n\t\t\t\tdragger top position: this.mcs.draggerTop \r\n\t\t\t\tdragger left position: this.mcs.draggerLeft \r\n\t\t\t\tscrolling y percentage: this.mcs.topPct \r\n\t\t\t\tscrolling x percentage: this.mcs.leftPct \r\n\t\t\t\tscrolling direction: this.mcs.direction\r\n\t\t\t*/\r\n\t\t\tfunction _mcs(){\r\n\t\t\t\tvar cp=[mCSB_container[0].offsetTop,mCSB_container[0].offsetLeft], /* content position */\r\n\t\t\t\t\tdp=[mCSB_dragger[0].offsetTop,mCSB_dragger[0].offsetLeft], /* dragger position */\r\n\t\t\t\t\tcl=[mCSB_container.outerHeight(false),mCSB_container.outerWidth(false)], /* content length */\r\n\t\t\t\t\tpl=[mCustomScrollBox.height(),mCustomScrollBox.width()]; /* content parent length */\r\n\t\t\t\tel[0].mcs={\r\n\t\t\t\t\tcontent:mCSB_container, /* original content wrapper as jquery object */\r\n\t\t\t\t\ttop:cp[0],left:cp[1],draggerTop:dp[0],draggerLeft:dp[1],\r\n\t\t\t\t\ttopPct:Math.round((100*Math.abs(cp[0]))/(Math.abs(cl[0])-pl[0])),leftPct:Math.round((100*Math.abs(cp[1]))/(Math.abs(cl[1])-pl[1])),\r\n\t\t\t\t\tdirection:options.dir\r\n\t\t\t\t};\r\n\t\t\t\t/* \r\n\t\t\t\tthis refers to the original element containing the scrollbar(s)\r\n\t\t\t\tusage: this.mcs.top, this.mcs.leftPct etc. \r\n\t\t\t\t*/\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* \r\n\t\tCUSTOM JAVASCRIPT ANIMATION TWEEN \r\n\t\tLighter and faster than jquery animate() and css transitions \r\n\t\tAnimates top/left properties and includes easings \r\n\t\t*/\r\n\t\t_tweenTo=function(el,prop,to,duration,easing,overwrite,callbacks){\r\n\t\t\tif(!el._mTween){el._mTween={top:{},left:{}};}\r\n\t\t\tvar callbacks=callbacks || {},\r\n\t\t\t\tonStart=callbacks.onStart || function(){},onUpdate=callbacks.onUpdate || function(){},onComplete=callbacks.onComplete || function(){},\r\n\t\t\t\tstartTime=_getTime(),_delay,progress=0,from=el.offsetTop,elStyle=el.style,_request,tobj=el._mTween[prop];\r\n\t\t\tif(prop===\"left\"){from=el.offsetLeft;}\r\n\t\t\tvar diff=to-from;\r\n\t\t\ttobj.stop=0;\r\n\t\t\tif(overwrite!==\"none\"){_cancelTween();}\r\n\t\t\t_startTween();\r\n\t\t\tfunction _step(){\r\n\t\t\t\tif(tobj.stop){return;}\r\n\t\t\t\tif(!progress){onStart.call();}\r\n\t\t\t\tprogress=_getTime()-startTime;\r\n\t\t\t\t_tween();\r\n\t\t\t\tif(progress>=tobj.time){\r\n\t\t\t\t\ttobj.time=(progress>tobj.time) ? progress+_delay-(progress-tobj.time) : progress+_delay-1;\r\n\t\t\t\t\tif(tobj.time<progress+1){tobj.time=progress+1;}\r\n\t\t\t\t}\r\n\t\t\t\tif(tobj.time<duration){tobj.id=_request(_step);}else{onComplete.call();}\r\n\t\t\t}\r\n\t\t\tfunction _tween(){\r\n\t\t\t\tif(duration>0){\r\n\t\t\t\t\ttobj.currVal=_ease(tobj.time,from,diff,duration,easing);\r\n\t\t\t\t\telStyle[prop]=Math.round(tobj.currVal)+\"px\";\r\n\t\t\t\t}else{\r\n\t\t\t\t\telStyle[prop]=to+\"px\";\r\n\t\t\t\t}\r\n\t\t\t\tonUpdate.call();\r\n\t\t\t}\r\n\t\t\tfunction _startTween(){\r\n\t\t\t\t_delay=1000/60;\r\n\t\t\t\ttobj.time=progress+_delay;\r\n\t\t\t\t_request=(!window.requestAnimationFrame) ? function(f){_tween(); return setTimeout(f,0.01);} : window.requestAnimationFrame;\r\n\t\t\t\ttobj.id=_request(_step);\r\n\t\t\t}\r\n\t\t\tfunction _cancelTween(){\r\n\t\t\t\tif(tobj.id==null){return;}\r\n\t\t\t\tif(!window.requestAnimationFrame){clearTimeout(tobj.id);\r\n\t\t\t\t}else{window.cancelAnimationFrame(tobj.id);}\r\n\t\t\t\ttobj.id=null;\r\n\t\t\t}\r\n\t\t\tfunction _ease(t,b,c,d,type){\r\n\t\t\t\tswitch(type){\r\n\t\t\t\t\tcase \"linear\": case \"mcsLinear\":\r\n\t\t\t\t\t\treturn c*t/d + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"mcsLinearOut\":\r\n\t\t\t\t\t\tt/=d; t--; return c * Math.sqrt(1 - t*t) + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"easeInOutSmooth\":\r\n\t\t\t\t\t\tt/=d/2;\r\n\t\t\t\t\t\tif(t<1) return c/2*t*t + b;\r\n\t\t\t\t\t\tt--;\r\n\t\t\t\t\t\treturn -c/2 * (t*(t-2) - 1) + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"easeInOutStrong\":\r\n\t\t\t\t\t\tt/=d/2;\r\n\t\t\t\t\t\tif(t<1) return c/2 * Math.pow( 2, 10 * (t - 1) ) + b;\r\n\t\t\t\t\t\tt--;\r\n\t\t\t\t\t\treturn c/2 * ( -Math.pow( 2, -10 * t) + 2 ) + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"easeInOut\": case \"mcsEaseInOut\":\r\n\t\t\t\t\t\tt/=d/2;\r\n\t\t\t\t\t\tif(t<1) return c/2*t*t*t + b;\r\n\t\t\t\t\t\tt-=2;\r\n\t\t\t\t\t\treturn c/2*(t*t*t + 2) + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"easeOutSmooth\":\r\n\t\t\t\t\t\tt/=d; t--;\r\n\t\t\t\t\t\treturn -c * (t*t*t*t - 1) + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"easeOutStrong\":\r\n\t\t\t\t\t\treturn c * ( -Math.pow( 2, -10 * t/d ) + 1 ) + b;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"easeOut\": case \"mcsEaseOut\": default:\r\n\t\t\t\t\t\tvar ts=(t/=d)*t,tc=ts*t;\r\n\t\t\t\t\t\treturn b+c*(0.499999999999997*tc*ts + -2.5*ts*ts + 5.5*tc + -6.5*ts + 4*t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* returns current time */\r\n\t\t_getTime=function(){\r\n\t\t\tif(window.performance && window.performance.now){\r\n\t\t\t\treturn window.performance.now();\r\n\t\t\t}else{\r\n\t\t\t\tif(window.performance && window.performance.webkitNow){\r\n\t\t\t\t\treturn window.performance.webkitNow();\r\n\t\t\t\t}else{\r\n\t\t\t\t\tif(Date.now){return Date.now();}else{return new Date().getTime();}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* stops a tween */\r\n\t\t_stopTween=function(){\r\n\t\t\tvar el=this;\r\n\t\t\tif(!el._mTween){el._mTween={top:{},left:{}};}\r\n\t\t\tvar props=[\"top\",\"left\"];\r\n\t\t\tfor(var i=0; i<props.length; i++){\r\n\t\t\t\tvar prop=props[i];\r\n\t\t\t\tif(el._mTween[prop].id){\r\n\t\t\t\t\tif(!window.requestAnimationFrame){clearTimeout(el._mTween[prop].id);\r\n\t\t\t\t\t}else{window.cancelAnimationFrame(el._mTween[prop].id);}\r\n\t\t\t\t\tel._mTween[prop].id=null;\r\n\t\t\t\t\tel._mTween[prop].stop=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* deletes a property (avoiding the exception thrown by IE) */\r\n\t\t_delete=function(c,m){\r\n\t\t\ttry{delete c[m];}catch(e){c[m]=null;}\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* detects left mouse button */\r\n\t\t_mouseBtnLeft=function(e){\r\n\t\t\treturn !(e.which && e.which!==1);\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* detects if pointer type event is touch */\r\n\t\t_pointerTouch=function(e){\r\n\t\t\tvar t=e.originalEvent.pointerType;\r\n\t\t\treturn !(t && t!==\"touch\" && t!==2);\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* checks if value is numeric */\r\n\t\t_isNumeric=function(val){\r\n\t\t\treturn !isNaN(parseFloat(val)) && isFinite(val);\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* returns element position according to content */\r\n\t\t_childPos=function(el){\r\n\t\t\tvar p=el.parents(\".mCSB_container\");\r\n\t\t\treturn [el.offset().top-p.offset().top,el.offset().left-p.offset().left];\r\n\t\t},\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\t\r\n\t\t/* checks if browser tab is hidden/inactive via Page Visibility API */\r\n\t\t_isTabHidden=function(){\r\n\t\t\tvar prop=_getHiddenProp();\r\n\t\t\tif(!prop) return false;\r\n\t\t\treturn document[prop];\r\n\t\t\tfunction _getHiddenProp(){\r\n\t\t\t\tvar pfx=[\"webkit\",\"moz\",\"ms\",\"o\"];\r\n\t\t\t\tif(\"hidden\" in document) return \"hidden\"; //natively supported\r\n\t\t\t\tfor(var i=0; i<pfx.length; i++){ //prefixed\r\n\t\t\t\t    if((pfx[i]+\"Hidden\") in document) \r\n\t\t\t\t        return pfx[i]+\"Hidden\";\r\n\t\t\t\t}\r\n\t\t\t\treturn null; //not supported\r\n\t\t\t}\r\n\t\t};\r\n\t\t/* -------------------- */\r\n\t\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/* \r\n\t----------------------------------------\r\n\tPLUGIN SETUP \r\n\t----------------------------------------\r\n\t*/\r\n\t\r\n\t/* plugin constructor functions */\r\n\t$.fn[pluginNS]=function(method){ /* usage: $(selector).mCustomScrollbar(); */\r\n\t\tif(methods[method]){\r\n\t\t\treturn methods[method].apply(this,Array.prototype.slice.call(arguments,1));\r\n\t\t}else if(typeof method===\"object\" || !method){\r\n\t\t\treturn methods.init.apply(this,arguments);\r\n\t\t}else{\r\n\t\t\t$.error(\"Method \"+method+\" does not exist\");\r\n\t\t}\r\n\t};\r\n\t$[pluginNS]=function(method){ /* usage: $.mCustomScrollbar(); */\r\n\t\tif(methods[method]){\r\n\t\t\treturn methods[method].apply(this,Array.prototype.slice.call(arguments,1));\r\n\t\t}else if(typeof method===\"object\" || !method){\r\n\t\t\treturn methods.init.apply(this,arguments);\r\n\t\t}else{\r\n\t\t\t$.error(\"Method \"+method+\" does not exist\");\r\n\t\t}\r\n\t};\r\n\t\r\n\t/* \r\n\tallow setting plugin default options. \r\n\tusage: $.mCustomScrollbar.defaults.scrollInertia=500; \r\n\tto apply any changed default options on default selectors (below), use inside document ready fn \r\n\te.g.: $(document).ready(function(){ $.mCustomScrollbar.defaults.scrollInertia=500; });\r\n\t*/\r\n\t$[pluginNS].defaults=defaults;\r\n\t\r\n\t/* \r\n\tadd window object (window.mCustomScrollbar) \r\n\tusage: if(window.mCustomScrollbar){console.log(\"custom scrollbar plugin loaded\");}\r\n\t*/\r\n\twindow[pluginNS]=true;\r\n\t\r\n\t$(window).bind(\"load\",function(){\r\n\t\t\r\n\t\t$(defaultSelector)[pluginNS](); /* add scrollbars automatically on default selector */\r\n\t\t\r\n\t\t/* extend jQuery expressions */\r\n\t\t$.extend($.expr[\":\"],{\r\n\t\t\t/* checks if element is within scrollable viewport */\r\n\t\t\tmcsInView:$.expr[\":\"].mcsInView || function(el){\r\n\t\t\t\tvar $el=$(el),content=$el.parents(\".mCSB_container\"),wrapper,cPos;\r\n\t\t\t\tif(!content.length){return;}\r\n\t\t\t\twrapper=content.parent();\r\n\t\t\t\tcPos=[content[0].offsetTop,content[0].offsetLeft];\r\n\t\t\t\treturn \tcPos[0]+_childPos($el)[0]>=0 && cPos[0]+_childPos($el)[0]<wrapper.height()-$el.outerHeight(false) && \r\n\t\t\t\t\t\tcPos[1]+_childPos($el)[1]>=0 && cPos[1]+_childPos($el)[1]<wrapper.width()-$el.outerWidth(false);\r\n\t\t\t},\r\n\t\t\t/* checks if element or part of element is in view of scrollable viewport */\r\n\t\t\tmcsInSight:$.expr[\":\"].mcsInSight || function(el,i,m){\r\n\t\t\t\tvar $el=$(el),elD,content=$el.parents(\".mCSB_container\"),wrapperView,pos,wrapperViewPct,\r\n\t\t\t\t\tpctVals=m[3]===\"exact\" ? [[1,0],[1,0]] : [[0.9,0.1],[0.6,0.4]];\r\n\t\t\t\tif(!content.length){return;}\r\n\t\t\t\telD=[$el.outerHeight(false),$el.outerWidth(false)];\r\n\t\t\t\tpos=[content[0].offsetTop+_childPos($el)[0],content[0].offsetLeft+_childPos($el)[1]];\r\n\t\t\t\twrapperView=[content.parent()[0].offsetHeight,content.parent()[0].offsetWidth];\r\n\t\t\t\twrapperViewPct=[elD[0]<wrapperView[0] ? pctVals[0] : pctVals[1],elD[1]<wrapperView[1] ? pctVals[0] : pctVals[1]];\r\n\t\t\t\treturn \tpos[0]-(wrapperView[0]*wrapperViewPct[0][0])<0 && pos[0]+elD[0]-(wrapperView[0]*wrapperViewPct[0][1])>=0 && \r\n\t\t\t\t\t\tpos[1]-(wrapperView[1]*wrapperViewPct[1][0])<0 && pos[1]+elD[1]-(wrapperView[1]*wrapperViewPct[1][1])>=0;\r\n\t\t\t},\r\n\t\t\t/* checks if element is overflowed having visible scrollbar(s) */\r\n\t\t\tmcsOverflow:$.expr[\":\"].mcsOverflow || function(el){\r\n\t\t\t\tvar d=$(el).data(pluginPfx);\r\n\t\t\t\tif(!d){return;}\r\n\t\t\t\treturn d.overflowed[0] || d.overflowed[1];\r\n\t\t\t}\r\n\t\t});\r\n\t\r\n\t});\r\n\r\n}))}));","﻿import './jquery-global';\r\nimport $1 from 'jquery-mousewheel';\r\nimport $2 from 'malihu-custom-scrollbar-plugin';\r\n$1($);\r\n$2($);","/*!\r\n * Bootstrap v3.3.7 (http://getbootstrap.com)\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under the MIT license\r\n */\r\n\r\nif (typeof jQuery === 'undefined') {\r\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\r\n}\r\n\r\n+function ($) {\r\n  'use strict';\r\n  var version = $.fn.jquery.split(' ')[0].split('.')\r\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {\r\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')\r\n  }\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: transition.js v3.3.7\r\n * http://getbootstrap.com/javascript/#transitions\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\r\n  // ============================================================\r\n\r\n  function transitionEnd() {\r\n    var el = document.createElement('bootstrap')\r\n\r\n    var transEndEventNames = {\r\n      WebkitTransition : 'webkitTransitionEnd',\r\n      MozTransition    : 'transitionend',\r\n      OTransition      : 'oTransitionEnd otransitionend',\r\n      transition       : 'transitionend'\r\n    }\r\n\r\n    for (var name in transEndEventNames) {\r\n      if (el.style[name] !== undefined) {\r\n        return { end: transEndEventNames[name] }\r\n      }\r\n    }\r\n\r\n    return false // explicit for ie8 (  ._.)\r\n  }\r\n\r\n  // http://blog.alexmaccaw.com/css-transitions\r\n  $.fn.emulateTransitionEnd = function (duration) {\r\n    var called = false\r\n    var $el = this\r\n    $(this).one('bsTransitionEnd', function () { called = true })\r\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\r\n    setTimeout(callback, duration)\r\n    return this\r\n  }\r\n\r\n  $(function () {\r\n    $.support.transition = transitionEnd()\r\n\r\n    if (!$.support.transition) return\r\n\r\n    $.event.special.bsTransitionEnd = {\r\n      bindType: $.support.transition.end,\r\n      delegateType: $.support.transition.end,\r\n      handle: function (e) {\r\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n      }\r\n    }\r\n  })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: alert.js v3.3.7\r\n * http://getbootstrap.com/javascript/#alerts\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // ALERT CLASS DEFINITION\r\n  // ======================\r\n\r\n  var dismiss = '[data-dismiss=\"alert\"]'\r\n  var Alert   = function (el) {\r\n    $(el).on('click', dismiss, this.close)\r\n  }\r\n\r\n  Alert.VERSION = '3.3.7'\r\n\r\n  Alert.TRANSITION_DURATION = 150\r\n\r\n  Alert.prototype.close = function (e) {\r\n    var $this    = $(this)\r\n    var selector = $this.attr('data-target')\r\n\r\n    if (!selector) {\r\n      selector = $this.attr('href')\r\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n    }\r\n\r\n    var $parent = $(selector === '#' ? [] : selector)\r\n\r\n    if (e) e.preventDefault()\r\n\r\n    if (!$parent.length) {\r\n      $parent = $this.closest('.alert')\r\n    }\r\n\r\n    $parent.trigger(e = $.Event('close.bs.alert'))\r\n\r\n    if (e.isDefaultPrevented()) return\r\n\r\n    $parent.removeClass('in')\r\n\r\n    function removeElement() {\r\n      // detach from parent, fire event then clean up data\r\n      $parent.detach().trigger('closed.bs.alert').remove()\r\n    }\r\n\r\n    $.support.transition && $parent.hasClass('fade') ?\r\n      $parent\r\n        .one('bsTransitionEnd', removeElement)\r\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\r\n      removeElement()\r\n  }\r\n\r\n\r\n  // ALERT PLUGIN DEFINITION\r\n  // =======================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n      var data  = $this.data('bs.alert')\r\n\r\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\r\n      if (typeof option == 'string') data[option].call($this)\r\n    })\r\n  }\r\n\r\n  var old = $.fn.alert\r\n\r\n  $.fn.alert             = Plugin\r\n  $.fn.alert.Constructor = Alert\r\n\r\n\r\n  // ALERT NO CONFLICT\r\n  // =================\r\n\r\n  $.fn.alert.noConflict = function () {\r\n    $.fn.alert = old\r\n    return this\r\n  }\r\n\r\n\r\n  // ALERT DATA-API\r\n  // ==============\r\n\r\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: button.js v3.3.7\r\n * http://getbootstrap.com/javascript/#buttons\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // BUTTON PUBLIC CLASS DEFINITION\r\n  // ==============================\r\n\r\n  var Button = function (element, options) {\r\n    this.$element  = $(element)\r\n    this.options   = $.extend({}, Button.DEFAULTS, options)\r\n    this.isLoading = false\r\n  }\r\n\r\n  Button.VERSION  = '3.3.7'\r\n\r\n  Button.DEFAULTS = {\r\n    loadingText: 'loading...'\r\n  }\r\n\r\n  Button.prototype.setState = function (state) {\r\n    var d    = 'disabled'\r\n    var $el  = this.$element\r\n    var val  = $el.is('input') ? 'val' : 'html'\r\n    var data = $el.data()\r\n\r\n    state += 'Text'\r\n\r\n    if (data.resetText == null) $el.data('resetText', $el[val]())\r\n\r\n    // push to event loop to allow forms to submit\r\n    setTimeout($.proxy(function () {\r\n      $el[val](data[state] == null ? this.options[state] : data[state])\r\n\r\n      if (state == 'loadingText') {\r\n        this.isLoading = true\r\n        $el.addClass(d).attr(d, d).prop(d, true)\r\n      } else if (this.isLoading) {\r\n        this.isLoading = false\r\n        $el.removeClass(d).removeAttr(d).prop(d, false)\r\n      }\r\n    }, this), 0)\r\n  }\r\n\r\n  Button.prototype.toggle = function () {\r\n    var changed = true\r\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\r\n\r\n    if ($parent.length) {\r\n      var $input = this.$element.find('input')\r\n      if ($input.prop('type') == 'radio') {\r\n        if ($input.prop('checked')) changed = false\r\n        $parent.find('.active').removeClass('active')\r\n        this.$element.addClass('active')\r\n      } else if ($input.prop('type') == 'checkbox') {\r\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\r\n        this.$element.toggleClass('active')\r\n      }\r\n      $input.prop('checked', this.$element.hasClass('active'))\r\n      if (changed) $input.trigger('change')\r\n    } else {\r\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\r\n      this.$element.toggleClass('active')\r\n    }\r\n  }\r\n\r\n\r\n  // BUTTON PLUGIN DEFINITION\r\n  // ========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.button')\r\n      var options = typeof option == 'object' && option\r\n\r\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\r\n\r\n      if (option == 'toggle') data.toggle()\r\n      else if (option) data.setState(option)\r\n    })\r\n  }\r\n\r\n  var old = $.fn.button\r\n\r\n  $.fn.button             = Plugin\r\n  $.fn.button.Constructor = Button\r\n\r\n\r\n  // BUTTON NO CONFLICT\r\n  // ==================\r\n\r\n  $.fn.button.noConflict = function () {\r\n    $.fn.button = old\r\n    return this\r\n  }\r\n\r\n\r\n  // BUTTON DATA-API\r\n  // ===============\r\n\r\n  $(document)\r\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\r\n      var $btn = $(e.target).closest('.btn')\r\n      Plugin.call($btn, 'toggle')\r\n      if (!($(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]'))) {\r\n        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\r\n        e.preventDefault()\r\n        // The target component still receive the focus\r\n        if ($btn.is('input,button')) $btn.trigger('focus')\r\n        else $btn.find('input:visible,button:visible').first().trigger('focus')\r\n      }\r\n    })\r\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\r\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\r\n    })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: carousel.js v3.3.7\r\n * http://getbootstrap.com/javascript/#carousel\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // CAROUSEL CLASS DEFINITION\r\n  // =========================\r\n\r\n  var Carousel = function (element, options) {\r\n    this.$element    = $(element)\r\n    this.$indicators = this.$element.find('.carousel-indicators')\r\n    this.options     = options\r\n    this.paused      = null\r\n    this.sliding     = null\r\n    this.interval    = null\r\n    this.$active     = null\r\n    this.$items      = null\r\n\r\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\r\n\r\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\r\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\r\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\r\n  }\r\n\r\n  Carousel.VERSION  = '3.3.7'\r\n\r\n  Carousel.TRANSITION_DURATION = 600\r\n\r\n  Carousel.DEFAULTS = {\r\n    interval: 5000,\r\n    pause: 'hover',\r\n    wrap: true,\r\n    keyboard: true\r\n  }\r\n\r\n  Carousel.prototype.keydown = function (e) {\r\n    if (/input|textarea/i.test(e.target.tagName)) return\r\n    switch (e.which) {\r\n      case 37: this.prev(); break\r\n      case 39: this.next(); break\r\n      default: return\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  Carousel.prototype.cycle = function (e) {\r\n    e || (this.paused = false)\r\n\r\n    this.interval && clearInterval(this.interval)\r\n\r\n    this.options.interval\r\n      && !this.paused\r\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\r\n\r\n    return this\r\n  }\r\n\r\n  Carousel.prototype.getItemIndex = function (item) {\r\n    this.$items = item.parent().children('.item')\r\n    return this.$items.index(item || this.$active)\r\n  }\r\n\r\n  Carousel.prototype.getItemForDirection = function (direction, active) {\r\n    var activeIndex = this.getItemIndex(active)\r\n    var willWrap = (direction == 'prev' && activeIndex === 0)\r\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\r\n    if (willWrap && !this.options.wrap) return active\r\n    var delta = direction == 'prev' ? -1 : 1\r\n    var itemIndex = (activeIndex + delta) % this.$items.length\r\n    return this.$items.eq(itemIndex)\r\n  }\r\n\r\n  Carousel.prototype.to = function (pos) {\r\n    var that        = this\r\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\r\n\r\n    if (pos > (this.$items.length - 1) || pos < 0) return\r\n\r\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\r\n    if (activeIndex == pos) return this.pause().cycle()\r\n\r\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\r\n  }\r\n\r\n  Carousel.prototype.pause = function (e) {\r\n    e || (this.paused = true)\r\n\r\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\r\n      this.$element.trigger($.support.transition.end)\r\n      this.cycle(true)\r\n    }\r\n\r\n    this.interval = clearInterval(this.interval)\r\n\r\n    return this\r\n  }\r\n\r\n  Carousel.prototype.next = function () {\r\n    if (this.sliding) return\r\n    return this.slide('next')\r\n  }\r\n\r\n  Carousel.prototype.prev = function () {\r\n    if (this.sliding) return\r\n    return this.slide('prev')\r\n  }\r\n\r\n  Carousel.prototype.slide = function (type, next) {\r\n    var $active   = this.$element.find('.item.active')\r\n    var $next     = next || this.getItemForDirection(type, $active)\r\n    var isCycling = this.interval\r\n    var direction = type == 'next' ? 'left' : 'right'\r\n    var that      = this\r\n\r\n    if ($next.hasClass('active')) return (this.sliding = false)\r\n\r\n    var relatedTarget = $next[0]\r\n    var slideEvent = $.Event('slide.bs.carousel', {\r\n      relatedTarget: relatedTarget,\r\n      direction: direction\r\n    })\r\n    this.$element.trigger(slideEvent)\r\n    if (slideEvent.isDefaultPrevented()) return\r\n\r\n    this.sliding = true\r\n\r\n    isCycling && this.pause()\r\n\r\n    if (this.$indicators.length) {\r\n      this.$indicators.find('.active').removeClass('active')\r\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\r\n      $nextIndicator && $nextIndicator.addClass('active')\r\n    }\r\n\r\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\r\n    if ($.support.transition && this.$element.hasClass('slide')) {\r\n      $next.addClass(type)\r\n      $next[0].offsetWidth // force reflow\r\n      $active.addClass(direction)\r\n      $next.addClass(direction)\r\n      $active\r\n        .one('bsTransitionEnd', function () {\r\n          $next.removeClass([type, direction].join(' ')).addClass('active')\r\n          $active.removeClass(['active', direction].join(' '))\r\n          that.sliding = false\r\n          setTimeout(function () {\r\n            that.$element.trigger(slidEvent)\r\n          }, 0)\r\n        })\r\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\r\n    } else {\r\n      $active.removeClass('active')\r\n      $next.addClass('active')\r\n      this.sliding = false\r\n      this.$element.trigger(slidEvent)\r\n    }\r\n\r\n    isCycling && this.cycle()\r\n\r\n    return this\r\n  }\r\n\r\n\r\n  // CAROUSEL PLUGIN DEFINITION\r\n  // ==========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.carousel')\r\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n      var action  = typeof option == 'string' ? option : options.slide\r\n\r\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\r\n      if (typeof option == 'number') data.to(option)\r\n      else if (action) data[action]()\r\n      else if (options.interval) data.pause().cycle()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.carousel\r\n\r\n  $.fn.carousel             = Plugin\r\n  $.fn.carousel.Constructor = Carousel\r\n\r\n\r\n  // CAROUSEL NO CONFLICT\r\n  // ====================\r\n\r\n  $.fn.carousel.noConflict = function () {\r\n    $.fn.carousel = old\r\n    return this\r\n  }\r\n\r\n\r\n  // CAROUSEL DATA-API\r\n  // =================\r\n\r\n  var clickHandler = function (e) {\r\n    var href\r\n    var $this   = $(this)\r\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\r\n    if (!$target.hasClass('carousel')) return\r\n    var options = $.extend({}, $target.data(), $this.data())\r\n    var slideIndex = $this.attr('data-slide-to')\r\n    if (slideIndex) options.interval = false\r\n\r\n    Plugin.call($target, options)\r\n\r\n    if (slideIndex) {\r\n      $target.data('bs.carousel').to(slideIndex)\r\n    }\r\n\r\n    e.preventDefault()\r\n  }\r\n\r\n  $(document)\r\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\r\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\r\n\r\n  $(window).on('load', function () {\r\n    $('[data-ride=\"carousel\"]').each(function () {\r\n      var $carousel = $(this)\r\n      Plugin.call($carousel, $carousel.data())\r\n    })\r\n  })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: collapse.js v3.3.7\r\n * http://getbootstrap.com/javascript/#collapse\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n/* jshint latedef: false */\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // COLLAPSE PUBLIC CLASS DEFINITION\r\n  // ================================\r\n\r\n  var Collapse = function (element, options) {\r\n    this.$element      = $(element)\r\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\r\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\r\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\r\n    this.transitioning = null\r\n\r\n    if (this.options.parent) {\r\n      this.$parent = this.getParent()\r\n    } else {\r\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\r\n    }\r\n\r\n    if (this.options.toggle) this.toggle()\r\n  }\r\n\r\n  Collapse.VERSION  = '3.3.7'\r\n\r\n  Collapse.TRANSITION_DURATION = 350\r\n\r\n  Collapse.DEFAULTS = {\r\n    toggle: true\r\n  }\r\n\r\n  Collapse.prototype.dimension = function () {\r\n    var hasWidth = this.$element.hasClass('width')\r\n    return hasWidth ? 'width' : 'height'\r\n  }\r\n\r\n  Collapse.prototype.show = function () {\r\n    if (this.transitioning || this.$element.hasClass('in')) return\r\n\r\n    var activesData\r\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\r\n\r\n    if (actives && actives.length) {\r\n      activesData = actives.data('bs.collapse')\r\n      if (activesData && activesData.transitioning) return\r\n    }\r\n\r\n    var startEvent = $.Event('show.bs.collapse')\r\n    this.$element.trigger(startEvent)\r\n    if (startEvent.isDefaultPrevented()) return\r\n\r\n    if (actives && actives.length) {\r\n      Plugin.call(actives, 'hide')\r\n      activesData || actives.data('bs.collapse', null)\r\n    }\r\n\r\n    var dimension = this.dimension()\r\n\r\n    this.$element\r\n      .removeClass('collapse')\r\n      .addClass('collapsing')[dimension](0)\r\n      .attr('aria-expanded', true)\r\n\r\n    this.$trigger\r\n      .removeClass('collapsed')\r\n      .attr('aria-expanded', true)\r\n\r\n    this.transitioning = 1\r\n\r\n    var complete = function () {\r\n      this.$element\r\n        .removeClass('collapsing')\r\n        .addClass('collapse in')[dimension]('')\r\n      this.transitioning = 0\r\n      this.$element\r\n        .trigger('shown.bs.collapse')\r\n    }\r\n\r\n    if (!$.support.transition) return complete.call(this)\r\n\r\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\r\n\r\n    this.$element\r\n      .one('bsTransitionEnd', $.proxy(complete, this))\r\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\r\n  }\r\n\r\n  Collapse.prototype.hide = function () {\r\n    if (this.transitioning || !this.$element.hasClass('in')) return\r\n\r\n    var startEvent = $.Event('hide.bs.collapse')\r\n    this.$element.trigger(startEvent)\r\n    if (startEvent.isDefaultPrevented()) return\r\n\r\n    var dimension = this.dimension()\r\n\r\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\r\n\r\n    this.$element\r\n      .addClass('collapsing')\r\n      .removeClass('collapse in')\r\n      .attr('aria-expanded', false)\r\n\r\n    this.$trigger\r\n      .addClass('collapsed')\r\n      .attr('aria-expanded', false)\r\n\r\n    this.transitioning = 1\r\n\r\n    var complete = function () {\r\n      this.transitioning = 0\r\n      this.$element\r\n        .removeClass('collapsing')\r\n        .addClass('collapse')\r\n        .trigger('hidden.bs.collapse')\r\n    }\r\n\r\n    if (!$.support.transition) return complete.call(this)\r\n\r\n    this.$element\r\n      [dimension](0)\r\n      .one('bsTransitionEnd', $.proxy(complete, this))\r\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\r\n  }\r\n\r\n  Collapse.prototype.toggle = function () {\r\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\r\n  }\r\n\r\n  Collapse.prototype.getParent = function () {\r\n    return $(this.options.parent)\r\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\r\n      .each($.proxy(function (i, element) {\r\n        var $element = $(element)\r\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\r\n      }, this))\r\n      .end()\r\n  }\r\n\r\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\r\n    var isOpen = $element.hasClass('in')\r\n\r\n    $element.attr('aria-expanded', isOpen)\r\n    $trigger\r\n      .toggleClass('collapsed', !isOpen)\r\n      .attr('aria-expanded', isOpen)\r\n  }\r\n\r\n  function getTargetFromTrigger($trigger) {\r\n    var href\r\n    var target = $trigger.attr('data-target')\r\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\r\n\r\n    return $(target)\r\n  }\r\n\r\n\r\n  // COLLAPSE PLUGIN DEFINITION\r\n  // ==========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.collapse')\r\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n\r\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\r\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.collapse\r\n\r\n  $.fn.collapse             = Plugin\r\n  $.fn.collapse.Constructor = Collapse\r\n\r\n\r\n  // COLLAPSE NO CONFLICT\r\n  // ====================\r\n\r\n  $.fn.collapse.noConflict = function () {\r\n    $.fn.collapse = old\r\n    return this\r\n  }\r\n\r\n\r\n  // COLLAPSE DATA-API\r\n  // =================\r\n\r\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\r\n    var $this   = $(this)\r\n\r\n    if (!$this.attr('data-target')) e.preventDefault()\r\n\r\n    var $target = getTargetFromTrigger($this)\r\n    var data    = $target.data('bs.collapse')\r\n    var option  = data ? 'toggle' : $this.data()\r\n\r\n    Plugin.call($target, option)\r\n  })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: dropdown.js v3.3.7\r\n * http://getbootstrap.com/javascript/#dropdowns\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // DROPDOWN CLASS DEFINITION\r\n  // =========================\r\n\r\n  var backdrop = '.dropdown-backdrop'\r\n  var toggle   = '[data-toggle=\"dropdown\"]'\r\n  var Dropdown = function (element) {\r\n    $(element).on('click.bs.dropdown', this.toggle)\r\n  }\r\n\r\n  Dropdown.VERSION = '3.3.7'\r\n\r\n  function getParent($this) {\r\n    var selector = $this.attr('data-target')\r\n\r\n    if (!selector) {\r\n      selector = $this.attr('href')\r\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n    }\r\n\r\n    var $parent = selector && $(selector)\r\n\r\n    return $parent && $parent.length ? $parent : $this.parent()\r\n  }\r\n\r\n  function clearMenus(e) {\r\n    if (e && e.which === 3) return\r\n    $(backdrop).remove()\r\n    $(toggle).each(function () {\r\n      var $this         = $(this)\r\n      var $parent       = getParent($this)\r\n      var relatedTarget = { relatedTarget: this }\r\n\r\n      if (!$parent.hasClass('open')) return\r\n\r\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\r\n\r\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\r\n\r\n      if (e.isDefaultPrevented()) return\r\n\r\n      $this.attr('aria-expanded', 'false')\r\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\r\n    })\r\n  }\r\n\r\n  Dropdown.prototype.toggle = function (e) {\r\n    var $this = $(this)\r\n\r\n    if ($this.is('.disabled, :disabled')) return\r\n\r\n    var $parent  = getParent($this)\r\n    var isActive = $parent.hasClass('open')\r\n\r\n    clearMenus()\r\n\r\n    if (!isActive) {\r\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\r\n        // if mobile we use a backdrop because click events don't delegate\r\n        $(document.createElement('div'))\r\n          .addClass('dropdown-backdrop')\r\n          .insertAfter($(this))\r\n          .on('click', clearMenus)\r\n      }\r\n\r\n      var relatedTarget = { relatedTarget: this }\r\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\r\n\r\n      if (e.isDefaultPrevented()) return\r\n\r\n      $this\r\n        .trigger('focus')\r\n        .attr('aria-expanded', 'true')\r\n\r\n      $parent\r\n        .toggleClass('open')\r\n        .trigger($.Event('shown.bs.dropdown', relatedTarget))\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  Dropdown.prototype.keydown = function (e) {\r\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\r\n\r\n    var $this = $(this)\r\n\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    if ($this.is('.disabled, :disabled')) return\r\n\r\n    var $parent  = getParent($this)\r\n    var isActive = $parent.hasClass('open')\r\n\r\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\r\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\r\n      return $this.trigger('click')\r\n    }\r\n\r\n    var desc = ' li:not(.disabled):visible a'\r\n    var $items = $parent.find('.dropdown-menu' + desc)\r\n\r\n    if (!$items.length) return\r\n\r\n    var index = $items.index(e.target)\r\n\r\n    if (e.which == 38 && index > 0)                 index--         // up\r\n    if (e.which == 40 && index < $items.length - 1) index++         // down\r\n    if (!~index)                                    index = 0\r\n\r\n    $items.eq(index).trigger('focus')\r\n  }\r\n\r\n\r\n  // DROPDOWN PLUGIN DEFINITION\r\n  // ==========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n      var data  = $this.data('bs.dropdown')\r\n\r\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\r\n      if (typeof option == 'string') data[option].call($this)\r\n    })\r\n  }\r\n\r\n  var old = $.fn.dropdown\r\n\r\n  $.fn.dropdown             = Plugin\r\n  $.fn.dropdown.Constructor = Dropdown\r\n\r\n\r\n  // DROPDOWN NO CONFLICT\r\n  // ====================\r\n\r\n  $.fn.dropdown.noConflict = function () {\r\n    $.fn.dropdown = old\r\n    return this\r\n  }\r\n\r\n\r\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\r\n  // ===================================\r\n\r\n  $(document)\r\n    .on('click.bs.dropdown.data-api', clearMenus)\r\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\r\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\r\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\r\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: modal.js v3.3.7\r\n * http://getbootstrap.com/javascript/#modals\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // MODAL CLASS DEFINITION\r\n  // ======================\r\n\r\n  var Modal = function (element, options) {\r\n    this.options             = options\r\n    this.$body               = $(document.body)\r\n    this.$element            = $(element)\r\n    this.$dialog             = this.$element.find('.modal-dialog')\r\n    this.$backdrop           = null\r\n    this.isShown             = null\r\n    this.originalBodyPad     = null\r\n    this.scrollbarWidth      = 0\r\n    this.ignoreBackdropClick = false\r\n\r\n    if (this.options.remote) {\r\n      this.$element\r\n        .find('.modal-content')\r\n        .load(this.options.remote, $.proxy(function () {\r\n          this.$element.trigger('loaded.bs.modal')\r\n        }, this))\r\n    }\r\n  }\r\n\r\n  Modal.VERSION  = '3.3.7'\r\n\r\n  Modal.TRANSITION_DURATION = 300\r\n  Modal.BACKDROP_TRANSITION_DURATION = 150\r\n\r\n  Modal.DEFAULTS = {\r\n    backdrop: true,\r\n    keyboard: true,\r\n    show: true\r\n  }\r\n\r\n  Modal.prototype.toggle = function (_relatedTarget) {\r\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\r\n  }\r\n\r\n  Modal.prototype.show = function (_relatedTarget) {\r\n    var that = this\r\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\r\n\r\n    this.$element.trigger(e)\r\n\r\n    if (this.isShown || e.isDefaultPrevented()) return\r\n\r\n    this.isShown = true\r\n\r\n    this.checkScrollbar()\r\n    this.setScrollbar()\r\n    this.$body.addClass('modal-open')\r\n\r\n    this.escape()\r\n    this.resize()\r\n\r\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\r\n\r\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\r\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\r\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\r\n      })\r\n    })\r\n\r\n    this.backdrop(function () {\r\n      var transition = $.support.transition && that.$element.hasClass('fade')\r\n\r\n      if (!that.$element.parent().length) {\r\n        that.$element.appendTo(that.$body) // don't move modals dom position\r\n      }\r\n\r\n      that.$element\r\n        .show()\r\n        .scrollTop(0)\r\n\r\n      that.adjustDialog()\r\n\r\n      if (transition) {\r\n        that.$element[0].offsetWidth // force reflow\r\n      }\r\n\r\n      that.$element.addClass('in')\r\n\r\n      that.enforceFocus()\r\n\r\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\r\n\r\n      transition ?\r\n        that.$dialog // wait for modal to slide in\r\n          .one('bsTransitionEnd', function () {\r\n            that.$element.trigger('focus').trigger(e)\r\n          })\r\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\r\n        that.$element.trigger('focus').trigger(e)\r\n    })\r\n  }\r\n\r\n  Modal.prototype.hide = function (e) {\r\n    if (e) e.preventDefault()\r\n\r\n    e = $.Event('hide.bs.modal')\r\n\r\n    this.$element.trigger(e)\r\n\r\n    if (!this.isShown || e.isDefaultPrevented()) return\r\n\r\n    this.isShown = false\r\n\r\n    this.escape()\r\n    this.resize()\r\n\r\n    $(document).off('focusin.bs.modal')\r\n\r\n    this.$element\r\n      .removeClass('in')\r\n      .off('click.dismiss.bs.modal')\r\n      .off('mouseup.dismiss.bs.modal')\r\n\r\n    this.$dialog.off('mousedown.dismiss.bs.modal')\r\n\r\n    $.support.transition && this.$element.hasClass('fade') ?\r\n      this.$element\r\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\r\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\r\n      this.hideModal()\r\n  }\r\n\r\n  Modal.prototype.enforceFocus = function () {\r\n    $(document)\r\n      .off('focusin.bs.modal') // guard against infinite focus loop\r\n      .on('focusin.bs.modal', $.proxy(function (e) {\r\n        if (document !== e.target &&\r\n            this.$element[0] !== e.target &&\r\n            !this.$element.has(e.target).length) {\r\n          this.$element.trigger('focus')\r\n        }\r\n      }, this))\r\n  }\r\n\r\n  Modal.prototype.escape = function () {\r\n    if (this.isShown && this.options.keyboard) {\r\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\r\n        e.which == 27 && this.hide()\r\n      }, this))\r\n    } else if (!this.isShown) {\r\n      this.$element.off('keydown.dismiss.bs.modal')\r\n    }\r\n  }\r\n\r\n  Modal.prototype.resize = function () {\r\n    if (this.isShown) {\r\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\r\n    } else {\r\n      $(window).off('resize.bs.modal')\r\n    }\r\n  }\r\n\r\n  Modal.prototype.hideModal = function () {\r\n    var that = this\r\n    this.$element.hide()\r\n    this.backdrop(function () {\r\n      that.$body.removeClass('modal-open')\r\n      that.resetAdjustments()\r\n      that.resetScrollbar()\r\n      that.$element.trigger('hidden.bs.modal')\r\n    })\r\n  }\r\n\r\n  Modal.prototype.removeBackdrop = function () {\r\n    this.$backdrop && this.$backdrop.remove()\r\n    this.$backdrop = null\r\n  }\r\n\r\n  Modal.prototype.backdrop = function (callback) {\r\n    var that = this\r\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\r\n\r\n    if (this.isShown && this.options.backdrop) {\r\n      var doAnimate = $.support.transition && animate\r\n\r\n      this.$backdrop = $(document.createElement('div'))\r\n        .addClass('modal-backdrop ' + animate)\r\n        .appendTo(this.$body)\r\n\r\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\r\n        if (this.ignoreBackdropClick) {\r\n          this.ignoreBackdropClick = false\r\n          return\r\n        }\r\n        if (e.target !== e.currentTarget) return\r\n        this.options.backdrop == 'static'\r\n          ? this.$element[0].focus()\r\n          : this.hide()\r\n      }, this))\r\n\r\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\r\n\r\n      this.$backdrop.addClass('in')\r\n\r\n      if (!callback) return\r\n\r\n      doAnimate ?\r\n        this.$backdrop\r\n          .one('bsTransitionEnd', callback)\r\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\r\n        callback()\r\n\r\n    } else if (!this.isShown && this.$backdrop) {\r\n      this.$backdrop.removeClass('in')\r\n\r\n      var callbackRemove = function () {\r\n        that.removeBackdrop()\r\n        callback && callback()\r\n      }\r\n      $.support.transition && this.$element.hasClass('fade') ?\r\n        this.$backdrop\r\n          .one('bsTransitionEnd', callbackRemove)\r\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\r\n        callbackRemove()\r\n\r\n    } else if (callback) {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  // these following methods are used to handle overflowing modals\r\n\r\n  Modal.prototype.handleUpdate = function () {\r\n    this.adjustDialog()\r\n  }\r\n\r\n  Modal.prototype.adjustDialog = function () {\r\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\r\n\r\n    this.$element.css({\r\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\r\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\r\n    })\r\n  }\r\n\r\n  Modal.prototype.resetAdjustments = function () {\r\n    this.$element.css({\r\n      paddingLeft: '',\r\n      paddingRight: ''\r\n    })\r\n  }\r\n\r\n  Modal.prototype.checkScrollbar = function () {\r\n    var fullWindowWidth = window.innerWidth\r\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\r\n      var documentElementRect = document.documentElement.getBoundingClientRect()\r\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\r\n    }\r\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\r\n    this.scrollbarWidth = this.measureScrollbar()\r\n  }\r\n\r\n  Modal.prototype.setScrollbar = function () {\r\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\r\n    this.originalBodyPad = document.body.style.paddingRight || ''\r\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\r\n  }\r\n\r\n  Modal.prototype.resetScrollbar = function () {\r\n    this.$body.css('padding-right', this.originalBodyPad)\r\n  }\r\n\r\n  Modal.prototype.measureScrollbar = function () { // thx walsh\r\n    var scrollDiv = document.createElement('div')\r\n    scrollDiv.className = 'modal-scrollbar-measure'\r\n    this.$body.append(scrollDiv)\r\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\r\n    this.$body[0].removeChild(scrollDiv)\r\n    return scrollbarWidth\r\n  }\r\n\r\n\r\n  // MODAL PLUGIN DEFINITION\r\n  // =======================\r\n\r\n  function Plugin(option, _relatedTarget) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.modal')\r\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\r\n\r\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\r\n      if (typeof option == 'string') data[option](_relatedTarget)\r\n      else if (options.show) data.show(_relatedTarget)\r\n    })\r\n  }\r\n\r\n  var old = $.fn.modal\r\n\r\n  $.fn.modal             = Plugin\r\n  $.fn.modal.Constructor = Modal\r\n\r\n\r\n  // MODAL NO CONFLICT\r\n  // =================\r\n\r\n  $.fn.modal.noConflict = function () {\r\n    $.fn.modal = old\r\n    return this\r\n  }\r\n\r\n\r\n  // MODAL DATA-API\r\n  // ==============\r\n\r\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\r\n    var $this   = $(this)\r\n    var href    = $this.attr('href')\r\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\r\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\r\n\r\n    if ($this.is('a')) e.preventDefault()\r\n\r\n    $target.one('show.bs.modal', function (showEvent) {\r\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\r\n      $target.one('hidden.bs.modal', function () {\r\n        $this.is(':visible') && $this.trigger('focus')\r\n      })\r\n    })\r\n    Plugin.call($target, option, this)\r\n  })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: tooltip.js v3.3.7\r\n * http://getbootstrap.com/javascript/#tooltip\r\n * Inspired by the original jQuery.tipsy by Jason Frame\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // TOOLTIP PUBLIC CLASS DEFINITION\r\n  // ===============================\r\n\r\n  var Tooltip = function (element, options) {\r\n    this.type       = null\r\n    this.options    = null\r\n    this.enabled    = null\r\n    this.timeout    = null\r\n    this.hoverState = null\r\n    this.$element   = null\r\n    this.inState    = null\r\n\r\n    this.init('tooltip', element, options)\r\n  }\r\n\r\n  Tooltip.VERSION  = '3.3.7'\r\n\r\n  Tooltip.TRANSITION_DURATION = 150\r\n\r\n  Tooltip.DEFAULTS = {\r\n    animation: true,\r\n    placement: 'top',\r\n    selector: false,\r\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\r\n    trigger: 'hover focus',\r\n    title: '',\r\n    delay: 0,\r\n    html: false,\r\n    container: false,\r\n    viewport: {\r\n      selector: 'body',\r\n      padding: 0\r\n    }\r\n  }\r\n\r\n  Tooltip.prototype.init = function (type, element, options) {\r\n    this.enabled   = true\r\n    this.type      = type\r\n    this.$element  = $(element)\r\n    this.options   = this.getOptions(options)\r\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\r\n    this.inState   = { click: false, hover: false, focus: false }\r\n\r\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\r\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\r\n    }\r\n\r\n    var triggers = this.options.trigger.split(' ')\r\n\r\n    for (var i = triggers.length; i--;) {\r\n      var trigger = triggers[i]\r\n\r\n      if (trigger == 'click') {\r\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\r\n      } else if (trigger != 'manual') {\r\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\r\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\r\n\r\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\r\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\r\n      }\r\n    }\r\n\r\n    this.options.selector ?\r\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\r\n      this.fixTitle()\r\n  }\r\n\r\n  Tooltip.prototype.getDefaults = function () {\r\n    return Tooltip.DEFAULTS\r\n  }\r\n\r\n  Tooltip.prototype.getOptions = function (options) {\r\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\r\n\r\n    if (options.delay && typeof options.delay == 'number') {\r\n      options.delay = {\r\n        show: options.delay,\r\n        hide: options.delay\r\n      }\r\n    }\r\n\r\n    return options\r\n  }\r\n\r\n  Tooltip.prototype.getDelegateOptions = function () {\r\n    var options  = {}\r\n    var defaults = this.getDefaults()\r\n\r\n    this._options && $.each(this._options, function (key, value) {\r\n      if (defaults[key] != value) options[key] = value\r\n    })\r\n\r\n    return options\r\n  }\r\n\r\n  Tooltip.prototype.enter = function (obj) {\r\n    var self = obj instanceof this.constructor ?\r\n      obj : $(obj.currentTarget).data('bs.' + this.type)\r\n\r\n    if (!self) {\r\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\r\n      $(obj.currentTarget).data('bs.' + this.type, self)\r\n    }\r\n\r\n    if (obj instanceof $.Event) {\r\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\r\n    }\r\n\r\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\r\n      self.hoverState = 'in'\r\n      return\r\n    }\r\n\r\n    clearTimeout(self.timeout)\r\n\r\n    self.hoverState = 'in'\r\n\r\n    if (!self.options.delay || !self.options.delay.show) return self.show()\r\n\r\n    self.timeout = setTimeout(function () {\r\n      if (self.hoverState == 'in') self.show()\r\n    }, self.options.delay.show)\r\n  }\r\n\r\n  Tooltip.prototype.isInStateTrue = function () {\r\n    for (var key in this.inState) {\r\n      if (this.inState[key]) return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  Tooltip.prototype.leave = function (obj) {\r\n    var self = obj instanceof this.constructor ?\r\n      obj : $(obj.currentTarget).data('bs.' + this.type)\r\n\r\n    if (!self) {\r\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\r\n      $(obj.currentTarget).data('bs.' + this.type, self)\r\n    }\r\n\r\n    if (obj instanceof $.Event) {\r\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\r\n    }\r\n\r\n    if (self.isInStateTrue()) return\r\n\r\n    clearTimeout(self.timeout)\r\n\r\n    self.hoverState = 'out'\r\n\r\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\r\n\r\n    self.timeout = setTimeout(function () {\r\n      if (self.hoverState == 'out') self.hide()\r\n    }, self.options.delay.hide)\r\n  }\r\n\r\n  Tooltip.prototype.show = function () {\r\n    var e = $.Event('show.bs.' + this.type)\r\n\r\n    if (this.hasContent() && this.enabled) {\r\n      this.$element.trigger(e)\r\n\r\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\r\n      if (e.isDefaultPrevented() || !inDom) return\r\n      var that = this\r\n\r\n      var $tip = this.tip()\r\n\r\n      var tipId = this.getUID(this.type)\r\n\r\n      this.setContent()\r\n      $tip.attr('id', tipId)\r\n      this.$element.attr('aria-describedby', tipId)\r\n\r\n      if (this.options.animation) $tip.addClass('fade')\r\n\r\n      var placement = typeof this.options.placement == 'function' ?\r\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\r\n        this.options.placement\r\n\r\n      var autoToken = /\\s?auto?\\s?/i\r\n      var autoPlace = autoToken.test(placement)\r\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\r\n\r\n      $tip\r\n        .detach()\r\n        .css({ top: 0, left: 0, display: 'block' })\r\n        .addClass(placement)\r\n        .data('bs.' + this.type, this)\r\n\r\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\r\n      this.$element.trigger('inserted.bs.' + this.type)\r\n\r\n      var pos          = this.getPosition()\r\n      var actualWidth  = $tip[0].offsetWidth\r\n      var actualHeight = $tip[0].offsetHeight\r\n\r\n      if (autoPlace) {\r\n        var orgPlacement = placement\r\n        var viewportDim = this.getPosition(this.$viewport)\r\n\r\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\r\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\r\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\r\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\r\n                    placement\r\n\r\n        $tip\r\n          .removeClass(orgPlacement)\r\n          .addClass(placement)\r\n      }\r\n\r\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\r\n\r\n      this.applyPlacement(calculatedOffset, placement)\r\n\r\n      var complete = function () {\r\n        var prevHoverState = that.hoverState\r\n        that.$element.trigger('shown.bs.' + that.type)\r\n        that.hoverState = null\r\n\r\n        if (prevHoverState == 'out') that.leave(that)\r\n      }\r\n\r\n      $.support.transition && this.$tip.hasClass('fade') ?\r\n        $tip\r\n          .one('bsTransitionEnd', complete)\r\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\r\n        complete()\r\n    }\r\n  }\r\n\r\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\r\n    var $tip   = this.tip()\r\n    var width  = $tip[0].offsetWidth\r\n    var height = $tip[0].offsetHeight\r\n\r\n    // manually read margins because getBoundingClientRect includes difference\r\n    var marginTop = parseInt($tip.css('margin-top'), 10)\r\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\r\n\r\n    // we must check for NaN for ie 8/9\r\n    if (isNaN(marginTop))  marginTop  = 0\r\n    if (isNaN(marginLeft)) marginLeft = 0\r\n\r\n    offset.top  += marginTop\r\n    offset.left += marginLeft\r\n\r\n    // $.fn.offset doesn't round pixel values\r\n    // so we use setOffset directly with our own function B-0\r\n    $.offset.setOffset($tip[0], $.extend({\r\n      using: function (props) {\r\n        $tip.css({\r\n          top: Math.round(props.top),\r\n          left: Math.round(props.left)\r\n        })\r\n      }\r\n    }, offset), 0)\r\n\r\n    $tip.addClass('in')\r\n\r\n    // check to see if placing tip in new offset caused the tip to resize itself\r\n    var actualWidth  = $tip[0].offsetWidth\r\n    var actualHeight = $tip[0].offsetHeight\r\n\r\n    if (placement == 'top' && actualHeight != height) {\r\n      offset.top = offset.top + height - actualHeight\r\n    }\r\n\r\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\r\n\r\n    if (delta.left) offset.left += delta.left\r\n    else offset.top += delta.top\r\n\r\n    var isVertical          = /top|bottom/.test(placement)\r\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\r\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\r\n\r\n    $tip.offset(offset)\r\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\r\n  }\r\n\r\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\r\n    this.arrow()\r\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\r\n      .css(isVertical ? 'top' : 'left', '')\r\n  }\r\n\r\n  Tooltip.prototype.setContent = function () {\r\n    var $tip  = this.tip()\r\n    var title = this.getTitle()\r\n\r\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\r\n    $tip.removeClass('fade in top bottom left right')\r\n  }\r\n\r\n  Tooltip.prototype.hide = function (callback) {\r\n    var that = this\r\n    var $tip = $(this.$tip)\r\n    var e    = $.Event('hide.bs.' + this.type)\r\n\r\n    function complete() {\r\n      if (that.hoverState != 'in') $tip.detach()\r\n      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.\r\n        that.$element\r\n          .removeAttr('aria-describedby')\r\n          .trigger('hidden.bs.' + that.type)\r\n      }\r\n      callback && callback()\r\n    }\r\n\r\n    this.$element.trigger(e)\r\n\r\n    if (e.isDefaultPrevented()) return\r\n\r\n    $tip.removeClass('in')\r\n\r\n    $.support.transition && $tip.hasClass('fade') ?\r\n      $tip\r\n        .one('bsTransitionEnd', complete)\r\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\r\n      complete()\r\n\r\n    this.hoverState = null\r\n\r\n    return this\r\n  }\r\n\r\n  Tooltip.prototype.fixTitle = function () {\r\n    var $e = this.$element\r\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\r\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\r\n    }\r\n  }\r\n\r\n  Tooltip.prototype.hasContent = function () {\r\n    return this.getTitle()\r\n  }\r\n\r\n  Tooltip.prototype.getPosition = function ($element) {\r\n    $element   = $element || this.$element\r\n\r\n    var el     = $element[0]\r\n    var isBody = el.tagName == 'BODY'\r\n\r\n    var elRect    = el.getBoundingClientRect()\r\n    if (elRect.width == null) {\r\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\r\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\r\n    }\r\n    var isSvg = window.SVGElement && el instanceof window.SVGElement\r\n    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\r\n    // See https://github.com/twbs/bootstrap/issues/20280\r\n    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\r\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\r\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\r\n\r\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\r\n  }\r\n\r\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\r\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\r\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\r\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\r\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\r\n\r\n  }\r\n\r\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\r\n    var delta = { top: 0, left: 0 }\r\n    if (!this.$viewport) return delta\r\n\r\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\r\n    var viewportDimensions = this.getPosition(this.$viewport)\r\n\r\n    if (/right|left/.test(placement)) {\r\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\r\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\r\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\r\n        delta.top = viewportDimensions.top - topEdgeOffset\r\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\r\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\r\n      }\r\n    } else {\r\n      var leftEdgeOffset  = pos.left - viewportPadding\r\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\r\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\r\n        delta.left = viewportDimensions.left - leftEdgeOffset\r\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\r\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\r\n      }\r\n    }\r\n\r\n    return delta\r\n  }\r\n\r\n  Tooltip.prototype.getTitle = function () {\r\n    var title\r\n    var $e = this.$element\r\n    var o  = this.options\r\n\r\n    title = $e.attr('data-original-title')\r\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\r\n\r\n    return title\r\n  }\r\n\r\n  Tooltip.prototype.getUID = function (prefix) {\r\n    do prefix += ~~(Math.random() * 1000000)\r\n    while (document.getElementById(prefix))\r\n    return prefix\r\n  }\r\n\r\n  Tooltip.prototype.tip = function () {\r\n    if (!this.$tip) {\r\n      this.$tip = $(this.options.template)\r\n      if (this.$tip.length != 1) {\r\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\r\n      }\r\n    }\r\n    return this.$tip\r\n  }\r\n\r\n  Tooltip.prototype.arrow = function () {\r\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\r\n  }\r\n\r\n  Tooltip.prototype.enable = function () {\r\n    this.enabled = true\r\n  }\r\n\r\n  Tooltip.prototype.disable = function () {\r\n    this.enabled = false\r\n  }\r\n\r\n  Tooltip.prototype.toggleEnabled = function () {\r\n    this.enabled = !this.enabled\r\n  }\r\n\r\n  Tooltip.prototype.toggle = function (e) {\r\n    var self = this\r\n    if (e) {\r\n      self = $(e.currentTarget).data('bs.' + this.type)\r\n      if (!self) {\r\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\r\n        $(e.currentTarget).data('bs.' + this.type, self)\r\n      }\r\n    }\r\n\r\n    if (e) {\r\n      self.inState.click = !self.inState.click\r\n      if (self.isInStateTrue()) self.enter(self)\r\n      else self.leave(self)\r\n    } else {\r\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\r\n    }\r\n  }\r\n\r\n  Tooltip.prototype.destroy = function () {\r\n    var that = this\r\n    clearTimeout(this.timeout)\r\n    this.hide(function () {\r\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\r\n      if (that.$tip) {\r\n        that.$tip.detach()\r\n      }\r\n      that.$tip = null\r\n      that.$arrow = null\r\n      that.$viewport = null\r\n      that.$element = null\r\n    })\r\n  }\r\n\r\n\r\n  // TOOLTIP PLUGIN DEFINITION\r\n  // =========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.tooltip')\r\n      var options = typeof option == 'object' && option\r\n\r\n      if (!data && /destroy|hide/.test(option)) return\r\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.tooltip\r\n\r\n  $.fn.tooltip             = Plugin\r\n  $.fn.tooltip.Constructor = Tooltip\r\n\r\n\r\n  // TOOLTIP NO CONFLICT\r\n  // ===================\r\n\r\n  $.fn.tooltip.noConflict = function () {\r\n    $.fn.tooltip = old\r\n    return this\r\n  }\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: popover.js v3.3.7\r\n * http://getbootstrap.com/javascript/#popovers\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // POPOVER PUBLIC CLASS DEFINITION\r\n  // ===============================\r\n\r\n  var Popover = function (element, options) {\r\n    this.init('popover', element, options)\r\n  }\r\n\r\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\r\n\r\n  Popover.VERSION  = '3.3.7'\r\n\r\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\r\n    placement: 'right',\r\n    trigger: 'click',\r\n    content: '',\r\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\r\n  })\r\n\r\n\r\n  // NOTE: POPOVER EXTENDS tooltip.js\r\n  // ================================\r\n\r\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\r\n\r\n  Popover.prototype.constructor = Popover\r\n\r\n  Popover.prototype.getDefaults = function () {\r\n    return Popover.DEFAULTS\r\n  }\r\n\r\n  Popover.prototype.setContent = function () {\r\n    var $tip    = this.tip()\r\n    var title   = this.getTitle()\r\n    var content = this.getContent()\r\n\r\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\r\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\r\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\r\n    ](content)\r\n\r\n    $tip.removeClass('fade top bottom left right in')\r\n\r\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\r\n    // this manually by checking the contents.\r\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\r\n  }\r\n\r\n  Popover.prototype.hasContent = function () {\r\n    return this.getTitle() || this.getContent()\r\n  }\r\n\r\n  Popover.prototype.getContent = function () {\r\n    var $e = this.$element\r\n    var o  = this.options\r\n\r\n    return $e.attr('data-content')\r\n      || (typeof o.content == 'function' ?\r\n            o.content.call($e[0]) :\r\n            o.content)\r\n  }\r\n\r\n  Popover.prototype.arrow = function () {\r\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\r\n  }\r\n\r\n\r\n  // POPOVER PLUGIN DEFINITION\r\n  // =========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.popover')\r\n      var options = typeof option == 'object' && option\r\n\r\n      if (!data && /destroy|hide/.test(option)) return\r\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.popover\r\n\r\n  $.fn.popover             = Plugin\r\n  $.fn.popover.Constructor = Popover\r\n\r\n\r\n  // POPOVER NO CONFLICT\r\n  // ===================\r\n\r\n  $.fn.popover.noConflict = function () {\r\n    $.fn.popover = old\r\n    return this\r\n  }\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: scrollspy.js v3.3.7\r\n * http://getbootstrap.com/javascript/#scrollspy\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // SCROLLSPY CLASS DEFINITION\r\n  // ==========================\r\n\r\n  function ScrollSpy(element, options) {\r\n    this.$body          = $(document.body)\r\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\r\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\r\n    this.selector       = (this.options.target || '') + ' .nav li > a'\r\n    this.offsets        = []\r\n    this.targets        = []\r\n    this.activeTarget   = null\r\n    this.scrollHeight   = 0\r\n\r\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\r\n    this.refresh()\r\n    this.process()\r\n  }\r\n\r\n  ScrollSpy.VERSION  = '3.3.7'\r\n\r\n  ScrollSpy.DEFAULTS = {\r\n    offset: 10\r\n  }\r\n\r\n  ScrollSpy.prototype.getScrollHeight = function () {\r\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\r\n  }\r\n\r\n  ScrollSpy.prototype.refresh = function () {\r\n    var that          = this\r\n    var offsetMethod  = 'offset'\r\n    var offsetBase    = 0\r\n\r\n    this.offsets      = []\r\n    this.targets      = []\r\n    this.scrollHeight = this.getScrollHeight()\r\n\r\n    if (!$.isWindow(this.$scrollElement[0])) {\r\n      offsetMethod = 'position'\r\n      offsetBase   = this.$scrollElement.scrollTop()\r\n    }\r\n\r\n    this.$body\r\n      .find(this.selector)\r\n      .map(function () {\r\n        var $el   = $(this)\r\n        var href  = $el.data('target') || $el.attr('href')\r\n        var $href = /^#./.test(href) && $(href)\r\n\r\n        return ($href\r\n          && $href.length\r\n          && $href.is(':visible')\r\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\r\n      })\r\n      .sort(function (a, b) { return a[0] - b[0] })\r\n      .each(function () {\r\n        that.offsets.push(this[0])\r\n        that.targets.push(this[1])\r\n      })\r\n  }\r\n\r\n  ScrollSpy.prototype.process = function () {\r\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\r\n    var scrollHeight = this.getScrollHeight()\r\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\r\n    var offsets      = this.offsets\r\n    var targets      = this.targets\r\n    var activeTarget = this.activeTarget\r\n    var i\r\n\r\n    if (this.scrollHeight != scrollHeight) {\r\n      this.refresh()\r\n    }\r\n\r\n    if (scrollTop >= maxScroll) {\r\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\r\n    }\r\n\r\n    if (activeTarget && scrollTop < offsets[0]) {\r\n      this.activeTarget = null\r\n      return this.clear()\r\n    }\r\n\r\n    for (i = offsets.length; i--;) {\r\n      activeTarget != targets[i]\r\n        && scrollTop >= offsets[i]\r\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\r\n        && this.activate(targets[i])\r\n    }\r\n  }\r\n\r\n  ScrollSpy.prototype.activate = function (target) {\r\n    this.activeTarget = target\r\n\r\n    this.clear()\r\n\r\n    var selector = this.selector +\r\n      '[data-target=\"' + target + '\"],' +\r\n      this.selector + '[href=\"' + target + '\"]'\r\n\r\n    var active = $(selector)\r\n      .parents('li')\r\n      .addClass('active')\r\n\r\n    if (active.parent('.dropdown-menu').length) {\r\n      active = active\r\n        .closest('li.dropdown')\r\n        .addClass('active')\r\n    }\r\n\r\n    active.trigger('activate.bs.scrollspy')\r\n  }\r\n\r\n  ScrollSpy.prototype.clear = function () {\r\n    $(this.selector)\r\n      .parentsUntil(this.options.target, '.active')\r\n      .removeClass('active')\r\n  }\r\n\r\n\r\n  // SCROLLSPY PLUGIN DEFINITION\r\n  // ===========================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.scrollspy')\r\n      var options = typeof option == 'object' && option\r\n\r\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.scrollspy\r\n\r\n  $.fn.scrollspy             = Plugin\r\n  $.fn.scrollspy.Constructor = ScrollSpy\r\n\r\n\r\n  // SCROLLSPY NO CONFLICT\r\n  // =====================\r\n\r\n  $.fn.scrollspy.noConflict = function () {\r\n    $.fn.scrollspy = old\r\n    return this\r\n  }\r\n\r\n\r\n  // SCROLLSPY DATA-API\r\n  // ==================\r\n\r\n  $(window).on('load.bs.scrollspy.data-api', function () {\r\n    $('[data-spy=\"scroll\"]').each(function () {\r\n      var $spy = $(this)\r\n      Plugin.call($spy, $spy.data())\r\n    })\r\n  })\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: tab.js v3.3.7\r\n * http://getbootstrap.com/javascript/#tabs\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // TAB CLASS DEFINITION\r\n  // ====================\r\n\r\n  var Tab = function (element) {\r\n    // jscs:disable requireDollarBeforejQueryAssignment\r\n    this.element = $(element)\r\n    // jscs:enable requireDollarBeforejQueryAssignment\r\n  }\r\n\r\n  Tab.VERSION = '3.3.7'\r\n\r\n  Tab.TRANSITION_DURATION = 150\r\n\r\n  Tab.prototype.show = function () {\r\n    var $this    = this.element\r\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\r\n    var selector = $this.data('target')\r\n\r\n    if (!selector) {\r\n      selector = $this.attr('href')\r\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\r\n    }\r\n\r\n    if ($this.parent('li').hasClass('active')) return\r\n\r\n    var $previous = $ul.find('.active:last a')\r\n    var hideEvent = $.Event('hide.bs.tab', {\r\n      relatedTarget: $this[0]\r\n    })\r\n    var showEvent = $.Event('show.bs.tab', {\r\n      relatedTarget: $previous[0]\r\n    })\r\n\r\n    $previous.trigger(hideEvent)\r\n    $this.trigger(showEvent)\r\n\r\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\r\n\r\n    var $target = $(selector)\r\n\r\n    this.activate($this.closest('li'), $ul)\r\n    this.activate($target, $target.parent(), function () {\r\n      $previous.trigger({\r\n        type: 'hidden.bs.tab',\r\n        relatedTarget: $this[0]\r\n      })\r\n      $this.trigger({\r\n        type: 'shown.bs.tab',\r\n        relatedTarget: $previous[0]\r\n      })\r\n    })\r\n  }\r\n\r\n  Tab.prototype.activate = function (element, container, callback) {\r\n    var $active    = container.find('> .active')\r\n    var transition = callback\r\n      && $.support.transition\r\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\r\n\r\n    function next() {\r\n      $active\r\n        .removeClass('active')\r\n        .find('> .dropdown-menu > .active')\r\n          .removeClass('active')\r\n        .end()\r\n        .find('[data-toggle=\"tab\"]')\r\n          .attr('aria-expanded', false)\r\n\r\n      element\r\n        .addClass('active')\r\n        .find('[data-toggle=\"tab\"]')\r\n          .attr('aria-expanded', true)\r\n\r\n      if (transition) {\r\n        element[0].offsetWidth // reflow for transition\r\n        element.addClass('in')\r\n      } else {\r\n        element.removeClass('fade')\r\n      }\r\n\r\n      if (element.parent('.dropdown-menu').length) {\r\n        element\r\n          .closest('li.dropdown')\r\n            .addClass('active')\r\n          .end()\r\n          .find('[data-toggle=\"tab\"]')\r\n            .attr('aria-expanded', true)\r\n      }\r\n\r\n      callback && callback()\r\n    }\r\n\r\n    $active.length && transition ?\r\n      $active\r\n        .one('bsTransitionEnd', next)\r\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\r\n      next()\r\n\r\n    $active.removeClass('in')\r\n  }\r\n\r\n\r\n  // TAB PLUGIN DEFINITION\r\n  // =====================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n      var data  = $this.data('bs.tab')\r\n\r\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.tab\r\n\r\n  $.fn.tab             = Plugin\r\n  $.fn.tab.Constructor = Tab\r\n\r\n\r\n  // TAB NO CONFLICT\r\n  // ===============\r\n\r\n  $.fn.tab.noConflict = function () {\r\n    $.fn.tab = old\r\n    return this\r\n  }\r\n\r\n\r\n  // TAB DATA-API\r\n  // ============\r\n\r\n  var clickHandler = function (e) {\r\n    e.preventDefault()\r\n    Plugin.call($(this), 'show')\r\n  }\r\n\r\n  $(document)\r\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\r\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\r\n\r\n}(jQuery);\r\n\r\n/* ========================================================================\r\n * Bootstrap: affix.js v3.3.7\r\n * http://getbootstrap.com/javascript/#affix\r\n * ========================================================================\r\n * Copyright 2011-2016 Twitter, Inc.\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\r\n * ======================================================================== */\r\n\r\n\r\n+function ($) {\r\n  'use strict';\r\n\r\n  // AFFIX CLASS DEFINITION\r\n  // ======================\r\n\r\n  var Affix = function (element, options) {\r\n    this.options = $.extend({}, Affix.DEFAULTS, options)\r\n\r\n    this.$target = $(this.options.target)\r\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\r\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\r\n\r\n    this.$element     = $(element)\r\n    this.affixed      = null\r\n    this.unpin        = null\r\n    this.pinnedOffset = null\r\n\r\n    this.checkPosition()\r\n  }\r\n\r\n  Affix.VERSION  = '3.3.7'\r\n\r\n  Affix.RESET    = 'affix affix-top affix-bottom'\r\n\r\n  Affix.DEFAULTS = {\r\n    offset: 0,\r\n    target: window\r\n  }\r\n\r\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\r\n    var scrollTop    = this.$target.scrollTop()\r\n    var position     = this.$element.offset()\r\n    var targetHeight = this.$target.height()\r\n\r\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\r\n\r\n    if (this.affixed == 'bottom') {\r\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\r\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\r\n    }\r\n\r\n    var initializing   = this.affixed == null\r\n    var colliderTop    = initializing ? scrollTop : position.top\r\n    var colliderHeight = initializing ? targetHeight : height\r\n\r\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\r\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\r\n\r\n    return false\r\n  }\r\n\r\n  Affix.prototype.getPinnedOffset = function () {\r\n    if (this.pinnedOffset) return this.pinnedOffset\r\n    this.$element.removeClass(Affix.RESET).addClass('affix')\r\n    var scrollTop = this.$target.scrollTop()\r\n    var position  = this.$element.offset()\r\n    return (this.pinnedOffset = position.top - scrollTop)\r\n  }\r\n\r\n  Affix.prototype.checkPositionWithEventLoop = function () {\r\n    setTimeout($.proxy(this.checkPosition, this), 1)\r\n  }\r\n\r\n  Affix.prototype.checkPosition = function () {\r\n    if (!this.$element.is(':visible')) return\r\n\r\n    var height       = this.$element.height()\r\n    var offset       = this.options.offset\r\n    var offsetTop    = offset.top\r\n    var offsetBottom = offset.bottom\r\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\r\n\r\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\r\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\r\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\r\n\r\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\r\n\r\n    if (this.affixed != affix) {\r\n      if (this.unpin != null) this.$element.css('top', '')\r\n\r\n      var affixType = 'affix' + (affix ? '-' + affix : '')\r\n      var e         = $.Event(affixType + '.bs.affix')\r\n\r\n      this.$element.trigger(e)\r\n\r\n      if (e.isDefaultPrevented()) return\r\n\r\n      this.affixed = affix\r\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\r\n\r\n      this.$element\r\n        .removeClass(Affix.RESET)\r\n        .addClass(affixType)\r\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\r\n    }\r\n\r\n    if (affix == 'bottom') {\r\n      this.$element.offset({\r\n        top: scrollHeight - height - offsetBottom\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  // AFFIX PLUGIN DEFINITION\r\n  // =======================\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this   = $(this)\r\n      var data    = $this.data('bs.affix')\r\n      var options = typeof option == 'object' && option\r\n\r\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\r\n      if (typeof option == 'string') data[option]()\r\n    })\r\n  }\r\n\r\n  var old = $.fn.affix\r\n\r\n  $.fn.affix             = Plugin\r\n  $.fn.affix.Constructor = Affix\r\n\r\n\r\n  // AFFIX NO CONFLICT\r\n  // =================\r\n\r\n  $.fn.affix.noConflict = function () {\r\n    $.fn.affix = old\r\n    return this\r\n  }\r\n\r\n\r\n  // AFFIX DATA-API\r\n  // ==============\r\n\r\n  $(window).on('load', function () {\r\n    $('[data-spy=\"affix\"]').each(function () {\r\n      var $spy = $(this)\r\n      var data = $spy.data()\r\n\r\n      data.offset = data.offset || {}\r\n\r\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\r\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\r\n\r\n      Plugin.call($spy, data)\r\n    })\r\n  })\r\n\r\n}(jQuery);\r\n","/* =========================================================\r\n * bootstrap-datepicker.js \r\n * http://www.eyecon.ro/bootstrap-datepicker\r\n * =========================================================\r\n * Copyright 2012 Stefan Petre\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================= */\r\n var color = '';\r\n!function( $ ) {\r\n\t\r\n\t// Picker object\r\n\r\n\tvar Datepicker = function(element, options){\r\n\t\tthis.element = $(element);\r\n\t\tthis.format = DPGlobal.parseFormat(options.format||this.element.data('date-format')||'mm/dd/yyyy');\r\n\t\tthis.picker = $(DPGlobal.template)\r\n\t\t\t\t\t\t\t.appendTo('body')\r\n\t\t\t\t\t\t\t.on({\r\n\t\t\t\t\t\t\t\tclick: $.proxy(this.click, this)//,\r\n\t\t\t\t\t\t\t\t//mousedown: $.proxy(this.mousedown, this)\r\n\t\t\t\t\t\t\t});\r\n\t\tthis.isInput = this.element.is('input');\r\n\t\tthis.component = this.element.is('.date') ? this.element.find('.add-on') : false;\r\n\t\t\r\n\t\tif (this.isInput) {\r\n\t\t\tthis.element.on({\r\n\t\t\t\tfocus: $.proxy(this.show, this),\r\n\t\t\t\t//blur: $.proxy(this.hide, this),\r\n\t\t\t\tkeyup: $.proxy(this.update, this)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (this.component){\r\n\t\t\t\tthis.component.on('click', $.proxy(this.show, this));\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.on('click', $.proxy(this.show, this));\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.minViewMode = options.minViewMode||this.element.data('date-minviewmode')||0;\r\n\t\tif (typeof this.minViewMode === 'string') {\r\n\t\t\tswitch (this.minViewMode) {\r\n\t\t\t\tcase 'months':\r\n\t\t\t\t\tthis.minViewMode = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'years':\r\n\t\t\t\t\tthis.minViewMode = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.minViewMode = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.viewMode = options.viewMode||this.element.data('date-viewmode')||0;\r\n\t\tif (typeof this.viewMode === 'string') {\r\n\t\t\tswitch (this.viewMode) {\r\n\t\t\t\tcase 'months':\r\n\t\t\t\t\tthis.viewMode = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'years':\r\n\t\t\t\t\tthis.viewMode = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.viewMode = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.color = options.color||'azure';\r\n\t\tthis.startViewMode = this.viewMode;\r\n\t\tthis.weekStart = options.weekStart||this.element.data('date-weekstart')||0;\r\n\t\tthis.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;\r\n\t\tthis.onRender = options.onRender;\r\n\t\tthis.fillDow();\r\n\t\tthis.fillMonths();\r\n\t\tthis.update();\r\n\t\tthis.showMode();\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tDatepicker.prototype = {\r\n\t\tconstructor: Datepicker,\r\n\t\t\r\n\t\tshow: function(e) {\r\n\t\t    var datepicker = this.picker;\r\n\r\n\t\t\tthis.picker.show();\r\n\t\t\tthis.height = this.component ? this.component.outerHeight() : this.element.outerHeight();\r\n\t\t\tthis.place();\r\n\t\t\t$(window).on('resize', $.proxy(this.place, this));\r\n\t\t\tif (e ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t}\r\n\t\t\tvar that = this;\r\n\t\t\t$(document).on('mousedown', function(ev){\r\n\t\t\t\tif ($(ev.target).closest('.datepicker').length == 0) {\r\n\t\t\t\t\tthat.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.element.trigger({\r\n\t\t\t\ttype: 'show',\r\n\t\t\t\tdate: this.date\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n    \t\t\tdatepicker.addClass('open');\r\n\t\t\t}, 170);\r\n\t\t},\r\n\t\t\r\n\t\thide: function(){\r\n\t\t\tvar datepicker = this.picker;\r\n\t\t\tdatepicker.removeClass('open');\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n    \t\t\tthis.picker.hide();\r\n\t\t\t}, 500);\r\n\t\t\t\r\n\t\t\t$(window).off('resize', this.place);\r\n\t\t\tthis.viewMode = this.startViewMode;\r\n\t\t\tthis.showMode();\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t\t$(document).off('mousedown', this.hide);\r\n\t\t\t}\r\n\t\t\t//this.set();\r\n\t\t\tthis.element.trigger({\r\n\t\t\t\ttype: 'hide',\r\n\t\t\t\tdate: this.date\r\n\t\t\t});\r\n\t\t\t\r\n    \t},\r\n\t\t\r\n\t\tset: function() {\r\n\t\t\tvar formated = DPGlobal.formatDate(this.date, this.format);\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t\tif (this.component){\r\n\t\t\t\t\tthis.element.find('input').prop('value', formated);\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.data('date', formated);\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.prop('value', formated);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tsetValue: function(newDate) {\r\n\t\t\tif (typeof newDate === 'string') {\r\n\t\t\t\tthis.date = DPGlobal.parseDate(newDate, this.format);\r\n\t\t\t} else {\r\n\t\t\t\tthis.date = new Date(newDate);\r\n\t\t\t}\r\n\t\t\tthis.set();\r\n\t\t\tthis.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);\r\n\t\t\tthis.fill();\r\n\t\t},\r\n\t\t\r\n\t\tplace: function(){\r\n\t\t\tvar offset = this.component ? this.component.offset() : this.element.offset();\r\n\t\t\tthis.picker.css({\r\n\t\t\t\ttop: offset.top + this.height,\r\n\t\t\t\tleft: offset.left\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tupdate: function(newDate){\r\n\t\t\tthis.date = DPGlobal.parseDate(\r\n\t\t\t\ttypeof newDate === 'string' ? newDate : (this.isInput ? this.element.prop('value') : this.element.data('date')),\r\n\t\t\t\tthis.format\r\n\t\t\t);\r\n\t\t\tthis.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);\r\n\t\t\tthis.fill();\r\n\t\t},\r\n\t\t\r\n\t\tfillDow: function(){\r\n\t\t\tvar dowCnt = this.weekStart;\r\n\t\t\tvar html = '<tr>';\r\n\t\t\twhile (dowCnt < this.weekStart + 7) {\r\n\t\t\t\thtml += '<th class=\"dow\">'+DPGlobal.dates.daysMin[(dowCnt++)%7]+'</th>';\r\n\t\t\t}\r\n\t\t\thtml += '</tr>';\r\n\t\t\tthis.picker.find('.datepicker-days thead').append(html);\r\n\t\t},\r\n\t\t\r\n\t\tfillMonths: function(){\r\n\t\t\tvar html = '';\r\n\t\t\tvar i = 0\r\n\t\t\twhile (i < 12) {\r\n\t\t\t\thtml += '<span class=\"month\">'+DPGlobal.dates.monthsShort[i++]+'</span>';\r\n\t\t\t}\r\n\t\t\tthis.picker.find('.datepicker-months td').append(html);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function() {\r\n\t\t\tvar d = new Date(this.viewDate),\r\n\t\t\t\tyear = d.getFullYear(),\r\n\t\t\t\tmonth = d.getMonth(),\r\n\t\t\t\tcurrentDate = this.date.valueOf();\r\n\t\t\tthis.picker.find('.datepicker-days th:eq(1)')\r\n\t\t\t\t\t\t.text(DPGlobal.dates.months[month]+' '+year);\r\n\t\t\tvar prevMonth = new Date(year, month-1, 28,0,0,0,0),\r\n\t\t\t\tday = DPGlobal.getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());\r\n\t\t\tprevMonth.setDate(day);\r\n\t\t\tprevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7)%7);\r\n\t\t\tvar nextMonth = new Date(prevMonth);\r\n\t\t\tnextMonth.setDate(nextMonth.getDate() + 42);\r\n\t\t\tnextMonth = nextMonth.valueOf();\r\n\t\t\tvar html = [];\r\n\t\t\tvar clsName,\r\n\t\t\t\tprevY,\r\n\t\t\t\tprevM;\r\n\t\t\twhile(prevMonth.valueOf() < nextMonth) {\r\n\t\t\t\tif (prevMonth.getDay() === this.weekStart) {\r\n\t\t\t\t\thtml.push('<tr>');\r\n\t\t\t\t}\r\n\t\t\t\tclsName = this.onRender(prevMonth);\r\n\t\t\t\tprevY = prevMonth.getFullYear();\r\n\t\t\t\tprevM = prevMonth.getMonth();\r\n\t\t\t\tif ((prevM < month &&  prevY === year) ||  prevY < year) {\r\n\t\t\t\t\tclsName += ' old';\r\n\t\t\t\t} else if ((prevM > month && prevY === year) || prevY > year) {\r\n\t\t\t\t\tclsName += ' new';\r\n\t\t\t\t}\r\n\t\t\t\tif (prevMonth.valueOf() === currentDate) {\r\n\t\t\t\t\tclsName += ' active ' + this.color;\r\n\t\t\t\t}\r\n\t\t\t\thtml.push('<td class=\"day '+clsName+'\"><p>'+prevMonth.getDate() + '</p></td>');\r\n\t\t\t\tif (prevMonth.getDay() === this.weekEnd) {\r\n\t\t\t\t\thtml.push('</tr>');\r\n\t\t\t\t}\r\n\t\t\t\tprevMonth.setDate(prevMonth.getDate()+1);\r\n\t\t\t}\r\n\t\t\tthis.picker.find('.datepicker-days tbody').empty().append(html.join(''));\r\n\t\t\tvar currentYear = this.date.getFullYear();\r\n\t\t\t\r\n\t\t\tvar months = this.picker.find('.datepicker-months')\r\n\t\t\t\t\t\t.find('th:eq(1)')\r\n\t\t\t\t\t\t\t.text(year)\r\n\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.find('span').removeClass('active');\r\n\t\t\tif (currentYear === year) {\r\n\t\t\t\tmonths.eq(this.date.getMonth()).addClass('active').addClass(this.color);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\thtml = '';\r\n\t\t\tyear = parseInt(year/10, 10) * 10;\r\n\t\t\tvar yearCont = this.picker.find('.datepicker-years')\r\n\t\t\t\t\t\t\t\t.find('th:eq(1)')\r\n\t\t\t\t\t\t\t\t\t.text(year + '-' + (year + 9))\r\n\t\t\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t\t\t.find('td');\r\n\t\t\tyear -= 1;\r\n\t\t\tfor (var i = -1; i < 11; i++) {\r\n\t\t\t\thtml += '<span class=\"year'+(i === -1 || i === 10 ? ' old' : '')+(currentYear === year ? ' active ' : '')+ this.color + '\">'+year+'</span>';\r\n\t\t\t\tyear += 1;\r\n\t\t\t}\r\n\t\t\tyearCont.html(html);\r\n\t\t},\r\n\t\t\r\n\t\tclick: function(e) {\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tvar target = $(e.target).closest('span, td, th');\r\n\t\t\tif (target.length === 1) {\r\n\t\t\t\tswitch(target[0].nodeName.toLowerCase()) {\r\n\t\t\t\t\tcase 'th':\r\n\t\t\t\t\t\tswitch(target[0].className) {\r\n\t\t\t\t\t\t\tcase 'switch-datepicker':\r\n\t\t\t\t\t\t\t\tthis.showMode(1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'prev':\r\n\t\t\t\t\t\t\tcase 'next':\r\n\t\t\t\t\t\t\t\tthis.viewDate['set'+DPGlobal.modes[this.viewMode].navFnc].call(\r\n\t\t\t\t\t\t\t\t\tthis.viewDate,\r\n\t\t\t\t\t\t\t\t\tthis.viewDate['get'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate) + \r\n\t\t\t\t\t\t\t\t\tDPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'span':\r\n\t\t\t\t\t\tif (target.is('.month')) {\r\n\t\t\t\t\t\t\tvar month = target.parent().find('span').index(target);\r\n\t\t\t\t\t\t\tthis.viewDate.setMonth(month);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar year = parseInt(target.text(), 10)||0;\r\n\t\t\t\t\t\t\tthis.viewDate.setFullYear(year);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.viewMode !== 0) {\r\n\t\t\t\t\t\t\tthis.date = new Date(this.viewDate);\r\n\t\t\t\t\t\t\tthis.element.trigger({\r\n\t\t\t\t\t\t\t\ttype: 'changeDate',\r\n\t\t\t\t\t\t\t\tdate: this.date,\r\n\t\t\t\t\t\t\t\tviewMode: DPGlobal.modes[this.viewMode].clsName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.showMode(-1);\r\n\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'td':\r\n\t\t\t\t\t\tif (target.is('.day') && !target.is('.disabled')){\r\n\t\t\t\t\t\t\tvar day = parseInt(target.text(), 10)||1;\r\n\t\t\t\t\t\t\tvar month = this.viewDate.getMonth();\r\n\t\t\t\t\t\t\tif (target.is('.old')) {\r\n\t\t\t\t\t\t\t\tmonth -= 1;\r\n\t\t\t\t\t\t\t} else if (target.is('.new')) {\r\n\t\t\t\t\t\t\t\tmonth += 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar year = this.viewDate.getFullYear();\r\n\t\t\t\t\t\t\tthis.date = new Date(year, month, day,0,0,0,0);\r\n\t\t\t\t\t\t\tthis.viewDate = new Date(year, month, Math.min(28, day),0,0,0,0);\r\n\t\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\t\tthis.element.trigger({\r\n\t\t\t\t\t\t\t\ttype: 'changeDate',\r\n\t\t\t\t\t\t\t\tdate: this.date,\r\n\t\t\t\t\t\t\t\tviewMode: DPGlobal.modes[this.viewMode].clsName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tmousedown: function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\t\t\r\n\t\tshowMode: function(dir) {\r\n\t\t\tif (dir) {\r\n\t\t\t\tthis.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));\r\n\t\t\t}\r\n\t\t\tthis.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();\r\n\t\t}\r\n\t};\r\n\t\r\n\t$.fn.datepicker = function ( option, val ) {\r\n\t\treturn this.each(function () {\r\n\t\t\tvar $this = $(this),\r\n\t\t\t\tdata = $this.data('datepicker'),\r\n\t\t\t\toptions = typeof option === 'object' && option;\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('datepicker', (data = new Datepicker(this, $.extend({}, $.fn.datepicker.defaults,options))));\r\n\t\t\t}\r\n\t\t\tif (typeof option === 'string') data[option](val);\r\n\t\t});\r\n\t};\r\n\r\n\t$.fn.datepicker.defaults = {\r\n\t\tonRender: function(date) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\t$.fn.datepicker.Constructor = Datepicker;\r\n\t\r\n\tvar DPGlobal = {\r\n\t\tmodes: [\r\n\t\t\t{\r\n\t\t\t\tclsName: 'days',\r\n\t\t\t\tnavFnc: 'Month',\r\n\t\t\t\tnavStep: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclsName: 'months',\r\n\t\t\t\tnavFnc: 'FullYear',\r\n\t\t\t\tnavStep: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclsName: 'years',\r\n\t\t\t\tnavFnc: 'FullYear',\r\n\t\t\t\tnavStep: 10\r\n\t\t}],\r\n\t\tdates:{\r\n\t\t\tdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n\t\t\tdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n\t\t\tdaysMin: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\r\n\t\t\tmonths: [\"JAN.\", \"FEB.\", \"MAR.\", \"APR.\", \"MAY\", \"JUN.\", \"JUL.\", \"AUG.\", \"SEPT.\", \"OCT.\", \"NOV.\", \"DEC.\"],\r\n\t\t\tmonthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\t\t},\r\n\t\tisLeapYear: function (year) {\r\n\t\t\treturn (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))\r\n\t\t},\r\n\t\tgetDaysInMonth: function (year, month) {\r\n\t\t\treturn [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]\r\n\t\t},\r\n\t\tparseFormat: function(format){\r\n\t\t\tvar separator = format.match(/[.\\/\\-\\s].*?/),\r\n\t\t\t\tparts = format.split(/\\W+/);\r\n\t\t\tif (!separator || !parts || parts.length === 0){\r\n\t\t\t\tthrow new Error(\"Invalid date format.\");\r\n\t\t\t}\r\n\t\t\treturn {separator: separator, parts: parts};\r\n\t\t},\r\n\t\tparseDate: function(date, format) {\r\n\t\t\tvar parts = date.split(format.separator),\r\n\t\t\t\tdate = new Date(),\r\n\t\t\t\tval;\r\n\t\t\tdate.setHours(0);\r\n\t\t\tdate.setMinutes(0);\r\n\t\t\tdate.setSeconds(0);\r\n\t\t\tdate.setMilliseconds(0);\r\n\t\t\tif (parts.length === format.parts.length) {\r\n\t\t\t\tvar year = date.getFullYear(), day = date.getDate(), month = date.getMonth();\r\n\t\t\t\tfor (var i=0, cnt = format.parts.length; i < cnt; i++) {\r\n\t\t\t\t\tval = parseInt(parts[i], 10)||1;\r\n\t\t\t\t\tswitch(format.parts[i]) {\r\n\t\t\t\t\t\tcase 'dd':\r\n\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\tday = val;\r\n\t\t\t\t\t\t\tdate.setDate(val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mm':\r\n\t\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\t\tmonth = val - 1;\r\n\t\t\t\t\t\t\tdate.setMonth(val - 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'yy':\r\n\t\t\t\t\t\t\tyear = 2000 + val;\r\n\t\t\t\t\t\t\tdate.setFullYear(2000 + val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'yyyy':\r\n\t\t\t\t\t\t\tyear = val;\r\n\t\t\t\t\t\t\tdate.setFullYear(val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdate = new Date(year, month, day, 0 ,0 ,0);\r\n\t\t\t}\r\n\t\t\treturn date;\r\n\t\t},\r\n\t\tformatDate: function(date, format){\r\n\t\t\tvar val = {\r\n\t\t\t\td: date.getDate(),\r\n\t\t\t\tm: date.getMonth() + 1,\r\n\t\t\t\tyy: date.getFullYear().toString().substring(2),\r\n\t\t\t\tyyyy: date.getFullYear()\r\n\t\t\t};\r\n\t\t\tval.dd = (val.d < 10 ? '0' : '') + val.d;\r\n\t\t\tval.mm = (val.m < 10 ? '0' : '') + val.m;\r\n\t\t\tvar date = [];\r\n\t\t\tfor (var i=0, cnt = format.parts.length; i < cnt; i++) {\r\n\t\t\t\tdate.push(val[format.parts[i]]);\r\n\t\t\t}\r\n\t\t\treturn date.join(format.separator);\r\n\t\t},\r\n\t\theadTemplate: '<thead>'+\r\n\t\t\t\t\t\t\t'<tr>'+\r\n\t\t\t\t\t\t\t\t'<th class=\"prev\"><p>&lsaquo;</p></th>'+\r\n\t\t\t\t\t\t\t\t'<th colspan=\"5\" class=\"switch-datepicker\"></th>'+\r\n\t\t\t\t\t\t\t\t'<th class=\"next\"><p>&rsaquo;</p></th>'+\r\n\t\t\t\t\t\t\t'</tr>'+\r\n\t\t\t\t\t\t'</thead>',\r\n\t\tcontTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>'\r\n\t};\r\n\t\r\n\tDPGlobal.template = '<div class=\"datepicker dropdown-menu\">'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-days\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\" table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\t'<tbody></tbody>'+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-months\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-years\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t'</div>';\r\n\r\n}( window.jQuery );","!function(t){function o(t){return\"undefined\"==typeof t.which?!0:\"number\"==typeof t.which&&t.which>0?!t.ctrlKey&&!t.metaKey&&!t.altKey&&8!=t.which&&9!=t.which&&13!=t.which&&16!=t.which&&17!=t.which&&20!=t.which&&27!=t.which:!1}function i(o){var i=t(o);i.prop(\"disabled\")||i.closest(\".form-group\").addClass(\"is-focused\")}function n(o){o.closest(\"label\").hover(function(){var o=t(this).find(\"input\");o.prop(\"disabled\")||i(o)},function(){e(t(this).find(\"input\"))})}function e(o){t(o).closest(\".form-group\").removeClass(\"is-focused\")}t.expr[\":\"].notmdproc=function(o){return t(o).data(\"mdproc\")?!1:!0},t.material={options:{validate:!0,input:!0,ripples:!0,checkbox:!0,togglebutton:!0,radio:!0,arrive:!0,autofill:!1,withRipples:[\".btn:not(.btn-link)\",\".card-image\",\".navbar a:not(.withoutripple)\",\".footer a:not(.withoutripple)\",\".dropdown-menu a\",\".nav-tabs a:not(.withoutripple)\",\".withripple\",\".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"].join(\",\"),inputElements:\"input.form-control, textarea.form-control, select.form-control\",checkboxElements:\".checkbox > label > input[type=checkbox]\",togglebuttonElements:\".togglebutton > label > input[type=checkbox]\",radioElements:\".radio > label > input[type=radio]\"},checkbox:function(o){var i=t(o?o:this.options.checkboxElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='checkbox-material'><span class='check'></span></span>\");n(i)},togglebutton:function(o){var i=t(o?o:this.options.togglebuttonElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='toggle'></span>\");n(i)},radio:function(o){var i=t(o?o:this.options.radioElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='circle'></span><span class='check'></span>\");n(i)},input:function(o){t(o?o:this.options.inputElements).filter(\":notmdproc\").data(\"mdproc\",!0).each(function(){var o=t(this),i=o.closest(\".form-group\");0===i.length&&(o.wrap(\"<div class='form-group'></div>\"),i=o.closest(\".form-group\")),o.attr(\"data-hint\")&&(o.after(\"<p class='help-block'>\"+o.attr(\"data-hint\")+\"</p>\"),o.removeAttr(\"data-hint\"));var n={\"input-lg\":\"form-group-lg\",\"input-sm\":\"form-group-sm\"};if(t.each(n,function(t,n){o.hasClass(t)&&(o.removeClass(t),i.addClass(n))}),o.hasClass(\"floating-label\")){var e=o.attr(\"placeholder\");o.attr(\"placeholder\",null).removeClass(\"floating-label\");var a=o.attr(\"id\"),r=\"\";a&&(r=\"for='\"+a+\"'\"),i.addClass(\"label-floating\"),o.after(\"<label \"+r+\"class='control-label'>\"+e+\"</label>\")}(null===o.val()||\"undefined\"==o.val()||\"\"===o.val())&&i.addClass(\"is-empty\"),i.append(\"<span class='material-input'></span>\"),i.find(\"input[type=file]\").length>0&&i.addClass(\"is-fileinput\")})},attachInputEventHandlers:function(){var n=this.options.validate;t(document).on(\"change\",\".checkbox input[type=checkbox]\",function(){t(this).blur()}).on(\"keydown paste\",\".form-control\",function(i){o(i)&&t(this).closest(\".form-group\").removeClass(\"is-empty\")}).on(\"keyup change\",\".form-control\",function(){var o=t(this),i=o.closest(\".form-group\"),e=\"undefined\"==typeof o[0].checkValidity||o[0].checkValidity();\"\"===o.val()?i.addClass(\"is-empty\"):i.removeClass(\"is-empty\"),n&&(e?i.removeClass(\"has-error\"):i.addClass(\"has-error\"))}).on(\"focus\",\".form-control, .form-group.is-fileinput\",function(){i(this)}).on(\"blur\",\".form-control, .form-group.is-fileinput\",function(){e(this)}).on(\"change\",\".form-group input\",function(){var o=t(this);if(\"file\"!=o.attr(\"type\")){var i=o.closest(\".form-group\"),n=o.val();n?i.removeClass(\"is-empty\"):i.addClass(\"is-empty\")}}).on(\"change\",\".form-group.is-fileinput input[type='file']\",function(){var o=t(this),i=o.closest(\".form-group\"),n=\"\";t.each(this.files,function(t,o){n+=o.name+\", \"}),n=n.substring(0,n.length-2),n?i.removeClass(\"is-empty\"):i.addClass(\"is-empty\"),i.find(\"input.form-control[readonly]\").val(n)})},ripples:function(o){t(o?o:this.options.withRipples).ripples()},autofill:function(){var o=setInterval(function(){t(\"input[type!=checkbox]\").each(function(){var o=t(this);o.val()&&o.val()!==o.attr(\"value\")&&o.trigger(\"change\")})},100);setTimeout(function(){clearInterval(o)},1e4)},attachAutofillEventHandlers:function(){var o;t(document).on(\"focus\",\"input\",function(){var i=t(this).parents(\"form\").find(\"input\").not(\"[type=file]\");o=setInterval(function(){i.each(function(){var o=t(this);o.val()!==o.attr(\"value\")&&o.trigger(\"change\")})},100)}).on(\"blur\",\".form-group input\",function(){clearInterval(o)})},init:function(o){this.options=t.extend({},this.options,o);var i=t(document);t.fn.ripples&&this.options.ripples&&this.ripples(),this.options.input&&(this.input(),this.attachInputEventHandlers()),this.options.checkbox&&this.checkbox(),this.options.togglebutton&&this.togglebutton(),this.options.radio&&this.radio(),this.options.autofill&&(this.autofill(),this.attachAutofillEventHandlers()),document.arrive&&this.options.arrive&&(t.fn.ripples&&this.options.ripples&&i.arrive(this.options.withRipples,function(){t.material.ripples(t(this))}),this.options.input&&i.arrive(this.options.inputElements,function(){t.material.input(t(this))}),this.options.checkbox&&i.arrive(this.options.checkboxElements,function(){t.material.checkbox(t(this))}),this.options.radio&&i.arrive(this.options.radioElements,function(){t.material.radio(t(this))}),this.options.togglebutton&&i.arrive(this.options.togglebuttonElements,function(){t.material.togglebutton(t(this))}))}}}(jQuery),function(t,o,i,n){\"use strict\";function e(o,i){r=this,this.element=t(o),this.options=t.extend({},s,i),this._defaults=s,this._name=a,this.init()}var a=\"ripples\",r=null,s={};e.prototype.init=function(){var i=this.element;i.on(\"mousedown touchstart\",function(n){if(!r.isTouch()||\"mousedown\"!==n.type){i.find(\".ripple-container\").length||i.append('<div class=\"ripple-container\"></div>');var e=i.children(\".ripple-container\"),a=r.getRelY(e,n),s=r.getRelX(e,n);if(a||s){var l=r.getRipplesColor(i),p=t(\"<div></div>\");p.addClass(\"ripple\").css({left:s,top:a,\"background-color\":l}),e.append(p),function(){return o.getComputedStyle(p[0]).opacity}(),r.rippleOn(i,p),setTimeout(function(){r.rippleEnd(p)},500),i.on(\"mouseup mouseleave touchend\",function(){p.data(\"mousedown\",\"off\"),\"off\"===p.data(\"animating\")&&r.rippleOut(p)})}}})},e.prototype.getNewSize=function(t,o){return Math.max(t.outerWidth(),t.outerHeight())/o.outerWidth()*2.5},e.prototype.getRelX=function(t,o){var i=t.offset();return r.isTouch()?(o=o.originalEvent,1===o.touches.length?o.touches[0].pageX-i.left:!1):o.pageX-i.left},e.prototype.getRelY=function(t,o){var i=t.offset();return r.isTouch()?(o=o.originalEvent,1===o.touches.length?o.touches[0].pageY-i.top:!1):o.pageY-i.top},e.prototype.getRipplesColor=function(t){var i=t.data(\"ripple-color\")?t.data(\"ripple-color\"):o.getComputedStyle(t[0]).color;return i},e.prototype.hasTransitionSupport=function(){var t=i.body||i.documentElement,o=t.style,e=o.transition!==n||o.WebkitTransition!==n||o.MozTransition!==n||o.MsTransition!==n||o.OTransition!==n;return e},e.prototype.isTouch=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},e.prototype.rippleEnd=function(t){t.data(\"animating\",\"off\"),\"off\"===t.data(\"mousedown\")&&r.rippleOut(t)},e.prototype.rippleOut=function(t){t.off(),r.hasTransitionSupport()?t.addClass(\"ripple-out\"):t.animate({opacity:0},100,function(){t.trigger(\"transitionend\")}),t.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\",function(){t.remove()})},e.prototype.rippleOn=function(t,o){var i=r.getNewSize(t,o);r.hasTransitionSupport()?o.css({\"-ms-transform\":\"scale(\"+i+\")\",\"-moz-transform\":\"scale(\"+i+\")\",\"-webkit-transform\":\"scale(\"+i+\")\",transform:\"scale(\"+i+\")\"}).addClass(\"ripple-on\").data(\"animating\",\"on\").data(\"mousedown\",\"on\"):o.animate({width:2*Math.max(t.outerWidth(),t.outerHeight()),height:2*Math.max(t.outerWidth(),t.outerHeight()),\"margin-left\":-1*Math.max(t.outerWidth(),t.outerHeight()),\"margin-top\":-1*Math.max(t.outerWidth(),t.outerHeight()),opacity:.2},500,function(){o.trigger(\"transitionend\")})},t.fn.ripples=function(o){return this.each(function(){t.data(this,\"plugin_\"+a)||t.data(this,\"plugin_\"+a,new e(this,o))})}}(jQuery,window,document);\r\n","/*!\r\n    \r\n =========================================================\r\n * Material Kit - v1.1.1.0\r\n =========================================================\r\n \r\n * Product Page: http://www.creative-tim.com/product/material-kit\r\n * Copyright 2017 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/timcreative/material-kit/blob/master/LICENSE.md)\r\n \r\n =========================================================\r\n \r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n \r\n */\r\n\r\nvar transparent = true;\r\n\r\nvar transparentDemo = true;\r\nvar fixedTop = false;\r\n\r\nvar navbar_initialized = false;\r\n\r\n$(document).ready(function(){\r\n\r\n    // Init Material scripts for buttons ripples, inputs animations etc, more info on the next link https://github.com/FezVrasta/bootstrap-material-design#materialjs\r\n    $.material.init();\r\n\r\n    //  Activate the Tooltips\r\n    $('[data-toggle=\"tooltip\"], [rel=\"tooltip\"]').tooltip();\r\n\r\n    // Activate Datepicker\r\n    if($('.datepicker').length != 0){\r\n        $('.datepicker').datepicker({\r\n             weekStart:1\r\n        });\r\n    }\r\n\r\n    // Check if we have the class \"navbar-color-on-scroll\" then add the function to remove the class \"navbar-transparent\" so it will transform to a plain color.\r\n    if($('.navbar-color-on-scroll').length != 0){\r\n        $(window).on('scroll', materialKit.checkScrollForTransparentNavbar)\r\n    }\r\n\r\n    // Activate Popovers\r\n    $('[data-toggle=\"popover\"]').popover();\r\n\r\n    // Active Carousel\r\n\t$('.carousel').carousel({\r\n      interval: 400000\r\n    });\r\n\r\n});\r\n\r\nvar materialKit = {\r\n    misc:{\r\n        navbar_menu_visible: 0\r\n    },\r\n\r\n    checkScrollForTransparentNavbar: debounce(function() {\r\n            if($(document).scrollTop() > 260 ) {\r\n                if(transparent) {\r\n                    transparent = false;\r\n                    $('.navbar-color-on-scroll').removeClass('navbar-transparent');\r\n                }\r\n            } else {\r\n                if( !transparent ) {\r\n                    transparent = true;\r\n                    $('.navbar-color-on-scroll').addClass('navbar-transparent');\r\n                }\r\n            }\r\n    }, 17),\r\n\r\n    initSliders: function(){\r\n        // Sliders for demo purpose\r\n        $('#sliderRegular').noUiSlider({\r\n            start: 40,\r\n            connect: \"lower\",\r\n            range: {\r\n                min: 0,\r\n                max: 100\r\n            }\r\n        });\r\n\r\n        $('#sliderDouble').noUiSlider({\r\n            start: [20, 60] ,\r\n            connect: true,\r\n            range: {\r\n                min: 0,\r\n                max: 100\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nvar big_image;\r\n\r\nvar materialKitDemo = {\r\n    checkScrollForParallax: debounce(function(){\r\n        var current_scroll = $(this).scrollTop();\r\n\r\n        oVal = ($(window).scrollTop() / 3);\r\n        big_image.css({\r\n            'transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-webkit-transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-ms-transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-o-transform':'translate3d(0,' + oVal +'px,0)'\r\n        });\r\n\r\n    }, 6)\r\n\r\n}\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t}, wait);\r\n\t\tif (immediate && !timeout) func.apply(context, args);\r\n\t};\r\n};\r\n","import './jquery.plugins';\r\nimport 'bootstrap';\r\nimport './bootstrap-datepicker.js';\r\nimport './material.min.js';\r\nimport './material-kit.js';\r\n//import 'velocity-animate';\r\n"],"names":["global","factory","document","w","Error","window","this","noGlobal","arr","slice","concat","push","indexOf","class2type","toString","hasOwn","hasOwnProperty","support","version","jQuery","selector","context","fn","init","rdashAlpha","fcamelCase","all","letter","toUpperCase","prototype","call","num","length","elems","ret","merge","constructor","prevObject","callback","each","pushStack","map","elem","i","apply","arguments","eq","len","j","sort","splice","extend","options","name","src","copy","copyIsArray","clone","target","deep","isFunction","isPlainObject","isArray","undefined","Math","random","replace","msg","obj","type","Array","realStringObj","parseFloat","nodeType","isWindow","code","script","indirect","eval","trim","createElement","text","head","appendChild","parentNode","removeChild","string","rmsPrefix","nodeName","toLowerCase","isArrayLike","rtrim","results","Object","first","second","invert","callbackInverse","matches","callbackExpect","arg","value","tmp","args","proxy","guid","Date","now","Symbol","iterator","split","Sizzle","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","contains","preferredDoc","dirruns","done","classCache","createCache","tokenCache","compilerCache","sortOrder","a","b","pop","push_native","list","booleans","whitespace","identifier","pseudos","attributes","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","rinputs","rheader","rnative","rsibling","rescape","funescape","_","escaped","escapedWhitespace","high","fromCharCode","unloadHandler","childNodes","e","els","seed","m","nid","nidselect","match","groups","newSelector","newContext","ownerDocument","rquickExpr","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","getAttribute","setAttribute","expando","toSelector","join","testContext","querySelectorAll","qsaError","removeAttribute","keys","cache","key","cacheLength","shift","markFunction","assert","div","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","MAX_NEGATIVE","nextSibling","createInputPseudo","createButtonPseudo","createPositionalPseudo","argument","matchIndexes","documentElement","setDocument","node","hasCompare","parent","doc","defaultView","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","find","filter","attrId","runescape","getAttributeNode","tag","innerHTML","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","val","specified","error","uniqueSort","duplicates","detectDuplicates","sortStable","textContent","firstChild","nodeValue","selectors","dir","excess","unquoted","nodeNameSelector","pattern","operator","check","result","rwhitespace","what","last","simple","forward","ofType","xml","uniqueCache","outerCache","nodeIndex","start","useCache","lastChild","uniqueID","pseudo","setFilters","idx","matched","matcher","unmatched","innerText","lang","elemLang","hash","location","activeElement","hasFocus","href","tabIndex","disabled","checked","selected","selectedIndex","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","tokens","soFar","preFilters","cached","preFilter","addCombinator","combinator","base","checkNonElements","doneName","oldCache","newCache","elementMatcher","matchers","multipleContexts","contexts","condense","newUnmatched","mapped","setMatcher","postFilter","postFinder","postSelector","temp","preMap","postMap","preexisting","matcherOut","matcherIn","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchAnyContext","matchContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","token","compiled","div1","defaultValue","unique","isXMLDoc","until","truncate","is","siblings","n","rneedsContext","needsContext","rsingleTag","risSimple","winnow","qualifier","not","grep","self","rootjQuery","root","parseHTML","jquery","ready","makeArray","rparentsprev","targets","l","pos","index","prevAll","get","add","sibling","contentDocument","guaranteedUnique","reverse","rnotwhite","createOptions","object","flag","Callbacks","fire","once","firing","queue","firingIndex","memory","stopOnFalse","locked","has","inArray","fireWith","fired","func","tuples","state","promise","fail","fns","Deferred","newDefer","tuple","returned","progress","notify","resolve","reject","deferred","pipe","then","stateString","disable","lock","subordinate","resolveValues","remaining","updateFunc","values","progressValues","notifyWith","resolveWith","progressContexts","resolveContexts","readyList","hold","readyWait","wait","isReady","triggerHandler","off","completed","removeEventListener","readyState","doScroll","setTimeout","access","chainable","emptyGet","raw","bulk","acceptData","owner","Data","uid","initial","defineProperty","data","prop","stored","camelCase","set","camel","register","isEmptyObject","dataPriv","dataUser","rbrace","rmultiDash","dataAttr","parseJSON","hasData","remove","camelKey","startLength","hooks","_queueHooks","next","dequeue","stop","empty","setter","count","defer","pnum","source","rcssNum","cssExpand","isHidden","el","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","unit","cssNumber","initialInUnit","style","end","rcheckableType","rtagName","rscriptType","wrapMap","optgroup","option","tbody","tfoot","colgroup","caption","thead","th","td","getAll","setGlobalEval","refElements","rhtml","buildFragment","scripts","selection","ignored","wrap","fragment","createDocumentFragment","nodes","createTextNode","_default","htmlPrefilter","checkClone","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","returnTrue","returnFalse","safeActiveElement","err","on","types","one","origFn","event","handleObjIn","eventHandle","events","t","handleObj","special","handlers","namespaces","origType","elemData","handle","triggered","dispatch","delegateType","bindType","delegateCount","setup","mappedTypes","origCount","namespace","teardown","removeEvent","fix","handlerQueue","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","sel","isNaN","button","original","which","charCode","keyCode","eventDoc","body","pageX","clientX","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","originalEvent","fixHook","fixHooks","mouseHooks","keyHooks","props","Event","focus","blur","click","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","stopImmediatePropagation","orig","related","relatedTarget","rxhtmlTag","rscriptTypeMasked","rcleanScript","manipulationTarget","content","disableScript","restoreScript","cloneCopyEvent","dest","pdataOld","pdataCur","udataOld","udataCur","fixInput","domManip","collection","hasScripts","iNoClone","rchecked","html","_evalUrl","globalEval","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","insertBefore","rnoInnerhtml","append","replaceChild","insert","iframe","elemdisplay","actualDisplay","appendTo","display","detach","defaultDisplay","write","close","rmargin","rnumnonpx","getStyles","view","opener","getComputedStyle","swap","old","pixelPositionVal","boxSizingReliableVal","pixelMarginRightVal","reliableMarginLeftVal","container","backgroundClip","clearCloneStyle","cssText","computeStyleTests","divStyle","marginLeft","width","marginRight","marginDiv","curCSS","computed","minWidth","maxWidth","getPropertyValue","pixelMarginRight","addGetHookIf","conditionFn","hookFn","cssShow","position","visibility","cssNormalTransform","cssPrefixes","emptyStyle","vendorPropName","capName","setPositiveNumber","subtract","max","augmentWidthOrHeight","extra","isBorderBox","styles","getWidthOrHeight","valueIsBorderBox","offsetWidth","offsetHeight","msFullscreenElement","getClientRects","round","getBoundingClientRect","boxSizingReliable","showHide","show","hidden","origName","cssProps","cssHooks","isFinite","rdisplayswap","reliableMarginLeft","left","reliableMarginRight","prefix","suffix","expanded","parts","hide","Tween","easing","propHooks","percent","eased","duration","step","fx","p","cos","PI","fxNow","timerId","rfxtypes","rrun","createFxNow","genFx","includeWidth","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","opts","toggle","oldfire","checkDisplay","anim","dataShow","unqueued","always","overflow","overflowX","overflowY","propFilter","specialEasing","expand","properties","stopped","prefilters","tick","currentTime","startTime","tweens","run","gotoEnd","rejectWith","timer","complete","prepend","speed","opt","speeds","to","animate","optall","doAnimation","finish","clearQueue","stopQueue","timers","cssFn","interval","setInterval","clearInterval","delay","time","timeout","clearTimeout","checkOn","optSelected","optDisabled","radioValue","boolHook","removeAttr","nType","attrHooks","bool","propName","attrNames","propFix","getter","rfocusable","rclickable","tabindex","parseInt","rclass","getClass","classes","curValue","clazz","finalValue","addClass","removeClass","stateVal","toggleClass","classNames","hasClass","rreturn","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","trigger","noBubble","parentWindow","fnOver","fnOut","mouseenter","mouseleave","focusin","simulate","attaches","nonce","rquery","JSON","parse","parseXML","DOMParser","parseFromString","rhash","rts","rheaders","rnoContent","rprotocol","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","originalOptions","jqXHR","inspected","seekingTransport","transports","inspect","prefilterOrFactory","dataTypeOrTransport","ajaxExtend","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","throws","rlocalProtocol","protocol","allTypes","String","settings","url","transport","responseHeaders","ajaxSetup","callbackContext","completeDeferred","statusCode","requestHeadersNames","responseHeadersString","lname","status","statusText","finalText","strAbort","abort","success","method","crossDomain","urlAnchor","originAnchor","host","processData","param","traditional","fireGlobals","active","hasContent","cacheURL","ifModified","lastModified","setRequestHeader","etag","contentType","accepts","headers","beforeSend","async","send","requestHeaders","nativeStatusText","modified","timeoutTimer","ajax","wrapAll","firstElementChild","wrapInner","replaceWith","visible","r20","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","v","encodeURIComponent","serializeArray","xhr","XMLHttpRequest","xhrSuccessStatus","xhrSupported","cors","ajaxTransport","errorCallback","open","username","xhrFields","overrideMimeType","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","getAllResponseHeaders","ajaxPrefilter","scriptCharset","evt","oldCallbacks","rjsonp","originalSettings","callbackName","overwritten","responseContainer","jsonProp","jsonp","jsonpCallback","removeProp","createHTMLDocument","implementation","keepScripts","parsed","_load","load","params","animated","getWindow","offset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","setOffset","win","box","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","pixelPosition","Height","Width","padding","defaultExtra","funcName","margin","andSelf","addBack","define","amd","$","noConflict","_$","_jQuery","require$$0","$1","$2","transitionEnd","transEndEventNames","emulateTransitionEnd","called","$el","transition","bsTransitionEnd","dismiss","Alert","VERSION","TRANSITION_DURATION","$this","$parent","closest","removeElement","Plugin","alert","Constructor","Button","element","$element","DEFAULTS","isLoading","setState","d","resetText","changed","$input","$btn","Carousel","$indicators","paused","sliding","$active","$items","keyboard","keydown","pause","cycle","tagName","getItemIndex","item","children","getItemForDirection","direction","activeIndex","willWrap","delta","itemIndex","that","slide","$next","isCycling","slideEvent","$nextIndicator","slidEvent","action","carousel","clickHandler","$target","slideIndex","$carousel","Collapse","$trigger","transitioning","getParent","addAriaAndCollapsedClass","dimension","hasWidth","activesData","actives","startEvent","scrollSize","getTargetFromTrigger","isOpen","collapse","backdrop","Dropdown","clearMenus","isActive","insertAfter","desc","dropdown","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","BACKDROP_TRANSITION_DURATION","_relatedTarget","checkScrollbar","setScrollbar","escape","resize","adjustDialog","enforceFocus","hideModal","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","callbackRemove","modalIsOverflowing","scrollHeight","clientHeight","bodyIsOverflowing","fullWindowWidth","innerWidth","documentElementRect","right","abs","clientWidth","measureScrollbar","bodyPad","paddingRight","scrollDiv","modal","showEvent","Tooltip","enabled","hoverState","inState","getOptions","$viewport","viewport","hover","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","defaults","tip","isInStateTrue","inDom","$tip","tipId","getUID","setContent","placement","autoToken","autoPlace","getPosition","actualWidth","actualHeight","orgPlacement","viewportDim","bottom","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","title","getTitle","$e","isBody","elRect","isSvg","SVGElement","elOffset","scroll","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","o","template","$arrow","enable","toggleEnabled","destroy","removeData","tooltip","Popover","getContent","popover","ScrollSpy","$scrollElement","offsets","activeTarget","process","refresh","getScrollHeight","offsetMethod","offsetBase","$href","maxScroll","activate","clear","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Datepicker","format","DPGlobal","parseFormat","picker","isInput","component","update","minViewMode","viewMode","color","startViewMode","weekStart","weekEnd","onRender","fillDow","fillMonths","showMode","datepicker","outerHeight","place","ev","date","formated","formatDate","newDate","parseDate","viewDate","getFullYear","getMonth","fill","dowCnt","dates","daysMin","monthsShort","year","month","currentDate","valueOf","months","prevMonth","day","getDaysInMonth","setDate","getDay","nextMonth","getDate","clsName","prevY","prevM","currentYear","yearCont","modes","navFnc","navStep","setMonth","setFullYear","min","isLeapYear","separator","setHours","setMinutes","setSeconds","setMilliseconds","cnt","substring","dd","mm","headTemplate","contTemplate","ctrlKey","metaKey","altKey","notmdproc","material","validate","ripples","togglebutton","arrive","autofill","withRipples","inputElements","checkboxElements","togglebuttonElements","radioElements","after","r","attachInputEventHandlers","checkValidity","files","attachAutofillEventHandlers","_defaults","_name","isTouch","getRelY","getRelX","getRipplesColor","rippleOn","rippleEnd","rippleOut","getNewSize","outerWidth","touches","hasTransitionSupport","WebkitTransition","MozTransition","MsTransition","OTransition","navigator","userAgent","transform","transparent","materialKit","checkScrollForTransparentNavbar","debounce","noUiSlider","immediate"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}