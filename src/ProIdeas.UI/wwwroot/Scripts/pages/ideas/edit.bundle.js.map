{"version":3,"file":"edit.bundle.js","sources":["Scripts/modules/api.js","wwwroot/lib/knockout/dist/knockout.js","node_modules/quill/dist/quill.js","Scripts/components/rich-text-editor.js","node_modules/knockout.validation/dist/knockout.validation.js","Scripts/modules/ideas/ideaBasicInfoViewModel.js","node_modules/turbolinks/dist/turbolinks.js","Scripts/basePage.js","Scripts/modules/navigationHelper.js","Scripts/pages/ideas/edit.js"],"sourcesContent":["ï»¿const defaultHeaders = {\r\n\r\n};\r\nconst utils = {\r\n    get(url) {\r\n        return new Promise((resolve, reject) => {\r\n            $.get({\r\n                url,\r\n                success: resolve,\r\n                error: reject\r\n            });\r\n        });\r\n    },\r\n    put(url, data) {\r\n        return new Promise((resolve, reject) => {\r\n            $.ajax({\r\n                url,\r\n                type: 'PUT',\r\n                data: JSON.stringify(data),\r\n                success: resolve,\r\n                error: reject\r\n            });\r\n        });\r\n    },\r\n\r\n    post(url, data) {\r\n        return new Promise((resolve, reject) => {\r\n            $.post({\r\n                url,\r\n                data: JSON.stringify(data),\r\n                success: resolve,\r\n                error: reject\r\n            });\r\n        });\r\n    },\r\n    delete(url) {\r\n        return new Promise((resolve, reject) => {\r\n            $.ajax({\r\n                url,\r\n                type: 'DELETE',                \r\n                success: resolve,\r\n                error: reject\r\n            });\r\n        });\r\n    },\r\n\r\n    uploadFile(url, files = []) {\r\n        var formData = new FormData();\r\n\r\n        files.forEach(file => {\r\n            formData.append(file.name, file);\r\n        });\r\n\r\n\r\n        return new Promise((resolve, reject) => {\r\n            $.post({\r\n                url,\r\n                data: formData,\r\n                contentType: false,\r\n                processData: false,\r\n                success: resolve,\r\n                error: reject\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport default class ApiClient {\r\n\r\n    constructor() {\r\n        $.ajaxSetup({\r\n            headers: defaultHeaders,\r\n            contentType: 'application/json;charset=utf8',\r\n            dataType: 'json'\r\n        });\r\n    }\r\n\r\n    getIdea(id) {\r\n        return utils.get(`/api/ideas/${id}`);\r\n    }\r\n\r\n    createIdea(idea) {\r\n\r\n        return utils.post('/api/ideas', idea);\r\n    }\r\n\r\n    updateIdea(idea) {\r\n\r\n        return utils.put(`/api/ideas/${idea.id}`, idea);\r\n    }\r\n\r\n    uploadIdeaBanner(id, file) {\r\n        return utils.uploadFile(`/api/ideas/${id}/banner`, [file]);\r\n    }\r\n\r\n    saveIdeaPages(id, pages) {\r\n        return utils.put(`/api/ideas/${id}/pages`, pages);\r\n    }\r\n\r\n    getIdeaPages(id) {\r\n        return utils.get(`/api/ideas/${id}/pages`);\r\n    }\r\n\r\n    getIdeas({keyword = \"\", page, pageSize = 100}) {\r\n        let url = `/api/ideas?page=${page}&pageSize=${pageSize}`;\r\n        if (keyword) {\r\n            url = `/api/ideas/search?page=${page}&pageSize=${pageSize}&keyword=${keyword}`;\r\n        }\r\n        return utils.get(url);\r\n    }\r\n\r\n    getMyIdeas({keyword = \"\", page, pageSize = 100}) {\r\n        const url = `/api/ideas/searchmyideas?page=${page}&pageSize=${pageSize}&keyword=${keyword}`;\r\n        return utils.get(url);\r\n    }\r\n\r\n    like(ideaId, isLike) {\r\n        return utils.put(`/api/ideas/${ideaId}/likes/${isLike}`);\r\n    }\r\n\r\n    getIdeaComments({ideaId, page, pageSize = 100}) {\r\n        let url = `/api/ideas/${ideaId}/comments?page=${page}&pageSize=${pageSize}`;\r\n        return utils.get(url);\r\n    }\r\n\r\n    postIdeaComment({ideaId, content}) {\r\n        let url = `/api/ideas/${ideaId}/comments`;\r\n        return utils.post(url, { content });\r\n    }\r\n\r\n    updateIdeaComment({ideaId, id, content}) {\r\n        let url = `/api/ideas/${ideaId}/comments`;\r\n        return utils.put(url, { id, content });\r\n    }\r\n\r\n    deleteComment(id) {\r\n        let url = `/api/ideas/comments/${id}`;\r\n        return utils.delete(url);\r\n    }\r\n}","/*!\r\n * Knockout JavaScript library v3.4.2\r\n * (c) The Knockout.js team - http://knockoutjs.com/\r\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\r\n */\r\n\r\n(function() {(function(n){var x=this||(0,eval)(\"this\"),t=x.document,M=x.navigator,u=x.jQuery,H=x.JSON;(function(n){\"function\"===typeof define&&define.amd?define([\"exports\",\"require\"],n):\"object\"===typeof exports&&\"object\"===typeof module?n(module.exports||exports):n(x.ko={})})(function(N,O){function J(a,c){return null===a||typeof a in R?a===c:!1}function S(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=n;b()},c))}}function T(b,c){var d;return function(){clearTimeout(d);d=a.a.setTimeout(b,c)}}function U(a,\r\nc){c&&c!==E?\"beforeChange\"===c?this.Ob(a):this.Ja(a,c):this.Pb(a)}function V(a,c){null!==c&&c.k&&c.k()}function W(a,c){var d=this.Mc,e=d[s];e.T||(this.ob&&this.Oa[c]?(d.Sb(c,a,this.Oa[c]),this.Oa[c]=null,--this.ob):e.s[c]||d.Sb(c,a,e.t?{$:a}:d.yc(a)),a.Ha&&a.Hc())}function K(b,c,d,e){a.d[b]={init:function(b,g,h,l,m){var k,r;a.m(function(){var q=g(),p=a.a.c(q),p=!d!==!p,A=!r;if(A||c||p!==k)A&&a.xa.Ca()&&(r=a.a.wa(a.f.childNodes(b),!0)),p?(A||a.f.fa(b,a.a.wa(r)),a.hb(e?e(m,q):m,b)):a.f.za(b),k=p},null,\r\n{i:b});return{controlsDescendantBindings:!0}}};a.h.va[b]=!1;a.f.aa[b]=!0}var a=\"undefined\"!==typeof N?N:{};a.b=function(b,c){for(var d=b.split(\".\"),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.H=function(a,c,d){a[c]=d};a.version=\"3.4.2\";a.b(\"version\",a.version);a.options={deferUpdates:!1,useOnlyNativeEvents:!1};a.a=function(){function b(a,b){for(var c in a)a.hasOwnProperty(c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=\r\nb;return a}function e(b,c,d,e){var m=b[c].match(r)||[];a.a.r(d.match(r),function(b){a.a.ra(m,b,e)});b[c]=m.join(\" \")}var f={__proto__:[]}instanceof Array,g=\"function\"===typeof Symbol,h={},l={};h[M&&/Firefox\\/2/i.test(M.userAgent)?\"KeyboardEvent\":\"UIEvents\"]=[\"keyup\",\"keydown\",\"keypress\"];h.MouseEvents=\"click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave\".split(\" \");b(h,function(a,b){if(b.length)for(var c=0,d=b.length;c<d;c++)l[b[c]]=a});var m={propertychange:!0},k=\r\nt&&function(){for(var a=3,b=t.createElement(\"div\"),c=b.getElementsByTagName(\"i\");b.innerHTML=\"\\x3c!--[if gt IE \"+ ++a+\"]><i></i><![endif]--\\x3e\",c[0];);return 4<a?a:n}(),r=/\\S+/g;return{gc:[\"authenticity_token\",/^__RequestVerificationToken(_.*)?$/],r:function(a,b){for(var c=0,d=a.length;c<d;c++)b(a[c],c)},o:function(a,b){if(\"function\"==typeof Array.prototype.indexOf)return Array.prototype.indexOf.call(a,b);for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},Vb:function(a,b,c){for(var d=\r\n0,e=a.length;d<e;d++)if(b.call(c,a[d],d))return a[d];return null},Na:function(b,c){var d=a.a.o(b,c);0<d?b.splice(d,1):0===d&&b.shift()},Wb:function(b){b=b||[];for(var c=[],d=0,e=b.length;d<e;d++)0>a.a.o(c,b[d])&&c.push(b[d]);return c},ib:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)c.push(b(a[d],d));return c},Ma:function(a,b){a=a||[];for(var c=[],d=0,e=a.length;d<e;d++)b(a[d],d)&&c.push(a[d]);return c},ta:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<\r\nd;c++)a.push(b[c]);return a},ra:function(b,c,d){var e=a.a.o(a.a.Bb(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},la:f,extend:c,$a:d,ab:f?d:c,D:b,Ea:function(a,b){if(!a)return a;var c={},d;for(d in a)a.hasOwnProperty(d)&&(c[d]=b(a[d],d,a));return c},rb:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},nc:function(b){b=a.a.W(b);for(var c=(b[0]&&b[0].ownerDocument||t).createElement(\"div\"),d=0,e=b.length;d<e;d++)c.appendChild(a.ba(b[d]));return c},wa:function(b,c){for(var d=0,e=b.length,m=[];d<e;d++){var k=\r\nb[d].cloneNode(!0);m.push(c?a.ba(k):k)}return m},fa:function(b,c){a.a.rb(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},uc:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],m=e.parentNode,k=0,f=c.length;k<f;k++)m.insertBefore(c[k],e);k=0;for(f=d.length;k<f;k++)a.removeNode(d[k])}},Ba:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);for(;1<a.length&&a[a.length-1].parentNode!==b;)a.length--;if(1<a.length){var c=\r\na[0],d=a[a.length-1];for(a.length=0;c!==d;)a.push(c),c=c.nextSibling;a.push(d)}}return a},wc:function(a,b){7>k?a.setAttribute(\"selected\",b):a.selected=b},cb:function(a){return null===a||a===n?\"\":a.trim?a.trim():a.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")},sd:function(a,b){a=a||\"\";return b.length>a.length?!1:a.substring(0,b.length)===b},Rc:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(3===a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==\r\n(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;return!!a},qb:function(b){return a.a.Rc(b,b.ownerDocument.documentElement)},Tb:function(b){return!!a.a.Vb(b,a.a.qb)},A:function(a){return a&&a.tagName&&a.tagName.toLowerCase()},Zb:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.Zb(b),c)},dc:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},q:function(b,\r\nc,d){var e=a.a.Zb(d);d=k&&m[c];if(a.options.useOnlyNativeEvents||d||!u)if(d||\"function\"!=typeof b.addEventListener)if(\"undefined\"!=typeof b.attachEvent){var f=function(a){e.call(b,a)},l=\"on\"+c;b.attachEvent(l,f);a.a.G.qa(b,function(){b.detachEvent(l,f)})}else throw Error(\"Browser doesn't support addEventListener or attachEvent\");else b.addEventListener(c,e,!1);else u(b).bind(c,e)},Fa:function(b,c){if(!b||!b.nodeType)throw Error(\"element must be a DOM node when calling triggerEvent\");var d;\"input\"===\r\na.a.A(b)&&b.type&&\"click\"==c.toLowerCase()?(d=b.type,d=\"checkbox\"==d||\"radio\"==d):d=!1;if(a.options.useOnlyNativeEvents||!u||d)if(\"function\"==typeof t.createEvent)if(\"function\"==typeof b.dispatchEvent)d=t.createEvent(l[c]||\"HTMLEvents\"),d.initEvent(c,!0,!0,x,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error(\"The supplied element doesn't support dispatchEvent\");else if(d&&b.click)b.click();else if(\"undefined\"!=typeof b.fireEvent)b.fireEvent(\"on\"+c);else throw Error(\"Browser doesn't support triggering events\");\r\nelse u(b).trigger(c)},c:function(b){return a.I(b)?b():b},Bb:function(b){return a.I(b)?b.p():b},fb:function(b,c,d){var k;c&&(\"object\"===typeof b.classList?(k=b.classList[d?\"add\":\"remove\"],a.a.r(c.match(r),function(a){k.call(b.classList,a)})):\"string\"===typeof b.className.baseVal?e(b.className,\"baseVal\",c,d):e(b,\"className\",c,d))},bb:function(b,c){var d=a.a.c(c);if(null===d||d===n)d=\"\";var e=a.f.firstChild(b);!e||3!=e.nodeType||a.f.nextSibling(e)?a.f.fa(b,[b.ownerDocument.createTextNode(d)]):e.data=\r\nd;a.a.Wc(b)},vc:function(a,b){a.name=b;if(7>=k)try{a.mergeAttributes(t.createElement(\"<input name='\"+a.name+\"'/>\"),!1)}catch(c){}},Wc:function(a){9<=k&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},Sc:function(a){if(k){var b=a.style.width;a.style.width=0;a.style.width=b}},nd:function(b,c){b=a.a.c(b);c=a.a.c(c);for(var d=[],e=b;e<=c;e++)d.push(e);return d},W:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},bc:function(a){return g?Symbol(a):a},xd:6===k,\r\nyd:7===k,C:k,ic:function(b,c){for(var d=a.a.W(b.getElementsByTagName(\"input\")).concat(a.a.W(b.getElementsByTagName(\"textarea\"))),e=\"string\"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},k=[],m=d.length-1;0<=m;m--)e(d[m])&&k.push(d[m]);return k},kd:function(b){return\"string\"==typeof b&&(b=a.a.cb(b))?H&&H.parse?H.parse(b):(new Function(\"return \"+b))():null},Gb:function(b,c,d){if(!H||!H.stringify)throw Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\r\nreturn H.stringify(a.a.c(b),c,d)},ld:function(c,d,e){e=e||{};var k=e.params||{},m=e.includeFields||this.gc,f=c;if(\"object\"==typeof c&&\"form\"===a.a.A(c))for(var f=c.action,l=m.length-1;0<=l;l--)for(var g=a.a.ic(c,m[l]),h=g.length-1;0<=h;h--)k[g[h].name]=g[h].value;d=a.a.c(d);var r=t.createElement(\"form\");r.style.display=\"none\";r.action=f;r.method=\"post\";for(var n in d)c=t.createElement(\"input\"),c.type=\"hidden\",c.name=n,c.value=a.a.Gb(a.a.c(d[n])),r.appendChild(c);b(k,function(a,b){var c=t.createElement(\"input\");\r\nc.type=\"hidden\";c.name=a;c.value=b;r.appendChild(c)});t.body.appendChild(r);e.submitter?e.submitter(r):r.submit();setTimeout(function(){r.parentNode.removeChild(r)},0)}}}();a.b(\"utils\",a.a);a.b(\"utils.arrayForEach\",a.a.r);a.b(\"utils.arrayFirst\",a.a.Vb);a.b(\"utils.arrayFilter\",a.a.Ma);a.b(\"utils.arrayGetDistinctValues\",a.a.Wb);a.b(\"utils.arrayIndexOf\",a.a.o);a.b(\"utils.arrayMap\",a.a.ib);a.b(\"utils.arrayPushAll\",a.a.ta);a.b(\"utils.arrayRemoveItem\",a.a.Na);a.b(\"utils.extend\",a.a.extend);a.b(\"utils.fieldsIncludedWithJsonPost\",\r\na.a.gc);a.b(\"utils.getFormFields\",a.a.ic);a.b(\"utils.peekObservable\",a.a.Bb);a.b(\"utils.postJson\",a.a.ld);a.b(\"utils.parseJson\",a.a.kd);a.b(\"utils.registerEventHandler\",a.a.q);a.b(\"utils.stringifyJson\",a.a.Gb);a.b(\"utils.range\",a.a.nd);a.b(\"utils.toggleDomNodeCssClass\",a.a.fb);a.b(\"utils.triggerEvent\",a.a.Fa);a.b(\"utils.unwrapObservable\",a.a.c);a.b(\"utils.objectForEach\",a.a.D);a.b(\"utils.addOrRemoveItem\",a.a.ra);a.b(\"utils.setTextContent\",a.a.bb);a.b(\"unwrap\",a.a.c);Function.prototype.bind||(Function.prototype.bind=\r\nfunction(a){var c=this;if(1===arguments.length)return function(){return c.apply(a,arguments)};var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice(0);e.push.apply(e,arguments);return c.apply(a,e)}});a.a.e=new function(){function a(b,g){var h=b[d];if(!h||\"null\"===h||!e[h]){if(!g)return n;h=b[d]=\"ko\"+c++;e[h]={}}return e[h]}var c=0,d=\"__ko__\"+(new Date).getTime(),e={};return{get:function(c,d){var e=a(c,!1);return e===n?n:e[d]},set:function(c,d,e){if(e!==n||a(c,!1)!==n)a(c,!0)[d]=\r\ne},clear:function(a){var b=a[d];return b?(delete e[b],a[d]=null,!0):!1},J:function(){return c++ +d}}};a.b(\"utils.domData\",a.a.e);a.b(\"utils.domData.clear\",a.a.e.clear);a.a.G=new function(){function b(b,c){var e=a.a.e.get(b,d);e===n&&c&&(e=[],a.a.e.set(b,d,e));return e}function c(d){var e=b(d,!1);if(e)for(var e=e.slice(0),l=0;l<e.length;l++)e[l](d);a.a.e.clear(d);a.a.G.cleanExternalData(d);if(f[d.nodeType])for(e=d.firstChild;d=e;)e=d.nextSibling,8===d.nodeType&&c(d)}var d=a.a.e.J(),e={1:!0,8:!0,9:!0},\r\nf={1:!0,9:!0};return{qa:function(a,c){if(\"function\"!=typeof c)throw Error(\"Callback must be a function\");b(a,!0).push(c)},tc:function(c,e){var f=b(c,!1);f&&(a.a.Na(f,e),0==f.length&&a.a.e.set(c,d,n))},ba:function(b){if(e[b.nodeType]&&(c(b),f[b.nodeType])){var d=[];a.a.ta(d,b.getElementsByTagName(\"*\"));for(var l=0,m=d.length;l<m;l++)c(d[l])}return b},removeNode:function(b){a.ba(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){u&&\"function\"==typeof u.cleanData&&u.cleanData([a])}}};\r\na.ba=a.a.G.ba;a.removeNode=a.a.G.removeNode;a.b(\"cleanNode\",a.ba);a.b(\"removeNode\",a.removeNode);a.b(\"utils.domNodeDisposal\",a.a.G);a.b(\"utils.domNodeDisposal.addDisposeCallback\",a.a.G.qa);a.b(\"utils.domNodeDisposal.removeDisposeCallback\",a.a.G.tc);(function(){var b=[0,\"\",\"\"],c=[1,\"<table>\",\"</table>\"],d=[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],e=[1,\"<select multiple='multiple'>\",\"</select>\"],f={thead:c,tbody:c,tfoot:c,tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:d,th:d,option:e,optgroup:e},\r\ng=8>=a.a.C;a.a.na=function(c,d){var e;if(u)if(u.parseHTML)e=u.parseHTML(c,d)||[];else{if((e=u.clean([c],d))&&e[0]){for(var k=e[0];k.parentNode&&11!==k.parentNode.nodeType;)k=k.parentNode;k.parentNode&&k.parentNode.removeChild(k)}}else{(e=d)||(e=t);var k=e.parentWindow||e.defaultView||x,r=a.a.cb(c).toLowerCase(),q=e.createElement(\"div\"),p;p=(r=r.match(/^<([a-z]+)[ >]/))&&f[r[1]]||b;r=p[0];p=\"ignored<div>\"+p[1]+c+p[2]+\"</div>\";\"function\"==typeof k.innerShiv?q.appendChild(k.innerShiv(p)):(g&&e.appendChild(q),\r\nq.innerHTML=p,g&&q.parentNode.removeChild(q));for(;r--;)q=q.lastChild;e=a.a.W(q.lastChild.childNodes)}return e};a.a.Eb=function(b,c){a.a.rb(b);c=a.a.c(c);if(null!==c&&c!==n)if(\"string\"!=typeof c&&(c=c.toString()),u)u(b).html(c);else for(var d=a.a.na(c,b.ownerDocument),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b(\"utils.parseHtmlFragment\",a.a.na);a.b(\"utils.setHtml\",a.a.Eb);a.N=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.N.pc(c.nodeValue);null!=f&&e.push({Qc:c,hd:f})}else if(1==c.nodeType)for(var f=\r\n0,g=c.childNodes,h=g.length;f<h;f++)b(g[f],e)}var c={};return{yb:function(a){if(\"function\"!=typeof a)throw Error(\"You can only pass a function to ko.memoization.memoize()\");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return\"\\x3c!--[ko_memo:\"+b+\"]--\\x3e\"},Bc:function(a,b){var f=c[a];if(f===n)throw Error(\"Couldn't find any memo with ID \"+a+\". Perhaps it's already been unmemoized.\");try{return f.apply(null,b||[]),\r\n!0}finally{delete c[a]}},Cc:function(c,e){var f=[];b(c,f);for(var g=0,h=f.length;g<h;g++){var l=f[g].Qc,m=[l];e&&a.a.ta(m,e);a.N.Bc(f[g].hd,m);l.nodeValue=\"\";l.parentNode&&l.parentNode.removeChild(l)}},pc:function(a){return(a=a.match(/^\\[ko_memo\\:(.*?)\\]$/))?a[1]:null}}}();a.b(\"memoization\",a.N);a.b(\"memoization.memoize\",a.N.yb);a.b(\"memoization.unmemoize\",a.N.Bc);a.b(\"memoization.parseMemoText\",a.N.pc);a.b(\"memoization.unmemoizeDomNodeAndDescendants\",a.N.Cc);a.Z=function(){function b(){if(e)for(var b=\r\ne,c=0,m;g<e;)if(m=d[g++]){if(g>b){if(5E3<=++c){g=e;a.a.dc(Error(\"'Too much recursion' after processing \"+c+\" task groups.\"));break}b=e}try{m()}catch(k){a.a.dc(k)}}}function c(){b();g=e=d.length=0}var d=[],e=0,f=1,g=0;return{scheduler:x.MutationObserver?function(a){var b=t.createElement(\"div\");(new MutationObserver(a)).observe(b,{attributes:!0});return function(){b.classList.toggle(\"foo\")}}(c):t&&\"onreadystatechange\"in t.createElement(\"script\")?function(a){var b=t.createElement(\"script\");b.onreadystatechange=\r\nfunction(){b.onreadystatechange=null;t.documentElement.removeChild(b);b=null;a()};t.documentElement.appendChild(b)}:function(a){setTimeout(a,0)},Za:function(b){e||a.Z.scheduler(c);d[e++]=b;return f++},cancel:function(a){a-=f-e;a>=g&&a<e&&(d[a]=null)},resetForTesting:function(){var a=e-g;g=e=d.length=0;return a},rd:b}}();a.b(\"tasks\",a.Z);a.b(\"tasks.schedule\",a.Z.Za);a.b(\"tasks.runEarly\",a.Z.rd);a.Aa={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.B({read:b,write:function(e){clearTimeout(d);\r\nd=a.a.setTimeout(function(){b(e)},c)}})},rateLimit:function(a,c){var d,e,f;\"number\"==typeof c?d=c:(d=c.timeout,e=c.method);a.gb=!1;f=\"notifyWhenChangesStop\"==e?T:S;a.Wa(function(a){return f(a,d)})},deferred:function(b,c){if(!0!==c)throw Error(\"The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.\");b.gb||(b.gb=!0,b.Wa(function(c){var e,f=!1;return function(){if(!f){a.Z.cancel(e);e=a.Z.Za(c);try{f=!0,b.notifySubscribers(n,\"dirty\")}finally{f=\r\n!1}}}}))},notify:function(a,c){a.equalityComparer=\"always\"==c?null:J}};var R={undefined:1,\"boolean\":1,number:1,string:1};a.b(\"extenders\",a.Aa);a.zc=function(b,c,d){this.$=b;this.jb=c;this.Pc=d;this.T=!1;a.H(this,\"dispose\",this.k)};a.zc.prototype.k=function(){this.T=!0;this.Pc()};a.K=function(){a.a.ab(this,D);D.ub(this)};var E=\"change\",D={ub:function(a){a.F={change:[]};a.Qb=1},Y:function(b,c,d){var e=this;d=d||E;var f=new a.zc(e,c?b.bind(c):b,function(){a.a.Na(e.F[d],f);e.Ka&&e.Ka(d)});e.ua&&e.ua(d);\r\ne.F[d]||(e.F[d]=[]);e.F[d].push(f);return f},notifySubscribers:function(b,c){c=c||E;c===E&&this.Kb();if(this.Ra(c)){var d=c===E&&this.Fc||this.F[c].slice(0);try{a.l.Xb();for(var e=0,f;f=d[e];++e)f.T||f.jb(b)}finally{a.l.end()}}},Pa:function(){return this.Qb},Zc:function(a){return this.Pa()!==a},Kb:function(){++this.Qb},Wa:function(b){var c=this,d=a.I(c),e,f,g,h;c.Ja||(c.Ja=c.notifySubscribers,c.notifySubscribers=U);var l=b(function(){c.Ha=!1;d&&h===c&&(h=c.Mb?c.Mb():c());var a=f||c.Ua(g,h);f=e=!1;\r\na&&c.Ja(g=h)});c.Pb=function(a){c.Fc=c.F[E].slice(0);c.Ha=e=!0;h=a;l()};c.Ob=function(a){e||(g=a,c.Ja(a,\"beforeChange\"))};c.Hc=function(){c.Ua(g,c.p(!0))&&(f=!0)}},Ra:function(a){return this.F[a]&&this.F[a].length},Xc:function(b){if(b)return this.F[b]&&this.F[b].length||0;var c=0;a.a.D(this.F,function(a,b){\"dirty\"!==a&&(c+=b.length)});return c},Ua:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},extend:function(b){var c=this;b&&a.a.D(b,function(b,e){var f=a.Aa[b];\"function\"==\r\ntypeof f&&(c=f(c,e)||c)});return c}};a.H(D,\"subscribe\",D.Y);a.H(D,\"extend\",D.extend);a.H(D,\"getSubscriptionsCount\",D.Xc);a.a.la&&a.a.$a(D,Function.prototype);a.K.fn=D;a.lc=function(a){return null!=a&&\"function\"==typeof a.Y&&\"function\"==typeof a.notifySubscribers};a.b(\"subscribable\",a.K);a.b(\"isSubscribable\",a.lc);a.xa=a.l=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{Xb:b,end:c,sc:function(b){if(e){if(!a.lc(b))throw Error(\"Only subscribable things can act as dependencies\");\r\ne.jb.call(e.Lc,b,b.Gc||(b.Gc=++f))}},w:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},Ca:function(){if(e)return e.m.Ca()},Va:function(){if(e)return e.Va}}}();a.b(\"computedContext\",a.xa);a.b(\"computedContext.getDependenciesCount\",a.xa.Ca);a.b(\"computedContext.isInitial\",a.xa.Va);a.b(\"ignoreDependencies\",a.wd=a.l.w);var F=a.a.bc(\"_latestValue\");a.O=function(b){function c(){if(0<arguments.length)return c.Ua(c[F],arguments[0])&&(c.ia(),c[F]=arguments[0],c.ha()),this;a.l.sc(c);return c[F]}\r\nc[F]=b;a.a.la||a.a.extend(c,a.K.fn);a.K.fn.ub(c);a.a.ab(c,B);a.options.deferUpdates&&a.Aa.deferred(c,!0);return c};var B={equalityComparer:J,p:function(){return this[F]},ha:function(){this.notifySubscribers(this[F])},ia:function(){this.notifySubscribers(this[F],\"beforeChange\")}};a.a.la&&a.a.$a(B,a.K.fn);var I=a.O.md=\"__ko_proto__\";B[I]=a.O;a.Qa=function(b,c){return null===b||b===n||b[I]===n?!1:b[I]===c?!0:a.Qa(b[I],c)};a.I=function(b){return a.Qa(b,a.O)};a.Da=function(b){return\"function\"==typeof b&&\r\nb[I]===a.O||\"function\"==typeof b&&b[I]===a.B&&b.$c?!0:!1};a.b(\"observable\",a.O);a.b(\"isObservable\",a.I);a.b(\"isWriteableObservable\",a.Da);a.b(\"isWritableObservable\",a.Da);a.b(\"observable.fn\",B);a.H(B,\"peek\",B.p);a.H(B,\"valueHasMutated\",B.ha);a.H(B,\"valueWillMutate\",B.ia);a.ma=function(b){b=b||[];if(\"object\"!=typeof b||!(\"length\"in b))throw Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");b=a.O(b);a.a.ab(b,a.ma.fn);return b.extend({trackArrayChanges:!0})};\r\na.ma.fn={remove:function(b){for(var c=this.p(),d=[],e=\"function\"!=typeof b||a.I(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var g=c[f];e(g)&&(0===d.length&&this.ia(),d.push(g),c.splice(f,1),f--)}d.length&&this.ha();return d},removeAll:function(b){if(b===n){var c=this.p(),d=c.slice(0);this.ia();c.splice(0,c.length);this.ha();return d}return b?this.remove(function(c){return 0<=a.a.o(b,c)}):[]},destroy:function(b){var c=this.p(),d=\"function\"!=typeof b||a.I(b)?function(a){return a===b}:b;this.ia();\r\nfor(var e=c.length-1;0<=e;e--)d(c[e])&&(c[e]._destroy=!0);this.ha()},destroyAll:function(b){return b===n?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.o(b,c)}):[]},indexOf:function(b){var c=this();return a.a.o(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.ia(),this.p()[d]=c,this.ha())}};a.a.la&&a.a.$a(a.ma.fn,a.O.fn);a.a.r(\"pop push reverse shift sort splice unshift\".split(\" \"),function(b){a.ma.fn[b]=function(){var a=this.p();this.ia();this.Yb(a,b,arguments);\r\nvar d=a[b].apply(a,arguments);this.ha();return d===a?this:d}});a.a.r([\"slice\"],function(b){a.ma.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.b(\"observableArray\",a.ma);a.Aa.trackArrayChanges=function(b,c){function d(){if(!e){e=!0;l=b.notifySubscribers;b.notifySubscribers=function(a,b){b&&b!==E||++h;return l.apply(this,arguments)};var c=[].concat(b.p()||[]);f=null;g=b.Y(function(d){d=[].concat(d||[]);if(b.Ra(\"arrayChange\")){var e;if(!f||1<h)f=a.a.lb(c,d,b.kb);e=f}c=d;f=null;h=0;\r\ne&&e.length&&b.notifySubscribers(e,\"arrayChange\")})}}b.kb={};c&&\"object\"==typeof c&&a.a.extend(b.kb,c);b.kb.sparse=!0;if(!b.Yb){var e=!1,f=null,g,h=0,l,m=b.ua,k=b.Ka;b.ua=function(a){m&&m.call(b,a);\"arrayChange\"===a&&d()};b.Ka=function(a){k&&k.call(b,a);\"arrayChange\"!==a||b.Ra(\"arrayChange\")||(l&&(b.notifySubscribers=l,l=n),g.k(),e=!1)};b.Yb=function(b,c,d){function k(a,b,c){return m[m.length]={status:a,value:b,index:c}}if(e&&!h){var m=[],l=b.length,g=d.length,G=0;switch(c){case \"push\":G=l;case \"unshift\":for(c=\r\n0;c<g;c++)k(\"added\",d[c],G+c);break;case \"pop\":G=l-1;case \"shift\":l&&k(\"deleted\",b[G],G);break;case \"splice\":c=Math.min(Math.max(0,0>d[0]?l+d[0]:d[0]),l);for(var l=1===g?l:Math.min(c+(d[1]||0),l),g=c+g-2,G=Math.max(l,g),n=[],s=[],w=2;c<G;++c,++w)c<l&&s.push(k(\"deleted\",b[c],c)),c<g&&n.push(k(\"added\",d[w],c));a.a.hc(s,n);break;default:return}f=m}}}};var s=a.a.bc(\"_state\");a.m=a.B=function(b,c,d){function e(){if(0<arguments.length){if(\"function\"===typeof f)f.apply(g.sb,arguments);else throw Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\r\nreturn this}a.l.sc(e);(g.V||g.t&&e.Sa())&&e.U();return g.M}\"object\"===typeof b?d=b:(d=d||{},b&&(d.read=b));if(\"function\"!=typeof d.read)throw Error(\"Pass a function that returns the value of the ko.computed\");var f=d.write,g={M:n,da:!0,V:!0,Ta:!1,Hb:!1,T:!1,Ya:!1,t:!1,od:d.read,sb:c||d.owner,i:d.disposeWhenNodeIsRemoved||d.i||null,ya:d.disposeWhen||d.ya,pb:null,s:{},L:0,fc:null};e[s]=g;e.$c=\"function\"===typeof f;a.a.la||a.a.extend(e,a.K.fn);a.K.fn.ub(e);a.a.ab(e,z);d.pure?(g.Ya=!0,g.t=!0,a.a.extend(e,\r\nY)):d.deferEvaluation&&a.a.extend(e,Z);a.options.deferUpdates&&a.Aa.deferred(e,!0);g.i&&(g.Hb=!0,g.i.nodeType||(g.i=null));g.t||d.deferEvaluation||e.U();g.i&&e.ca()&&a.a.G.qa(g.i,g.pb=function(){e.k()});return e};var z={equalityComparer:J,Ca:function(){return this[s].L},Sb:function(a,c,d){if(this[s].Ya&&c===this)throw Error(\"A 'pure' computed must not be called recursively\");this[s].s[a]=d;d.Ia=this[s].L++;d.pa=c.Pa()},Sa:function(){var a,c,d=this[s].s;for(a in d)if(d.hasOwnProperty(a)&&(c=d[a],this.oa&&\r\nc.$.Ha||c.$.Zc(c.pa)))return!0},gd:function(){this.oa&&!this[s].Ta&&this.oa(!1)},ca:function(){var a=this[s];return a.V||0<a.L},qd:function(){this.Ha?this[s].V&&(this[s].da=!0):this.ec()},yc:function(a){if(a.gb&&!this[s].i){var c=a.Y(this.gd,this,\"dirty\"),d=a.Y(this.qd,this);return{$:a,k:function(){c.k();d.k()}}}return a.Y(this.ec,this)},ec:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[s].fc),this[s].fc=a.a.setTimeout(function(){b.U(!0)},c)):b.oa?b.oa(!0):b.U(!0)},U:function(b){var c=\r\nthis[s],d=c.ya,e=!1;if(!c.Ta&&!c.T){if(c.i&&!a.a.qb(c.i)||d&&d()){if(!c.Hb){this.k();return}}else c.Hb=!1;c.Ta=!0;try{e=this.Vc(b)}finally{c.Ta=!1}c.L||this.k();return e}},Vc:function(b){var c=this[s],d=!1,e=c.Ya?n:!c.L,f={Mc:this,Oa:c.s,ob:c.L};a.l.Xb({Lc:f,jb:W,m:this,Va:e});c.s={};c.L=0;f=this.Uc(c,f);this.Ua(c.M,f)&&(c.t||this.notifySubscribers(c.M,\"beforeChange\"),c.M=f,c.t?this.Kb():b&&this.notifySubscribers(c.M),d=!0);e&&this.notifySubscribers(c.M,\"awake\");return d},Uc:function(b,c){try{var d=\r\nb.od;return b.sb?d.call(b.sb):d()}finally{a.l.end(),c.ob&&!b.t&&a.a.D(c.Oa,V),b.da=b.V=!1}},p:function(a){var c=this[s];(c.V&&(a||!c.L)||c.t&&this.Sa())&&this.U();return c.M},Wa:function(b){a.K.fn.Wa.call(this,b);this.Mb=function(){this[s].da?this.U():this[s].V=!1;return this[s].M};this.oa=function(a){this.Ob(this[s].M);this[s].V=!0;a&&(this[s].da=!0);this.Pb(this)}},k:function(){var b=this[s];!b.t&&b.s&&a.a.D(b.s,function(a,b){b.k&&b.k()});b.i&&b.pb&&a.a.G.tc(b.i,b.pb);b.s=null;b.L=0;b.T=!0;b.da=\r\n!1;b.V=!1;b.t=!1;b.i=null}},Y={ua:function(b){var c=this,d=c[s];if(!d.T&&d.t&&\"change\"==b){d.t=!1;if(d.da||c.Sa())d.s=null,d.L=0,c.U()&&c.Kb();else{var e=[];a.a.D(d.s,function(a,b){e[b.Ia]=a});a.a.r(e,function(a,b){var e=d.s[a],l=c.yc(e.$);l.Ia=b;l.pa=e.pa;d.s[a]=l})}d.T||c.notifySubscribers(d.M,\"awake\")}},Ka:function(b){var c=this[s];c.T||\"change\"!=b||this.Ra(\"change\")||(a.a.D(c.s,function(a,b){b.k&&(c.s[a]={$:b.$,Ia:b.Ia,pa:b.pa},b.k())}),c.t=!0,this.notifySubscribers(n,\"asleep\"))},Pa:function(){var b=\r\nthis[s];b.t&&(b.da||this.Sa())&&this.U();return a.K.fn.Pa.call(this)}},Z={ua:function(a){\"change\"!=a&&\"beforeChange\"!=a||this.p()}};a.a.la&&a.a.$a(z,a.K.fn);var P=a.O.md;a.m[P]=a.O;z[P]=a.m;a.bd=function(b){return a.Qa(b,a.m)};a.cd=function(b){return a.Qa(b,a.m)&&b[s]&&b[s].Ya};a.b(\"computed\",a.m);a.b(\"dependentObservable\",a.m);a.b(\"isComputed\",a.bd);a.b(\"isPureComputed\",a.cd);a.b(\"computed.fn\",z);a.H(z,\"peek\",z.p);a.H(z,\"dispose\",z.k);a.H(z,\"isActive\",z.ca);a.H(z,\"getDependenciesCount\",z.Ca);a.rc=\r\nfunction(b,c){if(\"function\"===typeof b)return a.m(b,c,{pure:!0});b=a.a.extend({},b);b.pure=!0;return a.m(b,c)};a.b(\"pureComputed\",a.rc);(function(){function b(a,f,g){g=g||new d;a=f(a);if(\"object\"!=typeof a||null===a||a===n||a instanceof RegExp||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var h=a instanceof Array?[]:{};g.save(a,h);c(a,function(c){var d=f(a[c]);switch(typeof d){case \"boolean\":case \"number\":case \"string\":case \"function\":h[c]=d;break;case \"object\":case \"undefined\":var k=\r\ng.get(d);h[c]=k!==n?k:b(d,f,g)}});return h}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);\"function\"==typeof a.toJSON&&b(\"toJSON\")}else for(c in a)b(c)}function d(){this.keys=[];this.Lb=[]}a.Ac=function(c){if(0==arguments.length)throw Error(\"When calling ko.toJS, pass the object you want to convert.\");return b(c,function(b){for(var c=0;a.I(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.Ac(b);return a.a.Gb(b,c,d)};d.prototype={save:function(b,c){var d=a.a.o(this.keys,\r\nb);0<=d?this.Lb[d]=c:(this.keys.push(b),this.Lb.push(c))},get:function(b){b=a.a.o(this.keys,b);return 0<=b?this.Lb[b]:n}}})();a.b(\"toJS\",a.Ac);a.b(\"toJSON\",a.toJSON);(function(){a.j={u:function(b){switch(a.a.A(b)){case \"option\":return!0===b.__ko__hasDomDataOptionValue__?a.a.e.get(b,a.d.options.zb):7>=a.a.C?b.getAttributeNode(\"value\")&&b.getAttributeNode(\"value\").specified?b.value:b.text:b.value;case \"select\":return 0<=b.selectedIndex?a.j.u(b.options[b.selectedIndex]):n;default:return b.value}},ja:function(b,\r\nc,d){switch(a.a.A(b)){case \"option\":switch(typeof c){case \"string\":a.a.e.set(b,a.d.options.zb,n);\"__ko__hasDomDataOptionValue__\"in b&&delete b.__ko__hasDomDataOptionValue__;b.value=c;break;default:a.a.e.set(b,a.d.options.zb,c),b.__ko__hasDomDataOptionValue__=!0,b.value=\"number\"===typeof c?c:\"\"}break;case \"select\":if(\"\"===c||null===c)c=n;for(var e=-1,f=0,g=b.options.length,h;f<g;++f)if(h=a.j.u(b.options[f]),h==c||\"\"==h&&c===n){e=f;break}if(d||0<=e||c===n&&1<b.size)b.selectedIndex=e;break;default:if(null===\r\nc||c===n)c=\"\";b.value=c}}}})();a.b(\"selectExtensions\",a.j);a.b(\"selectExtensions.readValue\",a.j.u);a.b(\"selectExtensions.writeValue\",a.j.ja);a.h=function(){function b(b){b=a.a.cb(b);123===b.charCodeAt(0)&&(b=b.slice(1,-1));var c=[],d=b.match(e),r,h=[],p=0;if(d){d.push(\",\");for(var A=0,y;y=d[A];++A){var v=y.charCodeAt(0);if(44===v){if(0>=p){c.push(r&&h.length?{key:r,value:h.join(\"\")}:{unknown:r||h.join(\"\")});r=p=0;h=[];continue}}else if(58===v){if(!p&&!r&&1===h.length){r=h.pop();continue}}else 47===\r\nv&&A&&1<y.length?(v=d[A-1].match(f))&&!g[v[0]]&&(b=b.substr(b.indexOf(y)+1),d=b.match(e),d.push(\",\"),A=-1,y=\"/\"):40===v||123===v||91===v?++p:41===v||125===v||93===v?--p:r||h.length||34!==v&&39!==v||(y=y.slice(1,-1));h.push(y)}}return c}var c=[\"true\",\"false\",\"null\",\"undefined\"],d=/^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i,e=RegExp(\"\\\"(?:[^\\\"\\\\\\\\]|\\\\\\\\.)*\\\"|'(?:[^'\\\\\\\\]|\\\\\\\\.)*'|/(?:[^/\\\\\\\\]|\\\\\\\\.)*/w*|[^\\\\s:,/][^,\\\"'{}()/:[\\\\]]*[^\\\\s,\\\"'{}()/:[\\\\]]|[^\\\\s]\",\"g\"),f=/[\\])\"'A-Za-z0-9_$]+$/,\r\ng={\"in\":1,\"return\":1,\"typeof\":1},h={};return{va:[],ga:h,Ab:b,Xa:function(e,m){function k(b,e){var m;if(!A){var l=a.getBindingHandler(b);if(l&&l.preprocess&&!(e=l.preprocess(e,b,k)))return;if(l=h[b])m=e,0<=a.a.o(c,m)?m=!1:(l=m.match(d),m=null===l?!1:l[1]?\"Object(\"+l[1]+\")\"+l[2]:m),l=m;l&&g.push(\"'\"+b+\"':function(_z){\"+m+\"=_z}\")}p&&(e=\"function(){return \"+e+\" }\");f.push(\"'\"+b+\"':\"+e)}m=m||{};var f=[],g=[],p=m.valueAccessors,A=m.bindingParams,y=\"string\"===typeof e?b(e):e;a.a.r(y,function(a){k(a.key||\r\na.unknown,a.value)});g.length&&k(\"_ko_property_writers\",\"{\"+g.join(\",\")+\" }\");return f.join(\",\")},fd:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},Ga:function(b,c,d,e,f){if(b&&a.I(b))!a.Da(b)||f&&b.p()===e||b(e);else if((b=c.get(\"_ko_property_writers\"))&&b[d])b[d](e)}}}();a.b(\"expressionRewriting\",a.h);a.b(\"expressionRewriting.bindingRewriteValidators\",a.h.va);a.b(\"expressionRewriting.parseObjectLiteral\",a.h.Ab);a.b(\"expressionRewriting.preProcessBindings\",a.h.Xa);a.b(\"expressionRewriting._twoWayBindings\",\r\na.h.ga);a.b(\"jsonExpressionRewriting\",a.h);a.b(\"jsonExpressionRewriting.insertPropertyAccessorsIntoJson\",a.h.Xa);(function(){function b(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&h.test(f?a.text:a.nodeValue)}function d(a,d){for(var e=a,f=1,l=[];e=e.nextSibling;){if(c(e)&&(f--,0===f))return l;l.push(e);b(e)&&f++}if(!d)throw Error(\"Cannot find closing comment tag to match: \"+a.nodeValue);return null}function e(a,b){var c=d(a,b);return c?0<c.length?c[c.length-\r\n1].nextSibling:a.nextSibling:null}var f=t&&\"\\x3c!--test--\\x3e\"===t.createComment(\"test\").text,g=f?/^\\x3c!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*--\\x3e$/:/^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/,h=f?/^\\x3c!--\\s*\\/ko\\s*--\\x3e$/:/^\\s*\\/ko\\s*$/,l={ul:!0,ol:!0};a.f={aa:{},childNodes:function(a){return b(a)?d(a):a.childNodes},za:function(c){if(b(c)){c=a.f.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.rb(c)},fa:function(c,d){if(b(c)){a.f.za(c);for(var e=c.nextSibling,f=0,l=d.length;f<l;f++)e.parentNode.insertBefore(d[f],\r\ne)}else a.a.fa(c,d)},qc:function(a,c){b(a)?a.parentNode.insertBefore(c,a.nextSibling):a.firstChild?a.insertBefore(c,a.firstChild):a.appendChild(c)},kc:function(c,d,e){e?b(c)?c.parentNode.insertBefore(d,e.nextSibling):e.nextSibling?c.insertBefore(d,e.nextSibling):c.appendChild(d):a.f.qc(c,d)},firstChild:function(a){return b(a)?!a.nextSibling||c(a.nextSibling)?null:a.nextSibling:a.firstChild},nextSibling:function(a){b(a)&&(a=e(a));return a.nextSibling&&c(a.nextSibling)?null:a.nextSibling},Yc:b,vd:function(a){return(a=\r\n(f?a.text:a.nodeValue).match(g))?a[1]:null},oc:function(d){if(l[a.a.A(d)]){var k=d.firstChild;if(k){do if(1===k.nodeType){var f;f=k.firstChild;var g=null;if(f){do if(g)g.push(f);else if(b(f)){var h=e(f,!0);h?f=h:g=[f]}else c(f)&&(g=[f]);while(f=f.nextSibling)}if(f=g)for(g=k.nextSibling,h=0;h<f.length;h++)g?d.insertBefore(f[h],g):d.appendChild(f[h])}while(k=k.nextSibling)}}}}})();a.b(\"virtualElements\",a.f);a.b(\"virtualElements.allowedBindings\",a.f.aa);a.b(\"virtualElements.emptyNode\",a.f.za);a.b(\"virtualElements.insertAfter\",\r\na.f.kc);a.b(\"virtualElements.prepend\",a.f.qc);a.b(\"virtualElements.setDomNodeChildren\",a.f.fa);(function(){a.S=function(){this.Kc={}};a.a.extend(a.S.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=b.getAttribute(\"data-bind\")||a.g.getComponentNameForNode(b);case 8:return a.f.Yc(b);default:return!1}},getBindings:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b):null;return a.g.Rb(d,b,c,!1)},getBindingAccessors:function(b,c){var d=this.getBindingsString(b,\r\nc),d=d?this.parseBindingsString(d,c,b,{valueAccessors:!0}):null;return a.g.Rb(d,b,c,!0)},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute(\"data-bind\");case 8:return a.f.vd(b);default:return null}},parseBindingsString:function(b,c,d,e){try{var f=this.Kc,g=b+(e&&e.valueAccessors||\"\"),h;if(!(h=f[g])){var l,m=\"with($context){with($data||{}){return{\"+a.h.Xa(b,e)+\"}}}\";l=new Function(\"$context\",\"$element\",m);h=f[g]=l}return h(c,d)}catch(k){throw k.message=\"Unable to parse bindings.\\nBindings value: \"+\r\nb+\"\\nMessage: \"+k.message,k;}}});a.S.instance=new a.S})();a.b(\"bindingProvider\",a.S);(function(){function b(a){return function(){return a}}function c(a){return a()}function d(b){return a.a.Ea(a.l.w(b),function(a,c){return function(){return b()[c]}})}function e(c,e,k){return\"function\"===typeof c?d(c.bind(null,e,k)):a.a.Ea(c,b)}function f(a,b){return d(this.getBindings.bind(this,a,b))}function g(b,c,d){var e,k=a.f.firstChild(c),f=a.S.instance,m=f.preprocessNode;if(m){for(;e=k;)k=a.f.nextSibling(e),\r\nm.call(f,e);k=a.f.firstChild(c)}for(;e=k;)k=a.f.nextSibling(e),h(b,e,d)}function h(b,c,d){var e=!0,k=1===c.nodeType;k&&a.f.oc(c);if(k&&d||a.S.instance.nodeHasBindings(c))e=m(c,null,b,d).shouldBindDescendants;e&&!r[a.a.A(c)]&&g(b,c,!k)}function l(b){var c=[],d={},e=[];a.a.D(b,function X(k){if(!d[k]){var f=a.getBindingHandler(k);f&&(f.after&&(e.push(k),a.a.r(f.after,function(c){if(b[c]){if(-1!==a.a.o(e,c))throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \"+e.join(\", \"));\r\nX(c)}}),e.length--),c.push({key:k,jc:f}));d[k]=!0}});return c}function m(b,d,e,k){var m=a.a.e.get(b,q);if(!d){if(m)throw Error(\"You cannot apply bindings multiple times to the same element.\");a.a.e.set(b,q,!0)}!m&&k&&a.xc(b,e);var g;if(d&&\"function\"!==typeof d)g=d;else{var h=a.S.instance,r=h.getBindingAccessors||f,p=a.B(function(){(g=d?d(e,b):r.call(h,b,e))&&e.Q&&e.Q();return g},null,{i:b});g&&p.ca()||(p=null)}var s;if(g){var t=p?function(a){return function(){return c(p()[a])}}:function(a){return g[a]},\r\nu=function(){return a.a.Ea(p?p():g,c)};u.get=function(a){return g[a]&&c(t(a))};u.has=function(a){return a in g};k=l(g);a.a.r(k,function(c){var d=c.jc.init,k=c.jc.update,f=c.key;if(8===b.nodeType&&!a.f.aa[f])throw Error(\"The binding '\"+f+\"' cannot be used with virtual elements\");try{\"function\"==typeof d&&a.l.w(function(){var a=d(b,t(f),u,e.$data,e);if(a&&a.controlsDescendantBindings){if(s!==n)throw Error(\"Multiple bindings (\"+s+\" and \"+f+\") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\r\ns=f}}),\"function\"==typeof k&&a.B(function(){k(b,t(f),u,e.$data,e)},null,{i:b})}catch(m){throw m.message='Unable to process binding \"'+f+\": \"+g[f]+'\"\\nMessage: '+m.message,m;}})}return{shouldBindDescendants:s===n}}function k(b){return b&&b instanceof a.R?b:new a.R(b)}a.d={};var r={script:!0,textarea:!0,template:!0};a.getBindingHandler=function(b){return a.d[b]};a.R=function(b,c,d,e,k){function f(){var k=g?b():b,m=a.a.c(k);c?(c.Q&&c.Q(),a.a.extend(l,c),l.Q=r):(l.$parents=[],l.$root=m,l.ko=a);l.$rawData=\r\nk;l.$data=m;d&&(l[d]=m);e&&e(l,c,m);return l.$data}function m(){return h&&!a.a.Tb(h)}var l=this,g=\"function\"==typeof b&&!a.I(b),h,r;k&&k.exportDependencies?f():(r=a.B(f,null,{ya:m,i:!0}),r.ca()&&(l.Q=r,r.equalityComparer=null,h=[],r.Dc=function(b){h.push(b);a.a.G.qa(b,function(b){a.a.Na(h,b);h.length||(r.k(),l.Q=r=n)})}))};a.R.prototype.createChildContext=function(b,c,d,e){return new a.R(b,this,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);\r\nd&&d(a)},e)};a.R.prototype.extend=function(b){return new a.R(this.Q||this.$data,this,null,function(c,d){c.$rawData=d.$rawData;a.a.extend(c,\"function\"==typeof b?b():b)})};a.R.prototype.ac=function(a,b){return this.createChildContext(a,b,null,{exportDependencies:!0})};var q=a.a.e.J(),p=a.a.e.J();a.xc=function(b,c){if(2==arguments.length)a.a.e.set(b,p,c),c.Q&&c.Q.Dc(b);else return a.a.e.get(b,p)};a.La=function(b,c,d){1===b.nodeType&&a.f.oc(b);return m(b,c,k(d),!0)};a.Ic=function(b,c,d){d=k(d);return a.La(b,\r\ne(c,d,b),d)};a.hb=function(a,b){1!==b.nodeType&&8!==b.nodeType||g(k(a),b,!0)};a.Ub=function(a,b){!u&&x.jQuery&&(u=x.jQuery);if(b&&1!==b.nodeType&&8!==b.nodeType)throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");b=b||x.document.body;h(k(a),b,!0)};a.nb=function(b){switch(b.nodeType){case 1:case 8:var c=a.xc(b);if(c)return c;if(b.parentNode)return a.nb(b.parentNode)}return n};a.Oc=function(b){return(b=a.nb(b))?b.$data:n};a.b(\"bindingHandlers\",\r\na.d);a.b(\"applyBindings\",a.Ub);a.b(\"applyBindingsToDescendants\",a.hb);a.b(\"applyBindingAccessorsToNode\",a.La);a.b(\"applyBindingsToNode\",a.Ic);a.b(\"contextFor\",a.nb);a.b(\"dataFor\",a.Oc)})();(function(b){function c(c,e){var m=f.hasOwnProperty(c)?f[c]:b,k;m?m.Y(e):(m=f[c]=new a.K,m.Y(e),d(c,function(b,d){var e=!(!d||!d.synchronous);g[c]={definition:b,dd:e};delete f[c];k||e?m.notifySubscribers(b):a.Z.Za(function(){m.notifySubscribers(b)})}),k=!0)}function d(a,b){e(\"getConfig\",[a],function(c){c?e(\"loadComponent\",\r\n[a,c],function(a){b(a,c)}):b(null,null)})}function e(c,d,f,k){k||(k=a.g.loaders.slice(0));var g=k.shift();if(g){var q=g[c];if(q){var p=!1;if(q.apply(g,d.concat(function(a){p?f(null):null!==a?f(a):e(c,d,f,k)}))!==b&&(p=!0,!g.suppressLoaderExceptions))throw Error(\"Component loaders must supply values by invoking the callback, not by returning values synchronously.\");}else e(c,d,f,k)}else f(null)}var f={},g={};a.g={get:function(d,e){var f=g.hasOwnProperty(d)?g[d]:b;f?f.dd?a.l.w(function(){e(f.definition)}):\r\na.Z.Za(function(){e(f.definition)}):c(d,e)},$b:function(a){delete g[a]},Nb:e};a.g.loaders=[];a.b(\"components\",a.g);a.b(\"components.get\",a.g.get);a.b(\"components.clearCachedDefinition\",a.g.$b)})();(function(){function b(b,c,d,e){function g(){0===--y&&e(h)}var h={},y=2,v=d.template;d=d.viewModel;v?f(c,v,function(c){a.g.Nb(\"loadTemplate\",[b,c],function(a){h.template=a;g()})}):g();d?f(c,d,function(c){a.g.Nb(\"loadViewModel\",[b,c],function(a){h[l]=a;g()})}):g()}function c(a,b,d){if(\"function\"===typeof b)d(function(a){return new b(a)});\r\nelse if(\"function\"===typeof b[l])d(b[l]);else if(\"instance\"in b){var e=b.instance;d(function(){return e})}else\"viewModel\"in b?c(a,b.viewModel,d):a(\"Unknown viewModel value: \"+b)}function d(b){switch(a.a.A(b)){case \"script\":return a.a.na(b.text);case \"textarea\":return a.a.na(b.value);case \"template\":if(e(b.content))return a.a.wa(b.content.childNodes)}return a.a.wa(b.childNodes)}function e(a){return x.DocumentFragment?a instanceof DocumentFragment:a&&11===a.nodeType}function f(a,b,c){\"string\"===typeof b.require?\r\nO||x.require?(O||x.require)([b.require],c):a(\"Uses require, but no AMD loader is present\"):c(b)}function g(a){return function(b){throw Error(\"Component '\"+a+\"': \"+b);}}var h={};a.g.register=function(b,c){if(!c)throw Error(\"Invalid configuration for \"+b);if(a.g.wb(b))throw Error(\"Component \"+b+\" is already registered\");h[b]=c};a.g.wb=function(a){return h.hasOwnProperty(a)};a.g.ud=function(b){delete h[b];a.g.$b(b)};a.g.cc={getConfig:function(a,b){b(h.hasOwnProperty(a)?h[a]:null)},loadComponent:function(a,\r\nc,d){var e=g(a);f(e,c,function(c){b(a,e,c,d)})},loadTemplate:function(b,c,f){b=g(b);if(\"string\"===typeof c)f(a.a.na(c));else if(c instanceof Array)f(c);else if(e(c))f(a.a.W(c.childNodes));else if(c.element)if(c=c.element,x.HTMLElement?c instanceof HTMLElement:c&&c.tagName&&1===c.nodeType)f(d(c));else if(\"string\"===typeof c){var l=t.getElementById(c);l?f(d(l)):b(\"Cannot find element with ID \"+c)}else b(\"Unknown element type: \"+c);else b(\"Unknown template value: \"+c)},loadViewModel:function(a,b,d){c(g(a),\r\nb,d)}};var l=\"createViewModel\";a.b(\"components.register\",a.g.register);a.b(\"components.isRegistered\",a.g.wb);a.b(\"components.unregister\",a.g.ud);a.b(\"components.defaultLoader\",a.g.cc);a.g.loaders.push(a.g.cc);a.g.Ec=h})();(function(){function b(b,e){var f=b.getAttribute(\"params\");if(f){var f=c.parseBindingsString(f,e,b,{valueAccessors:!0,bindingParams:!0}),f=a.a.Ea(f,function(c){return a.m(c,null,{i:b})}),g=a.a.Ea(f,function(c){var e=c.p();return c.ca()?a.m({read:function(){return a.a.c(c())},write:a.Da(e)&&\r\nfunction(a){c()(a)},i:b}):e});g.hasOwnProperty(\"$raw\")||(g.$raw=f);return g}return{$raw:{}}}a.g.getComponentNameForNode=function(b){var c=a.a.A(b);if(a.g.wb(c)&&(-1!=c.indexOf(\"-\")||\"[object HTMLUnknownElement]\"==\"\"+b||8>=a.a.C&&b.tagName===c))return c};a.g.Rb=function(c,e,f,g){if(1===e.nodeType){var h=a.g.getComponentNameForNode(e);if(h){c=c||{};if(c.component)throw Error('Cannot use the \"component\" binding on a custom element matching a component');var l={name:h,params:b(e,f)};c.component=g?function(){return l}:\r\nl}}return c};var c=new a.S;9>a.a.C&&(a.g.register=function(a){return function(b){t.createElement(b);return a.apply(this,arguments)}}(a.g.register),t.createDocumentFragment=function(b){return function(){var c=b(),f=a.g.Ec,g;for(g in f)f.hasOwnProperty(g)&&c.createElement(g);return c}}(t.createDocumentFragment))})();(function(b){function c(b,c,d){c=c.template;if(!c)throw Error(\"Component '\"+b+\"' has no template\");b=a.a.wa(c);a.f.fa(d,b)}function d(a,b,c,d){var e=a.createViewModel;return e?e.call(a,\r\nd,{element:b,templateNodes:c}):d}var e=0;a.d.component={init:function(f,g,h,l,m){function k(){var a=r&&r.dispose;\"function\"===typeof a&&a.call(r);q=r=null}var r,q,p=a.a.W(a.f.childNodes(f));a.a.G.qa(f,k);a.m(function(){var l=a.a.c(g()),h,v;\"string\"===typeof l?h=l:(h=a.a.c(l.name),v=a.a.c(l.params));if(!h)throw Error(\"No component name specified\");var n=q=++e;a.g.get(h,function(e){if(q===n){k();if(!e)throw Error(\"Unknown component '\"+h+\"'\");c(h,e,f);var l=d(e,f,p,v);e=m.createChildContext(l,b,function(a){a.$component=\r\nl;a.$componentTemplateNodes=p});r=l;a.hb(e,f)}})},null,{i:f});return{controlsDescendantBindings:!0}}};a.f.aa.component=!0})();var Q={\"class\":\"className\",\"for\":\"htmlFor\"};a.d.attr={update:function(b,c){var d=a.a.c(c())||{};a.a.D(d,function(c,d){d=a.a.c(d);var g=!1===d||null===d||d===n;g&&b.removeAttribute(c);8>=a.a.C&&c in Q?(c=Q[c],g?b.removeAttribute(c):b[c]=d):g||b.setAttribute(c,d.toString());\"name\"===c&&a.a.vc(b,g?\"\":d.toString())})}};(function(){a.d.checked={after:[\"value\",\"attr\"],init:function(b,\r\nc,d){function e(){var e=b.checked,f=p?g():e;if(!a.xa.Va()&&(!l||e)){var h=a.l.w(c);if(k){var m=r?h.p():h;q!==f?(e&&(a.a.ra(m,f,!0),a.a.ra(m,q,!1)),q=f):a.a.ra(m,f,e);r&&a.Da(h)&&h(m)}else a.h.Ga(h,d,\"checked\",f,!0)}}function f(){var d=a.a.c(c());b.checked=k?0<=a.a.o(d,g()):h?d:g()===d}var g=a.rc(function(){return d.has(\"checkedValue\")?a.a.c(d.get(\"checkedValue\")):d.has(\"value\")?a.a.c(d.get(\"value\")):b.value}),h=\"checkbox\"==b.type,l=\"radio\"==b.type;if(h||l){var m=c(),k=h&&a.a.c(m)instanceof Array,\r\nr=!(k&&m.push&&m.splice),q=k?g():n,p=l||k;l&&!b.name&&a.d.uniqueName.init(b,function(){return!0});a.m(e,null,{i:b});a.a.q(b,\"click\",e);a.m(f,null,{i:b});m=n}}};a.h.ga.checked=!0;a.d.checkedValue={update:function(b,c){b.value=a.a.c(c())}}})();a.d.css={update:function(b,c){var d=a.a.c(c());null!==d&&\"object\"==typeof d?a.a.D(d,function(c,d){d=a.a.c(d);a.a.fb(b,c,d)}):(d=a.a.cb(String(d||\"\")),a.a.fb(b,b.__ko__cssValue,!1),b.__ko__cssValue=d,a.a.fb(b,d,!0))}};a.d.enable={update:function(b,c){var d=a.a.c(c());\r\nd&&b.disabled?b.removeAttribute(\"disabled\"):d||b.disabled||(b.disabled=!0)}};a.d.disable={update:function(b,c){a.d.enable.update(b,function(){return!a.a.c(c())})}};a.d.event={init:function(b,c,d,e,f){var g=c()||{};a.a.D(g,function(g){\"string\"==typeof g&&a.a.q(b,g,function(b){var m,k=c()[g];if(k){try{var r=a.a.W(arguments);e=f.$data;r.unshift(e);m=k.apply(e,r)}finally{!0!==m&&(b.preventDefault?b.preventDefault():b.returnValue=!1)}!1===d.get(g+\"Bubble\")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};\r\na.d.foreach={mc:function(b){return function(){var c=b(),d=a.a.Bb(c);if(!d||\"number\"==typeof d.length)return{foreach:c,templateEngine:a.X.vb};a.a.c(c);return{foreach:d.data,as:d.as,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.X.vb}}},init:function(b,c){return a.d.template.init(b,a.d.foreach.mc(c))},update:function(b,c,d,e,f){return a.d.template.update(b,a.d.foreach.mc(c),\r\nd,e,f)}};a.h.va.foreach=!1;a.f.aa.foreach=!0;a.d.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var f=b.ownerDocument;if(\"activeElement\"in f){var g;try{g=f.activeElement}catch(k){g=f.body}e=g===b}f=c();a.h.Ga(f,d,\"hasfocus\",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),g=e.bind(null,!1);a.a.q(b,\"focus\",f);a.a.q(b,\"focusin\",f);a.a.q(b,\"blur\",g);a.a.q(b,\"focusout\",g)},update:function(b,c){var d=!!a.a.c(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===\r\nd||(d?b.focus():b.blur(),!d&&b.__ko_hasfocusLastValue&&b.ownerDocument.body.focus(),a.l.w(a.a.Fa,null,[b,d?\"focusin\":\"focusout\"]))}};a.h.ga.hasfocus=!0;a.d.hasFocus=a.d.hasfocus;a.h.ga.hasFocus=!0;a.d.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Eb(b,c())}};K(\"if\");K(\"ifnot\",!1,!0);K(\"with\",!0,!1,function(a,c){return a.ac(c)});var L={};a.d.options={init:function(b){if(\"select\"!==a.a.A(b))throw Error(\"options binding applies only to SELECT elements\");for(;0<\r\nb.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.Ma(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return\"function\"==d?b(a):\"string\"==d?a[b]:c}function g(c,e){if(A&&k)a.j.ja(b,a.a.c(d.get(\"value\")),!0);else if(p.length){var f=0<=a.a.o(p,a.j.u(e[0]));a.a.wc(e[0],f);A&&!f&&a.l.w(a.a.Fa,null,[b,\"change\"])}}var h=b.multiple,l=0!=b.length&&h?b.scrollTop:null,m=a.a.c(c()),k=d.get(\"valueAllowUnset\")&&d.has(\"value\"),r=\r\nd.get(\"optionsIncludeDestroyed\");c={};var q,p=[];k||(h?p=a.a.ib(e(),a.j.u):0<=b.selectedIndex&&p.push(a.j.u(b.options[b.selectedIndex])));m&&(\"undefined\"==typeof m.length&&(m=[m]),q=a.a.Ma(m,function(b){return r||b===n||null===b||!a.a.c(b._destroy)}),d.has(\"optionsCaption\")&&(m=a.a.c(d.get(\"optionsCaption\")),null!==m&&m!==n&&q.unshift(L)));var A=!1;c.beforeRemove=function(a){b.removeChild(a)};m=g;d.has(\"optionsAfterRender\")&&\"function\"==typeof d.get(\"optionsAfterRender\")&&(m=function(b,c){g(0,c);\r\na.l.w(d.get(\"optionsAfterRender\"),null,[c[0],b!==L?b:n])});a.a.Db(b,q,function(c,e,g){g.length&&(p=!k&&g[0].selected?[a.j.u(g[0])]:[],A=!0);e=b.ownerDocument.createElement(\"option\");c===L?(a.a.bb(e,d.get(\"optionsCaption\")),a.j.ja(e,n)):(g=f(c,d.get(\"optionsValue\"),c),a.j.ja(e,a.a.c(g)),c=f(c,d.get(\"optionsText\"),g),a.a.bb(e,c));return[e]},c,m);a.l.w(function(){k?a.j.ja(b,a.a.c(d.get(\"value\")),!0):(h?p.length&&e().length<p.length:p.length&&0<=b.selectedIndex?a.j.u(b.options[b.selectedIndex])!==p[0]:\r\np.length||0<=b.selectedIndex)&&a.a.Fa(b,\"change\")});a.a.Sc(b);l&&20<Math.abs(l-b.scrollTop)&&(b.scrollTop=l)}};a.d.options.zb=a.a.e.J();a.d.selectedOptions={after:[\"options\",\"foreach\"],init:function(b,c,d){a.a.q(b,\"change\",function(){var e=c(),f=[];a.a.r(b.getElementsByTagName(\"option\"),function(b){b.selected&&f.push(a.j.u(b))});a.h.Ga(e,d,\"selectedOptions\",f)})},update:function(b,c){if(\"select\"!=a.a.A(b))throw Error(\"values binding applies only to SELECT elements\");var d=a.a.c(c()),e=b.scrollTop;\r\nd&&\"number\"==typeof d.length&&a.a.r(b.getElementsByTagName(\"option\"),function(b){var c=0<=a.a.o(d,a.j.u(b));b.selected!=c&&a.a.wc(b,c)});b.scrollTop=e}};a.h.ga.selectedOptions=!0;a.d.style={update:function(b,c){var d=a.a.c(c()||{});a.a.D(d,function(c,d){d=a.a.c(d);if(null===d||d===n||!1===d)d=\"\";b.style[c]=d})}};a.d.submit={init:function(b,c,d,e,f){if(\"function\"!=typeof c())throw Error(\"The value for a submit binding must be a function\");a.a.q(b,\"submit\",function(a){var d,e=c();try{d=e.call(f.$data,\r\nb)}finally{!0!==d&&(a.preventDefault?a.preventDefault():a.returnValue=!1)}})}};a.d.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.bb(b,c())}};a.f.aa.text=!0;(function(){if(x&&x.navigator)var b=function(a){if(a)return parseFloat(a[1])},c=x.opera&&x.opera.version&&parseInt(x.opera.version()),d=x.navigator.userAgent,e=b(d.match(/^(?:(?!chrome).)*version\\/([^ ]*) safari/i)),f=b(d.match(/Firefox\\/([^ ]*)/));if(10>a.a.C)var g=a.a.e.J(),h=a.a.e.J(),l=function(b){var c=\r\nthis.activeElement;(c=c&&a.a.e.get(c,h))&&c(b)},m=function(b,c){var d=b.ownerDocument;a.a.e.get(d,g)||(a.a.e.set(d,g,!0),a.a.q(d,\"selectionchange\",l));a.a.e.set(b,h,c)};a.d.textInput={init:function(b,d,g){function l(c,d){a.a.q(b,c,d)}function h(){var c=a.a.c(d());if(null===c||c===n)c=\"\";u!==n&&c===u?a.a.setTimeout(h,4):b.value!==c&&(s=c,b.value=c)}function y(){t||(u=b.value,t=a.a.setTimeout(v,4))}function v(){clearTimeout(t);u=t=n;var c=b.value;s!==c&&(s=c,a.h.Ga(d(),g,\"textInput\",c))}var s=b.value,\r\nt,u,x=9==a.a.C?y:v;10>a.a.C?(l(\"propertychange\",function(a){\"value\"===a.propertyName&&x(a)}),8==a.a.C&&(l(\"keyup\",v),l(\"keydown\",v)),8<=a.a.C&&(m(b,x),l(\"dragend\",y))):(l(\"input\",v),5>e&&\"textarea\"===a.a.A(b)?(l(\"keydown\",y),l(\"paste\",y),l(\"cut\",y)):11>c?l(\"keydown\",y):4>f&&(l(\"DOMAutoComplete\",v),l(\"dragdrop\",v),l(\"drop\",v)));l(\"change\",v);a.m(h,null,{i:b})}};a.h.ga.textInput=!0;a.d.textinput={preprocess:function(a,b,c){c(\"textInput\",a)}}})();a.d.uniqueName={init:function(b,c){if(c()){var d=\"ko_unique_\"+\r\n++a.d.uniqueName.Nc;a.a.vc(b,d)}}};a.d.uniqueName.Nc=0;a.d.value={after:[\"options\",\"foreach\"],init:function(b,c,d){if(\"input\"!=b.tagName.toLowerCase()||\"checkbox\"!=b.type&&\"radio\"!=b.type){var e=[\"change\"],f=d.get(\"valueUpdate\"),g=!1,h=null;f&&(\"string\"==typeof f&&(f=[f]),a.a.ta(e,f),e=a.a.Wb(e));var l=function(){h=null;g=!1;var e=c(),f=a.j.u(b);a.h.Ga(e,d,\"value\",f)};!a.a.C||\"input\"!=b.tagName.toLowerCase()||\"text\"!=b.type||\"off\"==b.autocomplete||b.form&&\"off\"==b.form.autocomplete||-1!=a.a.o(e,\"propertychange\")||\r\n(a.a.q(b,\"propertychange\",function(){g=!0}),a.a.q(b,\"focus\",function(){g=!1}),a.a.q(b,\"blur\",function(){g&&l()}));a.a.r(e,function(c){var d=l;a.a.sd(c,\"after\")&&(d=function(){h=a.j.u(b);a.a.setTimeout(l,0)},c=c.substring(5));a.a.q(b,c,d)});var m=function(){var e=a.a.c(c()),f=a.j.u(b);if(null!==h&&e===h)a.a.setTimeout(m,0);else if(e!==f)if(\"select\"===a.a.A(b)){var g=d.get(\"valueAllowUnset\"),f=function(){a.j.ja(b,e,g)};f();g||e===a.j.u(b)?a.a.setTimeout(f,0):a.l.w(a.a.Fa,null,[b,\"change\"])}else a.j.ja(b,\r\ne)};a.m(m,null,{i:b})}else a.La(b,{checkedValue:c})},update:function(){}};a.h.ga.value=!0;a.d.visible={update:function(b,c){var d=a.a.c(c()),e=\"none\"!=b.style.display;d&&!e?b.style.display=\"\":!d&&e&&(b.style.display=\"none\")}};(function(b){a.d[b]={init:function(c,d,e,f,g){return a.d.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,g)}}})(\"click\");a.P=function(){};a.P.prototype.renderTemplateSource=function(){throw Error(\"Override renderTemplateSource\");};a.P.prototype.createJavaScriptEvaluatorBlock=\r\nfunction(){throw Error(\"Override createJavaScriptEvaluatorBlock\");};a.P.prototype.makeTemplateSource=function(b,c){if(\"string\"==typeof b){c=c||t;var d=c.getElementById(b);if(!d)throw Error(\"Cannot find template with ID \"+b);return new a.v.n(d)}if(1==b.nodeType||8==b.nodeType)return new a.v.sa(b);throw Error(\"Unknown template type: \"+b);};a.P.prototype.renderTemplate=function(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,d,e)};a.P.prototype.isTemplateRewritten=function(a,\r\nc){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data(\"isRewritten\")};a.P.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data(\"isRewritten\",!0)};a.b(\"templateEngine\",a.P);a.Ib=function(){function b(b,c,d,h){b=a.h.Ab(b);for(var l=a.h.va,m=0;m<b.length;m++){var k=b[m].key;if(l.hasOwnProperty(k)){var r=l[k];if(\"function\"===typeof r){if(k=r(b[m].value))throw Error(k);}else if(!r)throw Error(\"This template engine does not support the '\"+\r\nk+\"' binding within its templates\");}}d=\"ko.__tr_ambtns(function($context,$element){return(function(){return{ \"+a.h.Xa(b,{valueAccessors:!0})+\" } })()},'\"+d.toLowerCase()+\"')\";return h.createJavaScriptEvaluatorBlock(d)+c}var c=/(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi,d=/\\x3c!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*--\\x3e/g;return{Tc:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.Ib.jd(b,\r\nc)},d)},jd:function(a,f){return a.replace(c,function(a,c,d,e,k){return b(k,c,d,f)}).replace(d,function(a,c){return b(c,\"\\x3c!-- ko --\\x3e\",\"#comment\",f)})},Jc:function(b,c){return a.N.yb(function(d,h){var l=d.nextSibling;l&&l.nodeName.toLowerCase()===c&&a.La(l,b,h)})}}}();a.b(\"__tr_ambtns\",a.Ib.Jc);(function(){a.v={};a.v.n=function(b){if(this.n=b){var c=a.a.A(b);this.eb=\"script\"===c?1:\"textarea\"===c?2:\"template\"==c&&b.content&&11===b.content.nodeType?3:4}};a.v.n.prototype.text=function(){var b=1===\r\nthis.eb?\"text\":2===this.eb?\"value\":\"innerHTML\";if(0==arguments.length)return this.n[b];var c=arguments[0];\"innerHTML\"===b?a.a.Eb(this.n,c):this.n[b]=c};var b=a.a.e.J()+\"_\";a.v.n.prototype.data=function(c){if(1===arguments.length)return a.a.e.get(this.n,b+c);a.a.e.set(this.n,b+c,arguments[1])};var c=a.a.e.J();a.v.n.prototype.nodes=function(){var b=this.n;if(0==arguments.length)return(a.a.e.get(b,c)||{}).mb||(3===this.eb?b.content:4===this.eb?b:n);a.a.e.set(b,c,{mb:arguments[0]})};a.v.sa=function(a){this.n=\r\na};a.v.sa.prototype=new a.v.n;a.v.sa.prototype.text=function(){if(0==arguments.length){var b=a.a.e.get(this.n,c)||{};b.Jb===n&&b.mb&&(b.Jb=b.mb.innerHTML);return b.Jb}a.a.e.set(this.n,c,{Jb:arguments[0]})};a.b(\"templateSources\",a.v);a.b(\"templateSources.domElement\",a.v.n);a.b(\"templateSources.anonymousTemplate\",a.v.sa)})();(function(){function b(b,c,d){var e;for(c=a.f.nextSibling(c);b&&(e=b)!==c;)b=a.f.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],g=e.parentNode,h=\r\na.S.instance,n=h.preprocessNode;if(n){b(e,f,function(a,b){var c=a.previousSibling,d=n.call(h,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):(c.push(e,f),a.a.Ba(c,g))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.Ub(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.N.Cc(b,[d])});a.a.Ba(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,f,h,q){q=q||{};var p=(b&&d(b)||f||{}).ownerDocument,n=q.templateEngine||g;\r\na.Ib.Tc(f,n,p);f=n.renderTemplate(f,h,q,p);if(\"number\"!=typeof f.length||0<f.length&&\"number\"!=typeof f[0].nodeType)throw Error(\"Template engine must return an array of DOM nodes\");p=!1;switch(e){case \"replaceChildren\":a.f.fa(b,f);p=!0;break;case \"replaceNode\":a.a.uc(b,f);p=!0;break;case \"ignoreTargetNode\":break;default:throw Error(\"Unknown renderMode: \"+e);}p&&(c(f,h),q.afterRender&&a.l.w(q.afterRender,null,[f,h.$data]));return f}function f(b,c,d){return a.I(b)?b():\"function\"===typeof b?b(c,d):b}\r\nvar g;a.Fb=function(b){if(b!=n&&!(b instanceof a.P))throw Error(\"templateEngine must inherit from ko.templateEngine\");g=b};a.Cb=function(b,c,k,h,q){k=k||{};if((k.templateEngine||g)==n)throw Error(\"Set a template engine before calling renderTemplate\");q=q||\"replaceChildren\";if(h){var p=d(h);return a.B(function(){var g=c&&c instanceof a.R?c:new a.R(c,null,null,null,{exportDependencies:!0}),n=f(b,g.$data,g),g=e(h,q,n,g,k);\"replaceNode\"==q&&(h=g,p=d(h))},null,{ya:function(){return!p||!a.a.qb(p)},i:p&&\r\n\"replaceNode\"==q?p.parentNode:p})}return a.N.yb(function(d){a.Cb(b,c,k,d,\"replaceNode\")})};a.pd=function(b,d,g,h,q){function p(a,b){c(b,t);g.afterRender&&g.afterRender(b,a);t=null}function s(a,c){t=q.createChildContext(a,g.as,function(a){a.$index=c});var d=f(b,a,t);return e(null,\"ignoreTargetNode\",d,t,g)}var t;return a.B(function(){var b=a.a.c(d)||[];\"undefined\"==typeof b.length&&(b=[b]);b=a.a.Ma(b,function(b){return g.includeDestroyed||b===n||null===b||!a.a.c(b._destroy)});a.l.w(a.a.Db,null,[h,b,\r\ns,g,p])},null,{i:h})};var h=a.a.e.J();a.d.template={init:function(b,c){var d=a.a.c(c());if(\"string\"==typeof d||d.name)a.f.za(b);else{if(\"nodes\"in d){if(d=d.nodes||[],a.I(d))throw Error('The \"nodes\" option must be a plain, non-observable array.');}else d=a.f.childNodes(b);d=a.a.nc(d);(new a.v.sa(b)).nodes(d)}return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var g=c();c=a.a.c(g);d=!0;e=null;\"string\"==typeof c?c={}:(g=c.name,\"if\"in c&&(d=a.a.c(c[\"if\"])),d&&\"ifnot\"in c&&(d=!a.a.c(c.ifnot)));\r\n\"foreach\"in c?e=a.pd(g||b,d&&c.foreach||[],c,b,f):d?(f=\"data\"in c?f.ac(c.data,c.as):f,e=a.Cb(g||b,f,c,b)):a.f.za(b);f=e;(c=a.a.e.get(b,h))&&\"function\"==typeof c.k&&c.k();a.a.e.set(b,h,f&&f.ca()?f:n)}};a.h.va.template=function(b){b=a.h.Ab(b);return 1==b.length&&b[0].unknown||a.h.fd(b,\"name\")?null:\"This template engine does not support anonymous templates nested within its templates\"};a.f.aa.template=!0})();a.b(\"setTemplateEngine\",a.Fb);a.b(\"renderTemplate\",a.Cb);a.a.hc=function(a,c,d){if(a.length&&\r\nc.length){var e,f,g,h,l;for(e=f=0;(!d||e<d)&&(h=a[f]);++f){for(g=0;l=c[g];++g)if(h.value===l.value){h.moved=l.index;l.moved=h.index;c.splice(g,1);e=g=0;break}e+=g}}};a.a.lb=function(){function b(b,d,e,f,g){var h=Math.min,l=Math.max,m=[],k,n=b.length,q,p=d.length,s=p-n||1,t=n+p+1,v,u,x;for(k=0;k<=n;k++)for(u=v,m.push(v=[]),x=h(p,k+s),q=l(0,k-1);q<=x;q++)v[q]=q?k?b[k-1]===d[q-1]?u[q-1]:h(u[q]||t,v[q-1]||t)+1:q+1:k+1;h=[];l=[];s=[];k=n;for(q=p;k||q;)p=m[k][q]-1,q&&p===m[k][q-1]?l.push(h[h.length]={status:e,\r\nvalue:d[--q],index:q}):k&&p===m[k-1][q]?s.push(h[h.length]={status:f,value:b[--k],index:k}):(--q,--k,g.sparse||h.push({status:\"retained\",value:d[q]}));a.a.hc(s,l,!g.dontLimitMoves&&10*n);return h.reverse()}return function(a,d,e){e=\"boolean\"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<d.length?b(a,d,\"added\",\"deleted\",e):b(d,a,\"deleted\",\"added\",e)}}();a.b(\"utils.compareArrays\",a.a.lb);(function(){function b(b,c,d,h,l){var m=[],k=a.B(function(){var k=c(d,l,a.a.Ba(m,b))||[];0<\r\nm.length&&(a.a.uc(m,k),h&&a.l.w(h,null,[d,k,l]));m.length=0;a.a.ta(m,k)},null,{i:b,ya:function(){return!a.a.Tb(m)}});return{ea:m,B:k.ca()?k:n}}var c=a.a.e.J(),d=a.a.e.J();a.a.Db=function(e,f,g,h,l){function m(b,c){w=q[c];u!==c&&(D[b]=w);w.tb(u++);a.a.Ba(w.ea,e);t.push(w);z.push(w)}function k(b,c){if(b)for(var d=0,e=c.length;d<e;d++)c[d]&&a.a.r(c[d].ea,function(a){b(a,d,c[d].ka)})}f=f||[];h=h||{};var r=a.a.e.get(e,c)===n,q=a.a.e.get(e,c)||[],p=a.a.ib(q,function(a){return a.ka}),s=a.a.lb(p,f,h.dontLimitMoves),\r\nt=[],v=0,u=0,x=[],z=[];f=[];for(var D=[],p=[],w,C=0,B,E;B=s[C];C++)switch(E=B.moved,B.status){case \"deleted\":E===n&&(w=q[v],w.B&&(w.B.k(),w.B=n),a.a.Ba(w.ea,e).length&&(h.beforeRemove&&(t.push(w),z.push(w),w.ka===d?w=null:f[C]=w),w&&x.push.apply(x,w.ea)));v++;break;case \"retained\":m(C,v++);break;case \"added\":E!==n?m(C,E):(w={ka:B.value,tb:a.O(u++)},t.push(w),z.push(w),r||(p[C]=w))}a.a.e.set(e,c,t);k(h.beforeMove,D);a.a.r(x,h.beforeRemove?a.ba:a.removeNode);for(var C=0,r=a.f.firstChild(e),F;w=z[C];C++){w.ea||\r\na.a.extend(w,b(e,g,w.ka,l,w.tb));for(v=0;s=w.ea[v];r=s.nextSibling,F=s,v++)s!==r&&a.f.kc(e,s,F);!w.ad&&l&&(l(w.ka,w.ea,w.tb),w.ad=!0)}k(h.beforeRemove,f);for(C=0;C<f.length;++C)f[C]&&(f[C].ka=d);k(h.afterMove,D);k(h.afterAdd,p)}})();a.b(\"utils.setDomNodeChildrenFromArrayMapping\",a.a.Db);a.X=function(){this.allowTemplateRewriting=!1};a.X.prototype=new a.P;a.X.prototype.renderTemplateSource=function(b,c,d,e){if(c=(9>a.a.C?0:b.nodes)?b.nodes():null)return a.a.W(c.cloneNode(!0).childNodes);b=b.text();\r\nreturn a.a.na(b,e)};a.X.vb=new a.X;a.Fb(a.X.vb);a.b(\"nativeTemplateEngine\",a.X);(function(){a.xb=function(){var a=this.ed=function(){if(!u||!u.tmpl)return 0;try{if(0<=u.tmpl.tag.tmpl.open.toString().indexOf(\"__\"))return 2}catch(a){}return 1}();this.renderTemplateSource=function(b,e,f,g){g=g||t;f=f||{};if(2>a)throw Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");var h=b.data(\"precompiled\");h||(h=b.text()||\"\",h=u.template(null,\"{{ko_with $item.koBindingContext}}\"+\r\nh+\"{{/ko_with}}\"),b.data(\"precompiled\",h));b=[e.$data];e=u.extend({koBindingContext:e},f.templateOptions);e=u.tmpl(h,b,e);e.appendTo(g.createElement(\"div\"));u.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return\"{{ko_code ((function() { return \"+a+\" })()) }}\"};this.addTemplate=function(a,b){t.write(\"<script type='text/html' id='\"+a+\"'>\"+b+\"\\x3c/script>\")};0<a&&(u.tmpl.tag.ko_code={open:\"__.push($1 || '');\"},u.tmpl.tag.ko_with={open:\"with($1) {\",close:\"} \"})};a.xb.prototype=\r\nnew a.P;var b=new a.xb;0<b.ed&&a.Fb(b);a.b(\"jqueryTmplTemplateEngine\",a.xb)})()})})();})();\r\n","/*!\n * Quill Editor v1.2.4\n * https://quilljs.com/\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quill\"] = factory();\n\telse\n\t\troot[\"Quill\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 136);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = __webpack_require__(21);\nvar format_1 = __webpack_require__(22);\nvar leaf_1 = __webpack_require__(23);\nvar scroll_1 = __webpack_require__(59);\nvar inline_1 = __webpack_require__(58);\nvar block_1 = __webpack_require__(56);\nvar embed_1 = __webpack_require__(57);\nvar text_1 = __webpack_require__(60);\nvar attributor_1 = __webpack_require__(13);\nvar class_1 = __webpack_require__(31);\nvar style_1 = __webpack_require__(33);\nvar store_1 = __webpack_require__(32);\nvar Registry = __webpack_require__(1);\nvar Parchment = {\n    Scope: Registry.Scope,\n    create: Registry.create,\n    find: Registry.find,\n    query: Registry.query,\n    register: Registry.register,\n    Container: container_1.default,\n    Format: format_1.default,\n    Leaf: leaf_1.default,\n    Embed: embed_1.default,\n    Scroll: scroll_1.default,\n    Block: block_1.default,\n    Inline: inline_1.default,\n    Text: text_1.default,\n    Attributor: {\n        Attribute: attributor_1.default,\n        Class: class_1.default,\n        Style: style_1.default,\n        Store: store_1.default\n    }\n};\nexports.default = Parchment;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ParchmentError = (function (_super) {\n    __extends(ParchmentError, _super);\n    function ParchmentError(message) {\n        var _this = this;\n        message = '[Parchment] ' + message;\n        _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.name = _this.constructor.name;\n        return _this;\n    }\n    return ParchmentError;\n}(Error));\nexports.ParchmentError = ParchmentError;\nvar attributes = {};\nvar classes = {};\nvar tags = {};\nvar types = {};\nexports.DATA_KEY = '__blot';\nvar Scope;\n(function (Scope) {\n    Scope[Scope[\"TYPE\"] = 3] = \"TYPE\";\n    Scope[Scope[\"LEVEL\"] = 12] = \"LEVEL\";\n    Scope[Scope[\"ATTRIBUTE\"] = 13] = \"ATTRIBUTE\";\n    Scope[Scope[\"BLOT\"] = 14] = \"BLOT\";\n    Scope[Scope[\"INLINE\"] = 7] = \"INLINE\";\n    Scope[Scope[\"BLOCK\"] = 11] = \"BLOCK\";\n    Scope[Scope[\"BLOCK_BLOT\"] = 10] = \"BLOCK_BLOT\";\n    Scope[Scope[\"INLINE_BLOT\"] = 6] = \"INLINE_BLOT\";\n    Scope[Scope[\"BLOCK_ATTRIBUTE\"] = 9] = \"BLOCK_ATTRIBUTE\";\n    Scope[Scope[\"INLINE_ATTRIBUTE\"] = 5] = \"INLINE_ATTRIBUTE\";\n    Scope[Scope[\"ANY\"] = 15] = \"ANY\";\n})(Scope = exports.Scope || (exports.Scope = {}));\n;\nfunction create(input, value) {\n    var match = query(input);\n    if (match == null) {\n        throw new ParchmentError(\"Unable to create \" + input + \" blot\");\n    }\n    var BlotClass = match;\n    var node = (input instanceof Node || input['nodeType'] === Node.TEXT_NODE) ?\n        input :\n        BlotClass.create(value);\n    return new BlotClass(node, value);\n}\nexports.create = create;\nfunction find(node, bubble) {\n    if (bubble === void 0) { bubble = false; }\n    if (node == null)\n        return null;\n    if (node[exports.DATA_KEY] != null)\n        return node[exports.DATA_KEY].blot;\n    if (bubble)\n        return find(node.parentNode, bubble);\n    return null;\n}\nexports.find = find;\nfunction query(query, scope) {\n    if (scope === void 0) { scope = Scope.ANY; }\n    var match;\n    if (typeof query === 'string') {\n        match = types[query] || attributes[query];\n    }\n    else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {\n        match = types['text'];\n    }\n    else if (typeof query === 'number') {\n        if (query & Scope.LEVEL & Scope.BLOCK) {\n            match = types['block'];\n        }\n        else if (query & Scope.LEVEL & Scope.INLINE) {\n            match = types['inline'];\n        }\n    }\n    else if (query instanceof HTMLElement) {\n        var names = (query.getAttribute('class') || '').split(/\\s+/);\n        for (var i in names) {\n            match = classes[names[i]];\n            if (match)\n                break;\n        }\n        match = match || tags[query.tagName];\n    }\n    if (match == null)\n        return null;\n    if ((scope & Scope.LEVEL & match.scope) && (scope & Scope.TYPE & match.scope))\n        return match;\n    return null;\n}\nexports.query = query;\nfunction register() {\n    var Definitions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        Definitions[_i] = arguments[_i];\n    }\n    if (Definitions.length > 1) {\n        return Definitions.map(function (d) {\n            return register(d);\n        });\n    }\n    var Definition = Definitions[0];\n    if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {\n        throw new ParchmentError('Invalid definition');\n    }\n    else if (Definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n    }\n    types[Definition.blotName || Definition.attrName] = Definition;\n    if (typeof Definition.keyName === 'string') {\n        attributes[Definition.keyName] = Definition;\n    }\n    else {\n        if (Definition.className != null) {\n            classes[Definition.className] = Definition;\n        }\n        if (Definition.tagName != null) {\n            if (Array.isArray(Definition.tagName)) {\n                Definition.tagName = Definition.tagName.map(function (tagName) {\n                    return tagName.toUpperCase();\n                });\n            }\n            else {\n                Definition.tagName = Definition.tagName.toUpperCase();\n            }\n            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];\n            tagNames.forEach(function (tag) {\n                if (tags[tag] == null || Definition.className == null) {\n                    tags[tag] = Definition;\n                }\n            });\n        }\n    }\n    return Definition;\n}\nexports.register = register;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar diff = __webpack_require__(54);\nvar equal = __webpack_require__(11);\nvar extend = __webpack_require__(3);\nvar op = __webpack_require__(20);\n\n\nvar NULL_CHARACTER = String.fromCharCode(0);  // Placeholder char for embed in diff()\n\n\nvar Delta = function (ops) {\n  // Assume we are given a well formed ops\n  if (Array.isArray(ops)) {\n    this.ops = ops;\n  } else if (ops != null && Array.isArray(ops.ops)) {\n    this.ops = ops.ops;\n  } else {\n    this.ops = [];\n  }\n};\n\n\nDelta.prototype.insert = function (text, attributes) {\n  var newOp = {};\n  if (text.length === 0) return this;\n  newOp.insert = text;\n  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {\n    newOp.attributes = attributes;\n  }\n  return this.push(newOp);\n};\n\nDelta.prototype['delete'] = function (length) {\n  if (length <= 0) return this;\n  return this.push({ 'delete': length });\n};\n\nDelta.prototype.retain = function (length, attributes) {\n  if (length <= 0) return this;\n  var newOp = { retain: length };\n  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {\n    newOp.attributes = attributes;\n  }\n  return this.push(newOp);\n};\n\nDelta.prototype.push = function (newOp) {\n  var index = this.ops.length;\n  var lastOp = this.ops[index - 1];\n  newOp = extend(true, {}, newOp);\n  if (typeof lastOp === 'object') {\n    if (typeof newOp['delete'] === 'number' && typeof lastOp['delete'] === 'number') {\n      this.ops[index - 1] = { 'delete': lastOp['delete'] + newOp['delete'] };\n      return this;\n    }\n    // Since it does not matter if we insert before or after deleting at the same index,\n    // always prefer to insert first\n    if (typeof lastOp['delete'] === 'number' && newOp.insert != null) {\n      index -= 1;\n      lastOp = this.ops[index - 1];\n      if (typeof lastOp !== 'object') {\n        this.ops.unshift(newOp);\n        return this;\n      }\n    }\n    if (equal(newOp.attributes, lastOp.attributes)) {\n      if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {\n        this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes\n        return this;\n      } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {\n        this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes\n        return this;\n      }\n    }\n  }\n  if (index === this.ops.length) {\n    this.ops.push(newOp);\n  } else {\n    this.ops.splice(index, 0, newOp);\n  }\n  return this;\n};\n\nDelta.prototype.filter = function (predicate) {\n  return this.ops.filter(predicate);\n};\n\nDelta.prototype.forEach = function (predicate) {\n  this.ops.forEach(predicate);\n};\n\nDelta.prototype.map = function (predicate) {\n  return this.ops.map(predicate);\n};\n\nDelta.prototype.partition = function (predicate) {\n  var passed = [], failed = [];\n  this.forEach(function(op) {\n    var target = predicate(op) ? passed : failed;\n    target.push(op);\n  });\n  return [passed, failed];\n};\n\nDelta.prototype.reduce = function (predicate, initial) {\n  return this.ops.reduce(predicate, initial);\n};\n\nDelta.prototype.chop = function () {\n  var lastOp = this.ops[this.ops.length - 1];\n  if (lastOp && lastOp.retain && !lastOp.attributes) {\n    this.ops.pop();\n  }\n  return this;\n};\n\nDelta.prototype.length = function () {\n  return this.reduce(function (length, elem) {\n    return length + op.length(elem);\n  }, 0);\n};\n\nDelta.prototype.slice = function (start, end) {\n  start = start || 0;\n  if (typeof end !== 'number') end = Infinity;\n  var ops = [];\n  var iter = op.iterator(this.ops);\n  var index = 0;\n  while (index < end && iter.hasNext()) {\n    var nextOp;\n    if (index < start) {\n      nextOp = iter.next(start - index);\n    } else {\n      nextOp = iter.next(end - index);\n      ops.push(nextOp);\n    }\n    index += op.length(nextOp);\n  }\n  return new Delta(ops);\n};\n\n\nDelta.prototype.compose = function (other) {\n  var thisIter = op.iterator(this.ops);\n  var otherIter = op.iterator(other.ops);\n  var delta = new Delta();\n  while (thisIter.hasNext() || otherIter.hasNext()) {\n    if (otherIter.peekType() === 'insert') {\n      delta.push(otherIter.next());\n    } else if (thisIter.peekType() === 'delete') {\n      delta.push(thisIter.next());\n    } else {\n      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n      var thisOp = thisIter.next(length);\n      var otherOp = otherIter.next(length);\n      if (typeof otherOp.retain === 'number') {\n        var newOp = {};\n        if (typeof thisOp.retain === 'number') {\n          newOp.retain = length;\n        } else {\n          newOp.insert = thisOp.insert;\n        }\n        // Preserve null when composing with a retain, otherwise remove it for inserts\n        var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');\n        if (attributes) newOp.attributes = attributes;\n        delta.push(newOp);\n      // Other op should be delete, we could be an insert or retain\n      // Insert + delete cancels out\n      } else if (typeof otherOp['delete'] === 'number' && typeof thisOp.retain === 'number') {\n        delta.push(otherOp);\n      }\n    }\n  }\n  return delta.chop();\n};\n\nDelta.prototype.concat = function (other) {\n  var delta = new Delta(this.ops.slice());\n  if (other.ops.length > 0) {\n    delta.push(other.ops[0]);\n    delta.ops = delta.ops.concat(other.ops.slice(1));\n  }\n  return delta;\n};\n\nDelta.prototype.diff = function (other, index) {\n  if (this.ops === other.ops) {\n    return new Delta();\n  }\n  var strings = [this, other].map(function (delta) {\n    return delta.map(function (op) {\n      if (op.insert != null) {\n        return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n      }\n      var prep = (delta === other) ? 'on' : 'with';\n      throw new Error('diff() called ' + prep + ' non-document');\n    }).join('');\n  });\n  var delta = new Delta();\n  var diffResult = diff(strings[0], strings[1], index);\n  var thisIter = op.iterator(this.ops);\n  var otherIter = op.iterator(other.ops);\n  diffResult.forEach(function (component) {\n    var length = component[1].length;\n    while (length > 0) {\n      var opLength = 0;\n      switch (component[0]) {\n        case diff.INSERT:\n          opLength = Math.min(otherIter.peekLength(), length);\n          delta.push(otherIter.next(opLength));\n          break;\n        case diff.DELETE:\n          opLength = Math.min(length, thisIter.peekLength());\n          thisIter.next(opLength);\n          delta['delete'](opLength);\n          break;\n        case diff.EQUAL:\n          opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n          var thisOp = thisIter.next(opLength);\n          var otherOp = otherIter.next(opLength);\n          if (equal(thisOp.insert, otherOp.insert)) {\n            delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));\n          } else {\n            delta.push(otherOp)['delete'](opLength);\n          }\n          break;\n      }\n      length -= opLength;\n    }\n  });\n  return delta.chop();\n};\n\nDelta.prototype.eachLine = function (predicate, newline) {\n  newline = newline || '\\n';\n  var iter = op.iterator(this.ops);\n  var line = new Delta();\n  var i = 0;\n  while (iter.hasNext()) {\n    if (iter.peekType() !== 'insert') return;\n    var thisOp = iter.peek();\n    var start = op.length(thisOp) - iter.peekLength();\n    var index = typeof thisOp.insert === 'string' ?\n      thisOp.insert.indexOf(newline, start) - start : -1;\n    if (index < 0) {\n      line.push(iter.next());\n    } else if (index > 0) {\n      line.push(iter.next(index));\n    } else {\n      if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n        return;\n      }\n      i += 1;\n      line = new Delta();\n    }\n  }\n  if (line.length() > 0) {\n    predicate(line, {}, i);\n  }\n};\n\nDelta.prototype.transform = function (other, priority) {\n  priority = !!priority;\n  if (typeof other === 'number') {\n    return this.transformPosition(other, priority);\n  }\n  var thisIter = op.iterator(this.ops);\n  var otherIter = op.iterator(other.ops);\n  var delta = new Delta();\n  while (thisIter.hasNext() || otherIter.hasNext()) {\n    if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {\n      delta.retain(op.length(thisIter.next()));\n    } else if (otherIter.peekType() === 'insert') {\n      delta.push(otherIter.next());\n    } else {\n      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n      var thisOp = thisIter.next(length);\n      var otherOp = otherIter.next(length);\n      if (thisOp['delete']) {\n        // Our delete either makes their delete redundant or removes their retain\n        continue;\n      } else if (otherOp['delete']) {\n        delta.push(otherOp);\n      } else {\n        // We retain either their retain or insert\n        delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));\n      }\n    }\n  }\n  return delta.chop();\n};\n\nDelta.prototype.transformPosition = function (index, priority) {\n  priority = !!priority;\n  var thisIter = op.iterator(this.ops);\n  var offset = 0;\n  while (thisIter.hasNext() && offset <= index) {\n    var length = thisIter.peekLength();\n    var nextType = thisIter.peekType();\n    thisIter.next();\n    if (nextType === 'delete') {\n      index -= Math.min(length, index - offset);\n      continue;\n    } else if (nextType === 'insert' && (offset < index || !priority)) {\n      index += length;\n    }\n    offset += length;\n  }\n  return index;\n};\n\n\nmodule.exports = Delta;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.BlockEmbed = exports.bubbleFormats = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _break = __webpack_require__(17);\n\nvar _break2 = _interopRequireDefault(_break);\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _text = __webpack_require__(12);\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar NEWLINE_LENGTH = 1;\n\nvar BlockEmbed = function (_Embed) {\n  _inherits(BlockEmbed, _Embed);\n\n  function BlockEmbed() {\n    _classCallCheck(this, BlockEmbed);\n\n    return _possibleConstructorReturn(this, (BlockEmbed.__proto__ || Object.getPrototypeOf(BlockEmbed)).apply(this, arguments));\n  }\n\n  _createClass(BlockEmbed, [{\n    key: 'attach',\n    value: function attach() {\n      _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'attach', this).call(this);\n      this.attributes = new _parchment2.default.Attributor.Store(this.domNode);\n    }\n  }, {\n    key: 'delta',\n    value: function delta() {\n      return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));\n    }\n  }, {\n    key: 'format',\n    value: function format(name, value) {\n      var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);\n      if (attribute != null) {\n        this.attributes.attribute(attribute, value);\n      }\n    }\n  }, {\n    key: 'formatAt',\n    value: function formatAt(index, length, name, value) {\n      this.format(name, value);\n    }\n  }, {\n    key: 'insertAt',\n    value: function insertAt(index, value, def) {\n      if (typeof value === 'string' && value.endsWith('\\n')) {\n        var block = _parchment2.default.create(Block.blotName);\n        this.parent.insertBefore(block, index === 0 ? this : this.next);\n        block.insertAt(0, value.slice(0, -1));\n      } else {\n        _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'insertAt', this).call(this, index, value, def);\n      }\n    }\n  }]);\n\n  return BlockEmbed;\n}(_embed2.default);\n\nBlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\n\nvar Block = function (_Parchment$Block) {\n  _inherits(Block, _Parchment$Block);\n\n  function Block(domNode) {\n    _classCallCheck(this, Block);\n\n    var _this2 = _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).call(this, domNode));\n\n    _this2.cache = {};\n    return _this2;\n  }\n\n  _createClass(Block, [{\n    key: 'delta',\n    value: function delta() {\n      if (this.cache.delta == null) {\n        this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function (delta, leaf) {\n          if (leaf.length() === 0) {\n            return delta;\n          } else {\n            return delta.insert(leaf.value(), bubbleFormats(leaf));\n          }\n        }, new _quillDelta2.default()).insert('\\n', bubbleFormats(this));\n      }\n      return this.cache.delta;\n    }\n  }, {\n    key: 'deleteAt',\n    value: function deleteAt(index, length) {\n      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'deleteAt', this).call(this, index, length);\n      this.cache = {};\n    }\n  }, {\n    key: 'formatAt',\n    value: function formatAt(index, length, name, value) {\n      if (length <= 0) return;\n      if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {\n        if (index + length === this.length()) {\n          this.format(name, value);\n        }\n      } else {\n        _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'formatAt', this).call(this, index, Math.min(length, this.length() - index - 1), name, value);\n      }\n      this.cache = {};\n    }\n  }, {\n    key: 'insertAt',\n    value: function insertAt(index, value, def) {\n      if (def != null) return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, index, value, def);\n      if (value.length === 0) return;\n      var lines = value.split('\\n');\n      var text = lines.shift();\n      if (text.length > 0) {\n        if (index < this.length() - 1 || this.children.tail == null) {\n          _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, Math.min(index, this.length() - 1), text);\n        } else {\n          this.children.tail.insertAt(this.children.tail.length(), text);\n        }\n        this.cache = {};\n      }\n      var block = this;\n      lines.reduce(function (index, line) {\n        block = block.split(index, true);\n        block.insertAt(0, line);\n        return line.length;\n      }, index + text.length);\n    }\n  }, {\n    key: 'insertBefore',\n    value: function insertBefore(blot, ref) {\n      var head = this.children.head;\n      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertBefore', this).call(this, blot, ref);\n      if (head instanceof _break2.default) {\n        head.remove();\n      }\n      this.cache = {};\n    }\n  }, {\n    key: 'length',\n    value: function length() {\n      if (this.cache.length == null) {\n        this.cache.length = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'length', this).call(this) + NEWLINE_LENGTH;\n      }\n      return this.cache.length;\n    }\n  }, {\n    key: 'moveChildren',\n    value: function moveChildren(target, ref) {\n      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'moveChildren', this).call(this, target, ref);\n      this.cache = {};\n    }\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'optimize', this).call(this);\n      this.cache = {};\n    }\n  }, {\n    key: 'path',\n    value: function path(index) {\n      return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'path', this).call(this, index, true);\n    }\n  }, {\n    key: 'removeChild',\n    value: function removeChild(child) {\n      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'removeChild', this).call(this, child);\n      this.cache = {};\n    }\n  }, {\n    key: 'split',\n    value: function split(index) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n        var clone = this.clone();\n        if (index === 0) {\n          this.parent.insertBefore(clone, this);\n          return this;\n        } else {\n          this.parent.insertBefore(clone, this.next);\n          return clone;\n        }\n      } else {\n        var next = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'split', this).call(this, index, force);\n        this.cache = {};\n        return next;\n      }\n    }\n  }]);\n\n  return Block;\n}(_parchment2.default.Block);\n\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = 'break';\nBlock.allowedChildren = [_inline2.default, _embed2.default, _text2.default];\n\nfunction bubbleFormats(blot) {\n  var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (blot == null) return formats;\n  if (typeof blot.formats === 'function') {\n    formats = (0, _extend2.default)(formats, blot.formats());\n  }\n  if (blot.parent == null || blot.parent.blotName == 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats);\n}\n\nexports.bubbleFormats = bubbleFormats;\nexports.BlockEmbed = BlockEmbed;\nexports.default = Block;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _eventemitter = __webpack_require__(53);\n\nvar _eventemitter2 = _interopRequireDefault(_eventemitter);\n\nvar _logger = __webpack_require__(10);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar debug = (0, _logger2.default)('quill:events');\n\nvar Emitter = function (_EventEmitter) {\n  _inherits(Emitter, _EventEmitter);\n\n  function Emitter() {\n    _classCallCheck(this, Emitter);\n\n    var _this = _possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));\n\n    _this.on('error', debug.error);\n    return _this;\n  }\n\n  _createClass(Emitter, [{\n    key: 'emit',\n    value: function emit() {\n      debug.log.apply(debug, arguments);\n      _get(Emitter.prototype.__proto__ || Object.getPrototypeOf(Emitter.prototype), 'emit', this).apply(this, arguments);\n    }\n  }]);\n\n  return Emitter;\n}(_eventemitter2.default);\n\nEmitter.events = {\n  EDITOR_CHANGE: 'editor-change',\n  SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n  SCROLL_OPTIMIZE: 'scroll-optimize',\n  SCROLL_UPDATE: 'scroll-update',\n  SELECTION_CHANGE: 'selection-change',\n  TEXT_CHANGE: 'text-change'\n};\nEmitter.sources = {\n  API: 'api',\n  SILENT: 'silent',\n  USER: 'user'\n};\n\nexports.default = Emitter;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.overload = exports.expandConfig = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(43);\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _editor = __webpack_require__(14);\n\nvar _editor2 = _interopRequireDefault(_editor);\n\nvar _emitter3 = __webpack_require__(5);\n\nvar _emitter4 = _interopRequireDefault(_emitter3);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _selection = __webpack_require__(15);\n\nvar _selection2 = _interopRequireDefault(_selection);\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _logger = __webpack_require__(10);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _theme = __webpack_require__(29);\n\nvar _theme2 = _interopRequireDefault(_theme);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar debug = (0, _logger2.default)('quill');\n\nvar Quill = function () {\n  _createClass(Quill, null, [{\n    key: 'debug',\n    value: function debug(limit) {\n      if (limit === true) {\n        limit = 'log';\n      }\n      _logger2.default.level(limit);\n    }\n  }, {\n    key: 'find',\n    value: function find(node) {\n      return node.__quill || _parchment2.default.find(node);\n    }\n  }, {\n    key: 'import',\n    value: function _import(name) {\n      if (this.imports[name] == null) {\n        debug.error('Cannot import ' + name + '. Are you sure it was registered?');\n      }\n      return this.imports[name];\n    }\n  }, {\n    key: 'register',\n    value: function register(path, target) {\n      var _this = this;\n\n      var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (typeof path !== 'string') {\n        var name = path.attrName || path.blotName;\n        if (typeof name === 'string') {\n          // register(Blot | Attributor, overwrite)\n          this.register('formats/' + name, path, target);\n        } else {\n          Object.keys(path).forEach(function (key) {\n            _this.register(key, path[key], target);\n          });\n        }\n      } else {\n        if (this.imports[path] != null && !overwrite) {\n          debug.warn('Overwriting ' + path + ' with', target);\n        }\n        this.imports[path] = target;\n        if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {\n          _parchment2.default.register(target);\n        } else if (path.startsWith('modules') && typeof target.register === 'function') {\n          target.register();\n        }\n      }\n    }\n  }]);\n\n  function Quill(container) {\n    var _this2 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Quill);\n\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      return debug.error('Invalid Quill container', container);\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    var html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    this.container.__quill = this;\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.scrollingContainer = this.options.scrollingContainer || this.root;\n    this.emitter = new _emitter4.default();\n    this.scroll = _parchment2.default.create(this.root, {\n      emitter: this.emitter,\n      scrollingContainer: this.scrollingContainer,\n      whitelist: this.options.formats\n    });\n    this.editor = new _editor2.default(this.scroll);\n    this.selection = new _selection2.default(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options);\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.theme.init();\n    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type) {\n      if (type === _emitter4.default.events.TEXT_CHANGE) {\n        _this2.root.classList.toggle('ql-blank', _this2.editor.isBlank());\n      }\n    });\n    this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function (source, mutations) {\n      var range = _this2.selection.lastRange;\n      var index = range && range.length === 0 ? range.index : undefined;\n      modify.call(_this2, function () {\n        return _this2.editor.update(null, mutations, index);\n      }, source);\n    });\n    var contents = this.clipboard.convert('<div class=\\'ql-editor\\' style=\"white-space: normal;\">' + html + '<p><br></p></div>');\n    this.setContents(contents);\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n  }\n\n  _createClass(Quill, [{\n    key: 'addContainer',\n    value: function addContainer(container) {\n      var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (typeof container === 'string') {\n        var className = container;\n        container = document.createElement('div');\n        container.classList.add(className);\n      }\n      this.container.insertBefore(container, refNode);\n      return container;\n    }\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this.selection.setRange(null);\n    }\n  }, {\n    key: 'deleteText',\n    value: function deleteText(index, length, source) {\n      var _this3 = this;\n\n      var _overload = overload(index, length, source);\n\n      var _overload2 = _slicedToArray(_overload, 4);\n\n      index = _overload2[0];\n      length = _overload2[1];\n      source = _overload2[3];\n\n      return modify.call(this, function () {\n        return _this3.editor.deleteText(index, length);\n      }, source, index, -1 * length);\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.enable(false);\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.scroll.enable(enabled);\n      this.container.classList.toggle('ql-disabled', !enabled);\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      var scrollTop = this.scrollingContainer.scrollTop;\n      this.selection.focus();\n      this.scrollingContainer.scrollTop = scrollTop;\n      this.selection.scrollIntoView();\n    }\n  }, {\n    key: 'format',\n    value: function format(name, value) {\n      var _this4 = this;\n\n      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;\n\n      return modify.call(this, function () {\n        var range = _this4.getSelection(true);\n        var change = new _quillDelta2.default();\n        if (range == null) {\n          return change;\n        } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {\n          change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));\n        } else if (range.length === 0) {\n          _this4.selection.format(name, value);\n          return change;\n        } else {\n          change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));\n        }\n        _this4.setSelection(range, _emitter4.default.sources.SILENT);\n        return change;\n      }, source);\n    }\n  }, {\n    key: 'formatLine',\n    value: function formatLine(index, length, name, value, source) {\n      var _this5 = this;\n\n      var formats = void 0;\n\n      var _overload3 = overload(index, length, name, value, source);\n\n      var _overload4 = _slicedToArray(_overload3, 4);\n\n      index = _overload4[0];\n      length = _overload4[1];\n      formats = _overload4[2];\n      source = _overload4[3];\n\n      return modify.call(this, function () {\n        return _this5.editor.formatLine(index, length, formats);\n      }, source, index, 0);\n    }\n  }, {\n    key: 'formatText',\n    value: function formatText(index, length, name, value, source) {\n      var _this6 = this;\n\n      var formats = void 0;\n\n      var _overload5 = overload(index, length, name, value, source);\n\n      var _overload6 = _slicedToArray(_overload5, 4);\n\n      index = _overload6[0];\n      length = _overload6[1];\n      formats = _overload6[2];\n      source = _overload6[3];\n\n      return modify.call(this, function () {\n        return _this6.editor.formatText(index, length, formats);\n      }, source, index, 0);\n    }\n  }, {\n    key: 'getBounds',\n    value: function getBounds(index) {\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var bounds = void 0;\n      if (typeof index === 'number') {\n        bounds = this.selection.getBounds(index, length);\n      } else {\n        bounds = this.selection.getBounds(index.index, index.length);\n      }\n      var containerBounds = this.container.getBoundingClientRect();\n      return {\n        bottom: bounds.bottom - containerBounds.top,\n        height: bounds.height,\n        left: bounds.left - containerBounds.left,\n        right: bounds.right - containerBounds.left,\n        top: bounds.top - containerBounds.top,\n        width: bounds.width\n      };\n    }\n  }, {\n    key: 'getContents',\n    value: function getContents() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;\n\n      var _overload7 = overload(index, length);\n\n      var _overload8 = _slicedToArray(_overload7, 2);\n\n      index = _overload8[0];\n      length = _overload8[1];\n\n      return this.editor.getContents(index, length);\n    }\n  }, {\n    key: 'getFormat',\n    value: function getFormat() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection();\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (typeof index === 'number') {\n        return this.editor.getFormat(index, length);\n      } else {\n        return this.editor.getFormat(index.index, index.length);\n      }\n    }\n  }, {\n    key: 'getIndex',\n    value: function getIndex(blot) {\n      return blot.offset(this.scroll);\n    }\n  }, {\n    key: 'getLength',\n    value: function getLength() {\n      return this.scroll.length();\n    }\n  }, {\n    key: 'getLeaf',\n    value: function getLeaf(index) {\n      return this.scroll.leaf(index);\n    }\n  }, {\n    key: 'getLine',\n    value: function getLine(index) {\n      return this.scroll.line(index);\n    }\n  }, {\n    key: 'getLines',\n    value: function getLines() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n\n      if (typeof index !== 'number') {\n        return this.scroll.lines(index.index, index.length);\n      } else {\n        return this.scroll.lines(index, length);\n      }\n    }\n  }, {\n    key: 'getModule',\n    value: function getModule(name) {\n      return this.theme.modules[name];\n    }\n  }, {\n    key: 'getSelection',\n    value: function getSelection() {\n      var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (focus) this.focus();\n      this.update(); // Make sure we access getRange with editor in consistent state\n      return this.selection.getRange()[0];\n    }\n  }, {\n    key: 'getText',\n    value: function getText() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;\n\n      var _overload9 = overload(index, length);\n\n      var _overload10 = _slicedToArray(_overload9, 2);\n\n      index = _overload10[0];\n      length = _overload10[1];\n\n      return this.editor.getText(index, length);\n    }\n  }, {\n    key: 'hasFocus',\n    value: function hasFocus() {\n      return this.selection.hasFocus();\n    }\n  }, {\n    key: 'insertEmbed',\n    value: function insertEmbed(index, embed, value) {\n      var _this7 = this;\n\n      var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;\n\n      return modify.call(this, function () {\n        return _this7.editor.insertEmbed(index, embed, value);\n      }, source, index);\n    }\n  }, {\n    key: 'insertText',\n    value: function insertText(index, text, name, value, source) {\n      var _this8 = this;\n\n      var formats = void 0;\n\n      var _overload11 = overload(index, 0, name, value, source);\n\n      var _overload12 = _slicedToArray(_overload11, 4);\n\n      index = _overload12[0];\n      formats = _overload12[2];\n      source = _overload12[3];\n\n      return modify.call(this, function () {\n        return _this8.editor.insertText(index, text, formats);\n      }, source, index, text.length);\n    }\n  }, {\n    key: 'isEnabled',\n    value: function isEnabled() {\n      return !this.container.classList.contains('ql-disabled');\n    }\n  }, {\n    key: 'off',\n    value: function off() {\n      return this.emitter.off.apply(this.emitter, arguments);\n    }\n  }, {\n    key: 'on',\n    value: function on() {\n      return this.emitter.on.apply(this.emitter, arguments);\n    }\n  }, {\n    key: 'once',\n    value: function once() {\n      return this.emitter.once.apply(this.emitter, arguments);\n    }\n  }, {\n    key: 'pasteHTML',\n    value: function pasteHTML(index, html, source) {\n      this.clipboard.dangerouslyPasteHTML(index, html, source);\n    }\n  }, {\n    key: 'removeFormat',\n    value: function removeFormat(index, length, source) {\n      var _this9 = this;\n\n      var _overload13 = overload(index, length, source);\n\n      var _overload14 = _slicedToArray(_overload13, 4);\n\n      index = _overload14[0];\n      length = _overload14[1];\n      source = _overload14[3];\n\n      return modify.call(this, function () {\n        return _this9.editor.removeFormat(index, length);\n      }, source, index);\n    }\n  }, {\n    key: 'setContents',\n    value: function setContents(delta) {\n      var _this10 = this;\n\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;\n\n      return modify.call(this, function () {\n        delta = new _quillDelta2.default(delta);\n        var length = _this10.getLength();\n        var deleted = _this10.editor.deleteText(0, length);\n        var applied = _this10.editor.applyDelta(delta);\n        var lastOp = applied.ops[applied.ops.length - 1];\n        if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\\n') {\n          _this10.editor.deleteText(_this10.getLength() - 1, 1);\n          applied.delete(1);\n        }\n        var ret = deleted.compose(applied);\n        return ret;\n      }, source);\n    }\n  }, {\n    key: 'setSelection',\n    value: function setSelection(index, length, source) {\n      if (index == null) {\n        this.selection.setRange(null, length || Quill.sources.API);\n      } else {\n        var _overload15 = overload(index, length, source);\n\n        var _overload16 = _slicedToArray(_overload15, 4);\n\n        index = _overload16[0];\n        length = _overload16[1];\n        source = _overload16[3];\n\n        this.selection.setRange(new _selection.Range(index, length), source);\n      }\n      if (source !== _emitter4.default.sources.SILENT) {\n        this.selection.scrollIntoView();\n      }\n    }\n  }, {\n    key: 'setText',\n    value: function setText(text) {\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;\n\n      var delta = new _quillDelta2.default().insert(text);\n      return this.setContents(delta, source);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;\n\n      var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n      this.selection.update(source);\n      return change;\n    }\n  }, {\n    key: 'updateContents',\n    value: function updateContents(delta) {\n      var _this11 = this;\n\n      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;\n\n      return modify.call(this, function () {\n        delta = new _quillDelta2.default(delta);\n        return _this11.editor.applyDelta(delta, source);\n      }, source, true);\n    }\n  }]);\n\n  return Quill;\n}();\n\nQuill.DEFAULTS = {\n  bounds: null,\n  formats: null,\n  modules: {},\n  placeholder: '',\n  readOnly: false,\n  scrollingContainer: null,\n  strict: true,\n  theme: 'default'\n};\nQuill.events = _emitter4.default.events;\nQuill.sources = _emitter4.default.sources;\n// eslint-disable-next-line no-undef\nQuill.version =  false ? 'dev' : \"1.2.4\";\n\nQuill.imports = {\n  'delta': _quillDelta2.default,\n  'parchment': _parchment2.default,\n  'core/module': _module2.default,\n  'core/theme': _theme2.default\n};\n\nfunction expandConfig(container, userConfig) {\n  userConfig = (0, _extend2.default)(true, {\n    container: container,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true\n    }\n  }, userConfig);\n  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {\n    userConfig.theme = _theme2.default;\n  } else {\n    userConfig.theme = Quill.import('themes/' + userConfig.theme);\n    if (userConfig.theme == null) {\n      throw new Error('Invalid theme ' + userConfig.theme + '. Did you register it?');\n    }\n  }\n  var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);\n  [themeConfig, userConfig].forEach(function (config) {\n    config.modules = config.modules || {};\n    Object.keys(config.modules).forEach(function (module) {\n      if (config.modules[module] === true) {\n        config.modules[module] = {};\n      }\n    });\n  });\n  var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));\n  var moduleConfig = moduleNames.reduce(function (config, name) {\n    var moduleClass = Quill.import('modules/' + name);\n    if (moduleClass == null) {\n      debug.error('Cannot load ' + name + ' module. Are you sure you registered it?');\n    } else {\n      config[name] = moduleClass.DEFAULTS || {};\n    }\n    return config;\n  }, {});\n  // Special case toolbar shorthand\n  if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {\n    userConfig.modules.toolbar = {\n      container: userConfig.modules.toolbar\n    };\n  }\n  userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);\n  ['bounds', 'container', 'scrollingContainer'].forEach(function (key) {\n    if (typeof userConfig[key] === 'string') {\n      userConfig[key] = document.querySelector(userConfig[key]);\n    }\n  });\n  userConfig.modules = Object.keys(userConfig.modules).reduce(function (config, name) {\n    if (userConfig.modules[name]) {\n      config[name] = userConfig.modules[name];\n    }\n    return config;\n  }, {});\n  return userConfig;\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(modifier, source, index, shift) {\n  if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {\n    return new _quillDelta2.default();\n  }\n  var range = index == null ? null : this.getSelection();\n  var oldDelta = this.editor.delta;\n  var change = modifier();\n  if (range != null) {\n    if (index === true) index = range.index;\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, _emitter4.default.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    var _emitter;\n\n    var args = [_emitter4.default.events.TEXT_CHANGE, change, oldDelta, source];\n    (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));\n    if (source !== _emitter4.default.sources.SILENT) {\n      var _emitter2;\n\n      (_emitter2 = this.emitter).emit.apply(_emitter2, args);\n    }\n  }\n  return change;\n}\n\nfunction overload(index, length, name, value, source) {\n  var formats = {};\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      source = value, value = name, name = length, length = index.length, index = index.index;\n    } else {\n      length = index.length, index = index.index;\n    }\n  } else if (typeof length !== 'number') {\n    source = value, value = name, name = length, length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {\n    formats = name;\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || _emitter4.default.sources.API;\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range, index, length, source) {\n  if (range == null) return null;\n  var start = void 0,\n      end = void 0;\n  if (index instanceof _quillDelta2.default) {\n    var _map = [range.index, range.index + range.length].map(function (pos) {\n      return index.transformPosition(pos, source === _emitter4.default.sources.USER);\n    });\n\n    var _map2 = _slicedToArray(_map, 2);\n\n    start = _map2[0];\n    end = _map2[1];\n  } else {\n    var _map3 = [range.index, range.index + range.length].map(function (pos) {\n      if (pos < index || pos === index && source !== _emitter4.default.sources.USER) return pos;\n      if (length >= 0) {\n        return pos + length;\n      } else {\n        return Math.max(index, pos + length);\n      }\n    });\n\n    var _map4 = _slicedToArray(_map3, 2);\n\n    start = _map4[0];\n    end = _map4[1];\n  }\n  return new _selection.Range(start, end - start);\n}\n\nexports.expandConfig = expandConfig;\nexports.overload = overload;\nexports.default = Quill;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Embed = function (_Parchment$Embed) {\n  _inherits(Embed, _Parchment$Embed);\n\n  function Embed() {\n    _classCallCheck(this, Embed);\n\n    return _possibleConstructorReturn(this, (Embed.__proto__ || Object.getPrototypeOf(Embed)).apply(this, arguments));\n  }\n\n  return Embed;\n}(_parchment2.default.Embed);\n\nexports.default = Embed;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nvar _text = __webpack_require__(12);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Inline = function (_Parchment$Inline) {\n  _inherits(Inline, _Parchment$Inline);\n\n  function Inline() {\n    _classCallCheck(this, Inline);\n\n    return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));\n  }\n\n  _createClass(Inline, [{\n    key: 'formatAt',\n    value: function formatAt(index, length, name, value) {\n      if (Inline.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {\n        var blot = this.isolate(index, length);\n        if (value) {\n          blot.wrap(name, value);\n        }\n      } else {\n        _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'formatAt', this).call(this, index, length, name, value);\n      }\n    }\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'optimize', this).call(this);\n      if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {\n        var parent = this.parent.isolate(this.offset(), this.length());\n        this.moveChildren(parent);\n        parent.wrap(this);\n      }\n    }\n  }], [{\n    key: 'compare',\n    value: function compare(self, other) {\n      var selfIndex = Inline.order.indexOf(self);\n      var otherIndex = Inline.order.indexOf(other);\n      if (selfIndex >= 0 || otherIndex >= 0) {\n        return selfIndex - otherIndex;\n      } else if (self === other) {\n        return 0;\n      } else if (self < other) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n  }]);\n\n  return Inline;\n}(_parchment2.default.Inline);\n\nInline.allowedChildren = [Inline, _embed2.default, _text2.default];\n// Lower index means deeper in the DOM tree, since not found (-1) is for embeds\nInline.order = ['cursor', 'inline', // Must be lower\n'code', 'underline', 'strike', 'italic', 'bold', 'script', 'link' // Must be higher\n];\n\nexports.default = Inline;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Module = function Module(quill) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, Module);\n\n  this.quill = quill;\n  this.options = options;\n};\n\nModule.DEFAULTS = {};\n\nexports.default = Module;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar levels = ['error', 'warn', 'log', 'info'];\nvar level = 'warn';\n\nfunction debug(method) {\n  if (levels.indexOf(method) <= levels.indexOf(level)) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    console[method].apply(console, args); // eslint-disable-line no-console\n  }\n}\n\nfunction namespace(ns) {\n  return levels.reduce(function (logger, method) {\n    logger[method] = debug.bind(console, method, ns);\n    return logger;\n  }, {});\n}\n\ndebug.level = namespace.level = function (newLevel) {\n  level = newLevel;\n};\n\nexports.default = namespace;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar pSlice = Array.prototype.slice;\nvar objectKeys = __webpack_require__(52);\nvar isArguments = __webpack_require__(51);\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TextBlot = function (_Parchment$Text) {\n  _inherits(TextBlot, _Parchment$Text);\n\n  function TextBlot() {\n    _classCallCheck(this, TextBlot);\n\n    return _possibleConstructorReturn(this, (TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)).apply(this, arguments));\n  }\n\n  return TextBlot;\n}(_parchment2.default.Text);\n\nexports.default = TextBlot;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Registry = __webpack_require__(1);\nvar Attributor = (function () {\n    function Attributor(attrName, keyName, options) {\n        if (options === void 0) { options = {}; }\n        this.attrName = attrName;\n        this.keyName = keyName;\n        var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;\n        if (options.scope != null) {\n            // Ignore type bits, force attribute bit\n            this.scope = (options.scope & Registry.Scope.LEVEL) | attributeBit;\n        }\n        else {\n            this.scope = Registry.Scope.ATTRIBUTE;\n        }\n        if (options.whitelist != null)\n            this.whitelist = options.whitelist;\n    }\n    Attributor.keys = function (node) {\n        return [].map.call(node.attributes, function (item) {\n            return item.name;\n        });\n    };\n    Attributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        node.setAttribute(this.keyName, value);\n        return true;\n    };\n    Attributor.prototype.canAdd = function (node, value) {\n        var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));\n        if (match != null && (this.whitelist == null || this.whitelist.indexOf(value) > -1)) {\n            return true;\n        }\n        return false;\n    };\n    Attributor.prototype.remove = function (node) {\n        node.removeAttribute(this.keyName);\n    };\n    Attributor.prototype.value = function (node) {\n        var value = node.getAttribute(this.keyName);\n        return this.canAdd(node, value) ? value : '';\n    };\n    return Attributor;\n}());\nexports.default = Attributor;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _op = __webpack_require__(20);\n\nvar _op2 = _interopRequireDefault(_op);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _code = __webpack_require__(16);\n\nvar _code2 = _interopRequireDefault(_code);\n\nvar _cursor = __webpack_require__(25);\n\nvar _cursor2 = _interopRequireDefault(_cursor);\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _clone = __webpack_require__(19);\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _deepEqual = __webpack_require__(11);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Editor = function () {\n  function Editor(scroll) {\n    _classCallCheck(this, Editor);\n\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  _createClass(Editor, [{\n    key: 'applyDelta',\n    value: function applyDelta(delta) {\n      var _this = this;\n\n      var consumeNextNewline = false;\n      this.scroll.update();\n      var scrollLength = this.scroll.length();\n      this.scroll.batch = true;\n      delta = normalizeDelta(delta);\n      delta.reduce(function (index, op) {\n        var length = op.retain || op.delete || op.insert.length || 1;\n        var attributes = op.attributes || {};\n        if (op.insert != null) {\n          if (typeof op.insert === 'string') {\n            var text = op.insert;\n            if (text.endsWith('\\n') && consumeNextNewline) {\n              consumeNextNewline = false;\n              text = text.slice(0, -1);\n            }\n            if (index >= scrollLength && !text.endsWith('\\n')) {\n              consumeNextNewline = true;\n            }\n            _this.scroll.insertAt(index, text);\n\n            var _scroll$line = _this.scroll.line(index),\n                _scroll$line2 = _slicedToArray(_scroll$line, 2),\n                line = _scroll$line2[0],\n                offset = _scroll$line2[1];\n\n            var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));\n            if (line instanceof _block2.default) {\n              var _line$descendant = line.descendant(_parchment2.default.Leaf, offset),\n                  _line$descendant2 = _slicedToArray(_line$descendant, 1),\n                  leaf = _line$descendant2[0];\n\n              formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));\n            }\n            attributes = _op2.default.attributes.diff(formats, attributes) || {};\n          } else if (_typeof(op.insert) === 'object') {\n            var key = Object.keys(op.insert)[0]; // There should only be one key\n            if (key == null) return index;\n            _this.scroll.insertAt(index, key, op.insert[key]);\n          }\n          scrollLength += length;\n        }\n        Object.keys(attributes).forEach(function (name) {\n          _this.scroll.formatAt(index, length, name, attributes[name]);\n        });\n        return index + length;\n      }, 0);\n      delta.reduce(function (index, op) {\n        if (typeof op.delete === 'number') {\n          _this.scroll.deleteAt(index, op.delete);\n          return index;\n        }\n        return index + (op.retain || op.insert.length || 1);\n      }, 0);\n      this.scroll.batch = false;\n      this.scroll.optimize();\n      return this.update(delta);\n    }\n  }, {\n    key: 'deleteText',\n    value: function deleteText(index, length) {\n      this.scroll.deleteAt(index, length);\n      return this.update(new _quillDelta2.default().retain(index).delete(length));\n    }\n  }, {\n    key: 'formatLine',\n    value: function formatLine(index, length) {\n      var _this2 = this;\n\n      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      this.scroll.update();\n      Object.keys(formats).forEach(function (format) {\n        if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format]) return;\n        var lines = _this2.scroll.lines(index, Math.max(length, 1));\n        var lengthRemaining = length;\n        lines.forEach(function (line) {\n          var lineLength = line.length();\n          if (!(line instanceof _code2.default)) {\n            line.format(format, formats[format]);\n          } else {\n            var codeIndex = index - line.offset(_this2.scroll);\n            var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;\n            line.formatAt(codeIndex, codeLength, format, formats[format]);\n          }\n          lengthRemaining -= lineLength;\n        });\n      });\n      this.scroll.optimize();\n      return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));\n    }\n  }, {\n    key: 'formatText',\n    value: function formatText(index, length) {\n      var _this3 = this;\n\n      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      Object.keys(formats).forEach(function (format) {\n        _this3.scroll.formatAt(index, length, format, formats[format]);\n      });\n      return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));\n    }\n  }, {\n    key: 'getContents',\n    value: function getContents(index, length) {\n      return this.delta.slice(index, index + length);\n    }\n  }, {\n    key: 'getDelta',\n    value: function getDelta() {\n      return this.scroll.lines().reduce(function (delta, line) {\n        return delta.concat(line.delta());\n      }, new _quillDelta2.default());\n    }\n  }, {\n    key: 'getFormat',\n    value: function getFormat(index) {\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var lines = [],\n          leaves = [];\n      if (length === 0) {\n        this.scroll.path(index).forEach(function (path) {\n          var _path = _slicedToArray(path, 1),\n              blot = _path[0];\n\n          if (blot instanceof _block2.default) {\n            lines.push(blot);\n          } else if (blot instanceof _parchment2.default.Leaf) {\n            leaves.push(blot);\n          }\n        });\n      } else {\n        lines = this.scroll.lines(index, length);\n        leaves = this.scroll.descendants(_parchment2.default.Leaf, index, length);\n      }\n      var formatsArr = [lines, leaves].map(function (blots) {\n        if (blots.length === 0) return {};\n        var formats = (0, _block.bubbleFormats)(blots.shift());\n        while (Object.keys(formats).length > 0) {\n          var blot = blots.shift();\n          if (blot == null) return formats;\n          formats = combineFormats((0, _block.bubbleFormats)(blot), formats);\n        }\n        return formats;\n      });\n      return _extend2.default.apply(_extend2.default, formatsArr);\n    }\n  }, {\n    key: 'getText',\n    value: function getText(index, length) {\n      return this.getContents(index, length).filter(function (op) {\n        return typeof op.insert === 'string';\n      }).map(function (op) {\n        return op.insert;\n      }).join('');\n    }\n  }, {\n    key: 'insertEmbed',\n    value: function insertEmbed(index, embed, value) {\n      this.scroll.insertAt(index, embed, value);\n      return this.update(new _quillDelta2.default().retain(index).insert(_defineProperty({}, embed, value)));\n    }\n  }, {\n    key: 'insertText',\n    value: function insertText(index, text) {\n      var _this4 = this;\n\n      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      this.scroll.insertAt(index, text);\n      Object.keys(formats).forEach(function (format) {\n        _this4.scroll.formatAt(index, text.length, format, formats[format]);\n      });\n      return this.update(new _quillDelta2.default().retain(index).insert(text, (0, _clone2.default)(formats)));\n    }\n  }, {\n    key: 'isBlank',\n    value: function isBlank() {\n      if (this.scroll.children.length == 0) return true;\n      if (this.scroll.children.length > 1) return false;\n      var child = this.scroll.children.head;\n      return child.length() <= 1 && Object.keys(child.formats()).length == 0;\n    }\n  }, {\n    key: 'removeFormat',\n    value: function removeFormat(index, length) {\n      var text = this.getText(index, length);\n\n      var _scroll$line3 = this.scroll.line(index + length),\n          _scroll$line4 = _slicedToArray(_scroll$line3, 2),\n          line = _scroll$line4[0],\n          offset = _scroll$line4[1];\n\n      var suffixLength = 0,\n          suffix = new _quillDelta2.default();\n      if (line != null) {\n        if (!(line instanceof _code2.default)) {\n          suffixLength = line.length() - offset;\n        } else {\n          suffixLength = line.newlineIndex(offset) - offset + 1;\n        }\n        suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\\n');\n      }\n      var contents = this.getContents(index, length + suffixLength);\n      var diff = contents.diff(new _quillDelta2.default().insert(text).concat(suffix));\n      var delta = new _quillDelta2.default().retain(index).concat(diff);\n      return this.applyDelta(delta);\n    }\n  }, {\n    key: 'update',\n    value: function update(change) {\n      var mutations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var cursorIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n\n      var oldDelta = this.delta;\n      if (mutations.length === 1 && mutations[0].type === 'characterData' && _parchment2.default.find(mutations[0].target)) {\n        // Optimization for character changes\n        var textBlot = _parchment2.default.find(mutations[0].target);\n        var formats = (0, _block.bubbleFormats)(textBlot);\n        var index = textBlot.offset(this.scroll);\n        var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, '');\n        var oldText = new _quillDelta2.default().insert(oldValue);\n        var newText = new _quillDelta2.default().insert(textBlot.value());\n        var diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, cursorIndex));\n        change = diffDelta.reduce(function (delta, op) {\n          if (op.insert) {\n            return delta.insert(op.insert, formats);\n          } else {\n            return delta.push(op);\n          }\n        }, new _quillDelta2.default());\n        this.delta = oldDelta.compose(change);\n      } else {\n        this.delta = this.getDelta();\n        if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {\n          change = oldDelta.diff(this.delta, cursorIndex);\n        }\n      }\n      return change;\n    }\n  }]);\n\n  return Editor;\n}();\n\nfunction combineFormats(formats, combined) {\n  return Object.keys(combined).reduce(function (merged, name) {\n    if (formats[name] == null) return merged;\n    if (combined[name] === formats[name]) {\n      merged[name] = combined[name];\n    } else if (Array.isArray(combined[name])) {\n      if (combined[name].indexOf(formats[name]) < 0) {\n        merged[name] = combined[name].concat([formats[name]]);\n      }\n    } else {\n      merged[name] = [combined[name], formats[name]];\n    }\n    return merged;\n  }, {});\n}\n\nfunction normalizeDelta(delta) {\n  return delta.reduce(function (delta, op) {\n    if (op.insert === 1) {\n      var attributes = (0, _clone2.default)(op.attributes);\n      delete attributes['image'];\n      return delta.insert({ image: op.attributes.image }, attributes);\n    }\n    if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {\n      op = (0, _clone2.default)(op);\n      if (op.attributes.list) {\n        op.attributes.list = 'ordered';\n      } else {\n        op.attributes.list = 'bullet';\n        delete op.attributes.bullet;\n      }\n    }\n    if (typeof op.insert === 'string') {\n      var text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return delta.insert(text, op.attributes);\n    }\n    return delta.push(op);\n  }, new _quillDelta2.default());\n}\n\nexports.default = Editor;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Range = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _clone = __webpack_require__(19);\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _deepEqual = __webpack_require__(11);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _emitter3 = __webpack_require__(5);\n\nvar _emitter4 = _interopRequireDefault(_emitter3);\n\nvar _logger = __webpack_require__(10);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar debug = (0, _logger2.default)('quill:selection');\n\nvar Range = function Range(index) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  _classCallCheck(this, Range);\n\n  this.index = index;\n  this.length = length;\n};\n\nvar Selection = function () {\n  function Selection(scroll, emitter) {\n    var _this = this;\n\n    _classCallCheck(this, Selection);\n\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.root = this.scroll.domNode;\n    this.root.addEventListener('compositionstart', function () {\n      _this.composing = true;\n    });\n    this.root.addEventListener('compositionend', function () {\n      _this.composing = false;\n    });\n    this.cursor = _parchment2.default.create('cursor', this);\n    // savedRange is last non-null range\n    this.lastRange = this.savedRange = new Range(0, 0);\n    ['keyup', 'mouseup', 'mouseleave', 'touchend', 'touchleave', 'focus', 'blur'].forEach(function (eventName) {\n      _this.root.addEventListener(eventName, function () {\n        // When range used to be a selection and user click within the selection,\n        // the range now being a cursor has not updated yet without setTimeout\n        setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 100);\n      });\n    });\n    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type, delta) {\n      if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {\n        _this.update(_emitter4.default.sources.SILENT);\n      }\n    });\n    this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function () {\n      if (!_this.hasFocus()) return;\n      var native = _this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle\n      // TODO unclear if this has negative side effects\n      _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function () {\n        try {\n          _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);\n        } catch (ignored) {}\n      });\n    });\n    this.update(_emitter4.default.sources.SILENT);\n  }\n\n  _createClass(Selection, [{\n    key: 'focus',\n    value: function focus() {\n      if (this.hasFocus()) return;\n      this.root.focus();\n      this.setRange(this.savedRange);\n    }\n  }, {\n    key: 'format',\n    value: function format(_format, value) {\n      if (this.scroll.whitelist != null && !this.scroll.whitelist[_format]) return;\n      this.scroll.update();\n      var nativeRange = this.getNativeRange();\n      if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK)) return;\n      if (nativeRange.start.node !== this.cursor.textNode) {\n        var blot = _parchment2.default.find(nativeRange.start.node, false);\n        if (blot == null) return;\n        // TODO Give blot ability to not split\n        if (blot instanceof _parchment2.default.Leaf) {\n          var after = blot.split(nativeRange.start.offset);\n          blot.parent.insertBefore(this.cursor, after);\n        } else {\n          blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n        }\n        this.cursor.attach();\n      }\n      this.cursor.format(_format, value);\n      this.scroll.optimize();\n      this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n      this.update();\n    }\n  }, {\n    key: 'getBounds',\n    value: function getBounds(index) {\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var scrollLength = this.scroll.length();\n      index = Math.min(index, scrollLength - 1);\n      length = Math.min(index + length, scrollLength - 1) - index;\n      var node = void 0,\n          _scroll$leaf = this.scroll.leaf(index),\n          _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),\n          leaf = _scroll$leaf2[0],\n          offset = _scroll$leaf2[1];\n      if (leaf == null) return null;\n\n      var _leaf$position = leaf.position(offset, true);\n\n      var _leaf$position2 = _slicedToArray(_leaf$position, 2);\n\n      node = _leaf$position2[0];\n      offset = _leaf$position2[1];\n\n      var range = document.createRange();\n      if (length > 0) {\n        range.setStart(node, offset);\n\n        var _scroll$leaf3 = this.scroll.leaf(index + length);\n\n        var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);\n\n        leaf = _scroll$leaf4[0];\n        offset = _scroll$leaf4[1];\n\n        if (leaf == null) return null;\n\n        var _leaf$position3 = leaf.position(offset, true);\n\n        var _leaf$position4 = _slicedToArray(_leaf$position3, 2);\n\n        node = _leaf$position4[0];\n        offset = _leaf$position4[1];\n\n        range.setEnd(node, offset);\n        return range.getBoundingClientRect();\n      } else {\n        var side = 'left';\n        var rect = void 0;\n        if (node instanceof Text) {\n          if (offset < node.data.length) {\n            range.setStart(node, offset);\n            range.setEnd(node, offset + 1);\n          } else {\n            range.setStart(node, offset - 1);\n            range.setEnd(node, offset);\n            side = 'right';\n          }\n          rect = range.getBoundingClientRect();\n        } else {\n          rect = leaf.domNode.getBoundingClientRect();\n          if (offset > 0) side = 'right';\n        }\n        return {\n          bottom: rect.top + rect.height,\n          height: rect.height,\n          left: rect[side],\n          right: rect[side],\n          top: rect.top,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: 'getNativeRange',\n    value: function getNativeRange() {\n      var selection = document.getSelection();\n      if (selection == null || selection.rangeCount <= 0) return null;\n      var nativeRange = selection.getRangeAt(0);\n      if (nativeRange == null) return null;\n      if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {\n        return null;\n      }\n      var range = {\n        start: { node: nativeRange.startContainer, offset: nativeRange.startOffset },\n        end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n        native: nativeRange\n      };\n      [range.start, range.end].forEach(function (position) {\n        var node = position.node,\n            offset = position.offset;\n        while (!(node instanceof Text) && node.childNodes.length > 0) {\n          if (node.childNodes.length > offset) {\n            node = node.childNodes[offset];\n            offset = 0;\n          } else if (node.childNodes.length === offset) {\n            node = node.lastChild;\n            offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;\n          } else {\n            break;\n          }\n        }\n        position.node = node, position.offset = offset;\n      });\n      debug.info('getNativeRange', range);\n      return range;\n    }\n  }, {\n    key: 'getRange',\n    value: function getRange() {\n      var _this2 = this;\n\n      var range = this.getNativeRange();\n      if (range == null) return [null, null];\n      var positions = [[range.start.node, range.start.offset]];\n      if (!range.native.collapsed) {\n        positions.push([range.end.node, range.end.offset]);\n      }\n      var indexes = positions.map(function (position) {\n        var _position = _slicedToArray(position, 2),\n            node = _position[0],\n            offset = _position[1];\n\n        var blot = _parchment2.default.find(node, true);\n        var index = blot.offset(_this2.scroll);\n        if (offset === 0) {\n          return index;\n        } else if (blot instanceof _parchment2.default.Container) {\n          return index + blot.length();\n        } else {\n          return index + blot.index(node, offset);\n        }\n      });\n      var start = Math.min.apply(Math, _toConsumableArray(indexes)),\n          end = Math.max.apply(Math, _toConsumableArray(indexes));\n      end = Math.min(end, this.scroll.length() - 1);\n      return [new Range(start, end - start), range];\n    }\n  }, {\n    key: 'hasFocus',\n    value: function hasFocus() {\n      return document.activeElement === this.root;\n    }\n  }, {\n    key: 'scrollIntoView',\n    value: function scrollIntoView() {\n      var range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.lastRange;\n\n      if (range == null) return;\n      var bounds = this.getBounds(range.index, range.length);\n      if (bounds == null) return;\n      var limit = this.scroll.length() - 1;\n\n      var _scroll$line = this.scroll.line(Math.min(range.index, limit)),\n          _scroll$line2 = _slicedToArray(_scroll$line, 1),\n          first = _scroll$line2[0];\n\n      var last = first;\n      if (range.length > 0) {\n        var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));\n\n        var _scroll$line4 = _slicedToArray(_scroll$line3, 1);\n\n        last = _scroll$line4[0];\n      }\n      if (first == null || last == null) return;\n      var scroller = this.scroll.scrollingContainer;\n      var scrollBounds = scroller.getBoundingClientRect();\n      if (bounds.top < scrollBounds.top) {\n        scroller.scrollTop -= scrollBounds.top - bounds.top;\n      } else if (bounds.bottom > scrollBounds.bottom) {\n        scroller.scrollTop += bounds.bottom - scrollBounds.bottom;\n      }\n    }\n  }, {\n    key: 'setNativeRange',\n    value: function setNativeRange(startNode, startOffset) {\n      var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startNode;\n      var endOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : startOffset;\n      var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n      debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n      if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {\n        return;\n      }\n      var selection = document.getSelection();\n      if (selection == null) return;\n      if (startNode != null) {\n        if (!this.hasFocus()) this.root.focus();\n        var native = (this.getNativeRange() || {}).native;\n        if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {\n\n          if (startNode.tagName == \"BR\") {\n            startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);\n            startNode = startNode.parentNode;\n          }\n          if (endNode.tagName == \"BR\") {\n            endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);\n            endNode = endNode.parentNode;\n          }\n          var range = document.createRange();\n          range.setStart(startNode, startOffset);\n          range.setEnd(endNode, endOffset);\n          selection.removeAllRanges();\n          selection.addRange(range);\n        }\n      } else {\n        selection.removeAllRanges();\n        this.root.blur();\n        document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)\n      }\n    }\n  }, {\n    key: 'setRange',\n    value: function setRange(range) {\n      var _this3 = this;\n\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;\n\n      if (typeof force === 'string') {\n        source = force;\n        force = false;\n      }\n      debug.info('setRange', range);\n      if (range != null) {\n        var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];\n        var args = [];\n        var scrollLength = this.scroll.length();\n        indexes.forEach(function (index, i) {\n          index = Math.min(scrollLength - 1, index);\n          var node = void 0,\n              _scroll$leaf5 = _this3.scroll.leaf(index),\n              _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),\n              leaf = _scroll$leaf6[0],\n              offset = _scroll$leaf6[1];\n          var _leaf$position5 = leaf.position(offset, i !== 0);\n\n          var _leaf$position6 = _slicedToArray(_leaf$position5, 2);\n\n          node = _leaf$position6[0];\n          offset = _leaf$position6[1];\n\n          args.push(node, offset);\n        });\n        if (args.length < 2) {\n          args = args.concat(args);\n        }\n        this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));\n      } else {\n        this.setNativeRange(null);\n      }\n      this.update(source);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;\n\n      var oldRange = this.lastRange;\n\n      var _getRange = this.getRange(),\n          _getRange2 = _slicedToArray(_getRange, 2),\n          lastRange = _getRange2[0],\n          nativeRange = _getRange2[1];\n\n      this.lastRange = lastRange;\n      if (this.lastRange != null) {\n        this.savedRange = this.lastRange;\n      }\n      if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {\n        var _emitter;\n\n        if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {\n          this.cursor.restore();\n        }\n        var args = [_emitter4.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];\n        (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));\n        if (source !== _emitter4.default.sources.SILENT) {\n          var _emitter2;\n\n          (_emitter2 = this.emitter).emit.apply(_emitter2, args);\n        }\n      }\n    }\n  }]);\n\n  return Selection;\n}();\n\nfunction contains(parent, descendant) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode;\n  } catch (e) {\n    return false;\n  }\n  // IE11 has bug with Text nodes\n  // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect\n  if (descendant instanceof Text) {\n    descendant = descendant.parentNode;\n  }\n  return parent.contains(descendant);\n}\n\nexports.Range = Range;\nexports.default = Selection;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Code = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _text = __webpack_require__(12);\n\nvar _text2 = _interopRequireDefault(_text);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Code = function (_Inline) {\n  _inherits(Code, _Inline);\n\n  function Code() {\n    _classCallCheck(this, Code);\n\n    return _possibleConstructorReturn(this, (Code.__proto__ || Object.getPrototypeOf(Code)).apply(this, arguments));\n  }\n\n  return Code;\n}(_inline2.default);\n\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nvar CodeBlock = function (_Block) {\n  _inherits(CodeBlock, _Block);\n\n  function CodeBlock() {\n    _classCallCheck(this, CodeBlock);\n\n    return _possibleConstructorReturn(this, (CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).apply(this, arguments));\n  }\n\n  _createClass(CodeBlock, [{\n    key: 'delta',\n    value: function delta() {\n      var _this3 = this;\n\n      var text = this.domNode.textContent;\n      if (text.endsWith('\\n')) {\n        // Should always be true\n        text = text.slice(0, -1);\n      }\n      return text.split('\\n').reduce(function (delta, frag) {\n        return delta.insert(frag).insert('\\n', _this3.formats());\n      }, new _quillDelta2.default());\n    }\n  }, {\n    key: 'format',\n    value: function format(name, value) {\n      if (name === this.statics.blotName && value) return;\n\n      var _descendant = this.descendant(_text2.default, this.length() - 1),\n          _descendant2 = _slicedToArray(_descendant, 1),\n          text = _descendant2[0];\n\n      if (text != null) {\n        text.deleteAt(text.length() - 1, 1);\n      }\n      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'format', this).call(this, name, value);\n    }\n  }, {\n    key: 'formatAt',\n    value: function formatAt(index, length, name, value) {\n      if (length === 0) return;\n      if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {\n        return;\n      }\n      var nextNewline = this.newlineIndex(index);\n      if (nextNewline < 0 || nextNewline >= index + length) return;\n      var prevNewline = this.newlineIndex(index, true) + 1;\n      var isolateLength = nextNewline - prevNewline + 1;\n      var blot = this.isolate(prevNewline, isolateLength);\n      var next = blot.next;\n      blot.format(name, value);\n      if (next instanceof CodeBlock) {\n        next.formatAt(0, index - prevNewline + length - isolateLength, name, value);\n      }\n    }\n  }, {\n    key: 'insertAt',\n    value: function insertAt(index, value, def) {\n      if (def != null) return;\n\n      var _descendant3 = this.descendant(_text2.default, index),\n          _descendant4 = _slicedToArray(_descendant3, 2),\n          text = _descendant4[0],\n          offset = _descendant4[1];\n\n      text.insertAt(offset, value);\n    }\n  }, {\n    key: 'length',\n    value: function length() {\n      var length = this.domNode.textContent.length;\n      if (!this.domNode.textContent.endsWith('\\n')) {\n        return length + 1;\n      }\n      return length;\n    }\n  }, {\n    key: 'newlineIndex',\n    value: function newlineIndex(searchIndex) {\n      var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!reverse) {\n        var offset = this.domNode.textContent.slice(searchIndex).indexOf('\\n');\n        return offset > -1 ? searchIndex + offset : -1;\n      } else {\n        return this.domNode.textContent.slice(0, searchIndex).lastIndexOf('\\n');\n      }\n    }\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      if (!this.domNode.textContent.endsWith('\\n')) {\n        this.appendChild(_parchment2.default.create('text', '\\n'));\n      }\n      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'optimize', this).call(this);\n      var next = this.next;\n      if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {\n        next.optimize();\n        next.moveChildren(this);\n        next.remove();\n      }\n    }\n  }, {\n    key: 'replace',\n    value: function replace(target) {\n      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'replace', this).call(this, target);\n      [].slice.call(this.domNode.querySelectorAll('*')).forEach(function (node) {\n        var blot = _parchment2.default.find(node);\n        if (blot == null) {\n          node.parentNode.removeChild(node);\n        } else if (blot instanceof _parchment2.default.Embed) {\n          blot.remove();\n        } else {\n          blot.unwrap();\n        }\n      });\n    }\n  }], [{\n    key: 'create',\n    value: function create(value) {\n      var domNode = _get(CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock), 'create', this).call(this, value);\n      domNode.setAttribute('spellcheck', false);\n      return domNode;\n    }\n  }, {\n    key: 'formats',\n    value: function formats() {\n      return true;\n    }\n  }]);\n\n  return CodeBlock;\n}(_block2.default);\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.tagName = 'PRE';\nCodeBlock.TAB = '  ';\n\nexports.Code = Code;\nexports.default = CodeBlock;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Break = function (_Embed) {\n  _inherits(Break, _Embed);\n\n  function Break() {\n    _classCallCheck(this, Break);\n\n    return _possibleConstructorReturn(this, (Break.__proto__ || Object.getPrototypeOf(Break)).apply(this, arguments));\n  }\n\n  _createClass(Break, [{\n    key: 'insertInto',\n    value: function insertInto(parent, ref) {\n      if (parent.children.length === 0) {\n        _get(Break.prototype.__proto__ || Object.getPrototypeOf(Break.prototype), 'insertInto', this).call(this, parent, ref);\n      } else {\n        this.remove();\n      }\n    }\n  }, {\n    key: 'length',\n    value: function length() {\n      return 0;\n    }\n  }, {\n    key: 'value',\n    value: function value() {\n      return '';\n    }\n  }], [{\n    key: 'value',\n    value: function value() {\n      return undefined;\n    }\n  }]);\n\n  return Break;\n}(_embed2.default);\n\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexports.default = Break;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _emitter = __webpack_require__(5);\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _break = __webpack_require__(17);\n\nvar _break2 = _interopRequireDefault(_break);\n\nvar _container = __webpack_require__(24);\n\nvar _container2 = _interopRequireDefault(_container);\n\nvar _code = __webpack_require__(16);\n\nvar _code2 = _interopRequireDefault(_code);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction isLine(blot) {\n  return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;\n}\n\nvar Scroll = function (_Parchment$Scroll) {\n  _inherits(Scroll, _Parchment$Scroll);\n\n  function Scroll(domNode, config) {\n    _classCallCheck(this, Scroll);\n\n    var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, domNode));\n\n    _this.emitter = config.emitter;\n    _this.scrollingContainer = config.scrollingContainer;\n    if (Array.isArray(config.whitelist)) {\n      _this.whitelist = config.whitelist.reduce(function (whitelist, format) {\n        whitelist[format] = true;\n        return whitelist;\n      }, {});\n    }\n    _this.optimize();\n    _this.enable();\n    return _this;\n  }\n\n  _createClass(Scroll, [{\n    key: 'deleteAt',\n    value: function deleteAt(index, length) {\n      var _line = this.line(index),\n          _line2 = _slicedToArray(_line, 2),\n          first = _line2[0],\n          offset = _line2[1];\n\n      var _line3 = this.line(index + length),\n          _line4 = _slicedToArray(_line3, 1),\n          last = _line4[0];\n\n      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'deleteAt', this).call(this, index, length);\n      if (last != null && first !== last && offset > 0 && !(first instanceof _block.BlockEmbed) && !(last instanceof _block.BlockEmbed)) {\n        if (last instanceof _code2.default) {\n          last.deleteAt(last.length() - 1, 1);\n        }\n        var ref = last.children.head instanceof _break2.default ? null : last.children.head;\n        first.moveChildren(last, ref);\n        first.remove();\n      }\n      this.optimize();\n    }\n  }, {\n    key: 'enable',\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this.domNode.setAttribute('contenteditable', enabled);\n    }\n  }, {\n    key: 'formatAt',\n    value: function formatAt(index, length, format, value) {\n      if (this.whitelist != null && !this.whitelist[format]) return;\n      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'formatAt', this).call(this, index, length, format, value);\n      this.optimize();\n    }\n  }, {\n    key: 'insertAt',\n    value: function insertAt(index, value, def) {\n      if (def != null && this.whitelist != null && !this.whitelist[value]) return;\n      if (index >= this.length()) {\n        if (def == null || _parchment2.default.query(value, _parchment2.default.Scope.BLOCK) == null) {\n          var blot = _parchment2.default.create(this.statics.defaultChild);\n          this.appendChild(blot);\n          if (def == null && value.endsWith('\\n')) {\n            value = value.slice(0, -1);\n          }\n          blot.insertAt(0, value, def);\n        } else {\n          var embed = _parchment2.default.create(value, def);\n          this.appendChild(embed);\n        }\n      } else {\n        _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertAt', this).call(this, index, value, def);\n      }\n      this.optimize();\n    }\n  }, {\n    key: 'insertBefore',\n    value: function insertBefore(blot, ref) {\n      if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {\n        var wrapper = _parchment2.default.create(this.statics.defaultChild);\n        wrapper.appendChild(blot);\n        blot = wrapper;\n      }\n      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertBefore', this).call(this, blot, ref);\n    }\n  }, {\n    key: 'leaf',\n    value: function leaf(index) {\n      return this.path(index).pop() || [null, -1];\n    }\n  }, {\n    key: 'line',\n    value: function line(index) {\n      if (index === this.length()) {\n        return this.line(index - 1);\n      }\n      return this.descendant(isLine, index);\n    }\n  }, {\n    key: 'lines',\n    value: function lines() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n\n      var getLines = function getLines(blot, index, length) {\n        var lines = [],\n            lengthLeft = length;\n        blot.children.forEachAt(index, length, function (child, index, length) {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof _parchment2.default.Container) {\n            lines = lines.concat(getLines(child, index, lengthLeft));\n          }\n          lengthLeft -= length;\n        });\n        return lines;\n      };\n      return getLines(this, index, length);\n    }\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      var mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (this.batch === true) return;\n      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'optimize', this).call(this, mutations);\n      if (mutations.length > 0) {\n        this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations);\n      }\n    }\n  }, {\n    key: 'path',\n    value: function path(index) {\n      return _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'path', this).call(this, index).slice(1); // Exclude self\n    }\n  }, {\n    key: 'update',\n    value: function update(mutations) {\n      if (this.batch === true) return;\n      var source = _emitter2.default.sources.USER;\n      if (typeof mutations === 'string') {\n        source = mutations;\n      }\n      if (!Array.isArray(mutations)) {\n        mutations = this.observer.takeRecords();\n      }\n      if (mutations.length > 0) {\n        this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);\n      }\n      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'update', this).call(this, mutations.concat([])); // pass copy\n      if (mutations.length > 0) {\n        this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);\n      }\n    }\n  }]);\n\n  return Scroll;\n}(_parchment2.default.Scroll);\n\nScroll.blotName = 'scroll';\nScroll.className = 'ql-editor';\nScroll.tagName = 'DIV';\nScroll.defaultChild = 'block';\nScroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];\n\nexports.default = Scroll;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nvar clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      child = new Buffer(parent.length);\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar equal = __webpack_require__(11);\nvar extend = __webpack_require__(3);\n\n\nvar lib = {\n  attributes: {\n    compose: function (a, b, keepNull) {\n      if (typeof a !== 'object') a = {};\n      if (typeof b !== 'object') b = {};\n      var attributes = extend(true, {}, b);\n      if (!keepNull) {\n        attributes = Object.keys(attributes).reduce(function (copy, key) {\n          if (attributes[key] != null) {\n            copy[key] = attributes[key];\n          }\n          return copy;\n        }, {});\n      }\n      for (var key in a) {\n        if (a[key] !== undefined && b[key] === undefined) {\n          attributes[key] = a[key];\n        }\n      }\n      return Object.keys(attributes).length > 0 ? attributes : undefined;\n    },\n\n    diff: function(a, b) {\n      if (typeof a !== 'object') a = {};\n      if (typeof b !== 'object') b = {};\n      var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {\n        if (!equal(a[key], b[key])) {\n          attributes[key] = b[key] === undefined ? null : b[key];\n        }\n        return attributes;\n      }, {});\n      return Object.keys(attributes).length > 0 ? attributes : undefined;\n    },\n\n    transform: function (a, b, priority) {\n      if (typeof a !== 'object') return b;\n      if (typeof b !== 'object') return undefined;\n      if (!priority) return b;  // b simply overwrites us without priority\n      var attributes = Object.keys(b).reduce(function (attributes, key) {\n        if (a[key] === undefined) attributes[key] = b[key];  // null is a valid value\n        return attributes;\n      }, {});\n      return Object.keys(attributes).length > 0 ? attributes : undefined;\n    }\n  },\n\n  iterator: function (ops) {\n    return new Iterator(ops);\n  },\n\n  length: function (op) {\n    if (typeof op['delete'] === 'number') {\n      return op['delete'];\n    } else if (typeof op.retain === 'number') {\n      return op.retain;\n    } else {\n      return typeof op.insert === 'string' ? op.insert.length : 1;\n    }\n  }\n};\n\n\nfunction Iterator(ops) {\n  this.ops = ops;\n  this.index = 0;\n  this.offset = 0;\n};\n\nIterator.prototype.hasNext = function () {\n  return this.peekLength() < Infinity;\n};\n\nIterator.prototype.next = function (length) {\n  if (!length) length = Infinity;\n  var nextOp = this.ops[this.index];\n  if (nextOp) {\n    var offset = this.offset;\n    var opLength = lib.length(nextOp)\n    if (length >= opLength - offset) {\n      length = opLength - offset;\n      this.index += 1;\n      this.offset = 0;\n    } else {\n      this.offset += length;\n    }\n    if (typeof nextOp['delete'] === 'number') {\n      return { 'delete': length };\n    } else {\n      var retOp = {};\n      if (nextOp.attributes) {\n        retOp.attributes = nextOp.attributes;\n      }\n      if (typeof nextOp.retain === 'number') {\n        retOp.retain = length;\n      } else if (typeof nextOp.insert === 'string') {\n        retOp.insert = nextOp.insert.substr(offset, length);\n      } else {\n        // offset should === 0, length should === 1\n        retOp.insert = nextOp.insert;\n      }\n      return retOp;\n    }\n  } else {\n    return { retain: Infinity };\n  }\n};\n\nIterator.prototype.peek = function () {\n  return this.ops[this.index];\n};\n\nIterator.prototype.peekLength = function () {\n  if (this.ops[this.index]) {\n    // Should never return 0 if our index is being managed correctly\n    return lib.length(this.ops[this.index]) - this.offset;\n  } else {\n    return Infinity;\n  }\n};\n\nIterator.prototype.peekType = function () {\n  if (this.ops[this.index]) {\n    if (typeof this.ops[this.index]['delete'] === 'number') {\n      return 'delete';\n    } else if (typeof this.ops[this.index].retain === 'number') {\n      return 'retain';\n    } else {\n      return 'insert';\n    }\n  }\n  return 'retain';\n};\n\n\nmodule.exports = lib;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar linked_list_1 = __webpack_require__(61);\nvar shadow_1 = __webpack_require__(34);\nvar Registry = __webpack_require__(1);\nvar ContainerBlot = (function (_super) {\n    __extends(ContainerBlot, _super);\n    function ContainerBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContainerBlot.prototype.appendChild = function (other) {\n        this.insertBefore(other);\n    };\n    ContainerBlot.prototype.attach = function () {\n        var _this = this;\n        _super.prototype.attach.call(this);\n        this.children = new linked_list_1.default();\n        // Need to be reversed for if DOM nodes already in order\n        [].slice.call(this.domNode.childNodes).reverse().forEach(function (node) {\n            try {\n                var child = makeBlot(node);\n                _this.insertBefore(child, _this.children.head);\n            }\n            catch (err) {\n                if (err instanceof Registry.ParchmentError)\n                    return;\n                else\n                    throw err;\n            }\n        });\n    };\n    ContainerBlot.prototype.deleteAt = function (index, length) {\n        if (index === 0 && length === this.length()) {\n            return this.remove();\n        }\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n        });\n    };\n    ContainerBlot.prototype.descendant = function (criteria, index) {\n        var _a = this.children.find(index), child = _a[0], offset = _a[1];\n        if ((criteria.blotName == null && criteria(child)) ||\n            (criteria.blotName != null && child instanceof criteria)) {\n            return [child, offset];\n        }\n        else if (child instanceof ContainerBlot) {\n            return child.descendant(criteria, offset);\n        }\n        else {\n            return [null, -1];\n        }\n    };\n    ContainerBlot.prototype.descendants = function (criteria, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = Number.MAX_VALUE; }\n        var descendants = [], lengthLeft = length;\n        this.children.forEachAt(index, length, function (child, index, length) {\n            if ((criteria.blotName == null && criteria(child)) ||\n                (criteria.blotName != null && child instanceof criteria)) {\n                descendants.push(child);\n            }\n            if (child instanceof ContainerBlot) {\n                descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));\n            }\n            lengthLeft -= length;\n        });\n        return descendants;\n    };\n    ContainerBlot.prototype.detach = function () {\n        this.children.forEach(function (child) {\n            child.detach();\n        });\n        _super.prototype.detach.call(this);\n    };\n    ContainerBlot.prototype.formatAt = function (index, length, name, value) {\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.formatAt(offset, length, name, value);\n        });\n    };\n    ContainerBlot.prototype.insertAt = function (index, value, def) {\n        var _a = this.children.find(index), child = _a[0], offset = _a[1];\n        if (child) {\n            child.insertAt(offset, value, def);\n        }\n        else {\n            var blot = (def == null) ? Registry.create('text', value) : Registry.create(value, def);\n            this.appendChild(blot);\n        }\n    };\n    ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {\n        if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function (child) {\n            return childBlot instanceof child;\n        })) {\n            throw new Registry.ParchmentError(\"Cannot insert \" + childBlot.statics.blotName + \" into \" + this.statics.blotName);\n        }\n        childBlot.insertInto(this, refBlot);\n    };\n    ContainerBlot.prototype.length = function () {\n        return this.children.reduce(function (memo, child) {\n            return memo + child.length();\n        }, 0);\n    };\n    ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {\n        this.children.forEach(function (child) {\n            targetParent.insertBefore(child, refNode);\n        });\n    };\n    ContainerBlot.prototype.optimize = function () {\n        _super.prototype.optimize.call(this);\n        if (this.children.length === 0) {\n            if (this.statics.defaultChild != null) {\n                var child = Registry.create(this.statics.defaultChild);\n                this.appendChild(child);\n                child.optimize();\n            }\n            else {\n                this.remove();\n            }\n        }\n    };\n    ContainerBlot.prototype.path = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];\n        var position = [[this, index]];\n        if (child instanceof ContainerBlot) {\n            return position.concat(child.path(offset, inclusive));\n        }\n        else if (child != null) {\n            position.push([child, offset]);\n        }\n        return position;\n    };\n    ContainerBlot.prototype.removeChild = function (child) {\n        this.children.remove(child);\n    };\n    ContainerBlot.prototype.replace = function (target) {\n        if (target instanceof ContainerBlot) {\n            target.moveChildren(this);\n        }\n        _super.prototype.replace.call(this, target);\n    };\n    ContainerBlot.prototype.split = function (index, force) {\n        if (force === void 0) { force = false; }\n        if (!force) {\n            if (index === 0)\n                return this;\n            if (index === this.length())\n                return this.next;\n        }\n        var after = this.clone();\n        this.parent.insertBefore(after, this.next);\n        this.children.forEachAt(index, this.length(), function (child, offset, length) {\n            child = child.split(offset, force);\n            after.appendChild(child);\n        });\n        return after;\n    };\n    ContainerBlot.prototype.unwrap = function () {\n        this.moveChildren(this.parent, this.next);\n        this.remove();\n    };\n    ContainerBlot.prototype.update = function (mutations) {\n        var _this = this;\n        var addedNodes = [], removedNodes = [];\n        mutations.forEach(function (mutation) {\n            if (mutation.target === _this.domNode && mutation.type === 'childList') {\n                addedNodes.push.apply(addedNodes, mutation.addedNodes);\n                removedNodes.push.apply(removedNodes, mutation.removedNodes);\n            }\n        });\n        removedNodes.forEach(function (node) {\n            // Check node has actually been removed\n            // One exception is Chrome does not immediately remove IFRAMEs\n            // from DOM but MutationRecord is correct in its reported removal\n            if (node.parentNode != null && node.tagName !== 'IFRAME' &&\n                (document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY)) {\n                return;\n            }\n            var blot = Registry.find(node);\n            if (blot == null)\n                return;\n            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {\n                blot.detach();\n            }\n        });\n        addedNodes.filter(function (node) {\n            return node.parentNode == _this.domNode;\n        }).sort(function (a, b) {\n            if (a === b)\n                return 0;\n            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n                return 1;\n            }\n            return -1;\n        }).forEach(function (node) {\n            var refBlot = null;\n            if (node.nextSibling != null) {\n                refBlot = Registry.find(node.nextSibling);\n            }\n            var blot = makeBlot(node);\n            if (blot.next != refBlot || blot.next == null) {\n                if (blot.parent != null) {\n                    blot.parent.removeChild(_this);\n                }\n                _this.insertBefore(blot, refBlot);\n            }\n        });\n    };\n    return ContainerBlot;\n}(shadow_1.default));\nfunction makeBlot(node) {\n    var blot = Registry.find(node);\n    if (blot == null) {\n        try {\n            blot = Registry.create(node);\n        }\n        catch (e) {\n            blot = Registry.create(Registry.Scope.INLINE);\n            [].slice.call(node.childNodes).forEach(function (child) {\n                blot.domNode.appendChild(child);\n            });\n            node.parentNode.replaceChild(blot.domNode, node);\n            blot.attach();\n        }\n    }\n    return blot;\n}\nexports.default = ContainerBlot;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = __webpack_require__(13);\nvar store_1 = __webpack_require__(32);\nvar container_1 = __webpack_require__(21);\nvar Registry = __webpack_require__(1);\nvar FormatBlot = (function (_super) {\n    __extends(FormatBlot, _super);\n    function FormatBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormatBlot.formats = function (domNode) {\n        if (typeof this.tagName === 'string') {\n            return true;\n        }\n        else if (Array.isArray(this.tagName)) {\n            return domNode.tagName.toLowerCase();\n        }\n        return undefined;\n    };\n    FormatBlot.prototype.attach = function () {\n        _super.prototype.attach.call(this);\n        this.attributes = new store_1.default(this.domNode);\n    };\n    FormatBlot.prototype.format = function (name, value) {\n        var format = Registry.query(name);\n        if (format instanceof attributor_1.default) {\n            this.attributes.attribute(format, value);\n        }\n        else if (value) {\n            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {\n                this.replaceWith(name, value);\n            }\n        }\n    };\n    FormatBlot.prototype.formats = function () {\n        var formats = this.attributes.values();\n        var format = this.statics.formats(this.domNode);\n        if (format != null) {\n            formats[this.statics.blotName] = format;\n        }\n        return formats;\n    };\n    FormatBlot.prototype.replaceWith = function (name, value) {\n        var replacement = _super.prototype.replaceWith.call(this, name, value);\n        this.attributes.copy(replacement);\n        return replacement;\n    };\n    FormatBlot.prototype.update = function (mutations) {\n        var _this = this;\n        _super.prototype.update.call(this, mutations);\n        if (mutations.some(function (mutation) {\n            return mutation.target === _this.domNode && mutation.type === 'attributes';\n        })) {\n            this.attributes.build();\n        }\n    };\n    FormatBlot.prototype.wrap = function (name, value) {\n        var wrapper = _super.prototype.wrap.call(this, name, value);\n        if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {\n            this.attributes.move(wrapper);\n        }\n        return wrapper;\n    };\n    return FormatBlot;\n}(container_1.default));\nexports.default = FormatBlot;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shadow_1 = __webpack_require__(34);\nvar Registry = __webpack_require__(1);\nvar LeafBlot = (function (_super) {\n    __extends(LeafBlot, _super);\n    function LeafBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LeafBlot.value = function (domNode) {\n        return true;\n    };\n    LeafBlot.prototype.index = function (node, offset) {\n        if (node !== this.domNode)\n            return -1;\n        return Math.min(offset, 1);\n    };\n    LeafBlot.prototype.position = function (index, inclusive) {\n        var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);\n        if (index > 0)\n            offset += 1;\n        return [this.parent.domNode, offset];\n    };\n    LeafBlot.prototype.value = function () {\n        return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;\n        var _a;\n    };\n    return LeafBlot;\n}(shadow_1.default));\nLeafBlot.scope = Registry.Scope.INLINE_BLOT;\nexports.default = LeafBlot;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Container = function (_Parchment$Container) {\n  _inherits(Container, _Parchment$Container);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));\n  }\n\n  return Container;\n}(_parchment2.default.Container);\n\nContainer.allowedChildren = [_block2.default, _block.BlockEmbed, Container];\n\nexports.default = Container;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nvar _text = __webpack_require__(12);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _emitter = __webpack_require__(5);\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Cursor = function (_Embed) {\n  _inherits(Cursor, _Embed);\n\n  _createClass(Cursor, null, [{\n    key: 'value',\n    value: function value() {\n      return undefined;\n    }\n  }]);\n\n  function Cursor(domNode, selection) {\n    _classCallCheck(this, Cursor);\n\n    var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this, domNode));\n\n    _this.selection = selection;\n    _this.textNode = document.createTextNode(Cursor.CONTENTS);\n    _this.domNode.appendChild(_this.textNode);\n    _this._length = 0;\n    return _this;\n  }\n\n  _createClass(Cursor, [{\n    key: 'detach',\n    value: function detach() {\n      // super.detach() will also clear domNode.__blot\n      if (this.parent != null) this.parent.removeChild(this);\n    }\n  }, {\n    key: 'format',\n    value: function format(name, value) {\n      if (this._length !== 0) {\n        return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'format', this).call(this, name, value);\n      }\n      var target = this,\n          index = 0;\n      while (target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT) {\n        index += target.offset(target.parent);\n        target = target.parent;\n      }\n      if (target != null) {\n        this._length = Cursor.CONTENTS.length;\n        target.optimize();\n        target.formatAt(index, Cursor.CONTENTS.length, name, value);\n        this._length = 0;\n      }\n    }\n  }, {\n    key: 'index',\n    value: function index(node, offset) {\n      if (node === this.textNode) return 0;\n      return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'index', this).call(this, node, offset);\n    }\n  }, {\n    key: 'length',\n    value: function length() {\n      return this._length;\n    }\n  }, {\n    key: 'position',\n    value: function position() {\n      return [this.textNode, this.textNode.data.length];\n    }\n  }, {\n    key: 'remove',\n    value: function remove() {\n      _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'remove', this).call(this);\n      this.parent = null;\n    }\n  }, {\n    key: 'restore',\n    value: function restore() {\n      var _this2 = this;\n\n      if (this.selection.composing) return;\n      if (this.parent == null) return;\n      var textNode = this.textNode;\n      var range = this.selection.getNativeRange();\n      var restoreText = void 0,\n          start = void 0,\n          end = void 0;\n      if (range != null && range.start.node === textNode && range.end.node === textNode) {\n        var _ref = [textNode, range.start.offset, range.end.offset];\n        restoreText = _ref[0];\n        start = _ref[1];\n        end = _ref[2];\n      }\n      // Link format will insert text outside of anchor tag\n      while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {\n        this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);\n      }\n      if (this.textNode.data !== Cursor.CONTENTS) {\n        var text = this.textNode.data.split(Cursor.CONTENTS).join('');\n        if (this.next instanceof _text2.default) {\n          restoreText = this.next.domNode;\n          this.next.insertAt(0, text);\n          this.textNode.data = Cursor.CONTENTS;\n        } else {\n          this.textNode.data = text;\n          this.parent.insertBefore(_parchment2.default.create(this.textNode), this);\n          this.textNode = document.createTextNode(Cursor.CONTENTS);\n          this.domNode.appendChild(this.textNode);\n        }\n      }\n      this.remove();\n      if (start == null) return;\n      this.selection.emitter.once(_emitter2.default.events.SCROLL_OPTIMIZE, function () {\n        var _map = [start, end].map(function (offset) {\n          return Math.max(0, Math.min(restoreText.data.length, offset - 1));\n        });\n\n        var _map2 = _slicedToArray(_map, 2);\n\n        start = _map2[0];\n        end = _map2[1];\n\n        _this2.selection.setNativeRange(restoreText, start, restoreText, end);\n      });\n    }\n  }, {\n    key: 'update',\n    value: function update(mutations) {\n      var _this3 = this;\n\n      mutations.forEach(function (mutation) {\n        if (mutation.type === 'characterData' && mutation.target === _this3.textNode) {\n          _this3.restore();\n        }\n      });\n    }\n  }, {\n    key: 'value',\n    value: function value() {\n      return '';\n    }\n  }]);\n\n  return Cursor;\n}(_embed2.default);\n\nCursor.blotName = 'cursor';\nCursor.className = 'ql-cursor';\nCursor.tagName = 'span';\nCursor.CONTENTS = '\\uFEFF'; // Zero width no break space\n\n\nexports.default = Cursor;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ColorAttributor = function (_Parchment$Attributor) {\n  _inherits(ColorAttributor, _Parchment$Attributor);\n\n  function ColorAttributor() {\n    _classCallCheck(this, ColorAttributor);\n\n    return _possibleConstructorReturn(this, (ColorAttributor.__proto__ || Object.getPrototypeOf(ColorAttributor)).apply(this, arguments));\n  }\n\n  _createClass(ColorAttributor, [{\n    key: 'value',\n    value: function value(domNode) {\n      var value = _get(ColorAttributor.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor.prototype), 'value', this).call(this, domNode);\n      if (!value.startsWith('rgb(')) return value;\n      value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n      return '#' + value.split(',').map(function (component) {\n        return ('00' + parseInt(component).toString(16)).slice(-2);\n      }).join('');\n    }\n  }]);\n\n  return ColorAttributor;\n}(_parchment2.default.Attributor.Style);\n\nvar ColorClass = new _parchment2.default.Attributor.Class('color', 'ql-color', {\n  scope: _parchment2.default.Scope.INLINE\n});\nvar ColorStyle = new ColorAttributor('color', 'color', {\n  scope: _parchment2.default.Scope.INLINE\n});\n\nexports.ColorAttributor = ColorAttributor;\nexports.ColorClass = ColorClass;\nexports.ColorStyle = ColorStyle;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitize = exports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Link = function (_Inline) {\n  _inherits(Link, _Inline);\n\n  function Link() {\n    _classCallCheck(this, Link);\n\n    return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));\n  }\n\n  _createClass(Link, [{\n    key: 'format',\n    value: function format(name, value) {\n      if (name !== this.statics.blotName || !value) return _get(Link.prototype.__proto__ || Object.getPrototypeOf(Link.prototype), 'format', this).call(this, name, value);\n      value = this.constructor.sanitize(value);\n      this.domNode.setAttribute('href', value);\n    }\n  }], [{\n    key: 'create',\n    value: function create(value) {\n      var node = _get(Link.__proto__ || Object.getPrototypeOf(Link), 'create', this).call(this, value);\n      value = this.sanitize(value);\n      node.setAttribute('href', value);\n      node.setAttribute('target', '_blank');\n      return node;\n    }\n  }, {\n    key: 'formats',\n    value: function formats(domNode) {\n      return domNode.getAttribute('href');\n    }\n  }, {\n    key: 'sanitize',\n    value: function sanitize(url) {\n      return _sanitize(url, ['http', 'https', 'mailto']) ? url : this.SANITIZED_URL;\n    }\n  }]);\n\n  return Link;\n}(_inline2.default);\n\nLink.blotName = 'link';\nLink.tagName = 'A';\nLink.SANITIZED_URL = 'about:blank';\n\nfunction _sanitize(url, protocols) {\n  var anchor = document.createElement('a');\n  anchor.href = url;\n  var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexports.default = Link;\nexports.sanitize = _sanitize;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dropdown = __webpack_require__(88);\n\nvar _dropdown2 = _interopRequireDefault(_dropdown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Picker = function () {\n  function Picker(select) {\n    var _this = this;\n\n    _classCallCheck(this, Picker);\n\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    this.select.parentNode.insertBefore(this.container, this.select);\n    this.label.addEventListener('mousedown', function () {\n      _this.container.classList.toggle('ql-expanded');\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  _createClass(Picker, [{\n    key: 'buildItem',\n    value: function buildItem(option) {\n      var _this2 = this;\n\n      var item = document.createElement('span');\n      item.classList.add('ql-picker-item');\n      if (option.hasAttribute('value')) {\n        item.setAttribute('data-value', option.getAttribute('value'));\n      }\n      if (option.textContent) {\n        item.setAttribute('data-label', option.textContent);\n      }\n      item.addEventListener('click', function () {\n        _this2.selectItem(item, true);\n      });\n      return item;\n    }\n  }, {\n    key: 'buildLabel',\n    value: function buildLabel() {\n      var label = document.createElement('span');\n      label.classList.add('ql-picker-label');\n      label.innerHTML = _dropdown2.default;\n      this.container.appendChild(label);\n      return label;\n    }\n  }, {\n    key: 'buildOptions',\n    value: function buildOptions() {\n      var _this3 = this;\n\n      var options = document.createElement('span');\n      options.classList.add('ql-picker-options');\n      [].slice.call(this.select.options).forEach(function (option) {\n        var item = _this3.buildItem(option);\n        options.appendChild(item);\n        if (option.hasAttribute('selected')) {\n          _this3.selectItem(item);\n        }\n      });\n      this.container.appendChild(options);\n    }\n  }, {\n    key: 'buildPicker',\n    value: function buildPicker() {\n      var _this4 = this;\n\n      [].slice.call(this.select.attributes).forEach(function (item) {\n        _this4.container.setAttribute(item.name, item.value);\n      });\n      this.container.classList.add('ql-picker');\n      this.label = this.buildLabel();\n      this.buildOptions();\n    }\n  }, {\n    key: 'close',\n    value: function close() {\n      this.container.classList.remove('ql-expanded');\n    }\n  }, {\n    key: 'selectItem',\n    value: function selectItem(item) {\n      var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var selected = this.container.querySelector('.ql-selected');\n      if (item === selected) return;\n      if (selected != null) {\n        selected.classList.remove('ql-selected');\n      }\n      if (item == null) return;\n      item.classList.add('ql-selected');\n      this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);\n      if (item.hasAttribute('data-value')) {\n        this.label.setAttribute('data-value', item.getAttribute('data-value'));\n      } else {\n        this.label.removeAttribute('data-value');\n      }\n      if (item.hasAttribute('data-label')) {\n        this.label.setAttribute('data-label', item.getAttribute('data-label'));\n      } else {\n        this.label.removeAttribute('data-label');\n      }\n      if (trigger) {\n        if (typeof Event === 'function') {\n          this.select.dispatchEvent(new Event('change'));\n        } else if ((typeof Event === 'undefined' ? 'undefined' : _typeof(Event)) === 'object') {\n          // IE11\n          var event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n          this.select.dispatchEvent(event);\n        }\n        this.close();\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var option = void 0;\n      if (this.select.selectedIndex > -1) {\n        var item = this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];\n        option = this.select.options[this.select.selectedIndex];\n        this.selectItem(item);\n      } else {\n        this.selectItem(null);\n      }\n      var isActive = option != null && option !== this.select.querySelector('option[selected]');\n      this.label.classList.toggle('ql-active', isActive);\n    }\n  }]);\n\n  return Picker;\n}();\n\nexports.default = Picker;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Theme = function () {\n  function Theme(quill, options) {\n    _classCallCheck(this, Theme);\n\n    this.quill = quill;\n    this.options = options;\n    this.modules = {};\n  }\n\n  _createClass(Theme, [{\n    key: 'init',\n    value: function init() {\n      var _this = this;\n\n      Object.keys(this.options.modules).forEach(function (name) {\n        if (_this.modules[name] == null) {\n          _this.addModule(name);\n        }\n      });\n    }\n  }, {\n    key: 'addModule',\n    value: function addModule(name) {\n      var moduleClass = this.quill.constructor.import('modules/' + name);\n      this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});\n      return this.modules[name];\n    }\n  }]);\n\n  return Theme;\n}();\n\nTheme.DEFAULTS = {\n  modules: {}\n};\nTheme.themes = {\n  'default': Theme\n};\n\nexports.default = Theme;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SHORTKEY = exports.default = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _clone = __webpack_require__(19);\n\nvar _clone2 = _interopRequireDefault(_clone);\n\nvar _deepEqual = __webpack_require__(11);\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _op = __webpack_require__(20);\n\nvar _op2 = _interopRequireDefault(_op);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _logger = __webpack_require__(10);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar debug = (0, _logger2.default)('quill:keyboard');\n\nvar SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nvar Keyboard = function (_Module) {\n  _inherits(Keyboard, _Module);\n\n  _createClass(Keyboard, null, [{\n    key: 'match',\n    value: function match(evt, binding) {\n      binding = normalize(binding);\n      if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(function (key) {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })) {\n        return false;\n      }\n      return binding.key === (evt.which || evt.keyCode);\n    }\n  }]);\n\n  function Keyboard(quill, options) {\n    _classCallCheck(this, Keyboard);\n\n    var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this, quill, options));\n\n    _this.bindings = {};\n    Object.keys(_this.options.bindings).forEach(function (name) {\n      if (_this.options.bindings[name]) {\n        _this.addBinding(_this.options.bindings[name]);\n      }\n    });\n    _this.addBinding({ key: Keyboard.keys.ENTER, shiftKey: null }, handleEnter);\n    _this.addBinding({ key: Keyboard.keys.ENTER, metaKey: null, ctrlKey: null, altKey: null }, function () {});\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true }, handleBackspace);\n      _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true }, handleDelete);\n    } else {\n      _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);\n      _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true, suffix: /^.?$/ }, handleDelete);\n    }\n    _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: false }, handleDeleteRange);\n    _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: false }, handleDeleteRange);\n    _this.addBinding({ key: Keyboard.keys.BACKSPACE, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null }, { collapsed: true, offset: 0 }, handleBackspace);\n    _this.listen();\n    return _this;\n  }\n\n  _createClass(Keyboard, [{\n    key: 'addBinding',\n    value: function addBinding(key) {\n      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var binding = normalize(key);\n      if (binding == null || binding.key == null) {\n        return debug.warn('Attempted to add invalid keyboard binding', binding);\n      }\n      if (typeof context === 'function') {\n        context = { handler: context };\n      }\n      if (typeof handler === 'function') {\n        handler = { handler: handler };\n      }\n      binding = (0, _extend2.default)(binding, context, handler);\n      this.bindings[binding.key] = this.bindings[binding.key] || [];\n      this.bindings[binding.key].push(binding);\n    }\n  }, {\n    key: 'listen',\n    value: function listen() {\n      var _this2 = this;\n\n      this.quill.root.addEventListener('keydown', function (evt) {\n        if (evt.defaultPrevented) return;\n        var which = evt.which || evt.keyCode;\n        var bindings = (_this2.bindings[which] || []).filter(function (binding) {\n          return Keyboard.match(evt, binding);\n        });\n        if (bindings.length === 0) return;\n        var range = _this2.quill.getSelection();\n        if (range == null || !_this2.quill.hasFocus()) return;\n\n        var _quill$getLine = _this2.quill.getLine(range.index),\n            _quill$getLine2 = _slicedToArray(_quill$getLine, 2),\n            line = _quill$getLine2[0],\n            offset = _quill$getLine2[1];\n\n        var _quill$getLeaf = _this2.quill.getLeaf(range.index),\n            _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),\n            leafStart = _quill$getLeaf2[0],\n            offsetStart = _quill$getLeaf2[1];\n\n        var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length),\n            _ref2 = _slicedToArray(_ref, 2),\n            leafEnd = _ref2[0],\n            offsetEnd = _ref2[1];\n\n        var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : '';\n        var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : '';\n        var curContext = {\n          collapsed: range.length === 0,\n          empty: range.length === 0 && line.length() <= 1,\n          format: _this2.quill.getFormat(range),\n          offset: offset,\n          prefix: prefixText,\n          suffix: suffixText\n        };\n        var prevented = bindings.some(function (binding) {\n          if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) return false;\n          if (binding.empty != null && binding.empty !== curContext.empty) return false;\n          if (binding.offset != null && binding.offset !== curContext.offset) return false;\n          if (Array.isArray(binding.format)) {\n            // any format is present\n            if (binding.format.every(function (name) {\n              return curContext.format[name] == null;\n            })) {\n              return false;\n            }\n          } else if (_typeof(binding.format) === 'object') {\n            // all formats must match\n            if (!Object.keys(binding.format).every(function (name) {\n              if (binding.format[name] === true) return curContext.format[name] != null;\n              if (binding.format[name] === false) return curContext.format[name] == null;\n              return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);\n            })) {\n              return false;\n            }\n          }\n          if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) return false;\n          if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) return false;\n          return binding.handler.call(_this2, range, curContext) !== true;\n        });\n        if (prevented) {\n          evt.preventDefault();\n        }\n      });\n    }\n  }]);\n\n  return Keyboard;\n}(_module2.default);\n\nKeyboard.keys = {\n  BACKSPACE: 8,\n  TAB: 9,\n  ENTER: 13,\n  ESCAPE: 27,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  DELETE: 46\n};\n\nKeyboard.DEFAULTS = {\n  bindings: {\n    'bold': makeFormatHandler('bold'),\n    'italic': makeFormatHandler('italic'),\n    'underline': makeFormatHandler('underline'),\n    'indent': {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: Keyboard.keys.TAB,\n      format: ['blockquote', 'indent', 'list'],\n      handler: function handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', _quill2.default.sources.USER);\n      }\n    },\n    'outdent': {\n      key: Keyboard.keys.TAB,\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler: function handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', _quill2.default.sources.USER);\n      }\n    },\n    'outdent backspace': {\n      key: Keyboard.keys.BACKSPACE,\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['blockquote', 'indent', 'list'],\n      offset: 0,\n      handler: function handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', _quill2.default.sources.USER);\n        } else if (context.format.blockquote != null) {\n          this.quill.format('blockquote', false, _quill2.default.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, _quill2.default.sources.USER);\n        }\n      }\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: Keyboard.keys.TAB,\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler: function handler(range) {\n        this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);\n      }\n    },\n    'tab': {\n      key: Keyboard.keys.TAB,\n      handler: function handler(range, context) {\n        if (!context.collapsed) {\n          this.quill.scroll.deleteAt(range.index, range.length);\n        }\n        this.quill.insertText(range.index, '\\t', _quill2.default.sources.USER);\n        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n      }\n    },\n    'list empty enter': {\n      key: Keyboard.keys.ENTER,\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler: function handler(range, context) {\n        this.quill.format('list', false, _quill2.default.sources.USER);\n        if (context.format.indent) {\n          this.quill.format('indent', false, _quill2.default.sources.USER);\n        }\n      }\n    },\n    'checklist enter': {\n      key: Keyboard.keys.ENTER,\n      collapsed: true,\n      format: { list: 'checked' },\n      handler: function handler(range) {\n        this.quill.scroll.insertAt(range.index, '\\n');\n\n        var _quill$getLine3 = this.quill.getLine(range.index + 1),\n            _quill$getLine4 = _slicedToArray(_quill$getLine3, 1),\n            line = _quill$getLine4[0];\n\n        line.format('list', 'unchecked');\n        this.quill.update(_quill2.default.sources.USER);\n        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n        this.quill.selection.scrollIntoView();\n      }\n    },\n    'header enter': {\n      key: Keyboard.keys.ENTER,\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler: function handler(range) {\n        this.quill.scroll.insertAt(range.index, '\\n');\n        this.quill.formatText(range.index + 1, 1, 'header', false, _quill2.default.sources.USER);\n        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n        this.quill.selection.scrollIntoView();\n      }\n    },\n    'list autofill': {\n      key: ' ',\n      collapsed: true,\n      format: { list: false },\n      prefix: /^\\s*?(1\\.|-|\\[ ?\\]|\\[x\\])$/,\n      handler: function handler(range, context) {\n        if (this.quill.scroll.whitelist != null && !this.quill.scroll.whitelist['list']) return true;\n        var length = context.prefix.length;\n        var value = void 0;\n        switch (context.prefix.trim()) {\n          case '[]':case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.scroll.deleteAt(range.index - length, length);\n        this.quill.formatLine(range.index - length, 1, 'list', value, _quill2.default.sources.USER);\n        this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);\n      }\n    },\n    'code exit': {\n      key: Keyboard.keys.ENTER,\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /\\n\\n$/,\n      suffix: /^\\s+$/,\n      handler: function handler(range) {\n        this.quill.format('code-block', false, _quill2.default.sources.USER);\n        this.quill.deleteText(range.index - 2, 1, _quill2.default.sources.USER);\n      }\n    }\n  }\n};\n\nfunction handleBackspace(range, context) {\n  if (range.index === 0 || this.quill.getLength() <= 1) return;\n\n  var _quill$getLine5 = this.quill.getLine(range.index),\n      _quill$getLine6 = _slicedToArray(_quill$getLine5, 1),\n      line = _quill$getLine6[0];\n\n  var formats = {};\n  if (context.offset === 0) {\n    var _quill$getLine7 = this.quill.getLine(range.index - 1),\n        _quill$getLine8 = _slicedToArray(_quill$getLine7, 1),\n        prev = _quill$getLine8[0];\n\n    if (prev != null && prev.length() > 1) {\n      var curFormats = line.formats();\n      var prevFormats = this.quill.getFormat(range.index - 1, 1);\n      formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};\n    }\n  }\n  // Check for astral symbols\n  var length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix) ? 2 : 1;\n  this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);\n  }\n  this.quill.selection.scrollIntoView();\n}\n\nfunction handleDelete(range, context) {\n  // Check for astral symbols\n  var length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix) ? 2 : 1;\n  if (range.index >= this.quill.getLength() - length) return;\n  var formats = {},\n      nextLength = 0;\n\n  var _quill$getLine9 = this.quill.getLine(range.index),\n      _quill$getLine10 = _slicedToArray(_quill$getLine9, 1),\n      line = _quill$getLine10[0];\n\n  if (context.offset >= line.length() - 1) {\n    var _quill$getLine11 = this.quill.getLine(range.index + 1),\n        _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),\n        next = _quill$getLine12[0];\n\n    if (next) {\n      var curFormats = line.formats();\n      var nextFormats = this.quill.getFormat(range.index, 1);\n      formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};\n      nextLength = next.length();\n    }\n  }\n  this.quill.deleteText(range.index, length, _quill2.default.sources.USER);\n  if (Object.keys(formats).length > 0) {\n    this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);\n  }\n}\n\nfunction handleDeleteRange(range) {\n  this.quill.deleteText(range, _quill2.default.sources.USER);\n  this.quill.setSelection(range.index, _quill2.default.sources.SILENT);\n  this.quill.selection.scrollIntoView();\n}\n\nfunction handleEnter(range, context) {\n  var _this3 = this;\n\n  if (range.length > 0) {\n    this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change\n  }\n  var lineFormats = Object.keys(context.format).reduce(function (lineFormats, format) {\n    if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {\n      lineFormats[format] = context.format[format];\n    }\n    return lineFormats;\n  }, {});\n  this.quill.insertText(range.index, '\\n', lineFormats, _quill2.default.sources.USER);\n  // Earlier scroll.deleteAt might have messed up our selection,\n  // so insertText's built in selection preservation is not reliable\n  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n  this.quill.selection.scrollIntoView();\n  Object.keys(context.format).forEach(function (name) {\n    if (lineFormats[name] != null) return;\n    if (Array.isArray(context.format[name])) return;\n    if (name === 'link') return;\n    _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);\n  });\n}\n\nfunction makeCodeBlockHandler(indent) {\n  return {\n    key: Keyboard.keys.TAB,\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler: function handler(range) {\n      var CodeBlock = _parchment2.default.query('code-block');\n      var index = range.index,\n          length = range.length;\n\n      var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index),\n          _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),\n          block = _quill$scroll$descend2[0],\n          offset = _quill$scroll$descend2[1];\n\n      if (block == null) return;\n      var scrollIndex = this.quill.getIndex(block);\n      var start = block.newlineIndex(offset, true) + 1;\n      var end = block.newlineIndex(scrollIndex + offset + length);\n      var lines = block.domNode.textContent.slice(start, end).split('\\n');\n      offset = 0;\n      lines.forEach(function (line, i) {\n        if (indent) {\n          block.insertAt(start + offset, CodeBlock.TAB);\n          offset += CodeBlock.TAB.length;\n          if (i === 0) {\n            index += CodeBlock.TAB.length;\n          } else {\n            length += CodeBlock.TAB.length;\n          }\n        } else if (line.startsWith(CodeBlock.TAB)) {\n          block.deleteAt(start + offset, CodeBlock.TAB.length);\n          offset -= CodeBlock.TAB.length;\n          if (i === 0) {\n            index -= CodeBlock.TAB.length;\n          } else {\n            length -= CodeBlock.TAB.length;\n          }\n        }\n        offset += line.length + 1;\n      });\n      this.quill.update(_quill2.default.sources.USER);\n      this.quill.setSelection(index, length, _quill2.default.sources.SILENT);\n    }\n  };\n}\n\nfunction makeFormatHandler(format) {\n  return {\n    key: format[0].toUpperCase(),\n    shortKey: true,\n    handler: function handler(range, context) {\n      this.quill.format(format, !context.format[format], _quill2.default.sources.USER);\n    }\n  };\n}\n\nfunction normalize(binding) {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    return normalize({ key: binding });\n  }\n  if ((typeof binding === 'undefined' ? 'undefined' : _typeof(binding)) === 'object') {\n    binding = (0, _clone2.default)(binding, false);\n  }\n  if (typeof binding.key === 'string') {\n    if (Keyboard.keys[binding.key.toUpperCase()] != null) {\n      binding.key = Keyboard.keys[binding.key.toUpperCase()];\n    } else if (binding.key.length === 1) {\n      binding.key = binding.key.toUpperCase().charCodeAt(0);\n    } else {\n      return null;\n    }\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\nexports.default = Keyboard;\nexports.SHORTKEY = SHORTKEY;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = __webpack_require__(13);\nfunction match(node, prefix) {\n    var className = node.getAttribute('class') || '';\n    return className.split(/\\s+/).filter(function (name) {\n        return name.indexOf(prefix + \"-\") === 0;\n    });\n}\nvar ClassAttributor = (function (_super) {\n    __extends(ClassAttributor, _super);\n    function ClassAttributor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ClassAttributor.keys = function (node) {\n        return (node.getAttribute('class') || '').split(/\\s+/).map(function (name) {\n            return name.split('-').slice(0, -1).join('-');\n        });\n    };\n    ClassAttributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        this.remove(node);\n        node.classList.add(this.keyName + \"-\" + value);\n        return true;\n    };\n    ClassAttributor.prototype.remove = function (node) {\n        var matches = match(node, this.keyName);\n        matches.forEach(function (name) {\n            node.classList.remove(name);\n        });\n        if (node.classList.length === 0) {\n            node.removeAttribute('class');\n        }\n    };\n    ClassAttributor.prototype.value = function (node) {\n        var result = match(node, this.keyName)[0] || '';\n        var value = result.slice(this.keyName.length + 1); // +1 for hyphen\n        return this.canAdd(node, value) ? value : '';\n    };\n    return ClassAttributor;\n}(attributor_1.default));\nexports.default = ClassAttributor;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = __webpack_require__(13);\nvar class_1 = __webpack_require__(31);\nvar style_1 = __webpack_require__(33);\nvar Registry = __webpack_require__(1);\nvar AttributorStore = (function () {\n    function AttributorStore(domNode) {\n        this.attributes = {};\n        this.domNode = domNode;\n        this.build();\n    }\n    AttributorStore.prototype.attribute = function (attribute, value) {\n        if (value) {\n            if (attribute.add(this.domNode, value)) {\n                if (attribute.value(this.domNode) != null) {\n                    this.attributes[attribute.attrName] = attribute;\n                }\n                else {\n                    delete this.attributes[attribute.attrName];\n                }\n            }\n        }\n        else {\n            attribute.remove(this.domNode);\n            delete this.attributes[attribute.attrName];\n        }\n    };\n    AttributorStore.prototype.build = function () {\n        var _this = this;\n        this.attributes = {};\n        var attributes = attributor_1.default.keys(this.domNode);\n        var classes = class_1.default.keys(this.domNode);\n        var styles = style_1.default.keys(this.domNode);\n        attributes.concat(classes).concat(styles).forEach(function (name) {\n            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);\n            if (attr instanceof attributor_1.default) {\n                _this.attributes[attr.attrName] = attr;\n            }\n        });\n    };\n    AttributorStore.prototype.copy = function (target) {\n        var _this = this;\n        Object.keys(this.attributes).forEach(function (key) {\n            var value = _this.attributes[key].value(_this.domNode);\n            target.format(key, value);\n        });\n    };\n    AttributorStore.prototype.move = function (target) {\n        var _this = this;\n        this.copy(target);\n        Object.keys(this.attributes).forEach(function (key) {\n            _this.attributes[key].remove(_this.domNode);\n        });\n        this.attributes = {};\n    };\n    AttributorStore.prototype.values = function () {\n        var _this = this;\n        return Object.keys(this.attributes).reduce(function (attributes, name) {\n            attributes[name] = _this.attributes[name].value(_this.domNode);\n            return attributes;\n        }, {});\n    };\n    return AttributorStore;\n}());\nexports.default = AttributorStore;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = __webpack_require__(13);\nfunction camelize(name) {\n    var parts = name.split('-');\n    var rest = parts.slice(1).map(function (part) {\n        return part[0].toUpperCase() + part.slice(1);\n    }).join('');\n    return parts[0] + rest;\n}\nvar StyleAttributor = (function (_super) {\n    __extends(StyleAttributor, _super);\n    function StyleAttributor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StyleAttributor.keys = function (node) {\n        return (node.getAttribute('style') || '').split(';').map(function (value) {\n            var arr = value.split(':');\n            return arr[0].trim();\n        });\n    };\n    StyleAttributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        node.style[camelize(this.keyName)] = value;\n        return true;\n    };\n    StyleAttributor.prototype.remove = function (node) {\n        node.style[camelize(this.keyName)] = '';\n        if (!node.getAttribute('style')) {\n            node.removeAttribute('style');\n        }\n    };\n    StyleAttributor.prototype.value = function (node) {\n        var value = node.style[camelize(this.keyName)];\n        return this.canAdd(node, value) ? value : '';\n    };\n    return StyleAttributor;\n}(attributor_1.default));\nexports.default = StyleAttributor;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Registry = __webpack_require__(1);\nvar ShadowBlot = (function () {\n    function ShadowBlot(domNode) {\n        this.domNode = domNode;\n        this.attach();\n    }\n    Object.defineProperty(ShadowBlot.prototype, \"statics\", {\n        // Hack for accessing inherited static methods\n        get: function () {\n            return this.constructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowBlot.create = function (value) {\n        if (this.tagName == null) {\n            throw new Registry.ParchmentError('Blot definition missing tagName');\n        }\n        var node;\n        if (Array.isArray(this.tagName)) {\n            if (typeof value === 'string') {\n                value = value.toUpperCase();\n                if (parseInt(value).toString() === value) {\n                    value = parseInt(value);\n                }\n            }\n            if (typeof value === 'number') {\n                node = document.createElement(this.tagName[value - 1]);\n            }\n            else if (this.tagName.indexOf(value) > -1) {\n                node = document.createElement(value);\n            }\n            else {\n                node = document.createElement(this.tagName[0]);\n            }\n        }\n        else {\n            node = document.createElement(this.tagName);\n        }\n        if (this.className) {\n            node.classList.add(this.className);\n        }\n        return node;\n    };\n    ShadowBlot.prototype.attach = function () {\n        this.domNode[Registry.DATA_KEY] = { blot: this };\n    };\n    ShadowBlot.prototype.clone = function () {\n        var domNode = this.domNode.cloneNode();\n        return Registry.create(domNode);\n    };\n    ShadowBlot.prototype.detach = function () {\n        if (this.parent != null)\n            this.parent.removeChild(this);\n        delete this.domNode[Registry.DATA_KEY];\n    };\n    ShadowBlot.prototype.deleteAt = function (index, length) {\n        var blot = this.isolate(index, length);\n        blot.remove();\n    };\n    ShadowBlot.prototype.formatAt = function (index, length, name, value) {\n        var blot = this.isolate(index, length);\n        if (Registry.query(name, Registry.Scope.BLOT) != null && value) {\n            blot.wrap(name, value);\n        }\n        else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {\n            var parent = Registry.create(this.statics.scope);\n            blot.wrap(parent);\n            parent.format(name, value);\n        }\n    };\n    ShadowBlot.prototype.insertAt = function (index, value, def) {\n        var blot = (def == null) ? Registry.create('text', value) : Registry.create(value, def);\n        var ref = this.split(index);\n        this.parent.insertBefore(blot, ref);\n    };\n    ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {\n        if (this.parent != null) {\n            this.parent.children.remove(this);\n        }\n        parentBlot.children.insertBefore(this, refBlot);\n        if (refBlot != null) {\n            var refDomNode = refBlot.domNode;\n        }\n        if (this.next == null || this.domNode.nextSibling != refDomNode) {\n            parentBlot.domNode.insertBefore(this.domNode, (typeof refDomNode !== 'undefined') ? refDomNode : null);\n        }\n        this.parent = parentBlot;\n    };\n    ShadowBlot.prototype.isolate = function (index, length) {\n        var target = this.split(index);\n        target.split(length);\n        return target;\n    };\n    ShadowBlot.prototype.length = function () {\n        return 1;\n    };\n    ;\n    ShadowBlot.prototype.offset = function (root) {\n        if (root === void 0) { root = this.parent; }\n        if (this.parent == null || this == root)\n            return 0;\n        return this.parent.children.offset(this) + this.parent.offset(root);\n    };\n    ShadowBlot.prototype.optimize = function () {\n        // TODO clean up once we use WeakMap\n        if (this.domNode[Registry.DATA_KEY] != null) {\n            delete this.domNode[Registry.DATA_KEY].mutations;\n        }\n    };\n    ShadowBlot.prototype.remove = function () {\n        if (this.domNode.parentNode != null) {\n            this.domNode.parentNode.removeChild(this.domNode);\n        }\n        this.detach();\n    };\n    ShadowBlot.prototype.replace = function (target) {\n        if (target.parent == null)\n            return;\n        target.parent.insertBefore(this, target.next);\n        target.remove();\n    };\n    ShadowBlot.prototype.replaceWith = function (name, value) {\n        var replacement = typeof name === 'string' ? Registry.create(name, value) : name;\n        replacement.replace(this);\n        return replacement;\n    };\n    ShadowBlot.prototype.split = function (index, force) {\n        return index === 0 ? this : this.next;\n    };\n    ShadowBlot.prototype.update = function (mutations) {\n        if (mutations === void 0) { mutations = []; }\n        // Nothing to do by default\n    };\n    ShadowBlot.prototype.wrap = function (name, value) {\n        var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;\n        if (this.parent != null) {\n            this.parent.insertBefore(wrapper, this.next);\n        }\n        wrapper.appendChild(this);\n        return wrapper;\n    };\n    return ShadowBlot;\n}());\nShadowBlot.blotName = 'abstract';\nexports.default = ShadowBlot;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _break = __webpack_require__(17);\n\nvar _break2 = _interopRequireDefault(_break);\n\nvar _container = __webpack_require__(24);\n\nvar _container2 = _interopRequireDefault(_container);\n\nvar _cursor = __webpack_require__(25);\n\nvar _cursor2 = _interopRequireDefault(_cursor);\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nvar _scroll = __webpack_require__(18);\n\nvar _scroll2 = _interopRequireDefault(_scroll);\n\nvar _text = __webpack_require__(12);\n\nvar _text2 = _interopRequireDefault(_text);\n\nvar _clipboard = __webpack_require__(45);\n\nvar _clipboard2 = _interopRequireDefault(_clipboard);\n\nvar _history = __webpack_require__(42);\n\nvar _history2 = _interopRequireDefault(_history);\n\nvar _keyboard = __webpack_require__(30);\n\nvar _keyboard2 = _interopRequireDefault(_keyboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_quill2.default.register({\n  'blots/block': _block2.default,\n  'blots/block/embed': _block.BlockEmbed,\n  'blots/break': _break2.default,\n  'blots/container': _container2.default,\n  'blots/cursor': _cursor2.default,\n  'blots/embed': _embed2.default,\n  'blots/inline': _inline2.default,\n  'blots/scroll': _scroll2.default,\n  'blots/text': _text2.default,\n\n  'modules/clipboard': _clipboard2.default,\n  'modules/history': _history2.default,\n  'modules/keyboard': _keyboard2.default\n});\n\n_parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);\n\nmodule.exports = _quill2.default;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  scope: _parchment2.default.Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify']\n};\n\nvar AlignAttribute = new _parchment2.default.Attributor.Attribute('align', 'align', config);\nvar AlignClass = new _parchment2.default.Attributor.Class('align', 'ql-align', config);\nvar AlignStyle = new _parchment2.default.Attributor.Style('align', 'text-align', config);\n\nexports.AlignAttribute = AlignAttribute;\nexports.AlignClass = AlignClass;\nexports.AlignStyle = AlignStyle;\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BackgroundStyle = exports.BackgroundClass = undefined;\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _color = __webpack_require__(26);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BackgroundClass = new _parchment2.default.Attributor.Class('background', 'ql-bg', {\n  scope: _parchment2.default.Scope.INLINE\n});\nvar BackgroundStyle = new _color.ColorAttributor('background', 'background-color', {\n  scope: _parchment2.default.Scope.INLINE\n});\n\nexports.BackgroundClass = BackgroundClass;\nexports.BackgroundStyle = BackgroundStyle;\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  scope: _parchment2.default.Scope.BLOCK,\n  whitelist: ['rtl']\n};\n\nvar DirectionAttribute = new _parchment2.default.Attributor.Attribute('direction', 'dir', config);\nvar DirectionClass = new _parchment2.default.Attributor.Class('direction', 'ql-direction', config);\nvar DirectionStyle = new _parchment2.default.Attributor.Style('direction', 'direction', config);\n\nexports.DirectionAttribute = DirectionAttribute;\nexports.DirectionClass = DirectionClass;\nexports.DirectionStyle = DirectionStyle;\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontClass = exports.FontStyle = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar config = {\n  scope: _parchment2.default.Scope.INLINE,\n  whitelist: ['serif', 'monospace']\n};\n\nvar FontClass = new _parchment2.default.Attributor.Class('font', 'ql-font', config);\n\nvar FontStyleAttributor = function (_Parchment$Attributor) {\n  _inherits(FontStyleAttributor, _Parchment$Attributor);\n\n  function FontStyleAttributor() {\n    _classCallCheck(this, FontStyleAttributor);\n\n    return _possibleConstructorReturn(this, (FontStyleAttributor.__proto__ || Object.getPrototypeOf(FontStyleAttributor)).apply(this, arguments));\n  }\n\n  _createClass(FontStyleAttributor, [{\n    key: 'value',\n    value: function value(node) {\n      return _get(FontStyleAttributor.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor.prototype), 'value', this).call(this, node).replace(/[\"']/g, '');\n    }\n  }]);\n\n  return FontStyleAttributor;\n}(_parchment2.default.Attributor.Style);\n\nvar FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexports.FontStyle = FontStyle;\nexports.FontClass = FontClass;\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SizeStyle = exports.SizeClass = undefined;\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SizeClass = new _parchment2.default.Attributor.Class('size', 'ql-size', {\n  scope: _parchment2.default.Scope.INLINE,\n  whitelist: ['small', 'large', 'huge']\n});\nvar SizeStyle = new _parchment2.default.Attributor.Style('size', 'font-size', {\n  scope: _parchment2.default.Scope.INLINE,\n  whitelist: ['10px', '18px', '32px']\n});\n\nexports.SizeClass = SizeClass;\nexports.SizeStyle = SizeStyle;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  'align': {\n    '': __webpack_require__(79),\n    'center': __webpack_require__(77),\n    'right': __webpack_require__(80),\n    'justify': __webpack_require__(78)\n  },\n  'background': __webpack_require__(81),\n  'blockquote': __webpack_require__(82),\n  'bold': __webpack_require__(83),\n  'clean': __webpack_require__(84),\n  'code': __webpack_require__(55),\n  'code-block': __webpack_require__(55),\n  'color': __webpack_require__(85),\n  'direction': {\n    '': __webpack_require__(86),\n    'rtl': __webpack_require__(87)\n  },\n  'float': {\n    'center': __webpack_require__(89),\n    'full': __webpack_require__(90),\n    'left': __webpack_require__(91),\n    'right': __webpack_require__(92)\n  },\n  'formula': __webpack_require__(93),\n  'header': {\n    '1': __webpack_require__(95),\n    '2': __webpack_require__(94)\n  },\n  'italic': __webpack_require__(98),\n  'image': __webpack_require__(96),\n  'indent': {\n    '+1': __webpack_require__(97),\n    '-1': __webpack_require__(103)\n  },\n  'link': __webpack_require__(99),\n  'list': {\n    'ordered': __webpack_require__(102),\n    'bullet': __webpack_require__(100),\n    'check': __webpack_require__(101)\n  },\n  'script': {\n    'sub': __webpack_require__(105),\n    'super': __webpack_require__(106)\n  },\n  'strike': __webpack_require__(104),\n  'underline': __webpack_require__(107),\n  'video': __webpack_require__(108)\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLastChangeIndex = exports.default = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar History = function (_Module) {\n  _inherits(History, _Module);\n\n  function History(quill, options) {\n    _classCallCheck(this, History);\n\n    var _this = _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).call(this, quill, options));\n\n    _this.lastRecorded = 0;\n    _this.ignoreChange = false;\n    _this.clear();\n    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {\n      if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange) return;\n      if (!_this.options.userOnly || source === _quill2.default.sources.USER) {\n        _this.record(delta, oldDelta);\n      } else {\n        _this.transform(delta);\n      }\n    });\n    _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true }, _this.undo.bind(_this));\n    _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true, shiftKey: true }, _this.redo.bind(_this));\n    if (/Win/i.test(navigator.platform)) {\n      _this.quill.keyboard.addBinding({ key: 'Y', shortKey: true }, _this.redo.bind(_this));\n    }\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: 'change',\n    value: function change(source, dest) {\n      if (this.stack[source].length === 0) return;\n      var delta = this.stack[source].pop();\n      this.lastRecorded = 0;\n      this.ignoreChange = true;\n      this.quill.updateContents(delta[source], _quill2.default.sources.USER);\n      this.ignoreChange = false;\n      var index = getLastChangeIndex(delta[source]);\n      this.quill.setSelection(index);\n      this.quill.selection.scrollIntoView();\n      this.stack[dest].push(delta);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.stack = { undo: [], redo: [] };\n    }\n  }, {\n    key: 'record',\n    value: function record(changeDelta, oldDelta) {\n      if (changeDelta.ops.length === 0) return;\n      this.stack.redo = [];\n      var undoDelta = this.quill.getContents().diff(oldDelta);\n      var timestamp = Date.now();\n      if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {\n        var delta = this.stack.undo.pop();\n        undoDelta = undoDelta.compose(delta.undo);\n        changeDelta = delta.redo.compose(changeDelta);\n      } else {\n        this.lastRecorded = timestamp;\n      }\n      this.stack.undo.push({\n        redo: changeDelta,\n        undo: undoDelta\n      });\n      if (this.stack.undo.length > this.options.maxStack) {\n        this.stack.undo.shift();\n      }\n    }\n  }, {\n    key: 'redo',\n    value: function redo() {\n      this.change('redo', 'undo');\n    }\n  }, {\n    key: 'transform',\n    value: function transform(delta) {\n      this.stack.undo.forEach(function (change) {\n        change.undo = delta.transform(change.undo, true);\n        change.redo = delta.transform(change.redo, true);\n      });\n      this.stack.redo.forEach(function (change) {\n        change.undo = delta.transform(change.undo, true);\n        change.redo = delta.transform(change.redo, true);\n      });\n    }\n  }, {\n    key: 'undo',\n    value: function undo() {\n      this.change('undo', 'redo');\n    }\n  }]);\n\n  return History;\n}(_module2.default);\n\nHistory.DEFAULTS = {\n  delay: 1000,\n  maxStack: 100,\n  userOnly: false\n};\n\nfunction endsWithNewlineChange(delta) {\n  var lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some(function (attr) {\n      return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(delta) {\n  var deleteLength = delta.reduce(function (length, op) {\n    length += op.delete || 0;\n    return length;\n  }, 0);\n  var changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nexports.default = History;\nexports.getLastChangeIndex = getLastChangeIndex;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar elem = document.createElement('div');\nelem.classList.toggle('test-class', false);\nif (elem.classList.contains('test-class')) {\n  var _toggle = DOMTokenList.prototype.toggle;\n  DOMTokenList.prototype.toggle = function (token, force) {\n    if (arguments.length > 1 && !this.contains(token) === !force) {\n      return force;\n    } else {\n      return _toggle.call(this, token);\n    }\n  };\n}\n\nif (!String.prototype.startsWith) {\n  String.prototype.startsWith = function (searchString, position) {\n    position = position || 0;\n    return this.substr(position, searchString.length) === searchString;\n  };\n}\n\nif (!String.prototype.endsWith) {\n  String.prototype.endsWith = function (searchString, position) {\n    var subjectString = this.toString();\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n      position = subjectString.length;\n    }\n    position -= searchString.length;\n    var lastIndex = subjectString.indexOf(searchString, position);\n    return lastIndex !== -1 && lastIndex === position;\n  };\n}\n\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function value(predicate) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.find called on null or undefined');\n      }\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      var list = Object(this);\n      var length = list.length >>> 0;\n      var thisArg = arguments[1];\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return value;\n        }\n      }\n      return undefined;\n    }\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Disable resizing in Firefox\n  document.execCommand(\"enableObjectResizing\", false, false);\n  // Disable automatic linkifying in IE11\n  document.execCommand(\"autoUrlDetect\", false, false);\n});\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Bold = function (_Inline) {\n  _inherits(Bold, _Inline);\n\n  function Bold() {\n    _classCallCheck(this, Bold);\n\n    return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));\n  }\n\n  _createClass(Bold, [{\n    key: 'optimize',\n    value: function optimize() {\n      _get(Bold.prototype.__proto__ || Object.getPrototypeOf(Bold.prototype), 'optimize', this).call(this);\n      if (this.domNode.tagName !== this.statics.tagName[0]) {\n        this.replaceWith(this.statics.blotName);\n      }\n    }\n  }], [{\n    key: 'create',\n    value: function create() {\n      return _get(Bold.__proto__ || Object.getPrototypeOf(Bold), 'create', this).call(this);\n    }\n  }, {\n    key: 'formats',\n    value: function formats() {\n      return true;\n    }\n  }]);\n\n  return Bold;\n}(_inline2.default);\n\nBold.blotName = 'bold';\nBold.tagName = ['STRONG', 'B'];\n\nexports.default = Bold;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchText = exports.matchSpacing = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports.default = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extend2 = __webpack_require__(3);\n\nvar _extend3 = _interopRequireDefault(_extend2);\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _logger = __webpack_require__(10);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nvar _align = __webpack_require__(36);\n\nvar _background = __webpack_require__(37);\n\nvar _color = __webpack_require__(26);\n\nvar _direction = __webpack_require__(38);\n\nvar _font = __webpack_require__(39);\n\nvar _size = __webpack_require__(40);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar debug = (0, _logger2.default)('quill:clipboard');\n\nvar DOM_KEY = '__ql-matcher';\n\nvar CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['b', matchAlias.bind(matchAlias, 'bold')], ['i', matchAlias.bind(matchAlias, 'italic')], ['style', matchIgnore]];\n\nvar ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function (memo, attr) {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\nvar STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function (memo, attr) {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\nvar Clipboard = function (_Module) {\n  _inherits(Clipboard, _Module);\n\n  function Clipboard(quill, options) {\n    _classCallCheck(this, Clipboard);\n\n    var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this, quill, options));\n\n    _this.quill.root.addEventListener('paste', _this.onPaste.bind(_this));\n    _this.container = _this.quill.addContainer('ql-clipboard');\n    _this.container.setAttribute('contenteditable', true);\n    _this.container.setAttribute('tabindex', -1);\n    _this.matchers = [];\n    CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function (pair) {\n      _this.addMatcher.apply(_this, _toConsumableArray(pair));\n    });\n    return _this;\n  }\n\n  _createClass(Clipboard, [{\n    key: 'addMatcher',\n    value: function addMatcher(selector, matcher) {\n      this.matchers.push([selector, matcher]);\n    }\n  }, {\n    key: 'convert',\n    value: function convert(html) {\n      if (typeof html === 'string') {\n        this.container.innerHTML = html.replace(/\\>\\r?\\n +\\</g, '><'); // Remove spaces between tags\n      }\n\n      var _prepareMatching = this.prepareMatching(),\n          _prepareMatching2 = _slicedToArray(_prepareMatching, 2),\n          elementMatchers = _prepareMatching2[0],\n          textMatchers = _prepareMatching2[1];\n\n      var delta = traverse(this.container, elementMatchers, textMatchers);\n      // Remove trailing newline\n      if (deltaEndsWith(delta, '\\n') && delta.ops[delta.ops.length - 1].attributes == null) {\n        delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));\n      }\n      debug.log('convert', this.container.innerHTML, delta);\n      this.container.innerHTML = '';\n      return delta;\n    }\n  }, {\n    key: 'dangerouslyPasteHTML',\n    value: function dangerouslyPasteHTML(index, html) {\n      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _quill2.default.sources.API;\n\n      if (typeof index === 'string') {\n        return this.quill.setContents(this.convert(index), html);\n      } else {\n        var paste = this.convert(html);\n        return this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);\n      }\n    }\n  }, {\n    key: 'onPaste',\n    value: function onPaste(e) {\n      var _this2 = this;\n\n      if (e.defaultPrevented || !this.quill.isEnabled()) return;\n      var range = this.quill.getSelection();\n      var delta = new _quillDelta2.default().retain(range.index);\n      var scrollTop = this.quill.scrollingContainer.scrollTop;\n      this.container.focus();\n      setTimeout(function () {\n        _this2.quill.selection.update(_quill2.default.sources.SILENT);\n        delta = delta.concat(_this2.convert()).delete(range.length);\n        _this2.quill.updateContents(delta, _quill2.default.sources.USER);\n        // range.length contributes to delta.length()\n        _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);\n        _this2.quill.scrollingContainer.scrollTop = scrollTop;\n        _this2.quill.selection.scrollIntoView();\n      }, 1);\n    }\n  }, {\n    key: 'prepareMatching',\n    value: function prepareMatching() {\n      var _this3 = this;\n\n      var elementMatchers = [],\n          textMatchers = [];\n      this.matchers.forEach(function (pair) {\n        var _pair = _slicedToArray(pair, 2),\n            selector = _pair[0],\n            matcher = _pair[1];\n\n        switch (selector) {\n          case Node.TEXT_NODE:\n            textMatchers.push(matcher);\n            break;\n          case Node.ELEMENT_NODE:\n            elementMatchers.push(matcher);\n            break;\n          default:\n            [].forEach.call(_this3.container.querySelectorAll(selector), function (node) {\n              // TODO use weakmap\n              node[DOM_KEY] = node[DOM_KEY] || [];\n              node[DOM_KEY].push(matcher);\n            });\n            break;\n        }\n      });\n      return [elementMatchers, textMatchers];\n    }\n  }]);\n\n  return Clipboard;\n}(_module2.default);\n\nClipboard.DEFAULTS = {\n  matchers: []\n};\n\nfunction applyFormat(delta, format, value) {\n  if ((typeof format === 'undefined' ? 'undefined' : _typeof(format)) === 'object') {\n    return Object.keys(format).reduce(function (delta, key) {\n      return applyFormat(delta, key, format[key]);\n    }, delta);\n  } else {\n    return delta.reduce(function (delta, op) {\n      if (op.attributes && op.attributes[format]) {\n        return delta.push(op);\n      } else {\n        return delta.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value), op.attributes));\n      }\n    }, new _quillDelta2.default());\n  }\n}\n\nfunction computeStyle(node) {\n  if (node.nodeType !== Node.ELEMENT_NODE) return {};\n  var DOM_KEY = '__ql-computed-style';\n  return node[DOM_KEY] || (node[DOM_KEY] = window.getComputedStyle(node));\n}\n\nfunction deltaEndsWith(delta, text) {\n  var endText = \"\";\n  for (var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i) {\n    var op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node) {\n  if (node.childNodes.length === 0) return false; // Exclude embed blocks\n  var style = computeStyle(node);\n  return ['block', 'list-item'].indexOf(style.display) > -1;\n}\n\nfunction traverse(node, elementMatchers, textMatchers) {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce(function (delta, matcher) {\n      return matcher(node, delta);\n    }, new _quillDelta2.default());\n  } else if (node.nodeType === node.ELEMENT_NODE) {\n    return [].reduce.call(node.childNodes || [], function (delta, childNode) {\n      var childrenDelta = traverse(childNode, elementMatchers, textMatchers);\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce(function (childrenDelta, matcher) {\n          return matcher(childNode, childrenDelta);\n        }, childrenDelta);\n        childrenDelta = (childNode[DOM_KEY] || []).reduce(function (childrenDelta, matcher) {\n          return matcher(childNode, childrenDelta);\n        }, childrenDelta);\n      }\n      return delta.concat(childrenDelta);\n    }, new _quillDelta2.default());\n  } else {\n    return new _quillDelta2.default();\n  }\n}\n\nfunction matchAlias(format, node, delta) {\n  return applyFormat(delta, format, true);\n}\n\nfunction matchAttributor(node, delta) {\n  var attributes = _parchment2.default.Attributor.Attribute.keys(node);\n  var classes = _parchment2.default.Attributor.Class.keys(node);\n  var styles = _parchment2.default.Attributor.Style.keys(node);\n  var formats = {};\n  attributes.concat(classes).concat(styles).forEach(function (name) {\n    var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);\n    if (attr != null) {\n      formats[attr.attrName] = attr.value(node);\n      if (formats[attr.attrName]) return;\n    }\n    if (ATTRIBUTE_ATTRIBUTORS[name] != null) {\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      formats[attr.attrName] = attr.value(node) || undefined;\n    }\n    if (STYLE_ATTRIBUTORS[name] != null) {\n      attr = STYLE_ATTRIBUTORS[name];\n      formats[attr.attrName] = attr.value(node) || undefined;\n    }\n  });\n  if (Object.keys(formats).length > 0) {\n    delta = applyFormat(delta, formats);\n  }\n  return delta;\n}\n\nfunction matchBlot(node, delta) {\n  var match = _parchment2.default.query(node);\n  if (match == null) return delta;\n  if (match.prototype instanceof _parchment2.default.Embed) {\n    var embed = {};\n    var value = match.value(node);\n    if (value != null) {\n      embed[match.blotName] = value;\n      delta = new _quillDelta2.default().insert(embed, match.formats(node));\n    }\n  } else if (typeof match.formats === 'function') {\n    delta = applyFormat(delta, match.blotName, match.formats(node));\n  }\n  return delta;\n}\n\nfunction matchBreak(node, delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchIgnore() {\n  return new _quillDelta2.default();\n}\n\nfunction matchIndent(node, delta) {\n  var match = _parchment2.default.query(node);\n  if (match == null || match.blotName !== 'list-item' || !deltaEndsWith(delta, '\\n')) {\n    return delta;\n  }\n  var indent = -1,\n      parent = node.parentNode;\n  while (!parent.classList.contains('ql-clipboard')) {\n    if ((_parchment2.default.query(parent) || {}).blotName === 'list') {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent: indent }));\n}\n\nfunction matchNewline(node, delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {\n      delta.insert('\\n');\n    }\n  }\n  return delta;\n}\n\nfunction matchSpacing(node, delta) {\n  if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, '\\n\\n')) {\n    var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);\n    if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {\n      delta.insert('\\n');\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node, delta) {\n  var formats = {};\n  var style = node.style || {};\n  if (style.fontStyle && computeStyle(node).fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (style.fontWeight && computeStyle(node).fontWeight === 'bold') {\n    formats.bold = true;\n  }\n  if (Object.keys(formats).length > 0) {\n    delta = applyFormat(delta, formats);\n  }\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    delta = new _quillDelta2.default().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchText(node, delta) {\n  var text = node.data;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentNode.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (text.trim().length === 0 && node.parentNode.classList.contains('ql-clipboard')) {\n    return delta;\n  }\n  if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {\n    // eslint-disable-next-line func-style\n    var replacer = function replacer(collapse, match) {\n      match = match.replace(/[^\\u00a0]/g, ''); // \\u00a0 is nbsp;\n      return match.length < 1 && collapse ? ' ' : match;\n    };\n    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');\n    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\n    if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {\n      text = text.replace(/^\\s+/, replacer.bind(replacer, false));\n    }\n    if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {\n      text = text.replace(/\\s+$/, replacer.bind(replacer, false));\n    }\n  }\n  return delta.insert(text);\n}\n\nexports.default = Clipboard;\nexports.matchAttributor = matchAttributor;\nexports.matchBlot = matchBlot;\nexports.matchNewline = matchNewline;\nexports.matchSpacing = matchSpacing;\nexports.matchText = matchText;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addControls = exports.default = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _logger = __webpack_require__(10);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar debug = (0, _logger2.default)('quill:toolbar');\n\nvar Toolbar = function (_Module) {\n  _inherits(Toolbar, _Module);\n\n  function Toolbar(quill, options) {\n    _classCallCheck(this, Toolbar);\n\n    var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, quill, options));\n\n    if (Array.isArray(_this.options.container)) {\n      var container = document.createElement('div');\n      addControls(container, _this.options.container);\n      quill.container.parentNode.insertBefore(container, quill.container);\n      _this.container = container;\n    } else if (typeof _this.options.container === 'string') {\n      _this.container = document.querySelector(_this.options.container);\n    } else {\n      _this.container = _this.options.container;\n    }\n    if (!(_this.container instanceof HTMLElement)) {\n      var _ret;\n\n      return _ret = debug.error('Container required for toolbar', _this.options), _possibleConstructorReturn(_this, _ret);\n    }\n    _this.container.classList.add('ql-toolbar');\n    _this.controls = [];\n    _this.handlers = {};\n    Object.keys(_this.options.handlers).forEach(function (format) {\n      _this.addHandler(format, _this.options.handlers[format]);\n    });\n    [].forEach.call(_this.container.querySelectorAll('button, select'), function (input) {\n      _this.attach(input);\n    });\n    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (type, range) {\n      if (type === _quill2.default.events.SELECTION_CHANGE) {\n        _this.update(range);\n      }\n    });\n    _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {\n      var _this$quill$selection = _this.quill.selection.getRange(),\n          _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),\n          range = _this$quill$selection2[0]; // quill.getSelection triggers update\n\n\n      _this.update(range);\n    });\n    return _this;\n  }\n\n  _createClass(Toolbar, [{\n    key: 'addHandler',\n    value: function addHandler(format, handler) {\n      this.handlers[format] = handler;\n    }\n  }, {\n    key: 'attach',\n    value: function attach(input) {\n      var _this2 = this;\n\n      var format = [].find.call(input.classList, function (className) {\n        return className.indexOf('ql-') === 0;\n      });\n      if (!format) return;\n      format = format.slice('ql-'.length);\n      if (input.tagName === 'BUTTON') {\n        input.setAttribute('type', 'button');\n      }\n      if (this.handlers[format] == null) {\n        if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {\n          debug.warn('ignoring attaching to disabled format', format, input);\n          return;\n        }\n        if (_parchment2.default.query(format) == null) {\n          debug.warn('ignoring attaching to nonexistent format', format, input);\n          return;\n        }\n      }\n      var eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n      input.addEventListener(eventName, function (e) {\n        var value = void 0;\n        if (input.tagName === 'SELECT') {\n          if (input.selectedIndex < 0) return;\n          var selected = input.options[input.selectedIndex];\n          if (selected.hasAttribute('selected')) {\n            value = false;\n          } else {\n            value = selected.value || false;\n          }\n        } else {\n          if (input.classList.contains('ql-active')) {\n            value = false;\n          } else {\n            value = input.value || !input.hasAttribute('value');\n          }\n          e.preventDefault();\n        }\n        _this2.quill.focus();\n\n        var _quill$selection$getR = _this2.quill.selection.getRange(),\n            _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1),\n            range = _quill$selection$getR2[0];\n\n        if (_this2.handlers[format] != null) {\n          _this2.handlers[format].call(_this2, value);\n        } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {\n          value = prompt('Enter ' + format);\n          if (!value) return;\n          _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value)), _quill2.default.sources.USER);\n        } else {\n          _this2.quill.format(format, value, _quill2.default.sources.USER);\n        }\n        _this2.update(range);\n      });\n      // TODO use weakmap\n      this.controls.push([format, input]);\n    }\n  }, {\n    key: 'update',\n    value: function update(range) {\n      var formats = range == null ? {} : this.quill.getFormat(range);\n      this.controls.forEach(function (pair) {\n        var _pair = _slicedToArray(pair, 2),\n            format = _pair[0],\n            input = _pair[1];\n\n        if (input.tagName === 'SELECT') {\n          var option = void 0;\n          if (range == null) {\n            option = null;\n          } else if (formats[format] == null) {\n            option = input.querySelector('option[selected]');\n          } else if (!Array.isArray(formats[format])) {\n            var value = formats[format];\n            if (typeof value === 'string') {\n              value = value.replace(/\\\"/g, '\\\\\"');\n            }\n            option = input.querySelector('option[value=\"' + value + '\"]');\n          }\n          if (option == null) {\n            input.value = ''; // TODO make configurable?\n            input.selectedIndex = -1;\n          } else {\n            option.selected = true;\n          }\n        } else {\n          if (range == null) {\n            input.classList.remove('ql-active');\n          } else if (input.hasAttribute('value')) {\n            // both being null should match (default values)\n            // '1' should match with 1 (headers)\n            var isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');\n            input.classList.toggle('ql-active', isActive);\n          } else {\n            input.classList.toggle('ql-active', formats[format] != null);\n          }\n        }\n      });\n    }\n  }]);\n\n  return Toolbar;\n}(_module2.default);\n\nToolbar.DEFAULTS = {};\n\nfunction addButton(container, format, value) {\n  var input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add('ql-' + format);\n  if (value != null) {\n    input.value = value;\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(container, groups) {\n  if (!Array.isArray(groups[0])) {\n    groups = [groups];\n  }\n  groups.forEach(function (controls) {\n    var group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach(function (control) {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        var format = Object.keys(control)[0];\n        var value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(container, format, values) {\n  var input = document.createElement('select');\n  input.classList.add('ql-' + format);\n  values.forEach(function (value) {\n    var option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', value);\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean: function clean() {\n      var _this3 = this;\n\n      var range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length == 0) {\n        var formats = this.quill.getFormat();\n        Object.keys(formats).forEach(function (name) {\n          // Clean functionality in existing apps only clean inline formats\n          if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {\n            _this3.quill.format(name, false);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range, _quill2.default.sources.USER);\n      }\n    },\n    direction: function direction(value) {\n      var align = this.quill.getFormat()['align'];\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', _quill2.default.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, _quill2.default.sources.USER);\n      }\n      this.quill.format('direction', value, _quill2.default.sources.USER);\n    },\n    indent: function indent(value) {\n      var range = this.quill.getSelection();\n      var formats = this.quill.getFormat(range);\n      var indent = parseInt(formats.indent || 0);\n      if (value === '+1' || value === '-1') {\n        var modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, _quill2.default.sources.USER);\n      }\n    },\n    link: function link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:');\n      }\n      this.quill.format('link', value, _quill2.default.sources.USER);\n    },\n    list: function list(value) {\n      var range = this.quill.getSelection();\n      var formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {\n          this.quill.format('list', false, _quill2.default.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', _quill2.default.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, _quill2.default.sources.USER);\n      }\n    }\n  }\n};\n\nexports.default = Toolbar;\nexports.addControls = addControls;\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.BaseTooltip = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _quillDelta = __webpack_require__(2);\n\nvar _quillDelta2 = _interopRequireDefault(_quillDelta);\n\nvar _emitter = __webpack_require__(5);\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _keyboard = __webpack_require__(30);\n\nvar _keyboard2 = _interopRequireDefault(_keyboard);\n\nvar _theme = __webpack_require__(29);\n\nvar _theme2 = _interopRequireDefault(_theme);\n\nvar _colorPicker = __webpack_require__(48);\n\nvar _colorPicker2 = _interopRequireDefault(_colorPicker);\n\nvar _iconPicker = __webpack_require__(49);\n\nvar _iconPicker2 = _interopRequireDefault(_iconPicker);\n\nvar _picker = __webpack_require__(28);\n\nvar _picker2 = _interopRequireDefault(_picker);\n\nvar _tooltip = __webpack_require__(50);\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ALIGNS = [false, 'center', 'right', 'justify'];\n\nvar COLORS = [\"#000000\", \"#e60000\", \"#ff9900\", \"#ffff00\", \"#008a00\", \"#0066cc\", \"#9933ff\", \"#ffffff\", \"#facccc\", \"#ffebcc\", \"#ffffcc\", \"#cce8cc\", \"#cce0f5\", \"#ebd6ff\", \"#bbbbbb\", \"#f06666\", \"#ffc266\", \"#ffff66\", \"#66b966\", \"#66a3e0\", \"#c285ff\", \"#888888\", \"#a10000\", \"#b26b00\", \"#b2b200\", \"#006100\", \"#0047b2\", \"#6b24b2\", \"#444444\", \"#5c0000\", \"#663d00\", \"#666600\", \"#003700\", \"#002966\", \"#3d1466\"];\n\nvar FONTS = [false, 'serif', 'monospace'];\n\nvar HEADERS = ['1', '2', '3', false];\n\nvar SIZES = ['small', false, 'large', 'huge'];\n\nvar BaseTheme = function (_Theme) {\n  _inherits(BaseTheme, _Theme);\n\n  function BaseTheme(quill, options) {\n    _classCallCheck(this, BaseTheme);\n\n    var _this = _possibleConstructorReturn(this, (BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)).call(this, quill, options));\n\n    var listener = function listener(e) {\n      if (!document.body.contains(quill.root)) {\n        return document.body.removeEventListener('click', listener);\n      }\n      if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {\n        _this.tooltip.hide();\n      }\n      if (_this.pickers != null) {\n        _this.pickers.forEach(function (picker) {\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    document.body.addEventListener('click', listener);\n    return _this;\n  }\n\n  _createClass(BaseTheme, [{\n    key: 'addModule',\n    value: function addModule(name) {\n      var module = _get(BaseTheme.prototype.__proto__ || Object.getPrototypeOf(BaseTheme.prototype), 'addModule', this).call(this, name);\n      if (name === 'toolbar') {\n        this.extendToolbar(module);\n      }\n      return module;\n    }\n  }, {\n    key: 'buildButtons',\n    value: function buildButtons(buttons, icons) {\n      buttons.forEach(function (button) {\n        var className = button.getAttribute('class') || '';\n        className.split(/\\s+/).forEach(function (name) {\n          if (!name.startsWith('ql-')) return;\n          name = name.slice('ql-'.length);\n          if (icons[name] == null) return;\n          if (name === 'direction') {\n            button.innerHTML = icons[name][''] + icons[name]['rtl'];\n          } else if (typeof icons[name] === 'string') {\n            button.innerHTML = icons[name];\n          } else {\n            var value = button.value || '';\n            if (value != null && icons[name][value]) {\n              button.innerHTML = icons[name][value];\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: 'buildPickers',\n    value: function buildPickers(selects, icons) {\n      var _this2 = this;\n\n      this.pickers = selects.map(function (select) {\n        if (select.classList.contains('ql-align')) {\n          if (select.querySelector('option') == null) {\n            fillSelect(select, ALIGNS);\n          }\n          return new _iconPicker2.default(select, icons.align);\n        } else if (select.classList.contains('ql-background') || select.classList.contains('ql-color')) {\n          var format = select.classList.contains('ql-background') ? 'background' : 'color';\n          if (select.querySelector('option') == null) {\n            fillSelect(select, COLORS, format === 'background' ? '#ffffff' : '#000000');\n          }\n          return new _colorPicker2.default(select, icons[format]);\n        } else {\n          if (select.querySelector('option') == null) {\n            if (select.classList.contains('ql-font')) {\n              fillSelect(select, FONTS);\n            } else if (select.classList.contains('ql-header')) {\n              fillSelect(select, HEADERS);\n            } else if (select.classList.contains('ql-size')) {\n              fillSelect(select, SIZES);\n            }\n          }\n          return new _picker2.default(select);\n        }\n      });\n      var update = function update() {\n        _this2.pickers.forEach(function (picker) {\n          picker.update();\n        });\n      };\n      this.quill.on(_emitter2.default.events.SELECTION_CHANGE, update).on(_emitter2.default.events.SCROLL_OPTIMIZE, update);\n    }\n  }]);\n\n  return BaseTheme;\n}(_theme2.default);\n\nBaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula: function formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image: function image() {\n          var _this3 = this;\n\n          var fileInput = this.container.querySelector('input.ql-image[type=file]');\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', function () {\n              if (fileInput.files != null && fileInput.files[0] != null) {\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                  var range = _this3.quill.getSelection(true);\n                  _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ image: e.target.result }), _emitter2.default.sources.USER);\n                  fileInput.value = \"\";\n                };\n                reader.readAsDataURL(fileInput.files[0]);\n              }\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video: function video() {\n          this.quill.theme.tooltip.edit('video');\n        }\n      }\n    }\n  }\n});\n\nvar BaseTooltip = function (_Tooltip) {\n  _inherits(BaseTooltip, _Tooltip);\n\n  function BaseTooltip(quill, boundsContainer) {\n    _classCallCheck(this, BaseTooltip);\n\n    var _this4 = _possibleConstructorReturn(this, (BaseTooltip.__proto__ || Object.getPrototypeOf(BaseTooltip)).call(this, quill, boundsContainer));\n\n    _this4.textbox = _this4.root.querySelector('input[type=\"text\"]');\n    _this4.listen();\n    return _this4;\n  }\n\n  _createClass(BaseTooltip, [{\n    key: 'listen',\n    value: function listen() {\n      var _this5 = this;\n\n      this.textbox.addEventListener('keydown', function (event) {\n        if (_keyboard2.default.match(event, 'enter')) {\n          _this5.save();\n          event.preventDefault();\n        } else if (_keyboard2.default.match(event, 'escape')) {\n          _this5.cancel();\n          event.preventDefault();\n        }\n      });\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      this.hide();\n    }\n  }, {\n    key: 'edit',\n    value: function edit() {\n      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'link';\n      var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      this.root.classList.remove('ql-hidden');\n      this.root.classList.add('ql-editing');\n      if (preview != null) {\n        this.textbox.value = preview;\n      } else if (mode !== this.root.getAttribute('data-mode')) {\n        this.textbox.value = '';\n      }\n      this.position(this.quill.getBounds(this.quill.selection.savedRange));\n      this.textbox.select();\n      this.textbox.setAttribute('placeholder', this.textbox.getAttribute('data-' + mode) || '');\n      this.root.setAttribute('data-mode', mode);\n    }\n  }, {\n    key: 'restoreFocus',\n    value: function restoreFocus() {\n      var scrollTop = this.quill.scrollingContainer.scrollTop;\n      this.quill.focus();\n      this.quill.scrollingContainer.scrollTop = scrollTop;\n    }\n  }, {\n    key: 'save',\n    value: function save() {\n      var value = this.textbox.value;\n      switch (this.root.getAttribute('data-mode')) {\n        case 'link':\n          {\n            var scrollTop = this.quill.root.scrollTop;\n            if (this.linkRange) {\n              this.quill.formatText(this.linkRange, 'link', value, _emitter2.default.sources.USER);\n              delete this.linkRange;\n            } else {\n              this.restoreFocus();\n              this.quill.format('link', value, _emitter2.default.sources.USER);\n            }\n            this.quill.root.scrollTop = scrollTop;\n            break;\n          }\n        case 'video':\n          {\n            var match = value.match(/^(https?):\\/\\/(www\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/) || value.match(/^(https?):\\/\\/(www\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n            if (match) {\n              value = match[1] + '://www.youtube.com/embed/' + match[3] + '?showinfo=0';\n            } else if (match = value.match(/^(https?):\\/\\/(www\\.)?vimeo\\.com\\/(\\d+)/)) {\n              // eslint-disable-line no-cond-assign\n              value = match[1] + '://player.vimeo.com/video/' + match[3] + '/';\n            }\n          } // eslint-disable-next-line no-fallthrough\n        case 'formula':\n          {\n            if (!value) break;\n            var range = this.quill.getSelection(true);\n            var index = range.index + range.length;\n            if (range != null) {\n              this.quill.insertEmbed(index, this.root.getAttribute('data-mode'), value, _emitter2.default.sources.USER);\n              if (this.root.getAttribute('data-mode') === 'formula') {\n                this.quill.insertText(index + 1, ' ', _emitter2.default.sources.USER);\n              }\n              this.quill.setSelection(index + 2, _emitter2.default.sources.USER);\n            }\n            break;\n          }\n        default:\n      }\n      this.textbox.value = '';\n      this.hide();\n    }\n  }]);\n\n  return BaseTooltip;\n}(_tooltip2.default);\n\nfunction fillSelect(select, values) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  values.forEach(function (value) {\n    var option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', value);\n    }\n    select.appendChild(option);\n  });\n}\n\nexports.BaseTooltip = BaseTooltip;\nexports.default = BaseTheme;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _picker = __webpack_require__(28);\n\nvar _picker2 = _interopRequireDefault(_picker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ColorPicker = function (_Picker) {\n  _inherits(ColorPicker, _Picker);\n\n  function ColorPicker(select, label) {\n    _classCallCheck(this, ColorPicker);\n\n    var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, select));\n\n    _this.label.innerHTML = label;\n    _this.container.classList.add('ql-color-picker');\n    [].slice.call(_this.container.querySelectorAll('.ql-picker-item'), 0, 7).forEach(function (item) {\n      item.classList.add('ql-primary');\n    });\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: 'buildItem',\n    value: function buildItem(option) {\n      var item = _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'buildItem', this).call(this, option);\n      item.style.backgroundColor = option.getAttribute('value') || '';\n      return item;\n    }\n  }, {\n    key: 'selectItem',\n    value: function selectItem(item, trigger) {\n      _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'selectItem', this).call(this, item, trigger);\n      var colorLabel = this.label.querySelector('.ql-color-label');\n      var value = item ? item.getAttribute('data-value') || '' : '';\n      if (colorLabel) {\n        if (colorLabel.tagName === 'line') {\n          colorLabel.style.stroke = value;\n        } else {\n          colorLabel.style.fill = value;\n        }\n      }\n    }\n  }]);\n\n  return ColorPicker;\n}(_picker2.default);\n\nexports.default = ColorPicker;\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _picker = __webpack_require__(28);\n\nvar _picker2 = _interopRequireDefault(_picker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IconPicker = function (_Picker) {\n  _inherits(IconPicker, _Picker);\n\n  function IconPicker(select, icons) {\n    _classCallCheck(this, IconPicker);\n\n    var _this = _possibleConstructorReturn(this, (IconPicker.__proto__ || Object.getPrototypeOf(IconPicker)).call(this, select));\n\n    _this.container.classList.add('ql-icon-picker');\n    [].forEach.call(_this.container.querySelectorAll('.ql-picker-item'), function (item) {\n      item.innerHTML = icons[item.getAttribute('data-value') || ''];\n    });\n    _this.defaultItem = _this.container.querySelector('.ql-selected');\n    _this.selectItem(_this.defaultItem);\n    return _this;\n  }\n\n  _createClass(IconPicker, [{\n    key: 'selectItem',\n    value: function selectItem(item, trigger) {\n      _get(IconPicker.prototype.__proto__ || Object.getPrototypeOf(IconPicker.prototype), 'selectItem', this).call(this, item, trigger);\n      item = item || this.defaultItem;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }]);\n\n  return IconPicker;\n}(_picker2.default);\n\nexports.default = IconPicker;\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Tooltip = function () {\n  function Tooltip(quill, boundsContainer) {\n    var _this = this;\n\n    _classCallCheck(this, Tooltip);\n\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (this.quill.root === this.quill.scrollingContainer) {\n      this.quill.root.addEventListener('scroll', function () {\n        _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + 'px';\n      });\n    }\n    this.hide();\n  }\n\n  _createClass(Tooltip, [{\n    key: 'hide',\n    value: function hide() {\n      this.root.classList.add('ql-hidden');\n    }\n  }, {\n    key: 'position',\n    value: function position(reference) {\n      var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n      // root.scrollTop should be 0 if scrollContainer !== root\n      var top = reference.bottom + this.quill.root.scrollTop;\n      this.root.style.left = left + 'px';\n      this.root.style.top = top + 'px';\n      this.root.classList.remove('ql-flip');\n      var containerBounds = this.boundsContainer.getBoundingClientRect();\n      var rootBounds = this.root.getBoundingClientRect();\n      var shift = 0;\n      if (rootBounds.right > containerBounds.right) {\n        shift = containerBounds.right - rootBounds.right;\n        this.root.style.left = left + shift + 'px';\n      }\n      if (rootBounds.left < containerBounds.left) {\n        shift = containerBounds.left - rootBounds.left;\n        this.root.style.left = left + shift + 'px';\n      }\n      if (rootBounds.bottom > containerBounds.bottom) {\n        var height = rootBounds.bottom - rootBounds.top;\n        var verticalShift = reference.bottom - reference.top + height;\n        this.root.style.top = top - verticalShift + 'px';\n        this.root.classList.add('ql-flip');\n      }\n      return shift;\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      this.root.classList.remove('ql-editing');\n      this.root.classList.remove('ql-hidden');\n    }\n  }]);\n\n  return Tooltip;\n}();\n\nexports.default = Tooltip;\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\nvar supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports) {\n\nexports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int} cursor_pos Expected edit position in text1 (optional)\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos) {\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  // Check cursor_pos within bounds\n  if (cursor_pos < 0 || text1.length < cursor_pos) {\n    cursor_pos = null;\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs);\n  if (cursor_pos != null) {\n    diffs = fix_cursor(diffs, cursor_pos);\n  }\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = diff_commonPrefix(longtext.substring(i),\n                                           shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(longtext.substring(0, i),\n                                           shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n */\nfunction diff_cleanupMerge(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs);\n  }\n};\n\n\nvar diff = diff_main;\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n\n/*\n * Modify a diff such that the cursor position points to the start of a change:\n * E.g.\n *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)\n *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]\n *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)\n *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]\n *\n * @param {Array} diffs Array of diff tuples\n * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!\n * @return {Array} A tuple [cursor location in the modified diff, modified diff]\n */\nfunction cursor_normalize_diff (diffs, cursor_pos) {\n  if (cursor_pos === 0) {\n    return [DIFF_EQUAL, diffs];\n  }\n  for (var current_pos = 0, i = 0; i < diffs.length; i++) {\n    var d = diffs[i];\n    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {\n      var next_pos = current_pos + d[1].length;\n      if (cursor_pos === next_pos) {\n        return [i + 1, diffs];\n      } else if (cursor_pos < next_pos) {\n        // copy to prevent side effects\n        diffs = diffs.slice();\n        // split d into two diff changes\n        var split_pos = cursor_pos - current_pos;\n        var d_left = [d[0], d[1].slice(0, split_pos)];\n        var d_right = [d[0], d[1].slice(split_pos)];\n        diffs.splice(i, 1, d_left, d_right);\n        return [i + 1, diffs];\n      } else {\n        current_pos = next_pos;\n      }\n    }\n  }\n  throw new Error('cursor_pos is out of bounds!')\n}\n\n/*\n * Modify a diff such that the edit position is \"shifted\" to the proposed edit location (cursor_position).\n *\n * Case 1)\n *   Check if a naive shift is possible:\n *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)\n *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result\n * Case 2)\n *   Check if the following shifts are possible:\n *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']\n *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']\n *         ^            ^\n *         d          d_next\n *\n * @param {Array} diffs Array of diff tuples\n * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!\n * @return {Array} Array of diff tuples\n */\nfunction fix_cursor (diffs, cursor_pos) {\n  var norm = cursor_normalize_diff(diffs, cursor_pos);\n  var ndiffs = norm[1];\n  var cursor_pointer = norm[0];\n  var d = ndiffs[cursor_pointer];\n  var d_next = ndiffs[cursor_pointer + 1];\n\n  if (d == null) {\n    // Text was deleted from end of original string,\n    // cursor is now out of bounds in new string\n    return diffs;\n  } else if (d[0] !== DIFF_EQUAL) {\n    // A modification happened at the cursor location.\n    // This is the expected outcome, so we can return the original diff.\n    return diffs;\n  } else {\n    if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {\n      // Case 1)\n      // It is possible to perform a naive shift\n      ndiffs.splice(cursor_pointer, 2, d_next, d)\n      return merge_tuples(ndiffs, cursor_pointer, 2)\n    } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {\n      // Case 2)\n      // d[1] is a prefix of d_next[1]\n      // We can assume that d_next[0] !== 0, since d[0] === 0\n      // Shift edit locations..\n      ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);\n      var suffix = d_next[1].slice(d[1].length);\n      if (suffix.length > 0) {\n        ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);\n      }\n      return merge_tuples(ndiffs, cursor_pointer, 3)\n    } else {\n      // Not possible to perform any modification\n      return diffs;\n    }\n  }\n\n}\n\n/*\n * Try to merge tuples with their neigbors in a given range.\n * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']\n *\n * @param {Array} diffs Array of diff tuples.\n * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).\n * @param {Int} length Number of consecutive elements to check.\n * @return {Array} Array of merged diff tuples.\n */\nfunction merge_tuples (diffs, start, length) {\n  // Check from (start-1) to (start+length).\n  for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {\n    if (i + 1 < diffs.length) {\n      var left_d = diffs[i];\n      var right_d = diffs[i+1];\n      if (left_d[0] === right_d[1]) {\n        diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);\n      }\n    }\n  }\n  return diffs;\n}\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <polyline class=\\\"ql-even ql-stroke\\\" points=\\\"5 7 3 9 5 11\\\"></polyline> <polyline class=\\\"ql-even ql-stroke\\\" points=\\\"13 7 15 9 13 11\\\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>\";\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar format_1 = __webpack_require__(22);\nvar Registry = __webpack_require__(1);\nvar BlockBlot = (function (_super) {\n    __extends(BlockBlot, _super);\n    function BlockBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BlockBlot.formats = function (domNode) {\n        var tagName = Registry.query(BlockBlot.blotName).tagName;\n        if (domNode.tagName === tagName)\n            return undefined;\n        return _super.formats.call(this, domNode);\n    };\n    BlockBlot.prototype.format = function (name, value) {\n        if (Registry.query(name, Registry.Scope.BLOCK) == null) {\n            return;\n        }\n        else if (name === this.statics.blotName && !value) {\n            this.replaceWith(BlockBlot.blotName);\n        }\n        else {\n            _super.prototype.format.call(this, name, value);\n        }\n    };\n    BlockBlot.prototype.formatAt = function (index, length, name, value) {\n        if (Registry.query(name, Registry.Scope.BLOCK) != null) {\n            this.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    BlockBlot.prototype.insertAt = function (index, value, def) {\n        if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {\n            // Insert text or inline\n            _super.prototype.insertAt.call(this, index, value, def);\n        }\n        else {\n            var after = this.split(index);\n            var blot = Registry.create(value, def);\n            after.parent.insertBefore(blot, after);\n        }\n    };\n    BlockBlot.prototype.update = function (mutations) {\n        if (navigator.userAgent.match(/Trident/)) {\n            this.attach();\n        }\n        else {\n            _super.prototype.update.call(this, mutations);\n        }\n    };\n    return BlockBlot;\n}(format_1.default));\nBlockBlot.blotName = 'block';\nBlockBlot.scope = Registry.Scope.BLOCK_BLOT;\nBlockBlot.tagName = 'P';\nexports.default = BlockBlot;\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leaf_1 = __webpack_require__(23);\nvar EmbedBlot = (function (_super) {\n    __extends(EmbedBlot, _super);\n    function EmbedBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmbedBlot.formats = function (domNode) {\n        return undefined;\n    };\n    EmbedBlot.prototype.format = function (name, value) {\n        // super.formatAt wraps, which is what we want in general,\n        // but this allows subclasses to overwrite for formats\n        // that just apply to particular embeds\n        _super.prototype.formatAt.call(this, 0, this.length(), name, value);\n    };\n    EmbedBlot.prototype.formatAt = function (index, length, name, value) {\n        if (index === 0 && length === this.length()) {\n            this.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    EmbedBlot.prototype.formats = function () {\n        return this.statics.formats(this.domNode);\n    };\n    return EmbedBlot;\n}(leaf_1.default));\nexports.default = EmbedBlot;\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar format_1 = __webpack_require__(22);\nvar Registry = __webpack_require__(1);\n// Shallow object comparison\nfunction isEqual(obj1, obj2) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length)\n        return false;\n    for (var prop in obj1) {\n        if (obj1[prop] !== obj2[prop])\n            return false;\n    }\n    return true;\n}\nvar InlineBlot = (function (_super) {\n    __extends(InlineBlot, _super);\n    function InlineBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InlineBlot.formats = function (domNode) {\n        if (domNode.tagName === InlineBlot.tagName)\n            return undefined;\n        return _super.formats.call(this, domNode);\n    };\n    InlineBlot.prototype.format = function (name, value) {\n        var _this = this;\n        if (name === this.statics.blotName && !value) {\n            this.children.forEach(function (child) {\n                if (!(child instanceof format_1.default)) {\n                    child = child.wrap(InlineBlot.blotName, true);\n                }\n                _this.attributes.copy(child);\n            });\n            this.unwrap();\n        }\n        else {\n            _super.prototype.format.call(this, name, value);\n        }\n    };\n    InlineBlot.prototype.formatAt = function (index, length, name, value) {\n        if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {\n            var blot = this.isolate(index, length);\n            blot.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    InlineBlot.prototype.optimize = function () {\n        _super.prototype.optimize.call(this);\n        var formats = this.formats();\n        if (Object.keys(formats).length === 0) {\n            return this.unwrap(); // unformatted span\n        }\n        var next = this.next;\n        if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    };\n    return InlineBlot;\n}(format_1.default));\nInlineBlot.blotName = 'inline';\nInlineBlot.scope = Registry.Scope.INLINE_BLOT;\nInlineBlot.tagName = 'SPAN';\nexports.default = InlineBlot;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = __webpack_require__(21);\nvar Registry = __webpack_require__(1);\nvar OBSERVER_CONFIG = {\n    attributes: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true\n};\nvar MAX_OPTIMIZE_ITERATIONS = 100;\nvar ScrollBlot = (function (_super) {\n    __extends(ScrollBlot, _super);\n    function ScrollBlot(node) {\n        var _this = _super.call(this, node) || this;\n        _this.parent = null;\n        _this.observer = new MutationObserver(function (mutations) {\n            _this.update(mutations);\n        });\n        _this.observer.observe(_this.domNode, OBSERVER_CONFIG);\n        return _this;\n    }\n    ScrollBlot.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this.observer.disconnect();\n    };\n    ScrollBlot.prototype.deleteAt = function (index, length) {\n        this.update();\n        if (index === 0 && length === this.length()) {\n            this.children.forEach(function (child) {\n                child.remove();\n            });\n        }\n        else {\n            _super.prototype.deleteAt.call(this, index, length);\n        }\n    };\n    ScrollBlot.prototype.formatAt = function (index, length, name, value) {\n        this.update();\n        _super.prototype.formatAt.call(this, index, length, name, value);\n    };\n    ScrollBlot.prototype.insertAt = function (index, value, def) {\n        this.update();\n        _super.prototype.insertAt.call(this, index, value, def);\n    };\n    ScrollBlot.prototype.optimize = function (mutations) {\n        var _this = this;\n        if (mutations === void 0) { mutations = []; }\n        _super.prototype.optimize.call(this);\n        // We must modify mutations directly, cannot make copy and then modify\n        var records = [].slice.call(this.observer.takeRecords());\n        // Array.push currently seems to be implemented by a non-tail recursive function\n        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n        while (records.length > 0)\n            mutations.push(records.pop());\n        // TODO use WeakMap\n        var mark = function (blot, markParent) {\n            if (markParent === void 0) { markParent = true; }\n            if (blot == null || blot === _this)\n                return;\n            if (blot.domNode.parentNode == null)\n                return;\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                blot.domNode[Registry.DATA_KEY].mutations = [];\n            }\n            if (markParent)\n                mark(blot.parent);\n        };\n        var optimize = function (blot) {\n            if (blot.domNode[Registry.DATA_KEY] == null || blot.domNode[Registry.DATA_KEY].mutations == null) {\n                return;\n            }\n            if (blot instanceof container_1.default) {\n                blot.children.forEach(optimize);\n            }\n            blot.optimize();\n        };\n        var remaining = mutations;\n        for (var i = 0; remaining.length > 0; i += 1) {\n            if (i >= MAX_OPTIMIZE_ITERATIONS) {\n                throw new Error('[Parchment] Maximum optimize iterations reached');\n            }\n            remaining.forEach(function (mutation) {\n                var blot = Registry.find(mutation.target, true);\n                if (blot == null)\n                    return;\n                if (blot.domNode === mutation.target) {\n                    if (mutation.type === 'childList') {\n                        mark(Registry.find(mutation.previousSibling, false));\n                        [].forEach.call(mutation.addedNodes, function (node) {\n                            var child = Registry.find(node, false);\n                            mark(child, false);\n                            if (child instanceof container_1.default) {\n                                child.children.forEach(function (grandChild) {\n                                    mark(grandChild, false);\n                                });\n                            }\n                        });\n                    }\n                    else if (mutation.type === 'attributes') {\n                        mark(blot.prev);\n                    }\n                }\n                mark(blot);\n            });\n            this.children.forEach(optimize);\n            remaining = [].slice.call(this.observer.takeRecords());\n            records = remaining.slice();\n            while (records.length > 0)\n                mutations.push(records.pop());\n        }\n    };\n    ScrollBlot.prototype.update = function (mutations) {\n        var _this = this;\n        mutations = mutations || this.observer.takeRecords();\n        // TODO use WeakMap\n        mutations.map(function (mutation) {\n            var blot = Registry.find(mutation.target, true);\n            if (blot == null)\n                return;\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                blot.domNode[Registry.DATA_KEY].mutations = [mutation];\n                return blot;\n            }\n            else {\n                blot.domNode[Registry.DATA_KEY].mutations.push(mutation);\n                return null;\n            }\n        }).forEach(function (blot) {\n            if (blot == null || blot === _this || blot.domNode[Registry.DATA_KEY] == null)\n                return;\n            blot.update(blot.domNode[Registry.DATA_KEY].mutations || []);\n        });\n        if (this.domNode[Registry.DATA_KEY].mutations != null) {\n            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations);\n        }\n        this.optimize(mutations);\n    };\n    return ScrollBlot;\n}(container_1.default));\nScrollBlot.blotName = 'scroll';\nScrollBlot.defaultChild = 'block';\nScrollBlot.scope = Registry.Scope.BLOCK_BLOT;\nScrollBlot.tagName = 'DIV';\nexports.default = ScrollBlot;\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leaf_1 = __webpack_require__(23);\nvar Registry = __webpack_require__(1);\nvar TextBlot = (function (_super) {\n    __extends(TextBlot, _super);\n    function TextBlot(node) {\n        var _this = _super.call(this, node) || this;\n        _this.text = _this.statics.value(_this.domNode);\n        return _this;\n    }\n    TextBlot.create = function (value) {\n        return document.createTextNode(value);\n    };\n    TextBlot.value = function (domNode) {\n        var text = domNode.data;\n        if (text[\"normalize\"])\n            text = text[\"normalize\"]();\n        return text;\n    };\n    TextBlot.prototype.deleteAt = function (index, length) {\n        this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);\n    };\n    TextBlot.prototype.index = function (node, offset) {\n        if (this.domNode === node) {\n            return offset;\n        }\n        return -1;\n    };\n    TextBlot.prototype.insertAt = function (index, value, def) {\n        if (def == null) {\n            this.text = this.text.slice(0, index) + value + this.text.slice(index);\n            this.domNode.data = this.text;\n        }\n        else {\n            _super.prototype.insertAt.call(this, index, value, def);\n        }\n    };\n    TextBlot.prototype.length = function () {\n        return this.text.length;\n    };\n    TextBlot.prototype.optimize = function () {\n        _super.prototype.optimize.call(this);\n        this.text = this.statics.value(this.domNode);\n        if (this.text.length === 0) {\n            this.remove();\n        }\n        else if (this.next instanceof TextBlot && this.next.prev === this) {\n            this.insertAt(this.length(), this.next.value());\n            this.next.remove();\n        }\n    };\n    TextBlot.prototype.position = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        return [this.domNode, index];\n    };\n    TextBlot.prototype.split = function (index, force) {\n        if (force === void 0) { force = false; }\n        if (!force) {\n            if (index === 0)\n                return this;\n            if (index === this.length())\n                return this.next;\n        }\n        var after = Registry.create(this.domNode.splitText(index));\n        this.parent.insertBefore(after, this.next);\n        this.text = this.statics.value(this.domNode);\n        return after;\n    };\n    TextBlot.prototype.update = function (mutations) {\n        var _this = this;\n        if (mutations.some(function (mutation) {\n            return mutation.type === 'characterData' && mutation.target === _this.domNode;\n        })) {\n            this.text = this.statics.value(this.domNode);\n        }\n    };\n    TextBlot.prototype.value = function () {\n        return this.text;\n    };\n    return TextBlot;\n}(leaf_1.default));\nTextBlot.blotName = 'text';\nTextBlot.scope = Registry.Scope.INLINE_BLOT;\nexports.default = TextBlot;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList = (function () {\n    function LinkedList() {\n        this.head = this.tail = undefined;\n        this.length = 0;\n    }\n    LinkedList.prototype.append = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        this.insertBefore(nodes[0], undefined);\n        if (nodes.length > 1) {\n            this.append.apply(this, nodes.slice(1));\n        }\n    };\n    LinkedList.prototype.contains = function (node) {\n        var cur, next = this.iterator();\n        while (cur = next()) {\n            if (cur === node)\n                return true;\n        }\n        return false;\n    };\n    LinkedList.prototype.insertBefore = function (node, refNode) {\n        node.next = refNode;\n        if (refNode != null) {\n            node.prev = refNode.prev;\n            if (refNode.prev != null) {\n                refNode.prev.next = node;\n            }\n            refNode.prev = node;\n            if (refNode === this.head) {\n                this.head = node;\n            }\n        }\n        else if (this.tail != null) {\n            this.tail.next = node;\n            node.prev = this.tail;\n            this.tail = node;\n        }\n        else {\n            node.prev = undefined;\n            this.head = this.tail = node;\n        }\n        this.length += 1;\n    };\n    LinkedList.prototype.offset = function (target) {\n        var index = 0, cur = this.head;\n        while (cur != null) {\n            if (cur === target)\n                return index;\n            index += cur.length();\n            cur = cur.next;\n        }\n        return -1;\n    };\n    LinkedList.prototype.remove = function (node) {\n        if (!this.contains(node))\n            return;\n        if (node.prev != null)\n            node.prev.next = node.next;\n        if (node.next != null)\n            node.next.prev = node.prev;\n        if (node === this.head)\n            this.head = node.next;\n        if (node === this.tail)\n            this.tail = node.prev;\n        this.length -= 1;\n    };\n    LinkedList.prototype.iterator = function (curNode) {\n        if (curNode === void 0) { curNode = this.head; }\n        // TODO use yield when we can\n        return function () {\n            var ret = curNode;\n            if (curNode != null)\n                curNode = curNode.next;\n            return ret;\n        };\n    };\n    LinkedList.prototype.find = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        var cur, next = this.iterator();\n        while (cur = next()) {\n            var length = cur.length();\n            if (index < length || (inclusive && index === length && (cur.next == null || cur.next.length() !== 0))) {\n                return [cur, index];\n            }\n            index -= length;\n        }\n        return [null, 0];\n    };\n    LinkedList.prototype.forEach = function (callback) {\n        var cur, next = this.iterator();\n        while (cur = next()) {\n            callback(cur);\n        }\n    };\n    LinkedList.prototype.forEachAt = function (index, length, callback) {\n        if (length <= 0)\n            return;\n        var _a = this.find(index), startNode = _a[0], offset = _a[1];\n        var cur, curIndex = index - offset, next = this.iterator(startNode);\n        while ((cur = next()) && curIndex < index + length) {\n            var curLength = cur.length();\n            if (index > curIndex) {\n                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\n            }\n            else {\n                callback(cur, 0, Math.min(curLength, index + length - curIndex));\n            }\n            curIndex += curLength;\n        }\n    };\n    LinkedList.prototype.map = function (callback) {\n        return this.reduce(function (memo, cur) {\n            memo.push(callback(cur));\n            return memo;\n        }, []);\n    };\n    LinkedList.prototype.reduce = function (callback, memo) {\n        var cur, next = this.iterator();\n        while (cur = next()) {\n            memo = callback(memo, cur);\n        }\n        return memo;\n    };\n    return LinkedList;\n}());\nexports.default = LinkedList;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _core = __webpack_require__(35);\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _align = __webpack_require__(36);\n\nvar _direction = __webpack_require__(38);\n\nvar _indent = __webpack_require__(67);\n\nvar _blockquote = __webpack_require__(64);\n\nvar _blockquote2 = _interopRequireDefault(_blockquote);\n\nvar _header = __webpack_require__(65);\n\nvar _header2 = _interopRequireDefault(_header);\n\nvar _list = __webpack_require__(69);\n\nvar _list2 = _interopRequireDefault(_list);\n\nvar _background = __webpack_require__(37);\n\nvar _color = __webpack_require__(26);\n\nvar _font = __webpack_require__(39);\n\nvar _size = __webpack_require__(40);\n\nvar _bold = __webpack_require__(44);\n\nvar _bold2 = _interopRequireDefault(_bold);\n\nvar _italic = __webpack_require__(68);\n\nvar _italic2 = _interopRequireDefault(_italic);\n\nvar _link = __webpack_require__(27);\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _script = __webpack_require__(70);\n\nvar _script2 = _interopRequireDefault(_script);\n\nvar _strike = __webpack_require__(71);\n\nvar _strike2 = _interopRequireDefault(_strike);\n\nvar _underline = __webpack_require__(72);\n\nvar _underline2 = _interopRequireDefault(_underline);\n\nvar _image = __webpack_require__(66);\n\nvar _image2 = _interopRequireDefault(_image);\n\nvar _video = __webpack_require__(73);\n\nvar _video2 = _interopRequireDefault(_video);\n\nvar _code = __webpack_require__(16);\n\nvar _code2 = _interopRequireDefault(_code);\n\nvar _formula = __webpack_require__(74);\n\nvar _formula2 = _interopRequireDefault(_formula);\n\nvar _syntax = __webpack_require__(75);\n\nvar _syntax2 = _interopRequireDefault(_syntax);\n\nvar _toolbar = __webpack_require__(46);\n\nvar _toolbar2 = _interopRequireDefault(_toolbar);\n\nvar _icons = __webpack_require__(41);\n\nvar _icons2 = _interopRequireDefault(_icons);\n\nvar _picker = __webpack_require__(28);\n\nvar _picker2 = _interopRequireDefault(_picker);\n\nvar _colorPicker = __webpack_require__(48);\n\nvar _colorPicker2 = _interopRequireDefault(_colorPicker);\n\nvar _iconPicker = __webpack_require__(49);\n\nvar _iconPicker2 = _interopRequireDefault(_iconPicker);\n\nvar _tooltip = __webpack_require__(50);\n\nvar _tooltip2 = _interopRequireDefault(_tooltip);\n\nvar _bubble = __webpack_require__(76);\n\nvar _bubble2 = _interopRequireDefault(_bubble);\n\nvar _snow = __webpack_require__(63);\n\nvar _snow2 = _interopRequireDefault(_snow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_core2.default.register({\n  'attributors/attribute/direction': _direction.DirectionAttribute,\n\n  'attributors/class/align': _align.AlignClass,\n  'attributors/class/background': _background.BackgroundClass,\n  'attributors/class/color': _color.ColorClass,\n  'attributors/class/direction': _direction.DirectionClass,\n  'attributors/class/font': _font.FontClass,\n  'attributors/class/size': _size.SizeClass,\n\n  'attributors/style/align': _align.AlignStyle,\n  'attributors/style/background': _background.BackgroundStyle,\n  'attributors/style/color': _color.ColorStyle,\n  'attributors/style/direction': _direction.DirectionStyle,\n  'attributors/style/font': _font.FontStyle,\n  'attributors/style/size': _size.SizeStyle\n}, true);\n\n_core2.default.register({\n  'formats/align': _align.AlignClass,\n  'formats/direction': _direction.DirectionClass,\n  'formats/indent': _indent.IndentClass,\n\n  'formats/background': _background.BackgroundStyle,\n  'formats/color': _color.ColorStyle,\n  'formats/font': _font.FontClass,\n  'formats/size': _size.SizeClass,\n\n  'formats/blockquote': _blockquote2.default,\n  'formats/code-block': _code2.default,\n  'formats/header': _header2.default,\n  'formats/list': _list2.default,\n\n  'formats/bold': _bold2.default,\n  'formats/code': _code.Code,\n  'formats/italic': _italic2.default,\n  'formats/link': _link2.default,\n  'formats/script': _script2.default,\n  'formats/strike': _strike2.default,\n  'formats/underline': _underline2.default,\n\n  'formats/image': _image2.default,\n  'formats/video': _video2.default,\n\n  'formats/list/item': _list.ListItem,\n\n  'modules/formula': _formula2.default,\n  'modules/syntax': _syntax2.default,\n  'modules/toolbar': _toolbar2.default,\n\n  'themes/bubble': _bubble2.default,\n  'themes/snow': _snow2.default,\n\n  'ui/icons': _icons2.default,\n  'ui/picker': _picker2.default,\n  'ui/icon-picker': _iconPicker2.default,\n  'ui/color-picker': _colorPicker2.default,\n  'ui/tooltip': _tooltip2.default\n}, true);\n\nmodule.exports = _core2.default;\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _emitter = __webpack_require__(5);\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _base = __webpack_require__(47);\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _link = __webpack_require__(27);\n\nvar _link2 = _interopRequireDefault(_link);\n\nvar _selection = __webpack_require__(15);\n\nvar _icons = __webpack_require__(41);\n\nvar _icons2 = _interopRequireDefault(_icons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TOOLBAR_CONFIG = [[{ header: ['1', '2', '3', false] }], ['bold', 'italic', 'underline', 'link'], [{ list: 'ordered' }, { list: 'bullet' }], ['clean']];\n\nvar SnowTheme = function (_BaseTheme) {\n  _inherits(SnowTheme, _BaseTheme);\n\n  function SnowTheme(quill, options) {\n    _classCallCheck(this, SnowTheme);\n\n    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n\n    var _this = _possibleConstructorReturn(this, (SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)).call(this, quill, options));\n\n    _this.quill.container.classList.add('ql-snow');\n    return _this;\n  }\n\n  _createClass(SnowTheme, [{\n    key: 'extendToolbar',\n    value: function extendToolbar(toolbar) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);\n      this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding({ key: 'K', shortKey: true }, function (range, context) {\n          toolbar.handlers['link'].call(toolbar, !context.format.link);\n        });\n      }\n    }\n  }]);\n\n  return SnowTheme;\n}(_base2.default);\n\nSnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link: function link(value) {\n          if (value) {\n            var range = this.quill.getSelection();\n            if (range == null || range.length == 0) return;\n            var preview = this.quill.getText(range);\n            if (/^\\S+@\\S+\\.\\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {\n              preview = 'mailto:' + preview;\n            }\n            var tooltip = this.quill.theme.tooltip;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false);\n          }\n        }\n      }\n    }\n  }\n});\n\nvar SnowTooltip = function (_BaseTooltip) {\n  _inherits(SnowTooltip, _BaseTooltip);\n\n  function SnowTooltip(quill, bounds) {\n    _classCallCheck(this, SnowTooltip);\n\n    var _this2 = _possibleConstructorReturn(this, (SnowTooltip.__proto__ || Object.getPrototypeOf(SnowTooltip)).call(this, quill, bounds));\n\n    _this2.preview = _this2.root.querySelector('a.ql-preview');\n    return _this2;\n  }\n\n  _createClass(SnowTooltip, [{\n    key: 'listen',\n    value: function listen() {\n      var _this3 = this;\n\n      _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'listen', this).call(this);\n      this.root.querySelector('a.ql-action').addEventListener('click', function (event) {\n        if (_this3.root.classList.contains('ql-editing')) {\n          _this3.save();\n        } else {\n          _this3.edit('link', _this3.preview.textContent);\n        }\n        event.preventDefault();\n      });\n      this.root.querySelector('a.ql-remove').addEventListener('click', function (event) {\n        if (_this3.linkRange != null) {\n          var range = _this3.linkRange;\n          _this3.restoreFocus();\n          _this3.quill.formatText(range, 'link', false, _emitter2.default.sources.USER);\n          delete _this3.linkRange;\n        }\n        event.preventDefault();\n        _this3.hide();\n      });\n      this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function (range, oldRange, source) {\n        if (range == null) return;\n        if (range.length === 0 && source === _emitter2.default.sources.USER) {\n          var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index),\n              _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),\n              link = _quill$scroll$descend2[0],\n              offset = _quill$scroll$descend2[1];\n\n          if (link != null) {\n            _this3.linkRange = new _selection.Range(range.index - offset, link.length());\n            var preview = _link2.default.formats(link.domNode);\n            _this3.preview.textContent = preview;\n            _this3.preview.setAttribute('href', preview);\n            _this3.show();\n            _this3.position(_this3.quill.getBounds(_this3.linkRange));\n            return;\n          }\n        } else {\n          delete _this3.linkRange;\n        }\n        _this3.hide();\n      });\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'show', this).call(this);\n      this.root.removeAttribute('data-mode');\n    }\n  }]);\n\n  return SnowTooltip;\n}(_base.BaseTooltip);\n\nSnowTooltip.TEMPLATE = ['<a class=\"ql-preview\" target=\"_blank\" href=\"about:blank\"></a>', '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">', '<a class=\"ql-action\"></a>', '<a class=\"ql-remove\"></a>'].join('');\n\nexports.default = SnowTheme;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Blockquote = function (_Block) {\n  _inherits(Blockquote, _Block);\n\n  function Blockquote() {\n    _classCallCheck(this, Blockquote);\n\n    return _possibleConstructorReturn(this, (Blockquote.__proto__ || Object.getPrototypeOf(Blockquote)).apply(this, arguments));\n  }\n\n  return Blockquote;\n}(_block2.default);\n\nBlockquote.blotName = 'blockquote';\nBlockquote.tagName = 'blockquote';\n\nexports.default = Blockquote;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Header = function (_Block) {\n  _inherits(Header, _Block);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));\n  }\n\n  _createClass(Header, null, [{\n    key: 'formats',\n    value: function formats(domNode) {\n      return this.tagName.indexOf(domNode.tagName) + 1;\n    }\n  }]);\n\n  return Header;\n}(_block2.default);\n\nHeader.blotName = 'header';\nHeader.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\nexports.default = Header;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nvar _link = __webpack_require__(27);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ATTRIBUTES = ['alt', 'height', 'width'];\n\nvar Image = function (_Embed) {\n  _inherits(Image, _Embed);\n\n  function Image() {\n    _classCallCheck(this, Image);\n\n    return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));\n  }\n\n  _createClass(Image, [{\n    key: 'format',\n    value: function format(name, value) {\n      if (ATTRIBUTES.indexOf(name) > -1) {\n        if (value) {\n          this.domNode.setAttribute(name, value);\n        } else {\n          this.domNode.removeAttribute(name);\n        }\n      } else {\n        _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'format', this).call(this, name, value);\n      }\n    }\n  }], [{\n    key: 'create',\n    value: function create(value) {\n      var node = _get(Image.__proto__ || Object.getPrototypeOf(Image), 'create', this).call(this, value);\n      if (typeof value === 'string') {\n        node.setAttribute('src', this.sanitize(value));\n      }\n      return node;\n    }\n  }, {\n    key: 'formats',\n    value: function formats(domNode) {\n      return ATTRIBUTES.reduce(function (formats, attribute) {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      }, {});\n    }\n  }, {\n    key: 'match',\n    value: function match(url) {\n      return (/\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url)\n      );\n    }\n  }, {\n    key: 'sanitize',\n    value: function sanitize(url) {\n      return (0, _link.sanitize)(url, ['http', 'https', 'data']) ? url : '//:0';\n    }\n  }, {\n    key: 'value',\n    value: function value(domNode) {\n      return domNode.getAttribute('src');\n    }\n  }]);\n\n  return Image;\n}(_embed2.default);\n\nImage.blotName = 'image';\nImage.tagName = 'IMG';\n\nexports.default = Image;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndentClass = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IdentAttributor = function (_Parchment$Attributor) {\n  _inherits(IdentAttributor, _Parchment$Attributor);\n\n  function IdentAttributor() {\n    _classCallCheck(this, IdentAttributor);\n\n    return _possibleConstructorReturn(this, (IdentAttributor.__proto__ || Object.getPrototypeOf(IdentAttributor)).apply(this, arguments));\n  }\n\n  _createClass(IdentAttributor, [{\n    key: 'add',\n    value: function add(node, value) {\n      if (value === '+1' || value === '-1') {\n        var indent = this.value(node) || 0;\n        value = value === '+1' ? indent + 1 : indent - 1;\n      }\n      if (value === 0) {\n        this.remove(node);\n        return true;\n      } else {\n        return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'add', this).call(this, node, value);\n      }\n    }\n  }, {\n    key: 'canAdd',\n    value: function canAdd(node, value) {\n      return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, value) || _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, parseInt(value));\n    }\n  }, {\n    key: 'value',\n    value: function value(node) {\n      return parseInt(_get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'value', this).call(this, node)) || undefined; // Don't return NaN\n    }\n  }]);\n\n  return IdentAttributor;\n}(_parchment2.default.Attributor.Class);\n\nvar IndentClass = new IdentAttributor('indent', 'ql-indent', {\n  scope: _parchment2.default.Scope.BLOCK,\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]\n});\n\nexports.IndentClass = IndentClass;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _bold = __webpack_require__(44);\n\nvar _bold2 = _interopRequireDefault(_bold);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Italic = function (_Bold) {\n  _inherits(Italic, _Bold);\n\n  function Italic() {\n    _classCallCheck(this, Italic);\n\n    return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));\n  }\n\n  return Italic;\n}(_bold2.default);\n\nItalic.blotName = 'italic';\nItalic.tagName = ['EM', 'I'];\n\nexports.default = Italic;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ListItem = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _block = __webpack_require__(4);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _container = __webpack_require__(24);\n\nvar _container2 = _interopRequireDefault(_container);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ListItem = function (_Block) {\n  _inherits(ListItem, _Block);\n\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n\n    return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));\n  }\n\n  _createClass(ListItem, [{\n    key: 'format',\n    value: function format(name, value) {\n      if (name === List.blotName && !value) {\n        this.replaceWith(_parchment2.default.create(this.statics.scope));\n      } else {\n        _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'format', this).call(this, name, value);\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove() {\n      if (this.prev == null && this.next == null) {\n        this.parent.remove();\n      } else {\n        _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'remove', this).call(this);\n      }\n    }\n  }, {\n    key: 'replaceWith',\n    value: function replaceWith(name, value) {\n      this.parent.isolate(this.offset(this.parent), this.length());\n      if (name === this.parent.statics.blotName) {\n        this.parent.replaceWith(name, value);\n        return this;\n      } else {\n        this.parent.unwrap();\n        return _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'replaceWith', this).call(this, name, value);\n      }\n    }\n  }], [{\n    key: 'formats',\n    value: function formats(domNode) {\n      return domNode.tagName === this.tagName ? undefined : _get(ListItem.__proto__ || Object.getPrototypeOf(ListItem), 'formats', this).call(this, domNode);\n    }\n  }]);\n\n  return ListItem;\n}(_block2.default);\n\nListItem.blotName = 'list-item';\nListItem.tagName = 'LI';\n\nvar List = function (_Container) {\n  _inherits(List, _Container);\n\n  _createClass(List, null, [{\n    key: 'create',\n    value: function create(value) {\n      var tagName = value === 'ordered' ? 'OL' : 'UL';\n      var node = _get(List.__proto__ || Object.getPrototypeOf(List), 'create', this).call(this, tagName);\n      if (value === 'checked' || value === 'unchecked') {\n        node.setAttribute('data-checked', value === 'checked');\n      }\n      return node;\n    }\n  }, {\n    key: 'formats',\n    value: function formats(domNode) {\n      if (domNode.tagName === 'OL') return 'ordered';\n      if (domNode.tagName === 'UL') {\n        if (domNode.hasAttribute('data-checked')) {\n          return domNode.getAttribute('data-checked') === 'true' ? 'checked' : 'unchecked';\n        } else {\n          return 'bullet';\n        }\n      }\n      return undefined;\n    }\n  }]);\n\n  function List(domNode) {\n    _classCallCheck(this, List);\n\n    var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, domNode));\n\n    domNode.addEventListener('click', function (e) {\n      if (e.target.parentNode !== domNode) return;\n      var format = _this2.statics.formats(domNode);\n      var blot = _parchment2.default.find(e.target);\n      if (format === 'checked') {\n        blot.format('list', 'unchecked');\n      } else if (format === 'unchecked') {\n        blot.format('list', 'checked');\n      }\n    });\n    return _this2;\n  }\n\n  _createClass(List, [{\n    key: 'format',\n    value: function format(name, value) {\n      if (this.children.length > 0) {\n        this.children.tail.format(name, value);\n      }\n    }\n  }, {\n    key: 'formats',\n    value: function formats() {\n      // We don't inherit from FormatBlot\n      return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));\n    }\n  }, {\n    key: 'insertBefore',\n    value: function insertBefore(blot, ref) {\n      if (blot instanceof ListItem) {\n        _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'insertBefore', this).call(this, blot, ref);\n      } else {\n        var index = ref == null ? this.length() : ref.offset(this);\n        var after = this.split(index);\n        after.parent.insertBefore(blot, after);\n      }\n    }\n  }, {\n    key: 'optimize',\n    value: function optimize() {\n      _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'optimize', this).call(this);\n      var next = this.next;\n      if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute('data-checked') === this.domNode.getAttribute('data-checked')) {\n        next.moveChildren(this);\n        next.remove();\n      }\n    }\n  }, {\n    key: 'replace',\n    value: function replace(target) {\n      if (target.statics.blotName !== this.statics.blotName) {\n        var item = _parchment2.default.create(this.statics.defaultChild);\n        target.moveChildren(item);\n        this.appendChild(item);\n      }\n      _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'replace', this).call(this, target);\n    }\n  }]);\n\n  return List;\n}(_container2.default);\n\nList.blotName = 'list';\nList.scope = _parchment2.default.Scope.BLOCK_BLOT;\nList.tagName = ['OL', 'UL'];\nList.defaultChild = 'list-item';\nList.allowedChildren = [ListItem];\n\nexports.ListItem = ListItem;\nexports.default = List;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Script = function (_Inline) {\n  _inherits(Script, _Inline);\n\n  function Script() {\n    _classCallCheck(this, Script);\n\n    return _possibleConstructorReturn(this, (Script.__proto__ || Object.getPrototypeOf(Script)).apply(this, arguments));\n  }\n\n  _createClass(Script, null, [{\n    key: 'create',\n    value: function create(value) {\n      if (value === 'super') {\n        return document.createElement('sup');\n      } else if (value === 'sub') {\n        return document.createElement('sub');\n      } else {\n        return _get(Script.__proto__ || Object.getPrototypeOf(Script), 'create', this).call(this, value);\n      }\n    }\n  }, {\n    key: 'formats',\n    value: function formats(domNode) {\n      if (domNode.tagName === 'SUB') return 'sub';\n      if (domNode.tagName === 'SUP') return 'super';\n      return undefined;\n    }\n  }]);\n\n  return Script;\n}(_inline2.default);\n\nScript.blotName = 'script';\nScript.tagName = ['SUB', 'SUP'];\n\nexports.default = Script;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Strike = function (_Inline) {\n  _inherits(Strike, _Inline);\n\n  function Strike() {\n    _classCallCheck(this, Strike);\n\n    return _possibleConstructorReturn(this, (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(this, arguments));\n  }\n\n  return Strike;\n}(_inline2.default);\n\nStrike.blotName = 'strike';\nStrike.tagName = 'S';\n\nexports.default = Strike;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inline = __webpack_require__(8);\n\nvar _inline2 = _interopRequireDefault(_inline);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Underline = function (_Inline) {\n  _inherits(Underline, _Inline);\n\n  function Underline() {\n    _classCallCheck(this, Underline);\n\n    return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).apply(this, arguments));\n  }\n\n  return Underline;\n}(_inline2.default);\n\nUnderline.blotName = 'underline';\nUnderline.tagName = 'U';\n\nexports.default = Underline;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _block = __webpack_require__(4);\n\nvar _link = __webpack_require__(27);\n\nvar _link2 = _interopRequireDefault(_link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ATTRIBUTES = ['height', 'width'];\n\nvar Video = function (_BlockEmbed) {\n  _inherits(Video, _BlockEmbed);\n\n  function Video() {\n    _classCallCheck(this, Video);\n\n    return _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).apply(this, arguments));\n  }\n\n  _createClass(Video, [{\n    key: 'format',\n    value: function format(name, value) {\n      if (ATTRIBUTES.indexOf(name) > -1) {\n        if (value) {\n          this.domNode.setAttribute(name, value);\n        } else {\n          this.domNode.removeAttribute(name);\n        }\n      } else {\n        _get(Video.prototype.__proto__ || Object.getPrototypeOf(Video.prototype), 'format', this).call(this, name, value);\n      }\n    }\n  }], [{\n    key: 'create',\n    value: function create(value) {\n      var node = _get(Video.__proto__ || Object.getPrototypeOf(Video), 'create', this).call(this, value);\n      node.setAttribute('frameborder', '0');\n      node.setAttribute('allowfullscreen', true);\n      node.setAttribute('src', this.sanitize(value));\n      return node;\n    }\n  }, {\n    key: 'formats',\n    value: function formats(domNode) {\n      return ATTRIBUTES.reduce(function (formats, attribute) {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      }, {});\n    }\n  }, {\n    key: 'sanitize',\n    value: function sanitize(url) {\n      return _link2.default.sanitize(url);\n    }\n  }, {\n    key: 'value',\n    value: function value(domNode) {\n      return domNode.getAttribute('src');\n    }\n  }]);\n\n  return Video;\n}(_block.BlockEmbed);\n\nVideo.blotName = 'video';\nVideo.className = 'ql-video';\nVideo.tagName = 'IFRAME';\n\nexports.default = Video;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.FormulaBlot = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _embed = __webpack_require__(7);\n\nvar _embed2 = _interopRequireDefault(_embed);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FormulaBlot = function (_Embed) {\n  _inherits(FormulaBlot, _Embed);\n\n  function FormulaBlot() {\n    _classCallCheck(this, FormulaBlot);\n\n    return _possibleConstructorReturn(this, (FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot)).apply(this, arguments));\n  }\n\n  _createClass(FormulaBlot, [{\n    key: 'index',\n    value: function index() {\n      return 1;\n    }\n  }], [{\n    key: 'create',\n    value: function create(value) {\n      var node = _get(FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot), 'create', this).call(this, value);\n      if (typeof value === 'string') {\n        window.katex.render(value, node);\n        node.setAttribute('data-value', value);\n      }\n      node.setAttribute('contenteditable', false);\n      return node;\n    }\n  }, {\n    key: 'value',\n    value: function value(domNode) {\n      return domNode.getAttribute('data-value');\n    }\n  }]);\n\n  return FormulaBlot;\n}(_embed2.default);\n\nFormulaBlot.blotName = 'formula';\nFormulaBlot.className = 'ql-formula';\nFormulaBlot.tagName = 'SPAN';\n\nvar Formula = function (_Module) {\n  _inherits(Formula, _Module);\n\n  _createClass(Formula, null, [{\n    key: 'register',\n    value: function register() {\n      _quill2.default.register(FormulaBlot, true);\n    }\n  }]);\n\n  function Formula() {\n    _classCallCheck(this, Formula);\n\n    var _this2 = _possibleConstructorReturn(this, (Formula.__proto__ || Object.getPrototypeOf(Formula)).call(this));\n\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    return _this2;\n  }\n\n  return Formula;\n}(_module2.default);\n\nexports.FormulaBlot = FormulaBlot;\nexports.default = Formula;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.CodeToken = exports.CodeBlock = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _parchment = __webpack_require__(0);\n\nvar _parchment2 = _interopRequireDefault(_parchment);\n\nvar _quill = __webpack_require__(6);\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _module = __webpack_require__(9);\n\nvar _module2 = _interopRequireDefault(_module);\n\nvar _code = __webpack_require__(16);\n\nvar _code2 = _interopRequireDefault(_code);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar SyntaxCodeBlock = function (_CodeBlock) {\n  _inherits(SyntaxCodeBlock, _CodeBlock);\n\n  function SyntaxCodeBlock() {\n    _classCallCheck(this, SyntaxCodeBlock);\n\n    return _possibleConstructorReturn(this, (SyntaxCodeBlock.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock)).apply(this, arguments));\n  }\n\n  _createClass(SyntaxCodeBlock, [{\n    key: 'replaceWith',\n    value: function replaceWith(block) {\n      this.domNode.textContent = this.domNode.textContent;\n      this.attach();\n      _get(SyntaxCodeBlock.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock.prototype), 'replaceWith', this).call(this, block);\n    }\n  }, {\n    key: 'highlight',\n    value: function highlight(_highlight) {\n      if (this.cachedHTML !== this.domNode.innerHTML) {\n        var text = this.domNode.textContent;\n        if (text.trim().length > 0 || this.cachedHTML == null) {\n          this.domNode.innerHTML = _highlight(text);\n          this.attach();\n        }\n        this.cachedHTML = this.domNode.innerHTML;\n      }\n    }\n  }]);\n\n  return SyntaxCodeBlock;\n}(_code2.default);\n\nSyntaxCodeBlock.className = 'ql-syntax';\n\nvar CodeToken = new _parchment2.default.Attributor.Class('token', 'hljs', {\n  scope: _parchment2.default.Scope.INLINE\n});\n\nvar Syntax = function (_Module) {\n  _inherits(Syntax, _Module);\n\n  _createClass(Syntax, null, [{\n    key: 'register',\n    value: function register() {\n      _quill2.default.register(CodeToken, true);\n      _quill2.default.register(SyntaxCodeBlock, true);\n    }\n  }]);\n\n  function Syntax(quill, options) {\n    _classCallCheck(this, Syntax);\n\n    var _this2 = _possibleConstructorReturn(this, (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(this, quill, options));\n\n    if (typeof _this2.options.highlight !== 'function') {\n      throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');\n    }\n    var timer = null;\n    _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {\n      if (timer != null) return;\n      timer = setTimeout(function () {\n        _this2.highlight();\n        timer = null;\n      }, 100);\n    });\n    _this2.highlight();\n    return _this2;\n  }\n\n  _createClass(Syntax, [{\n    key: 'highlight',\n    value: function highlight() {\n      var _this3 = this;\n\n      if (this.quill.selection.composing) return;\n      var range = this.quill.getSelection();\n      this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function (code) {\n        code.highlight(_this3.options.highlight);\n      });\n      this.quill.update(_quill2.default.sources.SILENT);\n      if (range != null) {\n        this.quill.setSelection(range, _quill2.default.sources.SILENT);\n      }\n    }\n  }]);\n\n  return Syntax;\n}(_module2.default);\n\nSyntax.DEFAULTS = {\n  highlight: function () {\n    if (window.hljs == null) return null;\n    return function (text) {\n      var result = window.hljs.highlightAuto(text);\n      return result.value;\n    };\n  }()\n};\n\nexports.CodeBlock = SyntaxCodeBlock;\nexports.CodeToken = CodeToken;\nexports.default = Syntax;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.BubbleTooltip = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _extend = __webpack_require__(3);\n\nvar _extend2 = _interopRequireDefault(_extend);\n\nvar _emitter = __webpack_require__(5);\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _base = __webpack_require__(47);\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _selection = __webpack_require__(15);\n\nvar _icons = __webpack_require__(41);\n\nvar _icons2 = _interopRequireDefault(_icons);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TOOLBAR_CONFIG = [['bold', 'italic', 'link'], [{ header: 1 }, { header: 2 }, 'blockquote']];\n\nvar BubbleTheme = function (_BaseTheme) {\n  _inherits(BubbleTheme, _BaseTheme);\n\n  function BubbleTheme(quill, options) {\n    _classCallCheck(this, BubbleTheme);\n\n    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n\n    var _this = _possibleConstructorReturn(this, (BubbleTheme.__proto__ || Object.getPrototypeOf(BubbleTheme)).call(this, quill, options));\n\n    _this.quill.container.classList.add('ql-bubble');\n    return _this;\n  }\n\n  _createClass(BubbleTheme, [{\n    key: 'extendToolbar',\n    value: function extendToolbar(toolbar) {\n      this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n      this.tooltip.root.appendChild(toolbar.container);\n      this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);\n      this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);\n    }\n  }]);\n\n  return BubbleTheme;\n}(_base2.default);\n\nBubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link: function link(value) {\n          if (!value) {\n            this.quill.format('link', false);\n          } else {\n            this.quill.theme.tooltip.edit();\n          }\n        }\n      }\n    }\n  }\n});\n\nvar BubbleTooltip = function (_BaseTooltip) {\n  _inherits(BubbleTooltip, _BaseTooltip);\n\n  function BubbleTooltip(quill, bounds) {\n    _classCallCheck(this, BubbleTooltip);\n\n    var _this2 = _possibleConstructorReturn(this, (BubbleTooltip.__proto__ || Object.getPrototypeOf(BubbleTooltip)).call(this, quill, bounds));\n\n    _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function (type, range, oldRange, source) {\n      if (type !== _emitter2.default.events.SELECTION_CHANGE) return;\n      if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {\n        _this2.show();\n        // Lock our width so we will expand beyond our offsetParent boundaries\n        _this2.root.style.left = '0px';\n        _this2.root.style.width = '';\n        _this2.root.style.width = _this2.root.offsetWidth + 'px';\n        var lines = _this2.quill.getLines(range.index, range.length);\n        if (lines.length === 1) {\n          _this2.position(_this2.quill.getBounds(range));\n        } else {\n          var lastLine = lines[lines.length - 1];\n          var index = _this2.quill.getIndex(lastLine);\n          var length = Math.min(lastLine.length() - 1, range.index + range.length - index);\n          var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));\n          _this2.position(_bounds);\n        }\n      } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {\n        _this2.hide();\n      }\n    });\n    return _this2;\n  }\n\n  _createClass(BubbleTooltip, [{\n    key: 'listen',\n    value: function listen() {\n      var _this3 = this;\n\n      _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'listen', this).call(this);\n      this.root.querySelector('.ql-close').addEventListener('click', function () {\n        _this3.root.classList.remove('ql-editing');\n      });\n      this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function () {\n        // Let selection be restored by toolbar handlers before repositioning\n        setTimeout(function () {\n          if (_this3.root.classList.contains('ql-hidden')) return;\n          var range = _this3.quill.getSelection();\n          if (range != null) {\n            _this3.position(_this3.quill.getBounds(range));\n          }\n        }, 1);\n      });\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      this.show();\n    }\n  }, {\n    key: 'position',\n    value: function position(reference) {\n      var shift = _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'position', this).call(this, reference);\n      var arrow = this.root.querySelector('.ql-tooltip-arrow');\n      arrow.style.marginLeft = '';\n      if (shift === 0) return shift;\n      arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + 'px';\n    }\n  }]);\n\n  return BubbleTooltip;\n}(_base.BaseTooltip);\n\nBubbleTooltip.TEMPLATE = ['<span class=\"ql-tooltip-arrow\"></span>', '<div class=\"ql-tooltip-editor\">', '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">', '<a class=\"ql-close\"></a>', '</div>'].join('');\n\nexports.BubbleTooltip = BubbleTooltip;\nexports.default = BubbleTheme;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>\";\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>\";\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>\";\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>\";\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <g class=\\\"ql-fill ql-color-label\\\"> <polygon points=\\\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\\\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\\\"6.817 5 6 5 6 6 6.38 6 6.817 5\\\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\\\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\\\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\\\"4.63 10 4 10 4 11 4.192 11 4.63 10\\\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\\\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\\\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\\\"12 6.868 12 6 11.62 6 12 6.868\\\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\\\"12.933 9 13 9 13 8 12.495 8 12.933 9\\\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\\\"5.5 13 9 5 12.5 13\\\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>\";\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <rect class=\\\"ql-fill ql-stroke\\\" height=3 width=3 x=4 y=5></rect> <rect class=\\\"ql-fill ql-stroke\\\" height=3 width=3 x=11 y=5></rect> <path class=\\\"ql-even ql-fill ql-stroke\\\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\\\"ql-even ql-fill ql-stroke\\\" d=M14,8c0,4.031-3,5-3,5></path> </svg>\";\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>\";\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg class=\\\"\\\" viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>\";\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=\\\"ql-color-label ql-stroke ql-transparent\\\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\\\"5.5 11 9 3 12.5 11\\\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>\";\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <polygon class=\\\"ql-stroke ql-fill\\\" points=\\\"3 11 5 9 3 7 3 11\\\"></polygon> <line class=\\\"ql-stroke ql-fill\\\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>\";\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <polygon class=\\\"ql-stroke ql-fill\\\" points=\\\"15 12 13 10 15 8 15 12\\\"></polygon> <line class=\\\"ql-stroke ql-fill\\\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>\";\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <polygon class=ql-stroke points=\\\"7 11 9 13 11 11 7 11\\\"></polygon> <polygon class=ql-stroke points=\\\"7 7 9 5 11 7 7 7\\\"></polygon> </svg>\";\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>\";\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>\";\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>\";\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\\\"translate(24 18) rotate(-180)\\\"/> </svg>\";\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>\";\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=3 x2=3 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=11 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=3 y1=9 y2=9></line> <path class=\\\"ql-stroke ql-thin\\\" d=M15.5,14.5h-2c0-.234,1.85-1.076,1.85-2.234a0.959,0.959,0,0,0-1.85-.109></path> </svg>\";\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=3 x2=3 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=11 y1=4 y2=14></line> <line class=ql-stroke x1=11 x2=3 y1=9 y2=9></line> <line class=\\\"ql-stroke ql-thin\\\" x1=13.5 x2=15.5 y1=14.5 y2=14.5></line> <path class=ql-fill d=M14.5,15a0.5,0.5,0,0,1-.5-0.5V12.085l-0.276.138A0.5,0.5,0,0,1,13.053,12c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,15,11.5v3A0.5,0.5,0,0,1,14.5,15Z></path> </svg>\";\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\\\"ql-even ql-fill\\\" points=\\\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\\\"></polyline> </svg>\";\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\\\"ql-fill ql-stroke\\\" points=\\\"3 7 3 11 5 9 3 7\\\"></polyline> </svg>\";\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>\";\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\\\"ql-even ql-stroke\\\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\\\"ql-even ql-stroke\\\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>\";\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>\";\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg class=\\\"\\\" viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\\\"3 4 4 5 6 3\\\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\\\"3 14 4 15 6 13\\\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\\\"3 9 4 10 6 8\\\"></polyline> </svg>\";\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\\\"ql-stroke ql-thin\\\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\\\"ql-stroke ql-thin\\\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\\\"ql-stroke ql-thin\\\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>\";\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\\\"5 7 5 11 3 9 5 7\\\"></polyline> </svg>\";\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <line class=\\\"ql-stroke ql-thin\\\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>\";\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>\";\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>\";\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>\";\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<svg viewbox=\\\"0 0 18 18\\\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>\";\n\n/***/ }),\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */,\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */,\n/* 128 */,\n/* 129 */,\n/* 130 */,\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(62);\n\n\n/***/ })\n/******/ ]);\n});","ï»¿import ko from 'knockout';\r\nimport template from './rich-text-editor.html';\r\nimport Quill from 'quill';\r\n\r\n\r\nconst editorConfigs = {\r\n\r\n    all: {\r\n\r\n        modules: {\r\n            toolbar: [\r\n                [{ 'header': [1, 2, false] }, { 'font': [] }],\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                [{ 'list': 'ordered' }, { 'list': 'bullet' },\r\n                { 'indent': '-1' }, { 'indent': '+1' }],\r\n                ['link', 'image', 'video'],\r\n                ['clean']\r\n            ]\r\n        },\r\n\r\n        formats: ['header', 'font', 'size',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'list', 'bullet', 'indent',\r\n            'link', 'image', 'video']\r\n\r\n    },\r\n\r\n    mediaOnly: {\r\n\r\n\r\n        modules: {\r\n            toolbar: [\r\n                ['image', 'video']\r\n            ]\r\n        },\r\n\r\n        formats: ['image', 'video']\r\n\r\n    },\r\n\r\n\r\n    videoOnly: {\r\n\r\n\r\n        modules: {\r\n            toolbar: [\r\n                ['video']\r\n            ]\r\n        },\r\n\r\n        formats: ['video']\r\n\r\n    },\r\n\r\n    imageOnly: {\r\n\r\n\r\n        modules: {\r\n            toolbar: [\r\n                ['image']\r\n            ]\r\n        },\r\n\r\n        formats: ['image']\r\n\r\n    },\r\n\r\n    shortText: {\r\n\r\n        modules: {\r\n            toolbar: [\r\n                ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                ['link'], ['clean']\r\n            ]\r\n        },\r\n\r\n        formats: ['header', 'font', 'size',\r\n            'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n            'link']\r\n\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nclass RichTextEditorViewModel {\r\n    constructor({value}) {\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nko.components.register('rich-text-editor', {\r\n    viewModel: {\r\n        createViewModel({value, placeholder = '', mode = \"shortText\"}, { element }) {\r\n\r\n            const viewModel = new RichTextEditorViewModel({ value });\r\n\r\n            const editorElement = element.querySelector('.rich-text-editor');\r\n            editorElement.innerHTML = value();\r\n\r\n            const {modules: {toolbar}, formats} = editorConfigs[mode];\r\n\r\n            const editor = new Quill(editorElement, {\r\n                theme: 'snow',\r\n                placeholder,\r\n                modules: { toolbar },\r\n                formats\r\n            });\r\n\r\n            viewModel.value.subscribe(newValue => {\r\n                if (value() == editor.container.firstChild.innerHTML)\r\n                { return; }\r\n                editor.container.firstChild.innerHTML = value();\r\n            });\r\n\r\n            editor.on('text-change', () => {\r\n                viewModel.value(editor.container.firstChild.innerHTML);\r\n            });\r\n\r\n            return viewModel;\r\n        }\r\n    },\r\n    template\r\n});","/*=============================================================================\n\tAuthor:\t\t\tEric M. Barnard - @ericmbarnard\t\t\t\t\t\t\t\t\n\tLicense:\t\tMIT (http://opensource.org/licenses/mit-license.php)\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tDescription:\tValidation Library for KnockoutJS\t\t\t\t\t\t\t\n\tVersion:\t\t2.0.3\t\t\t\t\t\t\t\t\t\t\t\n===============================================================================\n*/\n/*globals require: false, exports: false, define: false, ko: false */\n\n(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory(require(\"knockout\"), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `mapping` property\n\t\tfactory(ko, ko.validation = {});\n\t}\n}(function ( ko, exports ) {\n\n\tif (typeof (ko) === 'undefined') {\n\t\tthrow new Error('Knockout is required, please ensure it is loaded before loading this validation plug-in');\n\t}\n\n\t// create our namespace object\n\tko.validation = exports;\n\n\tvar kv = ko.validation,\n\t\tkoUtils = ko.utils,\n\t\tunwrap = koUtils.unwrapObservable,\n\t\tforEach = koUtils.arrayForEach,\n\t\textend = koUtils.extend;\n;/*global ko: false*/\n\nvar defaults = {\n\tregisterExtenders: true,\n\tmessagesOnModified: true,\n\terrorsAsTitle: true,            // enables/disables showing of errors as title attribute of the target element.\n\terrorsAsTitleOnModified: false, // shows the error when hovering the input field (decorateElement must be true)\n\tmessageTemplate: null,\n\tinsertMessages: true,           // automatically inserts validation messages as <span></span>\n\tparseInputAttributes: false,    // parses the HTML5 validation attribute from a form element and adds that to the object\n\twriteInputAttributes: false,    // adds HTML5 input validation attributes to form elements that ko observable's are bound to\n\tdecorateInputElement: false,         // false to keep backward compatibility\n\tdecorateElementOnModified: true,// true to keep backward compatibility\n\terrorClass: null,               // single class for error message and element\n\terrorElementClass: 'validationElement',  // class to decorate error element\n\terrorMessageClass: 'validationMessage',  // class to decorate error message\n\tallowHtmlMessages: false,\t\t// allows HTML in validation messages\n\tgrouping: {\n\t\tdeep: false,        //by default grouping is shallow\n\t\tobservable: true,   //and using observables\n\t\tlive: false\t\t    //react to changes to observableArrays if observable === true\n\t},\n\tvalidate: {\n\t\t// throttle: 10\n\t}\n};\n\n// make a copy  so we can use 'reset' later\nvar configuration = extend({}, defaults);\n\nconfiguration.html5Attributes = ['required', 'pattern', 'min', 'max', 'step'];\nconfiguration.html5InputTypes = ['email', 'number', 'date'];\n\nconfiguration.reset = function () {\n\textend(configuration, defaults);\n};\n\nkv.configuration = configuration;\n;kv.utils = (function () {\n\tvar seedId = new Date().getTime();\n\n\tvar domData = {}; //hash of data objects that we reference from dom elements\n\tvar domDataKey = '__ko_validation__';\n\n\treturn {\n\t\tisArray: function (o) {\n\t\t\treturn o.isArray || Object.prototype.toString.call(o) === '[object Array]';\n\t\t},\n\t\tisObject: function (o) {\n\t\t\treturn o !== null && typeof o === 'object';\n\t\t},\n\t\tisNumber: function(o) {\n\t\t\treturn !isNaN(o);\t\n\t\t},\n\t\tisObservableArray: function(instance) {\n\t\t\treturn !!instance &&\n\t\t\t\t\ttypeof instance[\"remove\"] === \"function\" &&\n\t\t\t\t\ttypeof instance[\"removeAll\"] === \"function\" &&\n\t\t\t\t\ttypeof instance[\"destroy\"] === \"function\" &&\n\t\t\t\t\ttypeof instance[\"destroyAll\"] === \"function\" &&\n\t\t\t\t\ttypeof instance[\"indexOf\"] === \"function\" &&\n\t\t\t\t\ttypeof instance[\"replace\"] === \"function\";\n\t\t},\n\t\tvalues: function (o) {\n\t\t\tvar r = [];\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tr.push(o[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\tgetValue: function (o) {\n\t\t\treturn (typeof o === 'function' ? o() : o);\n\t\t},\n\t\thasAttribute: function (node, attr) {\n\t\t\treturn node.getAttribute(attr) !== null;\n\t\t},\n\t\tgetAttribute: function (element, attr) {\n\t\t\treturn element.getAttribute(attr);\n\t\t},\n\t\tsetAttribute: function (element, attr, value) {\n\t\t\treturn element.setAttribute(attr, value);\n\t\t},\n\t\tisValidatable: function (o) {\n\t\t\treturn !!(o && o.rules && o.isValid && o.isModified);\n\t\t},\n\t\tinsertAfter: function (node, newNode) {\n\t\t\tnode.parentNode.insertBefore(newNode, node.nextSibling);\n\t\t},\n\t\tnewId: function () {\n\t\t\treturn seedId += 1;\n\t\t},\n\t\tgetConfigOptions: function (element) {\n\t\t\tvar options = kv.utils.contextFor(element);\n\n\t\t\treturn options || kv.configuration;\n\t\t},\n\t\tsetDomData: function (node, data) {\n\t\t\tvar key = node[domDataKey];\n\n\t\t\tif (!key) {\n\t\t\t\tnode[domDataKey] = key = kv.utils.newId();\n\t\t\t}\n\n\t\t\tdomData[key] = data;\n\t\t},\n\t\tgetDomData: function (node) {\n\t\t\tvar key = node[domDataKey];\n\n\t\t\tif (!key) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn domData[key];\n\t\t},\n\t\tcontextFor: function (node) {\n\t\t\tswitch (node.nodeType) {\n\t\t\t\tcase 1:\n\t\t\t\tcase 8:\n\t\t\t\t\tvar context = kv.utils.getDomData(node);\n\t\t\t\t\tif (context) { return context; }\n\t\t\t\t\tif (node.parentNode) { return kv.utils.contextFor(node.parentNode); }\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\tisEmptyVal: function (val) {\n\t\t\tif (val === undefined) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (val === null) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (val === \"\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\tgetOriginalElementTitle: function (element) {\n\t\t\tvar savedOriginalTitle = kv.utils.getAttribute(element, 'data-orig-title'),\n\t\t\t\tcurrentTitle = element.title,\n\t\t\t\thasSavedOriginalTitle = kv.utils.hasAttribute(element, 'data-orig-title');\n\n\t\t\treturn hasSavedOriginalTitle ?\n\t\t\t\tsavedOriginalTitle : currentTitle;\n\t\t},\n\t\tasync: function (expr) {\n\t\t\tif (window.setImmediate) { window.setImmediate(expr); }\n\t\t\telse { window.setTimeout(expr, 0); }\n\t\t},\n\t\tforEach: function (object, callback) {\n\t\t\tif (kv.utils.isArray(object)) {\n\t\t\t\treturn forEach(object, callback);\n\t\t\t}\n\t\t\tfor (var prop in object) {\n\t\t\t\tif (object.hasOwnProperty(prop)) {\n\t\t\t\t\tcallback(object[prop], prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}());;var api = (function () {\n\n\tvar isInitialized = 0,\n\t\tconfiguration = kv.configuration,\n\t\tutils = kv.utils;\n\n\tfunction cleanUpSubscriptions(context) {\n\t\tforEach(context.subscriptions, function (subscription) {\n\t\t\tsubscription.dispose();\n\t\t});\n\t\tcontext.subscriptions = [];\n\t}\n\n\tfunction dispose(context) {\n\t\tif (context.options.deep) {\n\t\t\tforEach(context.flagged, function (obj) {\n\t\t\t\tdelete obj.__kv_traversed;\n\t\t\t});\n\t\t\tcontext.flagged.length = 0;\n\t\t}\n\n\t\tif (!context.options.live) {\n\t\t\tcleanUpSubscriptions(context);\n\t\t}\n\t}\n\n\tfunction runTraversal(obj, context) {\n\t\tcontext.validatables = [];\n\t\tcleanUpSubscriptions(context);\n\t\ttraverseGraph(obj, context);\n\t\tdispose(context);\n\t}\n\n\tfunction traverseGraph(obj, context, level) {\n\t\tvar objValues = [],\n\t\t\tval = obj.peek ? obj.peek() : obj;\n\n\t\tif (obj.__kv_traversed === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (context.options.deep) {\n\t\t\tobj.__kv_traversed = true;\n\t\t\tcontext.flagged.push(obj);\n\t\t}\n\n\t\t//default level value depends on deep option.\n\t\tlevel = (level !== undefined ? level : context.options.deep ? 1 : -1);\n\n\t\t// if object is observable then add it to the list\n\t\tif (ko.isObservable(obj)) {\n\t\t\t// ensure it's validatable but don't extend validatedObservable because it\n\t\t\t// would overwrite isValid property.\n\t\t\tif (!obj.errors && !utils.isValidatable(obj)) {\n\t\t\t\tobj.extend({ validatable: true });\n\t\t\t}\n\t\t\tcontext.validatables.push(obj);\n\n\t\t\tif (context.options.live && utils.isObservableArray(obj)) {\n\t\t\t\tcontext.subscriptions.push(obj.subscribe(function () {\n\t\t\t\t\tcontext.graphMonitor.valueHasMutated();\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t//get list of values either from array or object but ignore non-objects\n\t\t// and destroyed objects\n\t\tif (val && !val._destroy) {\n\t\t\tif (utils.isArray(val)) {\n\t\t\t\tobjValues = val;\n\t\t\t}\n\t\t\telse if (utils.isObject(val)) {\n\t\t\t\tobjValues = utils.values(val);\n\t\t\t}\n\t\t}\n\n\t\t//process recursively if it is deep grouping\n\t\tif (level !== 0) {\n\t\t\tutils.forEach(objValues, function (observable) {\n\t\t\t\t//but not falsy things and not HTML Elements\n\t\t\t\tif (observable && !observable.nodeType && (!ko.isComputed(observable) || observable.rules)) {\n\t\t\t\t\ttraverseGraph(observable, context, level + 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction collectErrors(array) {\n\t\tvar errors = [];\n\t\tforEach(array, function (observable) {\n\t\t\t// Do not collect validatedObservable errors\n\t\t\tif (utils.isValidatable(observable) && !observable.isValid()) {\n\t\t\t\t// Use peek because we don't want a dependency for 'error' property because it\n\t\t\t\t// changes before 'isValid' does. (Issue #99)\n\t\t\t\terrors.push(observable.error.peek());\n\t\t\t}\n\t\t});\n\t\treturn errors;\n\t}\n\n\treturn {\n\t\t//Call this on startup\n\t\t//any config can be overridden with the passed in options\n\t\tinit: function (options, force) {\n\t\t\t//done run this multiple times if we don't really want to\n\t\t\tif (isInitialized > 0 && !force) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//because we will be accessing options properties it has to be an object at least\n\t\t\toptions = options || {};\n\t\t\t//if specific error classes are not provided then apply generic errorClass\n\t\t\t//it has to be done on option so that options.errorClass can override default\n\t\t\t//errorElementClass and errorMessage class but not those provided in options\n\t\t\toptions.errorElementClass = options.errorElementClass || options.errorClass || configuration.errorElementClass;\n\t\t\toptions.errorMessageClass = options.errorMessageClass || options.errorClass || configuration.errorMessageClass;\n\n\t\t\textend(configuration, options);\n\n\t\t\tif (configuration.registerExtenders) {\n\t\t\t\tkv.registerExtenders();\n\t\t\t}\n\n\t\t\tisInitialized = 1;\n\t\t},\n\n\t\t// resets the config back to its original state\n\t\treset: kv.configuration.reset,\n\n\t\t// recursively walks a viewModel and creates an object that\n\t\t// provides validation information for the entire viewModel\n\t\t// obj -> the viewModel to walk\n\t\t// options -> {\n\t\t//\t  deep: false, // if true, will walk past the first level of viewModel properties\n\t\t//\t  observable: false // if true, returns a computed observable indicating if the viewModel is valid\n\t\t// }\n\t\tgroup: function group(obj, options) { // array of observables or viewModel\n\t\t\toptions = extend(extend({}, configuration.grouping), options);\n\n\t\t\tvar context = {\n\t\t\t\toptions: options,\n\t\t\t\tgraphMonitor: ko.observable(),\n\t\t\t\tflagged: [],\n\t\t\t\tsubscriptions: [],\n\t\t\t\tvalidatables: []\n\t\t\t};\n\n\t\t\tvar result = null;\n\n\t\t\t//if using observables then traverse structure once and add observables\n\t\t\tif (options.observable) {\n\t\t\t\tresult = ko.computed(function () {\n\t\t\t\t\tcontext.graphMonitor(); //register dependency\n\t\t\t\t\trunTraversal(obj, context);\n\t\t\t\t\treturn collectErrors(context.validatables);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse { //if not using observables then every call to error() should traverse the structure\n\t\t\t\tresult = function () {\n\t\t\t\t\trunTraversal(obj, context);\n\t\t\t\t\treturn collectErrors(context.validatables);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tresult.showAllMessages = function (show) { // thanks @heliosPortal\n\t\t\t\tif (show === undefined) {//default to true\n\t\t\t\t\tshow = true;\n\t\t\t\t}\n\n\t\t\t\tresult.forEach(function (observable) {\n\t\t\t\t\tif (utils.isValidatable(observable)) {\n\t\t\t\t\t\tobservable.isModified(show);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tresult.isAnyMessageShown = function () {\n\t\t\t\tvar invalidAndModifiedPresent;\n\n\t\t\t\tinvalidAndModifiedPresent = !!result.find(function (observable) {\n\t\t\t\t\treturn utils.isValidatable(observable) && !observable.isValid() && observable.isModified();\n\t\t\t\t});\n\t\t\t\treturn invalidAndModifiedPresent;\n\t\t\t};\n\n\t\t\tresult.filter = function(predicate) {\n\t\t\t\tpredicate = predicate || function () { return true; };\n\t\t\t\t// ensure we have latest changes\n\t\t\t\tresult();\n\n\t\t\t\treturn koUtils.arrayFilter(context.validatables, predicate);\n\t\t\t};\n\n\t\t\tresult.find = function(predicate) {\n\t\t\t\tpredicate = predicate || function () { return true; };\n\t\t\t\t// ensure we have latest changes\n\t\t\t\tresult();\n\n\t\t\t\treturn koUtils.arrayFirst(context.validatables, predicate);\n\t\t\t};\n\n\t\t\tresult.forEach = function(callback) {\n\t\t\t\tcallback = callback || function () { };\n\t\t\t\t// ensure we have latest changes\n\t\t\t\tresult();\n\n\t\t\t\tforEach(context.validatables, callback);\n\t\t\t};\n\n\t\t\tresult.map = function(mapping) {\n\t\t\t\tmapping = mapping || function (item) { return item; };\n\t\t\t\t// ensure we have latest changes\n\t\t\t\tresult();\n\n\t\t\t\treturn koUtils.arrayMap(context.validatables, mapping);\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * @private You should not rely on this method being here.\n\t\t\t * It's a private method and it may change in the future.\n\t\t\t *\n\t\t\t * @description Updates the validated object and collects errors from it.\n\t\t\t */\n\t\t\tresult._updateState = function(newValue) {\n\t\t\t\tif (!utils.isObject(newValue)) {\n\t\t\t\t\tthrow new Error('An object is required.');\n\t\t\t\t}\n\t\t\t\tobj = newValue;\n\t\t\t\tif (options.observable) {\n\t\t\t\t\tcontext.graphMonitor.valueHasMutated();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trunTraversal(newValue, context);\n\t\t\t\t\treturn collectErrors(context.validatables);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn result;\n\t\t},\n\n\t\tformatMessage: function (message, params, observable) {\n\t\t\tif (utils.isObject(params) && params.typeAttr) {\n\t\t\t\tparams = params.value;\n\t\t\t}\n\t\t\tif (typeof message === 'function') {\n\t\t\t\treturn message(params, observable);\n\t\t\t}\n\t\t\tvar replacements = unwrap(params);\n            if (replacements == null) {\n                replacements = [];\n            }\n\t\t\tif (!utils.isArray(replacements)) {\n\t\t\t\treplacements = [replacements];\n\t\t\t}\n\t\t\treturn message.replace(/{(\\d+)}/gi, function(match, index) {\n\t\t\t\tif (typeof replacements[index] !== 'undefined') {\n\t\t\t\t\treturn replacements[index];\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\t\t},\n\n\t\t// addRule:\n\t\t// This takes in a ko.observable and a Rule Context - which is just a rule name and params to supply to the validator\n\t\t// ie: kv.addRule(myObservable, {\n\t\t//\t\t  rule: 'required',\n\t\t//\t\t  params: true\n\t\t//\t  });\n\t\t//\n\t\taddRule: function (observable, rule) {\n\t\t\tobservable.extend({ validatable: true });\n\n\t\t\tvar hasRule = !!koUtils.arrayFirst(observable.rules(), function(item) {\n\t\t\t\treturn item.rule && item.rule === rule.rule;\n\t\t\t});\n\n\t\t\tif (!hasRule) {\n\t\t\t\t//push a Rule Context to the observables local array of Rule Contexts\n\t\t\t\tobservable.rules.push(rule);\n\t\t\t}\n\t\t\treturn observable;\n\t\t},\n\n\t\t// addAnonymousRule:\n\t\t// Anonymous Rules essentially have all the properties of a Rule, but are only specific for a certain property\n\t\t// and developers typically are wanting to add them on the fly or not register a rule with the 'kv.rules' object\n\t\t//\n\t\t// Example:\n\t\t// var test = ko.observable('something').extend{(\n\t\t//\t  validation: {\n\t\t//\t\t  validator: function(val, someOtherVal){\n\t\t//\t\t\t  return true;\n\t\t//\t\t  },\n\t\t//\t\t  message: \"Something must be really wrong!',\n\t\t//\t\t  params: true\n\t\t//\t  }\n\t\t//  )};\n\t\taddAnonymousRule: function (observable, ruleObj) {\n\t\t\tif (ruleObj['message'] === undefined) {\n\t\t\t\truleObj['message'] = 'Error';\n\t\t\t}\n\n\t\t\t//make sure onlyIf is honoured\n\t\t\tif (ruleObj.onlyIf) {\n\t\t\t\truleObj.condition = ruleObj.onlyIf;\n\t\t\t}\n\n\t\t\t//add the anonymous rule to the observable\n\t\t\tkv.addRule(observable, ruleObj);\n\t\t},\n\n\t\taddExtender: function (ruleName) {\n\t\t\tko.extenders[ruleName] = function (observable, params) {\n\t\t\t\t//params can come in a few flavors\n\t\t\t\t// 1. Just the params to be passed to the validator\n\t\t\t\t// 2. An object containing the Message to be used and the Params to pass to the validator\n\t\t\t\t// 3. A condition when the validation rule to be applied\n\t\t\t\t//\n\t\t\t\t// Example:\n\t\t\t\t// var test = ko.observable(3).extend({\n\t\t\t\t//\t  max: {\n\t\t\t\t//\t\t  message: 'This special field has a Max of {0}',\n\t\t\t\t//\t\t  params: 2,\n\t\t\t\t//\t\t  onlyIf: function() {\n\t\t\t\t//\t\t\t\t\t  return specialField.IsVisible();\n\t\t\t\t//\t\t\t\t  }\n\t\t\t\t//\t  }\n\t\t\t\t//  )};\n\t\t\t\t//\n\t\t\t\tif (params && (params.message || params.onlyIf)) { //if it has a message or condition object, then its an object literal to use\n\t\t\t\t\treturn kv.addRule(observable, {\n\t\t\t\t\t\trule: ruleName,\n\t\t\t\t\t\tmessage: params.message,\n\t\t\t\t\t\tparams: utils.isEmptyVal(params.params) ? true : params.params,\n\t\t\t\t\t\tcondition: params.onlyIf\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn kv.addRule(observable, {\n\t\t\t\t\t\trule: ruleName,\n\t\t\t\t\t\tparams: params\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\t// loops through all kv.rules and adds them as extenders to\n\t\t// ko.extenders\n\t\tregisterExtenders: function () { // root extenders optional, use 'validation' extender if would cause conflicts\n\t\t\tif (configuration.registerExtenders) {\n\t\t\t\tfor (var ruleName in kv.rules) {\n\t\t\t\t\tif (kv.rules.hasOwnProperty(ruleName)) {\n\t\t\t\t\t\tif (!ko.extenders[ruleName]) {\n\t\t\t\t\t\t\tkv.addExtender(ruleName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t//creates a span next to the @element with the specified error class\n\t\tinsertValidationMessage: function (element) {\n\t\t\tvar span = document.createElement('SPAN');\n\t\t\tspan.className = utils.getConfigOptions(element).errorMessageClass;\n\t\t\tutils.insertAfter(element, span);\n\t\t\treturn span;\n\t\t},\n\n\t\t// if html-5 validation attributes have been specified, this parses\n\t\t// the attributes on @element\n\t\tparseInputValidationAttributes: function (element, valueAccessor) {\n\t\t\tforEach(kv.configuration.html5Attributes, function (attr) {\n\t\t\t\tif (utils.hasAttribute(element, attr)) {\n\n\t\t\t\t\tvar params = element.getAttribute(attr) || true;\n\n\t\t\t\t\tif (attr === 'min' || attr === 'max')\n\t\t\t\t\t{\n\t\t\t\t\t\t// If we're validating based on the min and max attributes, we'll\n\t\t\t\t\t\t// need to know what the 'type' attribute is set to\n\t\t\t\t\t\tvar typeAttr = element.getAttribute('type');\n\t\t\t\t\t\tif (typeof typeAttr === \"undefined\" || !typeAttr)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// From http://www.w3.org/TR/html-markup/input:\n\t\t\t\t\t\t\t//   An input element with no type attribute specified represents the\n\t\t\t\t\t\t\t//   same thing as an input element with its type attribute set to \"text\".\n\t\t\t\t\t\t\ttypeAttr = \"text\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparams = {typeAttr: typeAttr, value: params};\n\t\t\t\t\t}\n\n\t\t\t\t\tkv.addRule(valueAccessor(), {\n\t\t\t\t\t\trule: attr,\n\t\t\t\t\t\tparams: params\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar currentType = element.getAttribute('type');\n\t\t\tforEach(kv.configuration.html5InputTypes, function (type) {\n\t\t\t\tif (type === currentType) {\n\t\t\t\t\tkv.addRule(valueAccessor(), {\n\t\t\t\t\t\trule: (type === 'date') ? 'dateISO' : type,\n\t\t\t\t\t\tparams: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t// writes html5 validation attributes on the element passed in\n\t\twriteInputValidationAttributes: function (element, valueAccessor) {\n\t\t\tvar observable = valueAccessor();\n\n\t\t\tif (!observable || !observable.rules) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar contexts = observable.rules(); // observable array\n\n\t\t\t// loop through the attributes and add the information needed\n\t\t\tforEach(kv.configuration.html5Attributes, function (attr) {\n\t\t\t\tvar ctx = koUtils.arrayFirst(contexts, function (ctx) {\n\t\t\t\t\treturn ctx.rule && ctx.rule.toLowerCase() === attr.toLowerCase();\n\t\t\t\t});\n\n\t\t\t\tif (!ctx) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// we have a rule matching a validation attribute at this point\n\t\t\t\t// so lets add it to the element along with the params\n\t\t\t\tko.computed({\n\t\t\t\t\tread: function() {\n\t\t\t\t\t\tvar params = ko.unwrap(ctx.params);\n\n\t\t\t\t\t\t// we have to do some special things for the pattern validation\n\t\t\t\t\t\tif (ctx.rule === \"pattern\" && params instanceof RegExp) {\n\t\t\t\t\t\t\t// we need the pure string representation of the RegExpr without the //gi stuff\n\t\t\t\t\t\t\tparams = params.source;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telement.setAttribute(attr, params);\n\t\t\t\t\t},\n\t\t\t\t\tdisposeWhenNodeIsRemoved: element\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontexts = null;\n\t\t},\n\n\t\t//take an existing binding handler and make it cause automatic validations\n\t\tmakeBindingHandlerValidatable: function (handlerName) {\n\t\t\tvar init = ko.bindingHandlers[handlerName].init;\n\n\t\t\tko.bindingHandlers[handlerName].init = function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\n\t\t\t\tinit(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n\n\t\t\t\treturn ko.bindingHandlers['validationCore'].init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n\t\t\t};\n\t\t},\n\n\t\t// visit an objects properties and apply validation rules from a definition\n\t\tsetRules: function (target, definition) {\n\t\t\tvar setRules = function (target, definition) {\n\t\t\t\tif (!target || !definition) { return; }\n\n\t\t\t\tfor (var prop in definition) {\n\t\t\t\t\tif (!definition.hasOwnProperty(prop)) { continue; }\n\t\t\t\t\tvar ruleDefinitions = definition[prop];\n\n\t\t\t\t\t//check the target property exists and has a value\n\t\t\t\t\tif (!target[prop]) { continue; }\n\t\t\t\t\tvar targetValue = target[prop],\n\t\t\t\t\t\tunwrappedTargetValue = unwrap(targetValue),\n\t\t\t\t\t\trules = {},\n\t\t\t\t\t\tnonRules = {};\n\n\t\t\t\t\tfor (var rule in ruleDefinitions) {\n\t\t\t\t\t\tif (!ruleDefinitions.hasOwnProperty(rule)) { continue; }\n\t\t\t\t\t\tif (kv.rules[rule]) {\n\t\t\t\t\t\t\trules[rule] = ruleDefinitions[rule];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnonRules[rule] = ruleDefinitions[rule];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//apply rules\n\t\t\t\t\tif (ko.isObservable(targetValue)) {\n\t\t\t\t\t\ttargetValue.extend(rules);\n\t\t\t\t\t}\n\n\t\t\t\t\t//then apply child rules\n\t\t\t\t\t//if it's an array, apply rules to all children\n\t\t\t\t\tif (unwrappedTargetValue && utils.isArray(unwrappedTargetValue)) {\n\t\t\t\t\t\tfor (var i = 0; i < unwrappedTargetValue.length; i++) {\n\t\t\t\t\t\t\tsetRules(unwrappedTargetValue[i], nonRules);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//otherwise, just apply to this property\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetRules(unwrappedTargetValue, nonRules);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetRules(target, definition);\n\t\t}\n\t};\n\n}());\n\n// expose api publicly\nextend(ko.validation, api);\n;//Validation Rules:\n// You can view and override messages or rules via:\n// kv.rules[ruleName]\n//\n// To implement a custom Rule, simply use this template:\n// kv.rules['<custom rule name>'] = {\n//      validator: function (val, param) {\n//          <custom logic>\n//          return <true or false>;\n//      },\n//      message: '<custom validation message>' //optionally you can also use a '{0}' to denote a placeholder that will be replaced with your 'param'\n// };\n//\n// Example:\n// kv.rules['mustEqual'] = {\n//      validator: function( val, mustEqualVal ){\n//          return val === mustEqualVal;\n//      },\n//      message: 'This field must equal {0}'\n// };\n//\nkv.rules = {};\nkv.rules['required'] = {\n\tvalidator: function (val, required) {\n\t\tvar testVal;\n\n\t\tif (val === undefined || val === null) {\n\t\t\treturn !required;\n\t\t}\n\n\t\ttestVal = val;\n\t\tif (typeof (val) === 'string') {\n\t\t\tif (String.prototype.trim) {\n\t\t\t\ttestVal = val.trim();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttestVal = val.replace(/^\\s+|\\s+$/g, '');\n\t\t\t}\n\t\t}\n\n\t\tif (!required) {// if they passed: { required: false }, then don't require this\n\t\t\treturn true;\n\t\t}\n\n\t\treturn ((testVal + '').length > 0);\n\t},\n\tmessage: 'This field is required.'\n};\n\nfunction minMaxValidatorFactory(validatorName) {\n    var isMaxValidation = validatorName === \"max\";\n\n    return function (val, options) {\n        if (kv.utils.isEmptyVal(val)) {\n            return true;\n        }\n\n        var comparisonValue, type;\n        if (options.typeAttr === undefined) {\n            // This validator is being called from javascript rather than\n            // being bound from markup\n            type = \"text\";\n            comparisonValue = options;\n        } else {\n            type = options.typeAttr;\n            comparisonValue = options.value;\n        }\n\n        // From http://www.w3.org/TR/2012/WD-html5-20121025/common-input-element-attributes.html#attr-input-min,\n        // if the value is parseable to a number, then the minimum should be numeric\n        if (!isNaN(comparisonValue) && !(comparisonValue instanceof Date)) {\n            type = \"number\";\n        }\n\n        var regex, valMatches, comparisonValueMatches;\n        switch (type.toLowerCase()) {\n            case \"week\":\n                regex = /^(\\d{4})-W(\\d{2})$/;\n                valMatches = val.match(regex);\n                if (valMatches === null) {\n                    throw new Error(\"Invalid value for \" + validatorName + \" attribute for week input.  Should look like \" +\n                        \"'2000-W33' http://www.w3.org/TR/html-markup/input.week.html#input.week.attrs.min\");\n                }\n                comparisonValueMatches = comparisonValue.match(regex);\n                // If no regex matches were found, validation fails\n                if (!comparisonValueMatches) {\n                    return false;\n                }\n\n                if (isMaxValidation) {\n                    return (valMatches[1] < comparisonValueMatches[1]) || // older year\n                        // same year, older week\n                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] <= comparisonValueMatches[2]));\n                } else {\n                    return (valMatches[1] > comparisonValueMatches[1]) || // newer year\n                        // same year, newer week\n                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] >= comparisonValueMatches[2]));\n                }\n                break;\n\n            case \"month\":\n                regex = /^(\\d{4})-(\\d{2})$/;\n                valMatches = val.match(regex);\n                if (valMatches === null) {\n                    throw new Error(\"Invalid value for \" + validatorName + \" attribute for month input.  Should look like \" +\n                        \"'2000-03' http://www.w3.org/TR/html-markup/input.month.html#input.month.attrs.min\");\n                }\n                comparisonValueMatches = comparisonValue.match(regex);\n                // If no regex matches were found, validation fails\n                if (!comparisonValueMatches) {\n                    return false;\n                }\n\n                if (isMaxValidation) {\n                    return ((valMatches[1] < comparisonValueMatches[1]) || // older year\n                        // same year, older month\n                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] <= comparisonValueMatches[2])));\n                } else {\n                    return (valMatches[1] > comparisonValueMatches[1]) || // newer year\n                        // same year, newer month\n                        ((valMatches[1] === comparisonValueMatches[1]) && (valMatches[2] >= comparisonValueMatches[2]));\n                }\n                break;\n\n            case \"number\":\n            case \"range\":\n                if (isMaxValidation) {\n                    return (!isNaN(val) && parseFloat(val) <= parseFloat(comparisonValue));\n                } else {\n                    return (!isNaN(val) && parseFloat(val) >= parseFloat(comparisonValue));\n                }\n                break;\n\n            default:\n                if (isMaxValidation) {\n                    return val <= comparisonValue;\n                } else {\n                    return val >= comparisonValue;\n                }\n        }\n    };\n}\n\nkv.rules['min'] = {\n\tvalidator: minMaxValidatorFactory(\"min\"),\n\tmessage: 'Please enter a value greater than or equal to {0}.'\n};\n\nkv.rules['max'] = {\n\tvalidator: minMaxValidatorFactory(\"max\"),\n\tmessage: 'Please enter a value less than or equal to {0}.'\n};\n\nkv.rules['minLength'] = {\n\tvalidator: function (val, minLength) {\n\t\tif(kv.utils.isEmptyVal(val)) { return true; }\n\t\tvar normalizedVal = kv.utils.isNumber(val) ? ('' + val) : val;\n\t\treturn normalizedVal.length >= minLength;\n\t},\n\tmessage: 'Please enter at least {0} characters.'\n};\n\nkv.rules['maxLength'] = {\n\tvalidator: function (val, maxLength) {\n\t\tif(kv.utils.isEmptyVal(val)) { return true; }\n\t\tvar normalizedVal = kv.utils.isNumber(val) ? ('' + val) : val;\n\t\treturn normalizedVal.length <= maxLength;\n\t},\n\tmessage: 'Please enter no more than {0} characters.'\n};\n\nkv.rules['pattern'] = {\n\tvalidator: function (val, regex) {\n\t\treturn kv.utils.isEmptyVal(val) || val.toString().match(regex) !== null;\n\t},\n\tmessage: 'Please check this value.'\n};\n\nkv.rules['step'] = {\n\tvalidator: function (val, step) {\n\n\t\t// in order to handle steps of .1 & .01 etc.. Modulus won't work\n\t\t// if the value is a decimal, so we have to correct for that\n\t\tif (kv.utils.isEmptyVal(val) || step === 'any') { return true; }\n\t\tvar dif = (val * 100) % (step * 100);\n\t\treturn Math.abs(dif) < 0.00001 || Math.abs(1 - dif) < 0.00001;\n\t},\n\tmessage: 'The value must increment by {0}.'\n};\n\nkv.rules['email'] = {\n\tvalidator: function (val, validate) {\n\t\tif (!validate) { return true; }\n\n\t\t//I think an empty email address is also a valid entry\n\t\t//if one want's to enforce entry it should be done with 'required: true'\n\t\treturn kv.utils.isEmptyVal(val) || (\n\t\t\t// jquery validate regex - thanks Scott Gonzalez\n\t\t\tvalidate && /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i.test(val)\n\t\t);\n\t},\n\tmessage: 'Please enter a proper email address.'\n};\n\nkv.rules['date'] = {\n\tvalidator: function (value, validate) {\n\t\tif (!validate) { return true; }\n\t\treturn kv.utils.isEmptyVal(value) || (validate && !/Invalid|NaN/.test(new Date(value)));\n\t},\n\tmessage: 'Please enter a proper date.'\n};\n\nkv.rules['dateISO'] = {\n\tvalidator: function (value, validate) {\n\t\tif (!validate) { return true; }\n\t\treturn kv.utils.isEmptyVal(value) || (validate && /^\\d{4}[-/](?:0?[1-9]|1[012])[-/](?:0?[1-9]|[12][0-9]|3[01])$/.test(value));\n\t},\n\tmessage: 'Please enter a proper date.'\n};\n\nkv.rules['number'] = {\n\tvalidator: function (value, validate) {\n\t\tif (!validate) { return true; }\n\t\treturn kv.utils.isEmptyVal(value) || (validate && /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(value));\n\t},\n\tmessage: 'Please enter a number.'\n};\n\nkv.rules['digit'] = {\n\tvalidator: function (value, validate) {\n\t\tif (!validate) { return true; }\n\t\treturn kv.utils.isEmptyVal(value) || (validate && /^\\d+$/.test(value));\n\t},\n\tmessage: 'Please enter a digit.'\n};\n\nkv.rules['phoneUS'] = {\n\tvalidator: function (phoneNumber, validate) {\n\t\tif (!validate) { return true; }\n\t\tif (kv.utils.isEmptyVal(phoneNumber)) { return true; } // makes it optional, use 'required' rule if it should be required\n\t\tif (typeof (phoneNumber) !== 'string') { return false; }\n\t\tphoneNumber = phoneNumber.replace(/\\s+/g, \"\");\n\t\treturn validate && phoneNumber.length > 9 && phoneNumber.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\n\t},\n\tmessage: 'Please specify a valid phone number.'\n};\n\nkv.rules['equal'] = {\n\tvalidator: function (val, params) {\n\t\tvar otherValue = params;\n\t\treturn val === kv.utils.getValue(otherValue);\n\t},\n\tmessage: 'Values must equal.'\n};\n\nkv.rules['notEqual'] = {\n\tvalidator: function (val, params) {\n\t\tvar otherValue = params;\n\t\treturn val !== kv.utils.getValue(otherValue);\n\t},\n\tmessage: 'Please choose another value.'\n};\n\n//unique in collection\n// options are:\n//    collection: array or function returning (observable) array\n//              in which the value has to be unique\n//    valueAccessor: function that returns value from an object stored in collection\n//              if it is null the value is compared directly\n//    external: set to true when object you are validating is automatically updating collection\nkv.rules['unique'] = {\n\tvalidator: function (val, options) {\n\t\tvar c = kv.utils.getValue(options.collection),\n\t\t\texternal = kv.utils.getValue(options.externalValue),\n\t\t\tcounter = 0;\n\n\t\tif (!val || !c) { return true; }\n\n\t\tkoUtils.arrayFilter(c, function (item) {\n\t\t\tif (val === (options.valueAccessor ? options.valueAccessor(item) : item)) { counter++; }\n\t\t});\n\t\t// if value is external even 1 same value in collection means the value is not unique\n\t\treturn counter < (!!external ? 1 : 2);\n\t},\n\tmessage: 'Please make sure the value is unique.'\n};\n\n\n//now register all of these!\n(function () {\n\tkv.registerExtenders();\n}());\n;// The core binding handler\n// this allows us to setup any value binding that internally always\n// performs the same functionality\nko.bindingHandlers['validationCore'] = (function () {\n\n\treturn {\n\t\tinit: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\t\t\tvar config = kv.utils.getConfigOptions(element);\n\t\t\tvar observable = valueAccessor();\n\n\t\t\t// parse html5 input validation attributes, optional feature\n\t\t\tif (config.parseInputAttributes) {\n\t\t\t\tkv.utils.async(function () { kv.parseInputValidationAttributes(element, valueAccessor); });\n\t\t\t}\n\n\t\t\t// if requested insert message element and apply bindings\n\t\t\tif (config.insertMessages && kv.utils.isValidatable(observable)) {\n\n\t\t\t\t// insert the <span></span>\n\t\t\t\tvar validationMessageElement = kv.insertValidationMessage(element);\n\n\t\t\t\t// if we're told to use a template, make sure that gets rendered\n\t\t\t\tif (config.messageTemplate) {\n\t\t\t\t\tko.renderTemplate(config.messageTemplate, { field: observable }, null, validationMessageElement, 'replaceNode');\n\t\t\t\t} else {\n\t\t\t\t\tko.applyBindingsToNode(validationMessageElement, { validationMessage: observable });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write the html5 attributes if indicated by the config\n\t\t\tif (config.writeInputAttributes && kv.utils.isValidatable(observable)) {\n\n\t\t\t\tkv.writeInputValidationAttributes(element, valueAccessor);\n\t\t\t}\n\n\t\t\t// if requested, add binding to decorate element\n\t\t\tif (config.decorateInputElement && kv.utils.isValidatable(observable)) {\n\t\t\t\tko.applyBindingsToNode(element, { validationElement: observable });\n\t\t\t}\n\t\t}\n\t};\n\n}());\n\n// override for KO's default 'value', 'checked', 'textInput' and selectedOptions bindings\nkv.makeBindingHandlerValidatable(\"value\");\nkv.makeBindingHandlerValidatable(\"checked\");\nif (ko.bindingHandlers.textInput) {\n\tkv.makeBindingHandlerValidatable(\"textInput\");\n}\nkv.makeBindingHandlerValidatable(\"selectedOptions\");\n\n\nko.bindingHandlers['validationMessage'] = { // individual error message, if modified or post binding\n\tupdate: function (element, valueAccessor) {\n\t\tvar obsv = valueAccessor(),\n\t\t\tconfig = kv.utils.getConfigOptions(element),\n\t\t\tval = unwrap(obsv),\n\t\t\tmsg = null,\n\t\t\tisModified = false,\n\t\t\tisValid = false;\n\n\t\tif (obsv === null || typeof obsv === 'undefined') {\n\t\t\tthrow new Error('Cannot bind validationMessage to undefined value. data-bind expression: ' +\n\t\t\t\telement.getAttribute('data-bind'));\n\t\t}\n\n\t\tisModified = obsv.isModified && obsv.isModified();\n\t\tisValid = obsv.isValid && obsv.isValid();\n\n\t\tvar error = null;\n\t\tif (!config.messagesOnModified || isModified) {\n\t\t\terror = isValid ? null : obsv.error;\n\t\t}\n\n\t\tvar isVisible = !config.messagesOnModified || isModified ? !isValid : false;\n\t\tvar isCurrentlyVisible = element.style.display !== \"none\";\n\n\t\tif (config.allowHtmlMessages) {\n\t\t\tkoUtils.setHtml(element, error);\n\t\t} else {\n\t\t\tko.bindingHandlers.text.update(element, function () { return error; });\n\t\t}\n\n\t\tif (isCurrentlyVisible && !isVisible) {\n\t\t\telement.style.display = 'none';\n\t\t} else if (!isCurrentlyVisible && isVisible) {\n\t\t\telement.style.display = '';\n\t\t}\n\t}\n};\n\nko.bindingHandlers['validationElement'] = {\n\tupdate: function (element, valueAccessor, allBindingsAccessor) {\n\t\tvar obsv = valueAccessor(),\n\t\t\tconfig = kv.utils.getConfigOptions(element),\n\t\t\tval = unwrap(obsv),\n\t\t\tmsg = null,\n\t\t\tisModified = false,\n\t\t\tisValid = false;\n\n\t\tif (obsv === null || typeof obsv === 'undefined') {\n\t\t\tthrow new Error('Cannot bind validationElement to undefined value. data-bind expression: ' +\n\t\t\t\telement.getAttribute('data-bind'));\n\t\t}\n\n\t\tisModified = obsv.isModified && obsv.isModified();\n\t\tisValid = obsv.isValid && obsv.isValid();\n\n\t\t// create an evaluator function that will return something like:\n\t\t// css: { validationElement: true }\n\t\tvar cssSettingsAccessor = function () {\n\t\t\tvar css = {};\n\n\t\t\tvar shouldShow = ((!config.decorateElementOnModified || isModified) ? !isValid : false);\n\n\t\t\t// css: { validationElement: false }\n\t\t\tcss[config.errorElementClass] = shouldShow;\n\n\t\t\treturn css;\n\t\t};\n\n\t\t//add or remove class on the element;\n\t\tko.bindingHandlers.css.update(element, cssSettingsAccessor, allBindingsAccessor);\n\t\tif (!config.errorsAsTitle) { return; }\n\n\t\tko.bindingHandlers.attr.update(element, function () {\n\t\t\tvar\n\t\t\t\thasModification = !config.errorsAsTitleOnModified || isModified,\n\t\t\t\ttitle = kv.utils.getOriginalElementTitle(element);\n\n\t\t\tif (hasModification && !isValid) {\n\t\t\t\treturn { title: obsv.error, 'data-orig-title': title };\n\t\t\t} else if (!hasModification || isValid) {\n\t\t\t\treturn { title: title, 'data-orig-title': null };\n\t\t\t}\n\t\t});\n\t}\n};\n\n// ValidationOptions:\n// This binding handler allows you to override the initial config by setting any of the options for a specific element or context of elements\n//\n// Example:\n// <div data-bind=\"validationOptions: { insertMessages: true, messageTemplate: 'customTemplate', errorMessageClass: 'mySpecialClass'}\">\n//      <input type=\"text\" data-bind=\"value: someValue\"/>\n//      <input type=\"text\" data-bind=\"value: someValue2\"/>\n// </div>\nko.bindingHandlers['validationOptions'] = (function () {\n\treturn {\n\t\tinit: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n\t\t\tvar options = unwrap(valueAccessor());\n\t\t\tif (options) {\n\t\t\t\tvar newConfig = extend({}, kv.configuration);\n\t\t\t\textend(newConfig, options);\n\n\t\t\t\t//store the validation options on the node so we can retrieve it later\n\t\t\t\tkv.utils.setDomData(element, newConfig);\n\t\t\t}\n\t\t}\n\t};\n}());\n;// Validation Extender:\n// This is for creating custom validation logic on the fly\n// Example:\n// var test = ko.observable('something').extend{(\n//      validation: {\n//          validator: function(val, someOtherVal){\n//              return true;\n//          },\n//          message: \"Something must be really wrong!',\n//          params: true\n//      }\n//  )};\nko.extenders['validation'] = function (observable, rules) { // allow single rule or array\n\tforEach(kv.utils.isArray(rules) ? rules : [rules], function (rule) {\n\t\t// the 'rule' being passed in here has no name to identify a core Rule,\n\t\t// so we add it as an anonymous rule\n\t\t// If the developer is wanting to use a core Rule, but use a different message see the 'addExtender' logic for examples\n\t\tkv.addAnonymousRule(observable, rule);\n\t});\n\treturn observable;\n};\n\n//This is the extender that makes a Knockout Observable also 'Validatable'\n//examples include:\n// 1. var test = ko.observable('something').extend({validatable: true});\n// this will ensure that the Observable object is setup properly to respond to rules\n//\n// 2. test.extend({validatable: false});\n// this will remove the validation properties from the Observable object should you need to do that.\nko.extenders['validatable'] = function (observable, options) {\n\tif (!kv.utils.isObject(options)) {\n\t\toptions = { enable: options };\n\t}\n\n\tif (!('enable' in options)) {\n\t\toptions.enable = true;\n\t}\n\n\tif (options.enable && !kv.utils.isValidatable(observable)) {\n\t\tvar config = kv.configuration.validate || {};\n\t\tvar validationOptions = {\n\t\t\tthrottleEvaluation : options.throttle || config.throttle\n\t\t};\n\n\t\tobservable.error = ko.observable(null); // holds the error message, we only need one since we stop processing validators when one is invalid\n\n\t\t// observable.rules:\n\t\t// ObservableArray of Rule Contexts, where a Rule Context is simply the name of a rule and the params to supply to it\n\t\t//\n\t\t// Rule Context = { rule: '<rule name>', params: '<passed in params>', message: '<Override of default Message>' }\n\t\tobservable.rules = ko.observableArray(); //holds the rule Contexts to use as part of validation\n\n\t\t//in case async validation is occurring\n\t\tobservable.isValidating = ko.observable(false);\n\n\t\t//the true holder of whether the observable is valid or not\n\t\tobservable.__valid__ = ko.observable(true);\n\n\t\tobservable.isModified = ko.observable(false);\n\n\t\t// a semi-protected observable\n\t\tobservable.isValid = ko.computed(observable.__valid__);\n\n\t\t//manually set error state\n\t\tobservable.setError = function (error) {\n\t\t\tvar previousError = observable.error.peek();\n\t\t\tvar previousIsValid = observable.__valid__.peek();\n\n\t\t\tobservable.error(error);\n\t\t\tobservable.__valid__(false);\n\n\t\t\tif (previousError !== error && !previousIsValid) {\n\t\t\t\t// if the observable was not valid before then isValid will not mutate,\n\t\t\t\t// hence causing any grouping to not display the latest error.\n\t\t\t\tobservable.isValid.notifySubscribers();\n\t\t\t}\n\t\t};\n\n\t\t//manually clear error state\n\t\tobservable.clearError = function () {\n\t\t\tobservable.error(null);\n\t\t\tobservable.__valid__(true);\n\t\t\treturn observable;\n\t\t};\n\n\t\t//subscribe to changes in the observable\n\t\tvar h_change = observable.subscribe(function () {\n\t\t\tobservable.isModified(true);\n\t\t});\n\n\t\t// we use a computed here to ensure that anytime a dependency changes, the\n\t\t// validation logic evaluates\n\t\tvar h_obsValidationTrigger = ko.computed(extend({\n\t\t\tread: function () {\n\t\t\t\tvar obs = observable(),\n\t\t\t\t\truleContexts = observable.rules();\n\n\t\t\t\tkv.validateObservable(observable);\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}, validationOptions));\n\n\t\textend(h_obsValidationTrigger, validationOptions);\n\n\t\tobservable._disposeValidation = function () {\n\t\t\t//first dispose of the subscriptions\n\t\t\tobservable.isValid.dispose();\n\t\t\tobservable.rules.removeAll();\n\t\t\th_change.dispose();\n\t\t\th_obsValidationTrigger.dispose();\n\n\t\t\tdelete observable['rules'];\n\t\t\tdelete observable['error'];\n\t\t\tdelete observable['isValid'];\n\t\t\tdelete observable['isValidating'];\n\t\t\tdelete observable['__valid__'];\n\t\t\tdelete observable['isModified'];\n            delete observable['setError'];\n            delete observable['clearError'];\n            delete observable['_disposeValidation'];\n\t\t};\n\t} else if (options.enable === false && observable._disposeValidation) {\n\t\tobservable._disposeValidation();\n\t}\n\treturn observable;\n};\n\nfunction validateSync(observable, rule, ctx) {\n\t//Execute the validator and see if its valid\n\tif (!rule.validator(observable(), (ctx.params === undefined ? true : unwrap(ctx.params)))) { // default param is true, eg. required = true\n\n\t\t//not valid, so format the error message and stick it in the 'error' variable\n\t\tobservable.setError(kv.formatMessage(\n\t\t\t\t\tctx.message || rule.message,\n\t\t\t\t\tunwrap(ctx.params),\n\t\t\t\t\tobservable));\n\t\treturn false;\n\t} else {\n\t\treturn true;\n\t}\n}\n\nfunction validateAsync(observable, rule, ctx) {\n\tobservable.isValidating(true);\n\n\tvar callBack = function (valObj) {\n\t\tvar isValid = false,\n\t\t\tmsg = '';\n\n\t\tif (!observable.__valid__()) {\n\n\t\t\t// since we're returning early, make sure we turn this off\n\t\t\tobservable.isValidating(false);\n\n\t\t\treturn; //if its already NOT valid, don't add to that\n\t\t}\n\n\t\t//we were handed back a complex object\n\t\tif (valObj['message']) {\n\t\t\tisValid = valObj.isValid;\n\t\t\tmsg = valObj.message;\n\t\t} else {\n\t\t\tisValid = valObj;\n\t\t}\n\n\t\tif (!isValid) {\n\t\t\t//not valid, so format the error message and stick it in the 'error' variable\n\t\t\tobservable.error(kv.formatMessage(\n\t\t\t\tmsg || ctx.message || rule.message,\n\t\t\t\tunwrap(ctx.params),\n\t\t\t\tobservable));\n\t\t\tobservable.__valid__(isValid);\n\t\t}\n\n\t\t// tell it that we're done\n\t\tobservable.isValidating(false);\n\t};\n\n\tkv.utils.async(function() {\n\t    //fire the validator and hand it the callback\n        rule.validator(observable(), ctx.params === undefined ? true : unwrap(ctx.params), callBack);\n\t});\n}\n\nkv.validateObservable = function (observable) {\n\tvar i = 0,\n\t\trule, // the rule validator to execute\n\t\tctx, // the current Rule Context for the loop\n\t\truleContexts = observable.rules(), //cache for iterator\n\t\tlen = ruleContexts.length; //cache for iterator\n\n\tfor (; i < len; i++) {\n\n\t\t//get the Rule Context info to give to the core Rule\n\t\tctx = ruleContexts[i];\n\n\t\t// checks an 'onlyIf' condition\n\t\tif (ctx.condition && !ctx.condition()) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t//get the core Rule to use for validation\n\t\trule = ctx.rule ? kv.rules[ctx.rule] : ctx;\n\n\t\tif (rule['async'] || ctx['async']) {\n\t\t\t//run async validation\n\t\t\tvalidateAsync(observable, rule, ctx);\n\n\t\t} else {\n\t\t\t//run normal sync validation\n\t\t\tif (!validateSync(observable, rule, ctx)) {\n\t\t\t\treturn false; //break out of the loop\n\t\t\t}\n\t\t}\n\t}\n\t//finally if we got this far, make the observable valid again!\n\tobservable.clearError();\n\treturn true;\n};\n;\nvar _locales = {};\nvar _currentLocale;\n\nkv.defineLocale = function(name, values) {\n\tif (name && values) {\n\t\t_locales[name.toLowerCase()] = values;\n\t\treturn values;\n\t}\n\treturn null;\n};\n\nkv.locale = function(name) {\n\tif (name) {\n\t\tname = name.toLowerCase();\n\n\t\tif (_locales.hasOwnProperty(name)) {\n\t\t\tkv.localize(_locales[name]);\n\t\t\t_currentLocale = name;\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('Localization ' + name + ' has not been loaded.');\n\t\t}\n\t}\n\treturn _currentLocale;\n};\n\n//quick function to override rule messages\nkv.localize = function (msgTranslations) {\n\tvar rules = kv.rules;\n\n\t//loop the properties in the object and assign the msg to the rule\n\tfor (var ruleName in msgTranslations) {\n\t\tif (rules.hasOwnProperty(ruleName)) {\n\t\t\trules[ruleName].message = msgTranslations[ruleName];\n\t\t}\n\t}\n};\n\n// Populate default locale (this will make en-US.js somewhat redundant)\n(function() {\n\tvar localeData = {};\n\tvar rules = kv.rules;\n\n\tfor (var ruleName in rules) {\n\t\tif (rules.hasOwnProperty(ruleName)) {\n\t\t\tlocaleData[ruleName] = rules[ruleName].message;\n\t\t}\n\t}\n\tkv.defineLocale('en-us', localeData);\n})();\n\n// No need to invoke locale because the messages are already defined along with the rules for en-US\n_currentLocale = 'en-us';\n;/**\n * Possible invocations:\n * \t\tapplyBindingsWithValidation(viewModel)\n * \t\tapplyBindingsWithValidation(viewModel, options)\n * \t\tapplyBindingsWithValidation(viewModel, rootNode)\n *\t\tapplyBindingsWithValidation(viewModel, rootNode, options)\n */\nko.applyBindingsWithValidation = function (viewModel, rootNode, options) {\n\tvar node = document.body,\n\t\tconfig;\n\n\tif (rootNode && rootNode.nodeType) {\n\t\tnode = rootNode;\n\t\tconfig = options;\n\t}\n\telse {\n\t\tconfig = rootNode;\n\t}\n\n\tkv.init();\n\n\tif (config) {\n\t\tconfig = extend(extend({}, kv.configuration), config);\n\t\tkv.utils.setDomData(node, config);\n\t}\n\n\tko.applyBindings(viewModel, node);\n};\n\n//override the original applyBindings so that we can ensure all new rules and what not are correctly registered\nvar origApplyBindings = ko.applyBindings;\nko.applyBindings = function (viewModel, rootNode) {\n\n\tkv.init();\n\n\torigApplyBindings(viewModel, rootNode);\n};\n\nko.validatedObservable = function (initialValue, options) {\n\tif (!options && !kv.utils.isObject(initialValue)) {\n\t\treturn ko.observable(initialValue).extend({ validatable: true });\n\t}\n\n\tvar obsv = ko.observable(initialValue);\n\tobsv.errors = kv.group(kv.utils.isObject(initialValue) ? initialValue : {}, options);\n\tobsv.isValid = ko.observable(obsv.errors().length === 0);\n\n\tif (ko.isObservable(obsv.errors)) {\n\t\tobsv.errors.subscribe(function(errors) {\n\t\t\tobsv.isValid(errors.length === 0);\n\t\t});\n\t}\n\telse {\n\t\tko.computed(obsv.errors).subscribe(function (errors) {\n\t\t\tobsv.isValid(errors.length === 0);\n\t\t});\n\t}\n\n\tobsv.subscribe(function(newValue) {\n\t\tif (!kv.utils.isObject(newValue)) {\n\t\t\t/*\n\t\t\t * The validation group works on objects.\n\t\t\t * Since the new value is a primitive (scalar, null or undefined) we need\n\t\t\t * to create an empty object to pass along.\n\t\t\t */\n\t\t\tnewValue = {};\n\t\t}\n\t\t// Force the group to refresh\n\t\tobsv.errors._updateState(newValue);\n\t\tobsv.isValid(obsv.errors().length === 0);\n\t});\n\n\treturn obsv;\n};\n;}));","ï»¿import ko from 'knockout';\r\nimport 'knockout.validation';\r\n\r\nexport default class IdeaBasicInfoViewModel {\r\n\r\n    constructor({ idea = {}, actions: {save} }) {\r\n\r\n        ko.validation.init({\r\n            errorElementClass: 'has-error',\r\n            errorMessageClass: 'help-block',\r\n            decorateInputElement: true\r\n        });\r\n\r\n        this.actions = { save };\r\n        this.isSaving = ko.observable(false);\r\n        this._initForm(idea);\r\n\r\n    }\r\n\r\n    _initForm({id, title = '', description = '', isFundingRequired = false, fundingRequirement = ''}) {\r\n        this.form = ko.validatedObservable({\r\n            id,\r\n            title: ko.observable(title).extend({ required: true }),\r\n            description: ko.observable(description).extend({ required: true }),\r\n            isFundingRequired: ko.observable(isFundingRequired).extend({ required: true }),\r\n            fundingRequirement: ko.observable(fundingRequirement).extend({ required: false })\r\n        });\r\n    }\r\n\r\n    _validate() {\r\n\r\n        if (!this.form.isValid()) {\r\n            this.form.errors.showAllMessages();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    save() {\r\n        if (!this._validate())\r\n        { return Promise.reject('Validation failed'); }\r\n\r\n        const form = ko.toJS(this.form);\r\n\r\n        form.isFundingRequired = !!(form.fundingRequirement && form.fundingRequirement.length > 0);\r\n\r\n        this.isSaving(true);\r\n        const { save } = this.actions;\r\n        return save(form)\r\n            .then(res => {\r\n                this.isSaving(false);\r\n                return Promise.resolve(res);\r\n            }).catch(e => {\r\n                this.isSaving(false);\r\n            });\r\n    }\r\n\r\n\r\n}","/*\nTurbolinks 5.0.0\nCopyright Â© 2016 Basecamp, LLC\n */\n(function(){(function(){(function(){this.Turbolinks={supported:function(){return null!=window.history.pushState&&null!=window.requestAnimationFrame}(),visit:function(e,r){return t.controller.visit(e,r)},clearCache:function(){return t.controller.clearCache()}}}).call(this)}).call(this);var t=this.Turbolinks;(function(){(function(){var e,r;t.copyObject=function(t){var e,r,n;r={};for(e in t)n=t[e],r[e]=n;return r},t.closest=function(t,r){return e.call(t,r)},e=function(){var t,e;return t=document.documentElement,null!=(e=t.closest)?e:function(t){var e;for(e=this;e;){if(e.nodeType===Node.ELEMENT_NODE&&r.call(e,t))return e;e=e.parentNode}}}(),t.defer=function(t){return setTimeout(t,1)},t.dispatch=function(t,e){var r,n,o,i,s;return i=null!=e?e:{},s=i.target,r=i.cancelable,n=i.data,o=document.createEvent(\"Events\"),o.initEvent(t,!0,r===!0),o.data=null!=n?n:{},(null!=s?s:document).dispatchEvent(o),o},t.match=function(t,e){return r.call(t,e)},r=function(){var t,e,r,n;return t=document.documentElement,null!=(e=null!=(r=null!=(n=t.matchesSelector)?n:t.webkitMatchesSelector)?r:t.msMatchesSelector)?e:t.mozMatchesSelector}(),t.uuid=function(){var t,e,r;for(r=\"\",t=e=1;36>=e;t=++e)r+=9===t||14===t||19===t||24===t?\"-\":15===t?\"4\":20===t?(Math.floor(4*Math.random())+8).toString(16):Math.floor(15*Math.random()).toString(16);return r}}).call(this),function(){t.Location=function(){function t(t){var e,r;null==t&&(t=\"\"),r=document.createElement(\"a\"),r.href=t.toString(),this.absoluteURL=r.href,e=r.hash.length,2>e?this.requestURL=this.absoluteURL:(this.requestURL=this.absoluteURL.slice(0,-e),this.anchor=r.hash.slice(1))}var e,r,n,o;return t.wrap=function(t){return t instanceof this?t:new this(t)},t.prototype.getOrigin=function(){return this.absoluteURL.split(\"/\",3).join(\"/\")},t.prototype.getPath=function(){var t,e;return null!=(t=null!=(e=this.absoluteURL.match(/\\/\\/[^\\/]*(\\/[^?;]*)/))?e[1]:void 0)?t:\"/\"},t.prototype.getPathComponents=function(){return this.getPath().split(\"/\").slice(1)},t.prototype.getLastPathComponent=function(){return this.getPathComponents().slice(-1)[0]},t.prototype.getExtension=function(){var t,e;return null!=(t=null!=(e=this.getLastPathComponent().match(/\\.[^.]*$/))?e[0]:void 0)?t:\"\"},t.prototype.isHTML=function(){return this.getExtension().match(/^(?:|\\.(?:htm|html|xhtml))$/)},t.prototype.isPrefixedBy=function(t){var e;return e=r(t),this.isEqualTo(t)||o(this.absoluteURL,e)},t.prototype.isEqualTo=function(t){return this.absoluteURL===(null!=t?t.absoluteURL:void 0)},t.prototype.toCacheKey=function(){return this.requestURL},t.prototype.toJSON=function(){return this.absoluteURL},t.prototype.toString=function(){return this.absoluteURL},t.prototype.valueOf=function(){return this.absoluteURL},r=function(t){return e(t.getOrigin()+t.getPath())},e=function(t){return n(t,\"/\")?t:t+\"/\"},o=function(t,e){return t.slice(0,e.length)===e},n=function(t,e){return t.slice(-e.length)===e},t}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.HttpRequest=function(){function r(r,n,o){this.delegate=r,this.requestCanceled=e(this.requestCanceled,this),this.requestTimedOut=e(this.requestTimedOut,this),this.requestFailed=e(this.requestFailed,this),this.requestLoaded=e(this.requestLoaded,this),this.requestProgressed=e(this.requestProgressed,this),this.url=t.Location.wrap(n).requestURL,this.referrer=t.Location.wrap(o).absoluteURL,this.createXHR()}return r.NETWORK_FAILURE=0,r.TIMEOUT_FAILURE=-1,r.timeout=60,r.prototype.send=function(){var t;return this.xhr&&!this.sent?(this.notifyApplicationBeforeRequestStart(),this.setProgress(0),this.xhr.send(),this.sent=!0,\"function\"==typeof(t=this.delegate).requestStarted?t.requestStarted():void 0):void 0},r.prototype.cancel=function(){return this.xhr&&this.sent?this.xhr.abort():void 0},r.prototype.requestProgressed=function(t){return t.lengthComputable?this.setProgress(t.loaded/t.total):void 0},r.prototype.requestLoaded=function(){return this.endRequest(function(t){return function(){var e;return 200<=(e=t.xhr.status)&&300>e?t.delegate.requestCompletedWithResponse(t.xhr.responseText,t.xhr.getResponseHeader(\"Turbolinks-Location\")):(t.failed=!0,t.delegate.requestFailedWithStatusCode(t.xhr.status,t.xhr.responseText))}}(this))},r.prototype.requestFailed=function(){return this.endRequest(function(t){return function(){return t.failed=!0,t.delegate.requestFailedWithStatusCode(t.constructor.NETWORK_FAILURE)}}(this))},r.prototype.requestTimedOut=function(){return this.endRequest(function(t){return function(){return t.failed=!0,t.delegate.requestFailedWithStatusCode(t.constructor.TIMEOUT_FAILURE)}}(this))},r.prototype.requestCanceled=function(){return this.endRequest()},r.prototype.notifyApplicationBeforeRequestStart=function(){return t.dispatch(\"turbolinks:request-start\",{data:{url:this.url,xhr:this.xhr}})},r.prototype.notifyApplicationAfterRequestEnd=function(){return t.dispatch(\"turbolinks:request-end\",{data:{url:this.url,xhr:this.xhr}})},r.prototype.createXHR=function(){return this.xhr=new XMLHttpRequest,this.xhr.open(\"GET\",this.url,!0),this.xhr.timeout=1e3*this.constructor.timeout,this.xhr.setRequestHeader(\"Accept\",\"text/html, application/xhtml+xml\"),this.xhr.setRequestHeader(\"Turbolinks-Referrer\",this.referrer),this.xhr.onprogress=this.requestProgressed,this.xhr.onload=this.requestLoaded,this.xhr.onerror=this.requestFailed,this.xhr.ontimeout=this.requestTimedOut,this.xhr.onabort=this.requestCanceled},r.prototype.endRequest=function(t){return this.xhr?(this.notifyApplicationAfterRequestEnd(),null!=t&&t.call(this),this.destroy()):void 0},r.prototype.setProgress=function(t){var e;return this.progress=t,\"function\"==typeof(e=this.delegate).requestProgressed?e.requestProgressed(this.progress):void 0},r.prototype.destroy=function(){var t;return this.setProgress(1),\"function\"==typeof(t=this.delegate).requestFinished&&t.requestFinished(),this.delegate=null,this.xhr=null},r}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.ProgressBar=function(){function t(){this.trickle=e(this.trickle,this),this.stylesheetElement=this.createStylesheetElement(),this.progressElement=this.createProgressElement()}var r;return r=300,t.defaultCSS=\".turbolinks-progress-bar {\\n  position: fixed;\\n  display: block;\\n  top: 0;\\n  left: 0;\\n  height: 3px;\\n  background: #0076ff;\\n  z-index: 9999;\\n  transition: width \"+r+\"ms ease-out, opacity \"+r/2+\"ms \"+r/2+\"ms ease-in;\\n  transform: translate3d(0, 0, 0);\\n}\",t.prototype.show=function(){return this.visible?void 0:(this.visible=!0,this.installStylesheetElement(),this.installProgressElement(),this.startTrickling())},t.prototype.hide=function(){return this.visible&&!this.hiding?(this.hiding=!0,this.fadeProgressElement(function(t){return function(){return t.uninstallProgressElement(),t.stopTrickling(),t.visible=!1,t.hiding=!1}}(this))):void 0},t.prototype.setValue=function(t){return this.value=t,this.refresh()},t.prototype.installStylesheetElement=function(){return document.head.insertBefore(this.stylesheetElement,document.head.firstChild)},t.prototype.installProgressElement=function(){return this.progressElement.style.width=0,this.progressElement.style.opacity=1,document.documentElement.insertBefore(this.progressElement,document.body),this.refresh()},t.prototype.fadeProgressElement=function(t){return this.progressElement.style.opacity=0,setTimeout(t,1.5*r)},t.prototype.uninstallProgressElement=function(){return this.progressElement.parentNode?document.documentElement.removeChild(this.progressElement):void 0},t.prototype.startTrickling=function(){return null!=this.trickleInterval?this.trickleInterval:this.trickleInterval=setInterval(this.trickle,r)},t.prototype.stopTrickling=function(){return clearInterval(this.trickleInterval),this.trickleInterval=null},t.prototype.trickle=function(){return this.setValue(this.value+Math.random()/100)},t.prototype.refresh=function(){return requestAnimationFrame(function(t){return function(){return t.progressElement.style.width=10+90*t.value+\"%\"}}(this))},t.prototype.createStylesheetElement=function(){var t;return t=document.createElement(\"style\"),t.type=\"text/css\",t.textContent=this.constructor.defaultCSS,t},t.prototype.createProgressElement=function(){var t;return t=document.createElement(\"div\"),t.className=\"turbolinks-progress-bar\",t},t}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.BrowserAdapter=function(){function r(r){this.controller=r,this.showProgressBar=e(this.showProgressBar,this),this.progressBar=new t.ProgressBar}var n,o,i,s;return s=t.HttpRequest,n=s.NETWORK_FAILURE,i=s.TIMEOUT_FAILURE,o=500,r.prototype.visitProposedToLocationWithAction=function(t,e){return this.controller.startVisitToLocationWithAction(t,e)},r.prototype.visitStarted=function(t){return t.issueRequest(),t.changeHistory(),t.loadCachedSnapshot()},r.prototype.visitRequestStarted=function(t){return this.progressBar.setValue(0),t.hasCachedSnapshot()||\"restore\"!==t.action?this.showProgressBarAfterDelay():this.showProgressBar()},r.prototype.visitRequestProgressed=function(t){return this.progressBar.setValue(t.progress)},r.prototype.visitRequestCompleted=function(t){return t.loadResponse()},r.prototype.visitRequestFailedWithStatusCode=function(t,e){switch(e){case n:case i:return this.reload();default:return t.loadResponse()}},r.prototype.visitRequestFinished=function(t){return this.hideProgressBar()},r.prototype.visitCompleted=function(t){return t.followRedirect()},r.prototype.pageInvalidated=function(){return this.reload()},r.prototype.showProgressBarAfterDelay=function(){return this.progressBarTimeout=setTimeout(this.showProgressBar,o)},r.prototype.showProgressBar=function(){return this.progressBar.show()},r.prototype.hideProgressBar=function(){return this.progressBar.hide(),clearTimeout(this.progressBarTimeout)},r.prototype.reload=function(){return window.location.reload()},r}()}.call(this),function(){var e,r=function(t,e){return function(){return t.apply(e,arguments)}};e=!1,addEventListener(\"load\",function(){return t.defer(function(){return e=!0})},!1),t.History=function(){function n(t){this.delegate=t,this.onPopState=r(this.onPopState,this)}return n.prototype.start=function(){return this.started?void 0:(addEventListener(\"popstate\",this.onPopState,!1),this.started=!0)},n.prototype.stop=function(){return this.started?(removeEventListener(\"popstate\",this.onPopState,!1),this.started=!1):void 0},n.prototype.push=function(e,r){return e=t.Location.wrap(e),this.update(\"push\",e,r)},n.prototype.replace=function(e,r){return e=t.Location.wrap(e),this.update(\"replace\",e,r)},n.prototype.onPopState=function(e){var r,n,o,i;return this.shouldHandlePopState()&&(i=null!=(n=e.state)?n.turbolinks:void 0)?(r=t.Location.wrap(window.location),o=i.restorationIdentifier,this.delegate.historyPoppedToLocationWithRestorationIdentifier(r,o)):void 0},n.prototype.shouldHandlePopState=function(){return e===!0},n.prototype.update=function(t,e,r){var n;return n={turbolinks:{restorationIdentifier:r}},history[t+\"State\"](n,null,e)},n}()}.call(this),function(){t.Snapshot=function(){function e(t){var e,r;r=t.head,e=t.body,this.head=null!=r?r:document.createElement(\"head\"),this.body=null!=e?e:document.createElement(\"body\")}return e.wrap=function(t){return t instanceof this?t:this.fromHTML(t)},e.fromHTML=function(t){var e;return e=document.createElement(\"html\"),e.innerHTML=t,this.fromElement(e)},e.fromElement=function(t){return new this({head:t.querySelector(\"head\"),body:t.querySelector(\"body\")})},e.prototype.clone=function(){return new e({head:this.head.cloneNode(!0),body:this.body.cloneNode(!0)})},e.prototype.getRootLocation=function(){var e,r;return r=null!=(e=this.getSetting(\"root\"))?e:\"/\",new t.Location(r)},e.prototype.getCacheControlValue=function(){return this.getSetting(\"cache-control\")},e.prototype.hasAnchor=function(t){try{return null!=this.body.querySelector(\"[id='\"+t+\"']\")}catch(e){}},e.prototype.isPreviewable=function(){return\"no-preview\"!==this.getCacheControlValue()},e.prototype.isCacheable=function(){return\"no-cache\"!==this.getCacheControlValue()},e.prototype.getSetting=function(t){var e,r;return r=this.head.querySelectorAll(\"meta[name='turbolinks-\"+t+\"']\"),e=r[r.length-1],null!=e?e.getAttribute(\"content\"):void 0},e}()}.call(this),function(){var e=[].slice;t.Renderer=function(){function t(){}var r;return t.render=function(){var t,r,n,o;return n=arguments[0],r=arguments[1],t=3<=arguments.length?e.call(arguments,2):[],o=function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(this,t,function(){}),o.delegate=n,o.render(r),o},t.prototype.renderView=function(t){return this.delegate.viewWillRender(this.newBody),t(),this.delegate.viewRendered(this.newBody)},t.prototype.invalidateView=function(){return this.delegate.viewInvalidated()},t.prototype.createScriptElement=function(t){var e;return\"false\"===t.getAttribute(\"data-turbolinks-eval\")?t:(e=document.createElement(\"script\"),e.textContent=t.textContent,r(e,t),e)},r=function(t,e){var r,n,o,i,s,a,u;for(i=e.attributes,a=[],r=0,n=i.length;n>r;r++)s=i[r],o=s.name,u=s.value,a.push(t.setAttribute(o,u));return a},t}()}.call(this),function(){t.HeadDetails=function(){function t(t){var e,r,i,s,a,u,c;for(this.element=t,this.elements={},c=this.element.childNodes,s=0,u=c.length;u>s;s++)i=c[s],i.nodeType===Node.ELEMENT_NODE&&(a=i.outerHTML,r=null!=(e=this.elements)[a]?e[a]:e[a]={type:o(i),tracked:n(i),elements:[]},r.elements.push(i))}var e,r,n,o;return t.prototype.hasElementWithKey=function(t){return t in this.elements},t.prototype.getTrackedElementSignature=function(){var t,e;return function(){var r,n;r=this.elements,n=[];for(t in r)e=r[t].tracked,e&&n.push(t);return n}.call(this).join(\"\")},t.prototype.getScriptElementsNotInDetails=function(t){return this.getElementsMatchingTypeNotInDetails(\"script\",t)},t.prototype.getStylesheetElementsNotInDetails=function(t){return this.getElementsMatchingTypeNotInDetails(\"stylesheet\",t)},t.prototype.getElementsMatchingTypeNotInDetails=function(t,e){var r,n,o,i,s,a;o=this.elements,s=[];for(n in o)i=o[n],a=i.type,r=i.elements,a!==t||e.hasElementWithKey(n)||s.push(r[0]);return s},t.prototype.getProvisionalElements=function(){var t,e,r,n,o,i,s;r=[],n=this.elements;for(e in n)o=n[e],s=o.type,i=o.tracked,t=o.elements,null!=s||i?t.length>1&&r.push.apply(r,t.slice(1)):r.push.apply(r,t);return r},o=function(t){return e(t)?\"script\":r(t)?\"stylesheet\":void 0},n=function(t){return\"reload\"===t.getAttribute(\"data-turbolinks-track\")},e=function(t){var e;return e=t.tagName.toLowerCase(),\"script\"===e},r=function(t){var e;return e=t.tagName.toLowerCase(),\"style\"===e||\"link\"===e&&\"stylesheet\"===t.getAttribute(\"rel\")},t}()}.call(this),function(){var e=function(t,e){function n(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},r={}.hasOwnProperty;t.SnapshotRenderer=function(r){function n(e,r){this.currentSnapshot=e,this.newSnapshot=r,this.currentHeadDetails=new t.HeadDetails(this.currentSnapshot.head),this.newHeadDetails=new t.HeadDetails(this.newSnapshot.head),this.newBody=this.newSnapshot.body}return e(n,r),n.prototype.render=function(t){return this.trackedElementsAreIdentical()?(this.mergeHead(),this.renderView(function(e){return function(){return e.replaceBody(),e.focusFirstAutofocusableElement(),t()}}(this))):this.invalidateView()},n.prototype.mergeHead=function(){return this.copyNewHeadStylesheetElements(),this.copyNewHeadScriptElements(),this.removeCurrentHeadProvisionalElements(),this.copyNewHeadProvisionalElements()},n.prototype.replaceBody=function(){return this.activateBodyScriptElements(),this.importBodyPermanentElements(),this.assignNewBody()},n.prototype.trackedElementsAreIdentical=function(){return this.currentHeadDetails.getTrackedElementSignature()===this.newHeadDetails.getTrackedElementSignature()},n.prototype.copyNewHeadStylesheetElements=function(){var t,e,r,n,o;for(n=this.getNewHeadStylesheetElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(t));return o},n.prototype.copyNewHeadScriptElements=function(){var t,e,r,n,o;for(n=this.getNewHeadScriptElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(this.createScriptElement(t)));return o},n.prototype.removeCurrentHeadProvisionalElements=function(){var t,e,r,n,o;for(n=this.getCurrentHeadProvisionalElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.removeChild(t));return o},n.prototype.copyNewHeadProvisionalElements=function(){var t,e,r,n,o;for(n=this.getNewHeadProvisionalElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(t));return o},n.prototype.importBodyPermanentElements=function(){var t,e,r,n,o,i;for(n=this.getNewBodyPermanentElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],(t=this.findCurrentBodyPermanentElement(o))?i.push(o.parentNode.replaceChild(t,o)):i.push(void 0);return i},n.prototype.activateBodyScriptElements=function(){var t,e,r,n,o,i;for(n=this.getNewBodyScriptElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],t=this.createScriptElement(o),i.push(o.parentNode.replaceChild(t,o));return i},n.prototype.assignNewBody=function(){return document.body=this.newBody},n.prototype.focusFirstAutofocusableElement=function(){var t;return null!=(t=this.findFirstAutofocusableElement())?t.focus():void 0},n.prototype.getNewHeadStylesheetElements=function(){return this.newHeadDetails.getStylesheetElementsNotInDetails(this.currentHeadDetails)},n.prototype.getNewHeadScriptElements=function(){return this.newHeadDetails.getScriptElementsNotInDetails(this.currentHeadDetails)},n.prototype.getCurrentHeadProvisionalElements=function(){return this.currentHeadDetails.getProvisionalElements()},n.prototype.getNewHeadProvisionalElements=function(){return this.newHeadDetails.getProvisionalElements()},n.prototype.getNewBodyPermanentElements=function(){return this.newBody.querySelectorAll(\"[id][data-turbolinks-permanent]\")},n.prototype.findCurrentBodyPermanentElement=function(t){return document.body.querySelector(\"#\"+t.id+\"[data-turbolinks-permanent]\")},n.prototype.getNewBodyScriptElements=function(){return this.newBody.querySelectorAll(\"script\")},n.prototype.findFirstAutofocusableElement=function(){return document.body.querySelector(\"[autofocus]\")},n}(t.Renderer)}.call(this),function(){var e=function(t,e){function n(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},r={}.hasOwnProperty;t.ErrorRenderer=function(t){function r(t){this.html=t}return e(r,t),r.prototype.render=function(t){return this.renderView(function(e){return function(){return e.replaceDocumentHTML(),e.activateBodyScriptElements(),t()}}(this))},r.prototype.replaceDocumentHTML=function(){return document.documentElement.innerHTML=this.html},r.prototype.activateBodyScriptElements=function(){var t,e,r,n,o,i;for(n=this.getScriptElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],t=this.createScriptElement(o),i.push(o.parentNode.replaceChild(t,o));return i},r.prototype.getScriptElements=function(){return document.documentElement.querySelectorAll(\"script\")},r}(t.Renderer)}.call(this),function(){t.View=function(){function e(t){this.delegate=t,this.element=document.documentElement}return e.prototype.getRootLocation=function(){return this.getSnapshot().getRootLocation()},e.prototype.getSnapshot=function(){return t.Snapshot.fromElement(this.element)},e.prototype.render=function(t,e){var r,n,o;return o=t.snapshot,r=t.error,n=t.isPreview,this.markAsPreview(n),null!=o?this.renderSnapshot(o,e):this.renderError(r,e)},e.prototype.markAsPreview=function(t){return t?this.element.setAttribute(\"data-turbolinks-preview\",\"\"):this.element.removeAttribute(\"data-turbolinks-preview\")},e.prototype.renderSnapshot=function(e,r){return t.SnapshotRenderer.render(this.delegate,r,this.getSnapshot(),t.Snapshot.wrap(e))},e.prototype.renderError=function(e,r){return t.ErrorRenderer.render(this.delegate,r,e)},e}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.ScrollManager=function(){function t(t){this.delegate=t,this.onScroll=e(this.onScroll,this)}return t.prototype.start=function(){return this.started?void 0:(addEventListener(\"scroll\",this.onScroll,!1),this.onScroll(),this.started=!0)},t.prototype.stop=function(){return this.started?(removeEventListener(\"scroll\",this.onScroll,!1),this.started=!1):void 0},t.prototype.scrollToElement=function(t){return t.scrollIntoView()},t.prototype.scrollToPosition=function(t){var e,r;return e=t.x,r=t.y,window.scrollTo(e,r)},t.prototype.onScroll=function(t){return this.updatePosition({x:window.pageXOffset,y:window.pageYOffset})},t.prototype.updatePosition=function(t){var e;return this.position=t,null!=(e=this.delegate)?e.scrollPositionChanged(this.position):void 0},t}()}.call(this),function(){t.SnapshotCache=function(){function e(t){this.size=t,this.keys=[],this.snapshots={}}var r;return e.prototype.has=function(t){var e;return e=r(t),e in this.snapshots},e.prototype.get=function(t){var e;if(this.has(t))return e=this.read(t),this.touch(t),e},e.prototype.put=function(t,e){return this.write(t,e),this.touch(t),e},e.prototype.read=function(t){var e;return e=r(t),this.snapshots[e]},e.prototype.write=function(t,e){var n;return n=r(t),this.snapshots[n]=e},e.prototype.touch=function(t){var e,n;return n=r(t),e=this.keys.indexOf(n),e>-1&&this.keys.splice(e,1),this.keys.unshift(n),this.trim()},e.prototype.trim=function(){var t,e,r,n,o;for(n=this.keys.splice(this.size),o=[],t=0,r=n.length;r>t;t++)e=n[t],o.push(delete this.snapshots[e]);return o},r=function(e){return t.Location.wrap(e).toCacheKey()},e}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.Visit=function(){function r(r,n,o){this.controller=r,this.action=o,this.performScroll=e(this.performScroll,this),this.identifier=t.uuid(),this.location=t.Location.wrap(n),this.adapter=this.controller.adapter,this.state=\"initialized\",this.timingMetrics={}}var n;return r.prototype.start=function(){return\"initialized\"===this.state?(this.recordTimingMetric(\"visitStart\"),this.state=\"started\",this.adapter.visitStarted(this)):void 0},r.prototype.cancel=function(){var t;return\"started\"===this.state?(null!=(t=this.request)&&t.cancel(),this.cancelRender(),this.state=\"canceled\"):void 0},r.prototype.complete=function(){var t;return\"started\"===this.state?(this.recordTimingMetric(\"visitEnd\"),this.state=\"completed\",\"function\"==typeof(t=this.adapter).visitCompleted&&t.visitCompleted(this),this.controller.visitCompleted(this)):void 0},r.prototype.fail=function(){var t;return\"started\"===this.state?(this.state=\"failed\",\"function\"==typeof(t=this.adapter).visitFailed?t.visitFailed(this):void 0):void 0},r.prototype.changeHistory=function(){var t,e;return this.historyChanged?void 0:(t=this.location.isEqualTo(this.referrer)?\"replace\":this.action,e=n(t),this.controller[e](this.location,this.restorationIdentifier),this.historyChanged=!0)},r.prototype.issueRequest=function(){return this.shouldIssueRequest()&&null==this.request?(this.progress=0,this.request=new t.HttpRequest(this,this.location,this.referrer),this.request.send()):void 0},r.prototype.getCachedSnapshot=function(){var t;return!(t=this.controller.getCachedSnapshotForLocation(this.location))||null!=this.location.anchor&&!t.hasAnchor(this.location.anchor)||\"restore\"!==this.action&&!t.isPreviewable()?void 0:t},r.prototype.hasCachedSnapshot=function(){return null!=this.getCachedSnapshot()},r.prototype.loadCachedSnapshot=function(){var t,e;return(e=this.getCachedSnapshot())?(t=this.shouldIssueRequest(),this.render(function(){var r;return this.cacheSnapshot(),this.controller.render({snapshot:e,isPreview:t},this.performScroll),\"function\"==typeof(r=this.adapter).visitRendered&&r.visitRendered(this),t?void 0:this.complete()})):void 0},r.prototype.loadResponse=function(){return null!=this.response?this.render(function(){var t,e;return this.cacheSnapshot(),this.request.failed?(this.controller.render({error:this.response},this.performScroll),\"function\"==typeof(t=this.adapter).visitRendered&&t.visitRendered(this),this.fail()):(this.controller.render({snapshot:this.response},this.performScroll),\"function\"==typeof(e=this.adapter).visitRendered&&e.visitRendered(this),this.complete())}):void 0},r.prototype.followRedirect=function(){return this.redirectedToLocation&&!this.followedRedirect?(this.location=this.redirectedToLocation,this.controller.replaceHistoryWithLocationAndRestorationIdentifier(this.redirectedToLocation,this.restorationIdentifier),this.followedRedirect=!0):void 0},r.prototype.requestStarted=function(){var t;return this.recordTimingMetric(\"requestStart\"),\"function\"==typeof(t=this.adapter).visitRequestStarted?t.visitRequestStarted(this):void 0},r.prototype.requestProgressed=function(t){var e;return this.progress=t,\"function\"==typeof(e=this.adapter).visitRequestProgressed?e.visitRequestProgressed(this):void 0},r.prototype.requestCompletedWithResponse=function(e,r){return this.response=e,null!=r&&(this.redirectedToLocation=t.Location.wrap(r)),this.adapter.visitRequestCompleted(this)},r.prototype.requestFailedWithStatusCode=function(t,e){return this.response=e,this.adapter.visitRequestFailedWithStatusCode(this,t)},r.prototype.requestFinished=function(){var t;return this.recordTimingMetric(\"requestEnd\"),\"function\"==typeof(t=this.adapter).visitRequestFinished?t.visitRequestFinished(this):void 0},r.prototype.performScroll=function(){return this.scrolled?void 0:(\"restore\"===this.action?this.scrollToRestoredPosition()||this.scrollToTop():this.scrollToAnchor()||this.scrollToTop(),this.scrolled=!0)},r.prototype.scrollToRestoredPosition=function(){var t,e;return t=null!=(e=this.restorationData)?e.scrollPosition:void 0,null!=t?(this.controller.scrollToPosition(t),!0):void 0},r.prototype.scrollToAnchor=function(){return null!=this.location.anchor?(this.controller.scrollToAnchor(this.location.anchor),!0):void 0},r.prototype.scrollToTop=function(){return this.controller.scrollToPosition({x:0,y:0})},r.prototype.recordTimingMetric=function(t){var e;return null!=(e=this.timingMetrics)[t]?e[t]:e[t]=(new Date).getTime()},r.prototype.getTimingMetrics=function(){return t.copyObject(this.timingMetrics)},n=function(t){switch(t){case\"replace\":return\"replaceHistoryWithLocationAndRestorationIdentifier\";case\"advance\":case\"restore\":return\"pushHistoryWithLocationAndRestorationIdentifier\"}},r.prototype.shouldIssueRequest=function(){return\"restore\"===this.action?!this.hasCachedSnapshot():!0},r.prototype.cacheSnapshot=function(){return this.snapshotCached?void 0:(this.controller.cacheSnapshot(),this.snapshotCached=!0)},r.prototype.render=function(t){return this.cancelRender(),this.frame=requestAnimationFrame(function(e){return function(){return e.frame=null,t.call(e)}}(this))},r.prototype.cancelRender=function(){return this.frame?cancelAnimationFrame(this.frame):void 0},r}()}.call(this),function(){var e=function(t,e){return function(){return t.apply(e,arguments)}};t.Controller=function(){function r(){this.clickBubbled=e(this.clickBubbled,this),this.clickCaptured=e(this.clickCaptured,this),this.pageLoaded=e(this.pageLoaded,this),this.history=new t.History(this),this.view=new t.View(this),this.scrollManager=new t.ScrollManager(this),this.restorationData={},this.clearCache()}return r.prototype.start=function(){return t.supported&&!this.started?(addEventListener(\"click\",this.clickCaptured,!0),addEventListener(\"DOMContentLoaded\",this.pageLoaded,!1),this.scrollManager.start(),this.startHistory(),this.started=!0,this.enabled=!0):void 0},r.prototype.disable=function(){return this.enabled=!1},r.prototype.stop=function(){return this.started?(removeEventListener(\"click\",this.clickCaptured,!0),removeEventListener(\"DOMContentLoaded\",this.pageLoaded,!1),this.scrollManager.stop(),this.stopHistory(),this.started=!1):void 0},r.prototype.clearCache=function(){return this.cache=new t.SnapshotCache(10)},r.prototype.visit=function(e,r){var n,o;return null==r&&(r={}),e=t.Location.wrap(e),this.applicationAllowsVisitingLocation(e)?this.locationIsVisitable(e)?(n=null!=(o=r.action)?o:\"advance\",this.adapter.visitProposedToLocationWithAction(e,n)):window.location=e:void 0},r.prototype.startVisitToLocationWithAction=function(e,r,n){var o;return t.supported?(o=this.getRestorationDataForIdentifier(n),this.startVisit(e,r,{restorationData:o})):window.location=e},r.prototype.startHistory=function(){return this.location=t.Location.wrap(window.location),this.restorationIdentifier=t.uuid(),this.history.start(),this.history.replace(this.location,this.restorationIdentifier)},r.prototype.stopHistory=function(){return this.history.stop()},r.prototype.pushHistoryWithLocationAndRestorationIdentifier=function(e,r){return this.restorationIdentifier=r,this.location=t.Location.wrap(e),this.history.push(this.location,this.restorationIdentifier)},r.prototype.replaceHistoryWithLocationAndRestorationIdentifier=function(e,r){return this.restorationIdentifier=r,this.location=t.Location.wrap(e),this.history.replace(this.location,this.restorationIdentifier)},r.prototype.historyPoppedToLocationWithRestorationIdentifier=function(e,r){var n;return this.restorationIdentifier=r,this.enabled?(n=this.getRestorationDataForIdentifier(this.restorationIdentifier),this.startVisit(e,\"restore\",{restorationIdentifier:this.restorationIdentifier,restorationData:n,historyChanged:!0}),this.location=t.Location.wrap(e)):this.adapter.pageInvalidated()},r.prototype.getCachedSnapshotForLocation=function(t){var e;return e=this.cache.get(t),e?e.clone():void 0},r.prototype.shouldCacheSnapshot=function(){return this.view.getSnapshot().isCacheable()},r.prototype.cacheSnapshot=function(){var t;return this.shouldCacheSnapshot()?(this.notifyApplicationBeforeCachingSnapshot(),t=this.view.getSnapshot(),this.cache.put(this.lastRenderedLocation,t.clone())):void 0},r.prototype.scrollToAnchor=function(t){var e;return(e=document.getElementById(t))?this.scrollToElement(e):this.scrollToPosition({x:0,y:0})},r.prototype.scrollToElement=function(t){return this.scrollManager.scrollToElement(t)},r.prototype.scrollToPosition=function(t){return this.scrollManager.scrollToPosition(t)},r.prototype.scrollPositionChanged=function(t){var e;return e=this.getCurrentRestorationData(),e.scrollPosition=t},r.prototype.render=function(t,e){return this.view.render(t,e)},r.prototype.viewInvalidated=function(){return this.adapter.pageInvalidated()},r.prototype.viewWillRender=function(t){return this.notifyApplicationBeforeRender(t)},r.prototype.viewRendered=function(){return this.lastRenderedLocation=this.currentVisit.location,this.notifyApplicationAfterRender()},r.prototype.pageLoaded=function(){return this.lastRenderedLocation=this.location,this.notifyApplicationAfterPageLoad()},r.prototype.clickCaptured=function(){return removeEventListener(\"click\",this.clickBubbled,!1),addEventListener(\"click\",this.clickBubbled,!1)},r.prototype.clickBubbled=function(t){var e,r,n;return this.enabled&&this.clickEventIsSignificant(t)&&(r=this.getVisitableLinkForNode(t.target))&&(n=this.getVisitableLocationForLink(r))&&this.applicationAllowsFollowingLinkToLocation(r,n)?(t.preventDefault(),e=this.getActionForLink(r),this.visit(n,{action:e})):void 0},r.prototype.applicationAllowsFollowingLinkToLocation=function(t,e){var r;return r=this.notifyApplicationAfterClickingLinkToLocation(t,e),!r.defaultPrevented},r.prototype.applicationAllowsVisitingLocation=function(t){var e;return e=this.notifyApplicationBeforeVisitingLocation(t),!e.defaultPrevented},r.prototype.notifyApplicationAfterClickingLinkToLocation=function(e,r){return t.dispatch(\"turbolinks:click\",{target:e,data:{url:r.absoluteURL},cancelable:!0})},r.prototype.notifyApplicationBeforeVisitingLocation=function(e){return t.dispatch(\"turbolinks:before-visit\",{data:{url:e.absoluteURL},cancelable:!0})},r.prototype.notifyApplicationAfterVisitingLocation=function(e){return t.dispatch(\"turbolinks:visit\",{data:{url:e.absoluteURL}})},r.prototype.notifyApplicationBeforeCachingSnapshot=function(){return t.dispatch(\"turbolinks:before-cache\")},r.prototype.notifyApplicationBeforeRender=function(e){return t.dispatch(\"turbolinks:before-render\",{data:{newBody:e}})},r.prototype.notifyApplicationAfterRender=function(){return t.dispatch(\"turbolinks:render\")},r.prototype.notifyApplicationAfterPageLoad=function(e){return null==e&&(e={}),t.dispatch(\"turbolinks:load\",{data:{url:this.location.absoluteURL,timing:e}})},r.prototype.startVisit=function(t,e,r){var n;return null!=(n=this.currentVisit)&&n.cancel(),this.currentVisit=this.createVisit(t,e,r),this.currentVisit.start(),this.notifyApplicationAfterVisitingLocation(t)},r.prototype.createVisit=function(e,r,n){\nvar o,i,s,a,u;return i=null!=n?n:{},a=i.restorationIdentifier,s=i.restorationData,o=i.historyChanged,u=new t.Visit(this,e,r),u.restorationIdentifier=null!=a?a:t.uuid(),u.restorationData=t.copyObject(s),u.historyChanged=o,u.referrer=this.location,u},r.prototype.visitCompleted=function(t){return this.notifyApplicationAfterPageLoad(t.getTimingMetrics())},r.prototype.clickEventIsSignificant=function(t){return!(t.defaultPrevented||t.target.isContentEditable||t.which>1||t.altKey||t.ctrlKey||t.metaKey||t.shiftKey)},r.prototype.getVisitableLinkForNode=function(e){return this.nodeIsVisitable(e)?t.closest(e,\"a[href]:not([target])\"):void 0},r.prototype.getVisitableLocationForLink=function(e){var r;return r=new t.Location(e.getAttribute(\"href\")),this.locationIsVisitable(r)?r:void 0},r.prototype.getActionForLink=function(t){var e;return null!=(e=t.getAttribute(\"data-turbolinks-action\"))?e:\"advance\"},r.prototype.nodeIsVisitable=function(e){var r;return(r=t.closest(e,\"[data-turbolinks]\"))?\"false\"!==r.getAttribute(\"data-turbolinks\"):!0},r.prototype.locationIsVisitable=function(t){return t.isPrefixedBy(this.view.getRootLocation())&&t.isHTML()},r.prototype.getCurrentRestorationData=function(){return this.getRestorationDataForIdentifier(this.restorationIdentifier)},r.prototype.getRestorationDataForIdentifier=function(t){var e;return null!=(e=this.restorationData)[t]?e[t]:e[t]={}},r}()}.call(this),function(){var e,r,n;t.start=function(){return r()?(null==t.controller&&(t.controller=e()),t.controller.start()):void 0},r=function(){return null==window.Turbolinks&&(window.Turbolinks=t),n()},e=function(){var e;return e=new t.Controller,e.adapter=new t.BrowserAdapter(e),e},n=function(){return window.Turbolinks===t},n()&&t.start()}.call(this)}).call(this),\"object\"==typeof module&&module.exports?module.exports=t:\"function\"==typeof define&&define.amd&&define(t)}).call(this);","ï»¿//import Barba from 'barba.js';\r\n//import FadeTransition from './transitions/fade';\r\nimport Turbolinks from 'turbolinks';\r\n$(function () {\r\n    if (window.__turbo__) {\r\n        return;\r\n    }\r\n    window.__turbo__ = true;\r\n\r\n    Turbolinks.start();\r\n\r\n    const $window = $(window);\r\n\r\n    $window\r\n        .on('turbolinks:visit', (e) => {\r\n            //$('.custom-scrollable').mCustomScrollbar('destroy');\r\n            $('body').removeClass('animated fadeIn').addClass('animated fadeOut');\r\n        })\r\n        .on('turbolinks:before-cache', (e) => {\r\n            $('.custom-scrollable').mCustomScrollbar('destroy');\r\n            //$('body').removeClass('animated fadeIn').addClass('animated fadeOut');\r\n        })\r\n        .on('turbolinks:before-render', e => {\r\n            $(event.data.newBody).removeClass('animated fadeOut').addClass('animated fadeIn');\r\n        });\r\n\r\n\r\n\r\n\r\n});\r\n\r\n//Turbolinks would show progress bar automatically when page takes longer than 500ms to load\r\n//https://github.com/turbolinks/turbolinks/issues/17#issuecomment-186635946\r\n//Turbolinks.controller.adapter.hideProgressBar()\r\n//Turbolinks.controller.adapter.showProgressBar()\r\n$.material.init();\r\n\r\n\r\n\r\nexport default class BasePage {\r\n\r\n    constructor() {\r\n\r\n        //this._url = Barba.Pjax.getCurrentUrl();\r\n    }\r\n\r\n    //getTransition() {\r\n    //    return FadeTransition;\r\n    //}\r\n\r\n    configure() {\r\n        //Barba.Pjax.getTransition = () => this.getTransition();\r\n    }\r\n\r\n    init() {\r\n        this.configure();\r\n\r\n        $('.custom-scrollable').mCustomScrollbar({ scrollInertia: 0, autoHideScrollbar: true });\r\n\r\n        this.onReady()\r\n            .then(() => {\r\n                $.material.init();\r\n            });\r\n\r\n        //Barba.Dispatcher.on('newPageReady', (currentStatus, oldStatus, container) => {\r\n        //    debugger;\r\n        //    if (currentStatus.url == this._url)\r\n        //    { this.onReady(); }\r\n        //});\r\n    }\r\n\r\n    onReady() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","ï»¿import Turbolinks from 'turbolinks';\r\n\r\nconst navigationHelper = {\r\n\r\n    toIdeaImages(id) {\r\n        Turbolinks.visit(`/ideas/${id}/images`);\r\n    },\r\n\r\n    toEditIdea(id) {\r\n        Turbolinks.visit(`/ideas/${id}/edit`);\r\n    },\r\n\r\n    toIdeaPages(id) {\r\n        Turbolinks.visit(`/ideas/${id}/pages`);\r\n    },\r\n    toTeamDetails(id) {\r\n        Turbolinks.visit(`/ideas/${id}/teamdetails`);\r\n    },\r\n    toIdeaDetails(id) {\r\n        Turbolinks.visit(`/ideas/${id}/details`);\r\n    }\r\n\r\n};\r\n\r\nexport default navigationHelper;","ï»¿import ApiClient from '../../modules/api';\r\nimport ko from 'knockout';\r\nimport '../../components/rich-text-editor';\r\n\r\nimport IdeaBasicInfoViewModel from '../../modules/ideas/ideaBasicInfoViewModel';\r\nimport BasePage from '../../basePage';\r\nimport navigate from '../../modules/navigationHelper';\r\n\r\nclass EditPage extends BasePage {\r\n    constructor(client) {\r\n        super(...arguments);\r\n        this._client = client;\r\n    }\r\n\r\n    onReady() {\r\n        console.log('edit page ready');\r\n        return this._client.getIdea($('#IdeaId').val()).then(ideaDetails => {\r\n\r\n\r\n            var viewModel = new IdeaBasicInfoViewModel({\r\n                idea: ideaDetails,\r\n                actions: {\r\n                    save: (idea) => {\r\n                        return this._client.updateIdea(idea)\r\n                            .then(data => {\r\n                                navigate.toIdeaImages(idea.id);\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n\r\n            ko.applyBindings(viewModel, document.getElementById('create-idea-form'));\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\nconst client = new ApiClient();\r\nconst page = new EditPage(client);\r\npage.init();"],"names":["defaultHeaders","utils","url","Promise","resolve","reject","get","data","ajax","JSON","stringify","post","files","formData","FormData","forEach","append","file","name","ApiClient","ajaxSetup","id","idea","put","uploadFile","pages","keyword","page","pageSize","ideaId","isLike","content","delete","n","x","eval","t","document","M","navigator","u","jQuery","H","define","amd","module","exports","N","O","J","a","c","R","S","b","d","setTimeout","T","U","E","Ob","Ja","Pb","V","k","W","Mc","e","s","ob","Oa","Sb","$","yc","Ha","Hc","K","init","g","h","l","m","r","q","p","A","xa","Ca","wa","f","childNodes","fa","hb","za","i","controlsDescendantBindings","va","aa","split","length","version","options","deferUpdates","useOnlyNativeEvents","hasOwnProperty","__proto__","match","ra","join","Array","Symbol","test","userAgent","MouseEvents","propertychange","createElement","getElementsByTagName","innerHTML","gc","o","prototype","indexOf","call","Vb","Na","splice","shift","Wb","push","ib","Ma","ta","apply","Bb","la","extend","$a","ab","D","Ea","rb","firstChild","removeNode","nc","ownerDocument","appendChild","ba","cloneNode","uc","nodeType","parentNode","insertBefore","Ba","nextSibling","wc","setAttribute","selected","cb","trim","toString","replace","sd","substring","Rc","contains","compareDocumentPosition","qb","documentElement","Tb","tagName","toLowerCase","Zb","onError","arguments","dc","addEventListener","attachEvent","G","qa","detachEvent","Error","bind","Fa","type","createEvent","dispatchEvent","initEvent","click","fireEvent","trigger","I","fb","classList","className","baseVal","bb","createTextNode","Wc","vc","mergeAttributes","style","zoom","Sc","width","nd","bc","xd","C","ic","concat","kd","parse","Function","Gb","ld","params","includeFields","action","value","display","method","body","submitter","submit","removeChild","slice","Date","getTime","set","clear","cleanExternalData","tc","cleanData","thead","tbody","tfoot","tr","td","th","option","optgroup","na","parseHTML","clean","parentWindow","defaultView","innerShiv","lastChild","Eb","html","pc","nodeValue","Qc","hd","yb","Math","random","Bc","Cc","Z","scheduler","MutationObserver","observe","attributes","toggle","onreadystatechange","Za","cancel","resetForTesting","rd","Aa","throttle","throttleEvaluation","B","read","write","rateLimit","timeout","gb","Wa","deferred","notifySubscribers","notify","equalityComparer","undefined","number","string","zc","jb","Pc","ub","F","change","Qb","Y","Ka","ua","Kb","Ra","Fc","Xb","end","Pa","Zc","Mb","Ua","Xc","fn","lc","pop","sc","Lc","Gc","w","Va","wd","ia","ha","md","Qa","Da","$c","ma","trackArrayChanges","remove","removeAll","destroy","_destroy","destroyAll","Yb","lb","kb","sparse","status","index","min","max","hc","sb","Sa","da","Ta","Hb","Ya","od","owner","disposeWhenNodeIsRemoved","ya","disposeWhen","pb","L","fc","z","pure","deferEvaluation","ca","Ia","pa","oa","gd","qd","ec","clearTimeout","Vc","Uc","P","bd","cd","rc","RegExp","String","Number","Boolean","save","toJSON","keys","Lb","Ac","j","__ko__hasDomDataOptionValue__","zb","getAttributeNode","specified","text","selectedIndex","ja","size","charCodeAt","y","v","key","unknown","substr","ga","Ab","Xa","getBindingHandler","preprocess","valueAccessors","bindingParams","fd","Ga","createComment","ul","ol","qc","kc","Yc","vd","oc","Kc","nodeHasBindings","getAttribute","getComponentNameForNode","getBindings","getBindingsString","parseBindingsString","Rb","getBindingAccessors","message","instance","preprocessNode","shouldBindDescendants","X","after","jc","xc","Q","has","update","$data","script","textarea","template","$parents","$root","ko","$rawData","exportDependencies","Dc","createChildContext","$parentContext","$parent","unshift","ac","La","Ic","Ub","nb","Oc","synchronous","definition","dd","loaders","suppressLoaderExceptions","$b","Nb","viewModel","DocumentFragment","require","register","wb","ud","cc","getConfig","loadComponent","loadTemplate","element","HTMLElement","getElementById","loadViewModel","Ec","$raw","component","createDocumentFragment","createViewModel","templateNodes","dispose","$component","$componentTemplateNodes","attr","removeAttribute","checked","uniqueName","checkedValue","css","__ko__cssValue","enable","disabled","disable","event","preventDefault","returnValue","cancelBubble","stopPropagation","foreach","mc","templateEngine","vb","as","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","hasfocus","__ko_hasfocusUpdating","activeElement","__ko_hasfocusLastValue","focus","blur","hasFocus","multiple","scrollTop","Db","abs","selectedOptions","parseFloat","opera","parseInt","textInput","propertyName","textinput","Nc","autocomplete","form","visible","renderTemplateSource","createJavaScriptEvaluatorBlock","makeTemplateSource","sa","renderTemplate","isTemplateRewritten","allowTemplateRewriting","rewriteTemplate","Ib","Tc","jd","Jc","nodeName","eb","nodes","mb","Jb","previousSibling","Fb","Cb","pd","$index","ifnot","moved","dontLimitMoves","reverse","ea","tb","ka","ad","xb","ed","tmpl","tag","open","koBindingContext","templateOptions","appendTo","fragments","addTemplate","ko_code","ko_with","close","this","editorConfigs","RichTextEditorViewModel","components","placeholder","mode","editorElement","querySelector","toolbar","modules","formats","editor","Quill","subscribe","container","on","require$$0","IdeaBasicInfoViewModel","actions","validation","isSaving","observable","_initForm","title","description","isFundingRequired","fundingRequirement","validatedObservable","required","isValid","errors","showAllMessages","_validate","toJS","then","res","catch","window","__turbo__","start","$window","removeClass","addClass","mCustomScrollbar","newBody","material","BasePage","configure","scrollInertia","autoHideScrollbar","onReady","navigationHelper","visit","EditPage","client","_client","log","getIdea","val","ideaDetails","updateIdea","toIdeaImages","applyBindings"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}