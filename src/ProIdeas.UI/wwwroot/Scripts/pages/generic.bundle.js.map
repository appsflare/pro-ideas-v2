{"version":3,"file":"generic.bundle.js","sources":["node_modules/barba.js/dist/barba.js","Scripts/transitions/fade.js","Scripts/basePage.js","Scripts/pages/generic.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Barba\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Barba\"] = factory();\n\telse\n\t\troot[\"Barba\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"http://localhost:8080/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//Promise polyfill https://github.com/taylorhakes/promise-polyfill\n\t\n\tif (typeof Promise !== 'function') {\n\t window.Promise = __webpack_require__(1);\n\t}\n\t\n\tvar Barba = {\n\t  version: '1.0.0',\n\t  BaseTransition: __webpack_require__(4),\n\t  BaseView: __webpack_require__(6),\n\t  BaseCache: __webpack_require__(8),\n\t  Dispatcher: __webpack_require__(7),\n\t  HistoryManager: __webpack_require__(9),\n\t  Pjax: __webpack_require__(10),\n\t  Prefetch: __webpack_require__(13),\n\t  Utils: __webpack_require__(5)\n\t};\n\t\n\tmodule.exports = Barba;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {\n\t\n\t  // Store setTimeout reference so promise-polyfill will be unaffected by\n\t  // other code modifying setTimeout (like sinon.useFakeTimers())\n\t  var setTimeoutFunc = setTimeout;\n\t\n\t  function noop() {\n\t  }\n\t\n\t  // Use polyfill for setImmediate for performance gains\n\t  var asap = (typeof setImmediate === 'function' && setImmediate) ||\n\t    function (fn) {\n\t      setTimeoutFunc(fn, 0);\n\t    };\n\t\n\t  var onUnhandledRejection = function onUnhandledRejection(err) {\n\t    if (typeof console !== 'undefined' && console) {\n\t      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t    }\n\t  };\n\t\n\t  // Polyfill for Function.prototype.bind\n\t  function bind(fn, thisArg) {\n\t    return function () {\n\t      fn.apply(thisArg, arguments);\n\t    };\n\t  }\n\t\n\t  function Promise(fn) {\n\t    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n\t    if (typeof fn !== 'function') throw new TypeError('not a function');\n\t    this._state = 0;\n\t    this._handled = false;\n\t    this._value = undefined;\n\t    this._deferreds = [];\n\t\n\t    doResolve(fn, this);\n\t  }\n\t\n\t  function handle(self, deferred) {\n\t    while (self._state === 3) {\n\t      self = self._value;\n\t    }\n\t    if (self._state === 0) {\n\t      self._deferreds.push(deferred);\n\t      return;\n\t    }\n\t    self._handled = true;\n\t    asap(function () {\n\t      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t      if (cb === null) {\n\t        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t        return;\n\t      }\n\t      var ret;\n\t      try {\n\t        ret = cb(self._value);\n\t      } catch (e) {\n\t        reject(deferred.promise, e);\n\t        return;\n\t      }\n\t      resolve(deferred.promise, ret);\n\t    });\n\t  }\n\t\n\t  function resolve(self, newValue) {\n\t    try {\n\t      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\t      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n\t        var then = newValue.then;\n\t        if (newValue instanceof Promise) {\n\t          self._state = 3;\n\t          self._value = newValue;\n\t          finale(self);\n\t          return;\n\t        } else if (typeof then === 'function') {\n\t          doResolve(bind(then, newValue), self);\n\t          return;\n\t        }\n\t      }\n\t      self._state = 1;\n\t      self._value = newValue;\n\t      finale(self);\n\t    } catch (e) {\n\t      reject(self, e);\n\t    }\n\t  }\n\t\n\t  function reject(self, newValue) {\n\t    self._state = 2;\n\t    self._value = newValue;\n\t    finale(self);\n\t  }\n\t\n\t  function finale(self) {\n\t    if (self._state === 2 && self._deferreds.length === 0) {\n\t      asap(function() {\n\t        if (!self._handled) {\n\t          onUnhandledRejection(self._value);\n\t        }\n\t      });\n\t    }\n\t\n\t    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t      handle(self, self._deferreds[i]);\n\t    }\n\t    self._deferreds = null;\n\t  }\n\t\n\t  function Handler(onFulfilled, onRejected, promise) {\n\t    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t    this.promise = promise;\n\t  }\n\t\n\t  /**\n\t   * Take a potentially misbehaving resolver function and make sure\n\t   * onFulfilled and onRejected are only called once.\n\t   *\n\t   * Makes no guarantees about asynchrony.\n\t   */\n\t  function doResolve(fn, self) {\n\t    var done = false;\n\t    try {\n\t      fn(function (value) {\n\t        if (done) return;\n\t        done = true;\n\t        resolve(self, value);\n\t      }, function (reason) {\n\t        if (done) return;\n\t        done = true;\n\t        reject(self, reason);\n\t      });\n\t    } catch (ex) {\n\t      if (done) return;\n\t      done = true;\n\t      reject(self, ex);\n\t    }\n\t  }\n\t\n\t  Promise.prototype['catch'] = function (onRejected) {\n\t    return this.then(null, onRejected);\n\t  };\n\t\n\t  Promise.prototype.then = function (onFulfilled, onRejected) {\n\t    var prom = new (this.constructor)(noop);\n\t\n\t    handle(this, new Handler(onFulfilled, onRejected, prom));\n\t    return prom;\n\t  };\n\t\n\t  Promise.all = function (arr) {\n\t    var args = Array.prototype.slice.call(arr);\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      if (args.length === 0) return resolve([]);\n\t      var remaining = args.length;\n\t\n\t      function res(i, val) {\n\t        try {\n\t          if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t            var then = val.then;\n\t            if (typeof then === 'function') {\n\t              then.call(val, function (val) {\n\t                res(i, val);\n\t              }, reject);\n\t              return;\n\t            }\n\t          }\n\t          args[i] = val;\n\t          if (--remaining === 0) {\n\t            resolve(args);\n\t          }\n\t        } catch (ex) {\n\t          reject(ex);\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < args.length; i++) {\n\t        res(i, args[i]);\n\t      }\n\t    });\n\t  };\n\t\n\t  Promise.resolve = function (value) {\n\t    if (value && typeof value === 'object' && value.constructor === Promise) {\n\t      return value;\n\t    }\n\t\n\t    return new Promise(function (resolve) {\n\t      resolve(value);\n\t    });\n\t  };\n\t\n\t  Promise.reject = function (value) {\n\t    return new Promise(function (resolve, reject) {\n\t      reject(value);\n\t    });\n\t  };\n\t\n\t  Promise.race = function (values) {\n\t    return new Promise(function (resolve, reject) {\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        values[i].then(resolve, reject);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Set the immediate function to execute callbacks\n\t   * @param fn {function} Function to execute\n\t   * @private\n\t   */\n\t  Promise._setImmediateFn = function _setImmediateFn(fn) {\n\t    asap = fn;\n\t  };\n\t\n\t  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n\t    onUnhandledRejection = fn;\n\t  };\n\t\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = Promise;\n\t  } else if (!root.Promise) {\n\t    root.Promise = Promise;\n\t  }\n\t\n\t})(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(3).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate, __webpack_require__(2).clearImmediate))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\t(function () {\n\t  try {\n\t    cachedSetTimeout = setTimeout;\n\t  } catch (e) {\n\t    cachedSetTimeout = function () {\n\t      throw new Error('setTimeout is not defined');\n\t    }\n\t  }\n\t  try {\n\t    cachedClearTimeout = clearTimeout;\n\t  } catch (e) {\n\t    cachedClearTimeout = function () {\n\t      throw new Error('clearTimeout is not defined');\n\t    }\n\t  }\n\t} ())\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = cachedSetTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    cachedClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        cachedSetTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\t\n\t/**\n\t * BaseTransition to extend\n\t *\n\t * @namespace Barba.BaseTransition\n\t * @type {Object}\n\t */\n\tvar BaseTransition = {\n\t  /**\n\t   * @memberOf Barba.BaseTransition\n\t   * @type {HTMLElement}\n\t   */\n\t  oldContainer: undefined,\n\t\n\t  /**\n\t   * @memberOf Barba.BaseTransition\n\t   * @type {HTMLElement}\n\t   */\n\t  newContainer: undefined,\n\t\n\t  /**\n\t   * @memberOf Barba.BaseTransition\n\t   * @type {Promise}\n\t   */\n\t  newContainerLoading: undefined,\n\t\n\t  /**\n\t   * Helper to extend the object\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   * @param  {Object} newObject\n\t   * @return {Object} newInheritObject\n\t   */\n\t  extend: function(obj){\n\t    return Utils.extend(this, obj);\n\t  },\n\t\n\t  /**\n\t   * This function is called from Pjax module to initialize\n\t   * the transition.\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   * @private\n\t   * @param  {HTMLElement} oldContainer\n\t   * @param  {Promise} newContainer\n\t   * @return {Promise}\n\t   */\n\t  init: function(oldContainer, newContainer) {\n\t    var _this = this;\n\t\n\t    this.oldContainer = oldContainer;\n\t    this._newContainerPromise = newContainer;\n\t\n\t    this.deferred = Utils.deferred();\n\t    this.newContainerReady = Utils.deferred();\n\t    this.newContainerLoading = this.newContainerReady.promise;\n\t\n\t    this.start();\n\t\n\t    this._newContainerPromise.then(function(newContainer) {\n\t      _this.newContainer = newContainer;\n\t      _this.newContainerReady.resolve();\n\t    });\n\t\n\t    return this.deferred.promise;\n\t  },\n\t\n\t  /**\n\t   * This function needs to be called as soon the Transition is finished\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   */\n\t  done: function() {\n\t    this.oldContainer.parentNode.removeChild(this.oldContainer);\n\t    this.newContainer.style.visibility = 'visible';\n\t    this.deferred.resolve();\n\t  },\n\t\n\t  /**\n\t   * Constructor for your Transition\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   * @abstract\n\t   */\n\t  start: function() {},\n\t};\n\t\n\tmodule.exports = BaseTransition;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Just an object with some helpful functions\n\t *\n\t * @type {Object}\n\t * @namespace Barba.Utils\n\t */\n\tvar Utils = {\n\t  /**\n\t   * Return the current url\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @return {String} currentUrl\n\t   */\n\t  getCurrentUrl: function() {\n\t    return window.location.protocol + '//' +\n\t           window.location.host +\n\t           window.location.pathname +\n\t           window.location.search;\n\t  },\n\t\n\t  /**\n\t   * Given an url, return it without the hash\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @private\n\t   * @param  {String} url\n\t   * @return {String} newCleanUrl\n\t   */\n\t  cleanLink: function(url) {\n\t    return url.replace(/#.*/, '');\n\t  },\n\t\n\t  /**\n\t   * Time in millisecond after the xhr request goes in timeout\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @type {Number}\n\t   * @default\n\t   */\n\t  xhrTimeout: 5000,\n\t\n\t  /**\n\t   * Start an XMLHttpRequest() and return a Promise\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @param  {String} url\n\t   * @return {Promise}\n\t   */\n\t  xhr: function(url) {\n\t    var deferred = this.deferred();\n\t    var req = new XMLHttpRequest();\n\t\n\t    req.onreadystatechange = function() {\n\t      if (req.readyState === 4) {\n\t        if (req.status === 200) {\n\t          return deferred.resolve(req.responseText);\n\t        } else {\n\t          return deferred.reject(new Error('xhr: HTTP code is not 200'));\n\t        }\n\t      }\n\t    };\n\t\n\t    req.ontimeout = function() {\n\t      return deferred.reject(new Error('xhr: Timeout exceeded'));\n\t    };\n\t\n\t    req.open('GET', url);\n\t    req.timeout = this.xhrTimeout;\n\t    req.setRequestHeader('x-barba', 'yes');\n\t    req.send();\n\t\n\t    return deferred.promise;\n\t  },\n\t\n\t  /**\n\t   * Get obj and props and return a new object with the property merged\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @param  {object} obj\n\t   * @param  {object} props\n\t   * @return {object}\n\t   */\n\t  extend: function(obj, props) {\n\t    var newObj = Object.create(obj);\n\t\n\t    for(var prop in props) {\n\t      if(props.hasOwnProperty(prop)) {\n\t        newObj[prop] = props[prop];\n\t      }\n\t    }\n\t\n\t    return newObj;\n\t  },\n\t\n\t  /**\n\t   * Return a new \"Deferred\" object\n\t   * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @return {Deferred}\n\t   */\n\t  deferred: function() {\n\t    return new function() {\n\t      this.resolve = null;\n\t      this.reject = null;\n\t\n\t      this.promise = new Promise(function(resolve, reject) {\n\t        this.resolve = resolve;\n\t        this.reject = reject;\n\t      }.bind(this));\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Return the port number normalized, eventually you can pass a string to be normalized.\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @private\n\t   * @param  {String} p\n\t   * @return {Int} port\n\t   */\n\t  getPort: function(p) {\n\t    var port = typeof p !== 'undefined' ? p : window.location.port;\n\t    var protocol = window.location.protocol;\n\t\n\t    if (port != '')\n\t      return parseInt(port);\n\t\n\t    if (protocol === 'http:')\n\t      return 80;\n\t\n\t    if (protocol === 'https:')\n\t      return 443;\n\t  }\n\t};\n\t\n\tmodule.exports = Utils;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Dispatcher = __webpack_require__(7);\n\tvar Utils = __webpack_require__(5);\n\t\n\t/**\n\t * BaseView to be extended\n\t *\n\t * @namespace Barba.BaseView\n\t * @type {Object}\n\t */\n\tvar BaseView  = {\n\t  /**\n\t   * Namespace of the view.\n\t   * (need to be associated with the data-namespace of the container)\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @type {String}\n\t   */\n\t  namespace: null,\n\t\n\t  /**\n\t   * Helper to extend the object\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @param  {Object} newObject\n\t   * @return {Object} newInheritObject\n\t   */\n\t  extend: function(obj){\n\t    return Utils.extend(this, obj);\n\t  },\n\t\n\t  /**\n\t   * Init the view.\n\t   * P.S. Is suggested to init the view before starting Barba.Pjax.start(),\n\t   * in this way .onEnter() and .onEnterCompleted() will be fired for the current\n\t   * container when the page is loaded.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   */\n\t  init: function() {\n\t    var _this = this;\n\t\n\t    Dispatcher.on('initStateChange',\n\t      function(newStatus, oldStatus) {\n\t        if (oldStatus && oldStatus.namespace === _this.namespace)\n\t          _this.onLeave();\n\t      }\n\t    );\n\t\n\t    Dispatcher.on('newPageReady',\n\t      function(newStatus, oldStatus, container) {\n\t        _this.container = container;\n\t\n\t        if (newStatus.namespace === _this.namespace)\n\t          _this.onEnter();\n\t      }\n\t    );\n\t\n\t    Dispatcher.on('transitionCompleted',\n\t      function(newStatus, oldStatus) {\n\t        if (newStatus.namespace === _this.namespace)\n\t          _this.onEnterCompleted();\n\t\n\t        if (oldStatus && oldStatus.namespace === _this.namespace)\n\t          _this.onLeaveCompleted();\n\t      }\n\t    );\n\t  },\n\t\n\t /**\n\t  * This function will be fired when the container\n\t  * is ready and attached to the DOM.\n\t  *\n\t  * @memberOf Barba.BaseView\n\t  * @abstract\n\t  */\n\t  onEnter: function() {},\n\t\n\t  /**\n\t   * This function will be fired when the transition\n\t   * to this container has just finished.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @abstract\n\t   */\n\t  onEnterCompleted: function() {},\n\t\n\t  /**\n\t   * This function will be fired when the transition\n\t   * to a new container has just started.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @abstract\n\t   */\n\t  onLeave: function() {},\n\t\n\t  /**\n\t   * This function will be fired when the container\n\t   * has just been removed from the DOM.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @abstract\n\t   */\n\t  onLeaveCompleted: function() {}\n\t}\n\t\n\tmodule.exports = BaseView;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Little Dispatcher inspired by MicroEvent.js\n\t *\n\t * @namespace Barba.Dispatcher\n\t * @type {Object}\n\t */\n\tvar Dispatcher = {\n\t  /**\n\t   * Object that keeps all the events\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @readOnly\n\t   * @type {Object}\n\t   */\n\t  events: {},\n\t\n\t  /**\n\t   * Bind a callback to an event\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @param  {String} eventName\n\t   * @param  {Function} function\n\t   */\n\t  on: function(e, f) {\n\t    this.events[e] = this.events[e] || [];\n\t    this.events[e].push(f);\n\t  },\n\t\n\t  /**\n\t   * Unbind event\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @param  {String} eventName\n\t   * @param  {Function} function\n\t   */\n\t  off: function(e, f) {\n\t    if(e in this.events === false)\n\t      return;\n\t\n\t    this.events[e].splice(this.events[e].indexOf(f), 1);\n\t  },\n\t\n\t  /**\n\t   * Fire the event running all the event associated to it\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @param  {String} eventName\n\t   * @param  {...*} args\n\t   */\n\t  trigger: function(e) {//e, ...args\n\t    if (e in this.events === false)\n\t      return;\n\t\n\t    for(var i = 0; i < this.events[e].length; i++){\n\t      this.events[e][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = Dispatcher;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\t\n\t/**\n\t * BaseCache it's a simple static cache\n\t *\n\t * @namespace Barba.BaseCache\n\t * @type {Object}\n\t */\n\tvar BaseCache = {\n\t  /**\n\t   * The Object that keeps all the key value information\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @type {Object}\n\t   */\n\t  data: {},\n\t\n\t  /**\n\t   * Helper to extend this object\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @private\n\t   * @param  {Object} newObject\n\t   * @return {Object} newInheritObject\n\t   */\n\t  extend: function(obj) {\n\t    return Utils.extend(this, obj);\n\t  },\n\t\n\t  /**\n\t   * Set a key and value data, mainly Barba is going to save promises\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @param {String} key\n\t   * @param {*} value\n\t   */\n\t  set: function(key, val) {\n\t    this.data[key] = val;\n\t  },\n\t\n\t  /**\n\t   * Retrieve the data using the key\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @param  {String} key\n\t   * @return {*}\n\t   */\n\t  get: function(key) {\n\t    return this.data[key];\n\t  },\n\t\n\t  /**\n\t   * Flush the cache\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   */\n\t  reset: function() {\n\t    this.data = {};\n\t  }\n\t};\n\t\n\tmodule.exports = BaseCache;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HistoryManager helps to keep track of the navigation\n\t *\n\t * @namespace Barba.HistoryManager\n\t * @type {Object}\n\t */\n\tvar HistoryManager = {\n\t  /**\n\t   * Keep track of the status in historic order\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @readOnly\n\t   * @type {Array}\n\t   */\n\t  history: [],\n\t\n\t  /**\n\t   * Add a new set of url and namespace\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @param {String} url\n\t   * @param {String} namespace\n\t   * @private\n\t   */\n\t  add: function(url, namespace) {\n\t    if (!namespace)\n\t      namespace = undefined;\n\t\n\t    this.history.push({\n\t      url: url,\n\t      namespace: namespace\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Return information about the current status\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @return {Object}\n\t   */\n\t  currentStatus: function() {\n\t    return this.history[this.history.length - 1];\n\t  },\n\t\n\t  /**\n\t   * Return information about the previous status\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @return {Object}\n\t   */\n\t  prevStatus: function() {\n\t    var history = this.history;\n\t\n\t    if (history.length < 2)\n\t      return null;\n\t\n\t    return history[history.length - 2];\n\t  }\n\t};\n\t\n\tmodule.exports = HistoryManager;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\tvar Dispatcher = __webpack_require__(7);\n\tvar HideShowTransition = __webpack_require__(11);\n\tvar BaseCache = __webpack_require__(8);\n\t\n\tvar HistoryManager = __webpack_require__(9);\n\tvar Dom = __webpack_require__(12);\n\t\n\t/**\n\t * Pjax is a static object with main function\n\t *\n\t * @namespace Barba.Pjax\n\t * @borrows Dom as Dom\n\t * @type {Object}\n\t */\n\tvar Pjax = {\n\t  Dom: Dom,\n\t  History: HistoryManager,\n\t  Cache: BaseCache,\n\t\n\t  /**\n\t   * Indicate wether or not use the cache\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @type {Boolean}\n\t   * @default\n\t   */\n\t  cacheEnabled: true,\n\t\n\t  /**\n\t   * Indicate if there is an animation in progress\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @readOnly\n\t   * @type {Boolean}\n\t   */\n\t  transitionProgress: false,\n\t\n\t  /**\n\t   * Class name used to ignore links\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  ignoreClassLink: 'no-barba',\n\t\n\t  /**\n\t   * Function to be called to start Pjax\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   */\n\t  start: function() {\n\t    this.init();\n\t  },\n\t\n\t  /**\n\t   * Init the events\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  init: function() {\n\t    var container = this.Dom.getContainer();\n\t    var wrapper = this.Dom.getWrapper();\n\t\n\t    wrapper.setAttribute('aria-live', 'polite');\n\t\n\t    this.History.add(\n\t      this.getCurrentUrl(),\n\t      this.Dom.getNamespace(container)\n\t    );\n\t\n\t    //Fire for the current view.\n\t    Dispatcher.trigger('initStateChange', this.History.currentStatus());\n\t    Dispatcher.trigger('newPageReady',\n\t      this.History.currentStatus(),\n\t      {},\n\t      container,\n\t      this.Dom.currentHTML\n\t    );\n\t    Dispatcher.trigger('transitionCompleted', this.History.currentStatus());\n\t\n\t    this.bindEvents();\n\t  },\n\t\n\t  /**\n\t   * Attach the eventlisteners\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  bindEvents: function() {\n\t    document.addEventListener('click',\n\t      this.onLinkClick.bind(this)\n\t    );\n\t\n\t    window.addEventListener('popstate',\n\t      this.onStateChange.bind(this)\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Return the currentURL cleaned\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @return {String} currentUrl\n\t   */\n\t  getCurrentUrl: function() {\n\t    return Utils.cleanLink(\n\t      Utils.getCurrentUrl()\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Change the URL with pushstate and trigger the state change\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @param {String} newUrl\n\t   */\n\t  goTo: function(url) {\n\t    window.history.pushState(null, null, url);\n\t    this.onStateChange();\n\t  },\n\t\n\t  /**\n\t   * Force the browser to go to a certain url\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @param {String} url\n\t   * @private\n\t   */\n\t  forceGoTo: function(url) {\n\t    window.location = url;\n\t  },\n\t\n\t  /**\n\t   * Load an url, will start an xhr request or load from the cache\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   * @param  {String} url\n\t   * @return {Promise}\n\t   */\n\t  load: function(url) {\n\t    var deferred = Utils.deferred();\n\t    var _this = this;\n\t    var xhr;\n\t\n\t    xhr = this.Cache.get(url);\n\t\n\t    if (!xhr) {\n\t      xhr = Utils.xhr(url);\n\t      this.Cache.set(url, xhr);\n\t    }\n\t\n\t    xhr.then(\n\t      function(data) {\n\t        var container = _this.Dom.parseResponse(data);\n\t\n\t        _this.Dom.putContainer(container);\n\t\n\t        if (!_this.cacheEnabled)\n\t          _this.Cache.reset();\n\t\n\t        deferred.resolve(container);\n\t      },\n\t      function() {\n\t        //Something went wrong (timeout, 404, 505...)\n\t        _this.forceGoTo(url);\n\t\n\t        deferred.reject();\n\t      }\n\t    );\n\t\n\t    return deferred.promise;\n\t  },\n\t\n\t  /**\n\t   * Get the .href parameter out of an element\n\t   * and handle special cases (like xlink:href)\n\t   *\n\t   * @private\n\t   * @memberOf Barba.Pjax\n\t   * @param  {HTMLElement} el\n\t   * @return {String} href\n\t   */\n\t  getHref: function(el) {\n\t    if (!el) {\n\t      return undefined;\n\t    }\n\t\n\t    if (el.getAttribute && typeof el.getAttribute('xlink:href') === 'string') {\n\t      return el.getAttribute('xlink:href');\n\t    }\n\t\n\t    if (typeof el.href === 'string') {\n\t      return el.href;\n\t    }\n\t\n\t    return undefined;\n\t  },\n\t\n\t  /**\n\t   * Callback called from click event\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   * @param {MouseEvent} evt\n\t   */\n\t  onLinkClick: function(evt) {\n\t    var el = evt.target;\n\t\n\t    //Go up in the nodelist until we\n\t    //find something with an href\n\t    while (el && !this.getHref(el)) {\n\t      el = el.parentNode;\n\t    }\n\t\n\t    if (this.preventCheck(evt, el)) {\n\t      evt.stopPropagation();\n\t      evt.preventDefault();\n\t\n\t      Dispatcher.trigger('linkClicked', el, evt);\n\t\n\t      var href = this.getHref(el);\n\t      this.goTo(href);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Determine if the link should be followed\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @param  {MouseEvent} evt\n\t   * @param  {HTMLElement} element\n\t   * @return {Boolean}\n\t   */\n\t  preventCheck: function(evt, element) {\n\t    if (!window.history.pushState)\n\t      return false;\n\t\n\t    var href = this.getHref(element);\n\t\n\t    //User\n\t    if (!element || !href)\n\t      return false;\n\t\n\t    //Middle click, cmd click, and ctrl click\n\t    if (evt.which > 1 || evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.altKey)\n\t      return false;\n\t\n\t    //Ignore target with _blank target\n\t    if (element.target && element.target === '_blank')\n\t      return false;\n\t\n\t    //Check if it's the same domain\n\t    if (window.location.protocol !== element.protocol || window.location.hostname !== element.hostname)\n\t      return false;\n\t\n\t    //Check if the port is the same\n\t    if (Utils.getPort() !== Utils.getPort(element.port))\n\t      return false;\n\t\n\t    //Ignore case when a hash is being tacked on the current URL\n\t    if (href.indexOf('#') > -1)\n\t      return false;\n\t\n\t    //Ignore case where there is download attribute\n\t    if (element.getAttribute && typeof element.getAttribute('download') === 'string')\n\t      return false;\n\t\n\t    //In case you're trying to load the same page\n\t    if (Utils.cleanLink(href) == Utils.cleanLink(location.href))\n\t      return false;\n\t\n\t    if (element.classList.contains(this.ignoreClassLink))\n\t      return false;\n\t\n\t    return true;\n\t  },\n\t\n\t  /**\n\t   * Return a transition object\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @return {Barba.Transition} Transition object\n\t   */\n\t  getTransition: function() {\n\t    //User customizable\n\t    return HideShowTransition;\n\t  },\n\t\n\t  /**\n\t   * Method called after a 'popstate' or from .goTo()\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  onStateChange: function() {\n\t    var newUrl = this.getCurrentUrl();\n\t\n\t    if (this.transitionProgress)\n\t      this.forceGoTo(newUrl);\n\t\n\t    if (this.History.currentStatus().url === newUrl)\n\t      return false;\n\t\n\t    this.History.add(newUrl);\n\t\n\t    var newContainer = this.load(newUrl);\n\t    var transition = Object.create(this.getTransition());\n\t\n\t    this.transitionProgress = true;\n\t\n\t    Dispatcher.trigger('initStateChange',\n\t      this.History.currentStatus(),\n\t      this.History.prevStatus()\n\t    );\n\t\n\t    var transitionInstance = transition.init(\n\t      this.Dom.getContainer(),\n\t      newContainer\n\t    );\n\t\n\t    newContainer.then(\n\t      this.onNewContainerLoaded.bind(this)\n\t    );\n\t\n\t    transitionInstance.then(\n\t      this.onTransitionEnd.bind(this)\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Function called as soon the new container is ready\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   * @param {HTMLElement} container\n\t   */\n\t  onNewContainerLoaded: function(container) {\n\t    var currentStatus = this.History.currentStatus();\n\t    currentStatus.namespace = this.Dom.getNamespace(container);\n\t\n\t    Dispatcher.trigger('newPageReady',\n\t      this.History.currentStatus(),\n\t      this.History.prevStatus(),\n\t      container,\n\t      this.Dom.currentHTML\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Function called as soon the transition is finished\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  onTransitionEnd: function() {\n\t    this.transitionProgress = false;\n\t\n\t    Dispatcher.trigger('transitionCompleted',\n\t      this.History.currentStatus(),\n\t      this.History.prevStatus()\n\t    );\n\t  }\n\t};\n\t\n\tmodule.exports = Pjax;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BaseTransition = __webpack_require__(4);\n\t\n\t/**\n\t * Basic Transition object, wait for the new Container to be ready,\n\t * scroll top, and finish the transition (removing the old container and displaying the new one)\n\t *\n\t * @private\n\t * @namespace Barba.HideShowTransition\n\t * @augments Barba.BaseTransition\n\t */\n\tvar HideShowTransition = BaseTransition.extend({\n\t  start: function() {\n\t    this.newContainerLoading.then(this.finish.bind(this));\n\t  },\n\t\n\t  finish: function() {\n\t    document.body.scrollTop = 0;\n\t    this.done();\n\t  }\n\t});\n\t\n\tmodule.exports = HideShowTransition;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Object that is going to deal with DOM parsing/manipulation\n\t *\n\t * @namespace Barba.Pjax.Dom\n\t * @type {Object}\n\t */\n\tvar Dom = {\n\t  /**\n\t   * The name of the data attribute on the container\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  dataNamespace: 'namespace',\n\t\n\t  /**\n\t   * Id of the main wrapper\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  wrapperId: 'barba-wrapper',\n\t\n\t  /**\n\t   * Class name used to identify the containers\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  containerClass: 'barba-container',\n\t\n\t  /**\n\t   * Full HTML String of the current page.\n\t   * By default is the innerHTML of the initial loaded page.\n\t   *\n\t   * Each time a new page is loaded, the value is the response of the xhr call.\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   */\n\t  currentHTML: document.documentElement.innerHTML,\n\t\n\t  /**\n\t   * Parse the responseText obtained from the xhr call\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {String} responseText\n\t   * @return {HTMLElement}\n\t   */\n\t  parseResponse: function(responseText) {\n\t    this.currentHTML = responseText;\n\t\n\t    var wrapper = document.createElement('div');\n\t    wrapper.innerHTML = responseText;\n\t\n\t    var titleEl = wrapper.querySelector('title');\n\t\n\t    if (titleEl)\n\t      document.title = titleEl.textContent;\n\t\n\t    return this.getContainer(wrapper);\n\t  },\n\t\n\t  /**\n\t   * Get the main barba wrapper by the ID `wrapperId`\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @return {HTMLElement} element\n\t   */\n\t  getWrapper: function() {\n\t    var wrapper = document.getElementById(this.wrapperId);\n\t\n\t    if (!wrapper)\n\t      throw new Error('Barba.js: wrapper not found!');\n\t\n\t    return wrapper;\n\t  },\n\t\n\t  /**\n\t   * Get the container on the current DOM,\n\t   * or from an HTMLElement passed via argument\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   * @return {HTMLElement}\n\t   */\n\t  getContainer: function(element) {\n\t    if (!element)\n\t      element = document.body;\n\t\n\t    if (!element)\n\t      throw new Error('Barba.js: DOM not ready!');\n\t\n\t    var container = this.parseContainer(element);\n\t\n\t    if (container && container.jquery)\n\t      container = container[0];\n\t\n\t    if (!container)\n\t      throw new Error('Barba.js: no container found');\n\t\n\t    return container;\n\t  },\n\t\n\t  /**\n\t   * Get the namespace of the container\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   * @return {String}\n\t   */\n\t  getNamespace: function(element) {\n\t    if (element && element.dataset) {\n\t      return element.dataset[this.dataNamespace];\n\t    } else if (element) {\n\t      return element.getAttribute('data-' + this.dataNamespace);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Put the container on the page\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   */\n\t  putContainer: function(element) {\n\t    element.style.visibility = 'hidden';\n\t\n\t    var wrapper = this.getWrapper();\n\t    wrapper.appendChild(element);\n\t  },\n\t\n\t  /**\n\t   * Get container selector\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   * @return {HTMLElement} element\n\t   */\n\t  parseContainer: function(element) {\n\t    return element.querySelector('.' + this.containerClass);\n\t  }\n\t};\n\t\n\tmodule.exports = Dom;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\tvar Pjax = __webpack_require__(10);\n\t\n\t/**\n\t * Prefetch\n\t *\n\t * @namespace Barba.Prefetch\n\t * @type {Object}\n\t */\n\tvar Prefetch = {\n\t  /**\n\t   * Class name used to ignore prefetch on links\n\t   *\n\t   * @memberOf Barba.Prefetch\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  ignoreClassLink: 'no-barba-prefetch',\n\t\n\t  /**\n\t   * Init the event listener on mouseover and touchstart\n\t   * for the prefetch\n\t   *\n\t   * @memberOf Barba.Prefetch\n\t   */\n\t  init: function() {\n\t    if (!window.history.pushState) {\n\t      return false;\n\t    }\n\t\n\t    document.body.addEventListener('mouseover', this.onLinkEnter.bind(this));\n\t    document.body.addEventListener('touchstart', this.onLinkEnter.bind(this));\n\t  },\n\t\n\t  /**\n\t   * Callback for the mousehover/touchstart\n\t   *\n\t   * @memberOf Barba.Prefetch\n\t   * @private\n\t   * @param  {Object} evt\n\t   */\n\t  onLinkEnter: function(evt) {\n\t    var el = evt.target;\n\t\n\t    while (el && !Pjax.getHref(el)) {\n\t      el = el.parentNode;\n\t    }\n\t\n\t    if (!el || el.classList.contains(this.ignoreClassLink)) {\n\t      return;\n\t    }\n\t\n\t    var url = Pjax.getHref(el);\n\t\n\t    //Check if the link is elegible for Pjax\n\t    if (Pjax.preventCheck(evt, el) && !Pjax.Cache.get(url)) {\n\t      var xhr = Utils.xhr(url);\n\t      Pjax.Cache.set(url, xhr);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = Prefetch;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=barba.js.map","﻿import Barba from 'barba.js';\r\n\r\nconst FadeTransition = Barba.BaseTransition.extend({\r\n    start() {\r\n        return Promise\r\n            .all([this.newContainerLoading, this.fadeOut()])\r\n            .then(this.fadeIn.bind(this));\r\n    },\r\n\r\n    fadeOut() {\r\n        return $(this.oldContainer).animate({ opacity: 0 }).promise();\r\n    },\r\n\r\n    fadeIn() {\r\n        var _this = this;\r\n        var $el = $(this.newContainer);\r\n\r\n        $(this.oldContainer).hide();\r\n        document.body.scrollTop = 0;\r\n\r\n        $el.css({\r\n            visibility: 'visible',\r\n            opacity: 0\r\n        });\r\n\r\n        $el.animate({ opacity: 1 }, 400, function () {\r\n            $.material.init();\r\n            _this.done();\r\n        });\r\n    }\r\n});\r\nexport default FadeTransition;","﻿import Barba from 'barba.js';\r\nimport FadeTransition from './transitions/fade';\r\n\r\n\r\nexport default class BasePage {\r\n\r\n    constructor() {\r\n\r\n        this._url = Barba.Pjax.getCurrentUrl();\r\n    }\r\n\r\n    getTransition() {\r\n        return FadeTransition;\r\n    }\r\n\r\n    configure() {\r\n        Barba.Pjax.getTransition = () => this.getTransition();\r\n    }\r\n\r\n    init() {\r\n        this.configure();\r\n        Barba.Pjax.start();\r\n        this.onReady();\r\n\r\n        Barba.Dispatcher.on('newPageReady', (currentStatus, oldStatus, container) => {            \r\n            if (currentStatus.url == this._url)\r\n            { this.onReady(); }\r\n        });\r\n    }\r\n\r\n    onReady() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","﻿import BasePage from '../basePage';\r\n\r\nclass GenericPage extends BasePage {\r\n    constructor() {\r\n        super(...arguments);\r\n    }\r\n\r\n    onReady() {\r\n        \r\n    }\r\n}\r\nconst page = new GenericPage();\r\npage.init();"],"names":["this","FadeTransition","Barba","BaseTransition","extend","Promise","all","newContainerLoading","fadeOut","then","fadeIn","bind","$","oldContainer","animate","opacity","promise","_this","$el","newContainer","hide","body","scrollTop","css","material","init","done","BasePage","_url","Pjax","getCurrentUrl","getTransition","configure","start","onReady","Dispatcher","on","currentStatus","oldStatus","container","url","GenericPage","arguments","page"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}