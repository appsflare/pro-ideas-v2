{"version":3,"file":"index.bundle.js","sources":["Scripts/lib/bootstrap-datepicker.js","Scripts/lib/material.min.js","Scripts/lib/material-kit.js","node_modules/barba.js/dist/barba.js","Scripts/pages/common/index.js"],"sourcesContent":["/* =========================================================\r\n * bootstrap-datepicker.js \r\n * http://www.eyecon.ro/bootstrap-datepicker\r\n * =========================================================\r\n * Copyright 2012 Stefan Petre\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================= */\r\n var color = '';\r\n!function( $ ) {\r\n\t\r\n\t// Picker object\r\n\r\n\tvar Datepicker = function(element, options){\r\n\t\tthis.element = $(element);\r\n\t\tthis.format = DPGlobal.parseFormat(options.format||this.element.data('date-format')||'mm/dd/yyyy');\r\n\t\tthis.picker = $(DPGlobal.template)\r\n\t\t\t\t\t\t\t.appendTo('body')\r\n\t\t\t\t\t\t\t.on({\r\n\t\t\t\t\t\t\t\tclick: $.proxy(this.click, this)//,\r\n\t\t\t\t\t\t\t\t//mousedown: $.proxy(this.mousedown, this)\r\n\t\t\t\t\t\t\t});\r\n\t\tthis.isInput = this.element.is('input');\r\n\t\tthis.component = this.element.is('.date') ? this.element.find('.add-on') : false;\r\n\t\t\r\n\t\tif (this.isInput) {\r\n\t\t\tthis.element.on({\r\n\t\t\t\tfocus: $.proxy(this.show, this),\r\n\t\t\t\t//blur: $.proxy(this.hide, this),\r\n\t\t\t\tkeyup: $.proxy(this.update, this)\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tif (this.component){\r\n\t\t\t\tthis.component.on('click', $.proxy(this.show, this));\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.on('click', $.proxy(this.show, this));\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tthis.minViewMode = options.minViewMode||this.element.data('date-minviewmode')||0;\r\n\t\tif (typeof this.minViewMode === 'string') {\r\n\t\t\tswitch (this.minViewMode) {\r\n\t\t\t\tcase 'months':\r\n\t\t\t\t\tthis.minViewMode = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'years':\r\n\t\t\t\t\tthis.minViewMode = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.minViewMode = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.viewMode = options.viewMode||this.element.data('date-viewmode')||0;\r\n\t\tif (typeof this.viewMode === 'string') {\r\n\t\t\tswitch (this.viewMode) {\r\n\t\t\t\tcase 'months':\r\n\t\t\t\t\tthis.viewMode = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'years':\r\n\t\t\t\t\tthis.viewMode = 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.viewMode = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.color = options.color||'azure';\r\n\t\tthis.startViewMode = this.viewMode;\r\n\t\tthis.weekStart = options.weekStart||this.element.data('date-weekstart')||0;\r\n\t\tthis.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;\r\n\t\tthis.onRender = options.onRender;\r\n\t\tthis.fillDow();\r\n\t\tthis.fillMonths();\r\n\t\tthis.update();\r\n\t\tthis.showMode();\r\n\t\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tDatepicker.prototype = {\r\n\t\tconstructor: Datepicker,\r\n\t\t\r\n\t\tshow: function(e) {\r\n\t\t    var datepicker = this.picker;\r\n\r\n\t\t\tthis.picker.show();\r\n\t\t\tthis.height = this.component ? this.component.outerHeight() : this.element.outerHeight();\r\n\t\t\tthis.place();\r\n\t\t\t$(window).on('resize', $.proxy(this.place, this));\r\n\t\t\tif (e ) {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t}\r\n\t\t\tvar that = this;\r\n\t\t\t$(document).on('mousedown', function(ev){\r\n\t\t\t\tif ($(ev.target).closest('.datepicker').length == 0) {\r\n\t\t\t\t\tthat.hide();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.element.trigger({\r\n\t\t\t\ttype: 'show',\r\n\t\t\t\tdate: this.date\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n    \t\t\tdatepicker.addClass('open');\r\n\t\t\t}, 170);\r\n\t\t},\r\n\t\t\r\n\t\thide: function(){\r\n\t\t\tvar datepicker = this.picker;\r\n\t\t\tdatepicker.removeClass('open');\r\n\t\t\t\r\n\t\t\tsetTimeout(function(){\r\n    \t\t\tthis.picker.hide();\r\n\t\t\t}, 500);\r\n\t\t\t\r\n\t\t\t$(window).off('resize', this.place);\r\n\t\t\tthis.viewMode = this.startViewMode;\r\n\t\t\tthis.showMode();\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t\t$(document).off('mousedown', this.hide);\r\n\t\t\t}\r\n\t\t\t//this.set();\r\n\t\t\tthis.element.trigger({\r\n\t\t\t\ttype: 'hide',\r\n\t\t\t\tdate: this.date\r\n\t\t\t});\r\n\t\t\t\r\n    \t},\r\n\t\t\r\n\t\tset: function() {\r\n\t\t\tvar formated = DPGlobal.formatDate(this.date, this.format);\r\n\t\t\tif (!this.isInput) {\r\n\t\t\t\tif (this.component){\r\n\t\t\t\t\tthis.element.find('input').prop('value', formated);\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.data('date', formated);\r\n\t\t\t} else {\r\n\t\t\t\tthis.element.prop('value', formated);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tsetValue: function(newDate) {\r\n\t\t\tif (typeof newDate === 'string') {\r\n\t\t\t\tthis.date = DPGlobal.parseDate(newDate, this.format);\r\n\t\t\t} else {\r\n\t\t\t\tthis.date = new Date(newDate);\r\n\t\t\t}\r\n\t\t\tthis.set();\r\n\t\t\tthis.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);\r\n\t\t\tthis.fill();\r\n\t\t},\r\n\t\t\r\n\t\tplace: function(){\r\n\t\t\tvar offset = this.component ? this.component.offset() : this.element.offset();\r\n\t\t\tthis.picker.css({\r\n\t\t\t\ttop: offset.top + this.height,\r\n\t\t\t\tleft: offset.left\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tupdate: function(newDate){\r\n\t\t\tthis.date = DPGlobal.parseDate(\r\n\t\t\t\ttypeof newDate === 'string' ? newDate : (this.isInput ? this.element.prop('value') : this.element.data('date')),\r\n\t\t\t\tthis.format\r\n\t\t\t);\r\n\t\t\tthis.viewDate = new Date(this.date.getFullYear(), this.date.getMonth(), 1, 0, 0, 0, 0);\r\n\t\t\tthis.fill();\r\n\t\t},\r\n\t\t\r\n\t\tfillDow: function(){\r\n\t\t\tvar dowCnt = this.weekStart;\r\n\t\t\tvar html = '<tr>';\r\n\t\t\twhile (dowCnt < this.weekStart + 7) {\r\n\t\t\t\thtml += '<th class=\"dow\">'+DPGlobal.dates.daysMin[(dowCnt++)%7]+'</th>';\r\n\t\t\t}\r\n\t\t\thtml += '</tr>';\r\n\t\t\tthis.picker.find('.datepicker-days thead').append(html);\r\n\t\t},\r\n\t\t\r\n\t\tfillMonths: function(){\r\n\t\t\tvar html = '';\r\n\t\t\tvar i = 0\r\n\t\t\twhile (i < 12) {\r\n\t\t\t\thtml += '<span class=\"month\">'+DPGlobal.dates.monthsShort[i++]+'</span>';\r\n\t\t\t}\r\n\t\t\tthis.picker.find('.datepicker-months td').append(html);\r\n\t\t},\r\n\t\t\r\n\t\tfill: function() {\r\n\t\t\tvar d = new Date(this.viewDate),\r\n\t\t\t\tyear = d.getFullYear(),\r\n\t\t\t\tmonth = d.getMonth(),\r\n\t\t\t\tcurrentDate = this.date.valueOf();\r\n\t\t\tthis.picker.find('.datepicker-days th:eq(1)')\r\n\t\t\t\t\t\t.text(DPGlobal.dates.months[month]+' '+year);\r\n\t\t\tvar prevMonth = new Date(year, month-1, 28,0,0,0,0),\r\n\t\t\t\tday = DPGlobal.getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());\r\n\t\t\tprevMonth.setDate(day);\r\n\t\t\tprevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7)%7);\r\n\t\t\tvar nextMonth = new Date(prevMonth);\r\n\t\t\tnextMonth.setDate(nextMonth.getDate() + 42);\r\n\t\t\tnextMonth = nextMonth.valueOf();\r\n\t\t\tvar html = [];\r\n\t\t\tvar clsName,\r\n\t\t\t\tprevY,\r\n\t\t\t\tprevM;\r\n\t\t\twhile(prevMonth.valueOf() < nextMonth) {\r\n\t\t\t\tif (prevMonth.getDay() === this.weekStart) {\r\n\t\t\t\t\thtml.push('<tr>');\r\n\t\t\t\t}\r\n\t\t\t\tclsName = this.onRender(prevMonth);\r\n\t\t\t\tprevY = prevMonth.getFullYear();\r\n\t\t\t\tprevM = prevMonth.getMonth();\r\n\t\t\t\tif ((prevM < month &&  prevY === year) ||  prevY < year) {\r\n\t\t\t\t\tclsName += ' old';\r\n\t\t\t\t} else if ((prevM > month && prevY === year) || prevY > year) {\r\n\t\t\t\t\tclsName += ' new';\r\n\t\t\t\t}\r\n\t\t\t\tif (prevMonth.valueOf() === currentDate) {\r\n\t\t\t\t\tclsName += ' active ' + this.color;\r\n\t\t\t\t}\r\n\t\t\t\thtml.push('<td class=\"day '+clsName+'\"><p>'+prevMonth.getDate() + '</p></td>');\r\n\t\t\t\tif (prevMonth.getDay() === this.weekEnd) {\r\n\t\t\t\t\thtml.push('</tr>');\r\n\t\t\t\t}\r\n\t\t\t\tprevMonth.setDate(prevMonth.getDate()+1);\r\n\t\t\t}\r\n\t\t\tthis.picker.find('.datepicker-days tbody').empty().append(html.join(''));\r\n\t\t\tvar currentYear = this.date.getFullYear();\r\n\t\t\t\r\n\t\t\tvar months = this.picker.find('.datepicker-months')\r\n\t\t\t\t\t\t.find('th:eq(1)')\r\n\t\t\t\t\t\t\t.text(year)\r\n\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t.find('span').removeClass('active');\r\n\t\t\tif (currentYear === year) {\r\n\t\t\t\tmonths.eq(this.date.getMonth()).addClass('active').addClass(this.color);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\thtml = '';\r\n\t\t\tyear = parseInt(year/10, 10) * 10;\r\n\t\t\tvar yearCont = this.picker.find('.datepicker-years')\r\n\t\t\t\t\t\t\t\t.find('th:eq(1)')\r\n\t\t\t\t\t\t\t\t\t.text(year + '-' + (year + 9))\r\n\t\t\t\t\t\t\t\t\t.end()\r\n\t\t\t\t\t\t\t\t.find('td');\r\n\t\t\tyear -= 1;\r\n\t\t\tfor (var i = -1; i < 11; i++) {\r\n\t\t\t\thtml += '<span class=\"year'+(i === -1 || i === 10 ? ' old' : '')+(currentYear === year ? ' active ' : '')+ this.color + '\">'+year+'</span>';\r\n\t\t\t\tyear += 1;\r\n\t\t\t}\r\n\t\t\tyearCont.html(html);\r\n\t\t},\r\n\t\t\r\n\t\tclick: function(e) {\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t\tvar target = $(e.target).closest('span, td, th');\r\n\t\t\tif (target.length === 1) {\r\n\t\t\t\tswitch(target[0].nodeName.toLowerCase()) {\r\n\t\t\t\t\tcase 'th':\r\n\t\t\t\t\t\tswitch(target[0].className) {\r\n\t\t\t\t\t\t\tcase 'switch-datepicker':\r\n\t\t\t\t\t\t\t\tthis.showMode(1);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tcase 'prev':\r\n\t\t\t\t\t\t\tcase 'next':\r\n\t\t\t\t\t\t\t\tthis.viewDate['set'+DPGlobal.modes[this.viewMode].navFnc].call(\r\n\t\t\t\t\t\t\t\t\tthis.viewDate,\r\n\t\t\t\t\t\t\t\t\tthis.viewDate['get'+DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate) + \r\n\t\t\t\t\t\t\t\t\tDPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1)\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'span':\r\n\t\t\t\t\t\tif (target.is('.month')) {\r\n\t\t\t\t\t\t\tvar month = target.parent().find('span').index(target);\r\n\t\t\t\t\t\t\tthis.viewDate.setMonth(month);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar year = parseInt(target.text(), 10)||0;\r\n\t\t\t\t\t\t\tthis.viewDate.setFullYear(year);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.viewMode !== 0) {\r\n\t\t\t\t\t\t\tthis.date = new Date(this.viewDate);\r\n\t\t\t\t\t\t\tthis.element.trigger({\r\n\t\t\t\t\t\t\t\ttype: 'changeDate',\r\n\t\t\t\t\t\t\t\tdate: this.date,\r\n\t\t\t\t\t\t\t\tviewMode: DPGlobal.modes[this.viewMode].clsName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.showMode(-1);\r\n\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'td':\r\n\t\t\t\t\t\tif (target.is('.day') && !target.is('.disabled')){\r\n\t\t\t\t\t\t\tvar day = parseInt(target.text(), 10)||1;\r\n\t\t\t\t\t\t\tvar month = this.viewDate.getMonth();\r\n\t\t\t\t\t\t\tif (target.is('.old')) {\r\n\t\t\t\t\t\t\t\tmonth -= 1;\r\n\t\t\t\t\t\t\t} else if (target.is('.new')) {\r\n\t\t\t\t\t\t\t\tmonth += 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar year = this.viewDate.getFullYear();\r\n\t\t\t\t\t\t\tthis.date = new Date(year, month, day,0,0,0,0);\r\n\t\t\t\t\t\t\tthis.viewDate = new Date(year, month, Math.min(28, day),0,0,0,0);\r\n\t\t\t\t\t\t\tthis.fill();\r\n\t\t\t\t\t\t\tthis.set();\r\n\t\t\t\t\t\t\tthis.element.trigger({\r\n\t\t\t\t\t\t\t\ttype: 'changeDate',\r\n\t\t\t\t\t\t\t\tdate: this.date,\r\n\t\t\t\t\t\t\t\tviewMode: DPGlobal.modes[this.viewMode].clsName\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tmousedown: function(e){\r\n\t\t\te.stopPropagation();\r\n\t\t\te.preventDefault();\r\n\t\t},\r\n\t\t\r\n\t\tshowMode: function(dir) {\r\n\t\t\tif (dir) {\r\n\t\t\t\tthis.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));\r\n\t\t\t}\r\n\t\t\tthis.picker.find('>div').hide().filter('.datepicker-'+DPGlobal.modes[this.viewMode].clsName).show();\r\n\t\t}\r\n\t};\r\n\t\r\n\t$.fn.datepicker = function ( option, val ) {\r\n\t\treturn this.each(function () {\r\n\t\t\tvar $this = $(this),\r\n\t\t\t\tdata = $this.data('datepicker'),\r\n\t\t\t\toptions = typeof option === 'object' && option;\r\n\t\t\tif (!data) {\r\n\t\t\t\t$this.data('datepicker', (data = new Datepicker(this, $.extend({}, $.fn.datepicker.defaults,options))));\r\n\t\t\t}\r\n\t\t\tif (typeof option === 'string') data[option](val);\r\n\t\t});\r\n\t};\r\n\r\n\t$.fn.datepicker.defaults = {\r\n\t\tonRender: function(date) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t};\r\n\t$.fn.datepicker.Constructor = Datepicker;\r\n\t\r\n\tvar DPGlobal = {\r\n\t\tmodes: [\r\n\t\t\t{\r\n\t\t\t\tclsName: 'days',\r\n\t\t\t\tnavFnc: 'Month',\r\n\t\t\t\tnavStep: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclsName: 'months',\r\n\t\t\t\tnavFnc: 'FullYear',\r\n\t\t\t\tnavStep: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tclsName: 'years',\r\n\t\t\t\tnavFnc: 'FullYear',\r\n\t\t\t\tnavStep: 10\r\n\t\t}],\r\n\t\tdates:{\r\n\t\t\tdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n\t\t\tdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n\t\t\tdaysMin: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\r\n\t\t\tmonths: [\"JAN.\", \"FEB.\", \"MAR.\", \"APR.\", \"MAY\", \"JUN.\", \"JUL.\", \"AUG.\", \"SEPT.\", \"OCT.\", \"NOV.\", \"DEC.\"],\r\n\t\t\tmonthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n\t\t},\r\n\t\tisLeapYear: function (year) {\r\n\t\t\treturn (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))\r\n\t\t},\r\n\t\tgetDaysInMonth: function (year, month) {\r\n\t\t\treturn [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]\r\n\t\t},\r\n\t\tparseFormat: function(format){\r\n\t\t\tvar separator = format.match(/[.\\/\\-\\s].*?/),\r\n\t\t\t\tparts = format.split(/\\W+/);\r\n\t\t\tif (!separator || !parts || parts.length === 0){\r\n\t\t\t\tthrow new Error(\"Invalid date format.\");\r\n\t\t\t}\r\n\t\t\treturn {separator: separator, parts: parts};\r\n\t\t},\r\n\t\tparseDate: function(date, format) {\r\n\t\t\tvar parts = date.split(format.separator),\r\n\t\t\t\tdate = new Date(),\r\n\t\t\t\tval;\r\n\t\t\tdate.setHours(0);\r\n\t\t\tdate.setMinutes(0);\r\n\t\t\tdate.setSeconds(0);\r\n\t\t\tdate.setMilliseconds(0);\r\n\t\t\tif (parts.length === format.parts.length) {\r\n\t\t\t\tvar year = date.getFullYear(), day = date.getDate(), month = date.getMonth();\r\n\t\t\t\tfor (var i=0, cnt = format.parts.length; i < cnt; i++) {\r\n\t\t\t\t\tval = parseInt(parts[i], 10)||1;\r\n\t\t\t\t\tswitch(format.parts[i]) {\r\n\t\t\t\t\t\tcase 'dd':\r\n\t\t\t\t\t\tcase 'd':\r\n\t\t\t\t\t\t\tday = val;\r\n\t\t\t\t\t\t\tdate.setDate(val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mm':\r\n\t\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\t\tmonth = val - 1;\r\n\t\t\t\t\t\t\tdate.setMonth(val - 1);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'yy':\r\n\t\t\t\t\t\t\tyear = 2000 + val;\r\n\t\t\t\t\t\t\tdate.setFullYear(2000 + val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'yyyy':\r\n\t\t\t\t\t\t\tyear = val;\r\n\t\t\t\t\t\t\tdate.setFullYear(val);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdate = new Date(year, month, day, 0 ,0 ,0);\r\n\t\t\t}\r\n\t\t\treturn date;\r\n\t\t},\r\n\t\tformatDate: function(date, format){\r\n\t\t\tvar val = {\r\n\t\t\t\td: date.getDate(),\r\n\t\t\t\tm: date.getMonth() + 1,\r\n\t\t\t\tyy: date.getFullYear().toString().substring(2),\r\n\t\t\t\tyyyy: date.getFullYear()\r\n\t\t\t};\r\n\t\t\tval.dd = (val.d < 10 ? '0' : '') + val.d;\r\n\t\t\tval.mm = (val.m < 10 ? '0' : '') + val.m;\r\n\t\t\tvar date = [];\r\n\t\t\tfor (var i=0, cnt = format.parts.length; i < cnt; i++) {\r\n\t\t\t\tdate.push(val[format.parts[i]]);\r\n\t\t\t}\r\n\t\t\treturn date.join(format.separator);\r\n\t\t},\r\n\t\theadTemplate: '<thead>'+\r\n\t\t\t\t\t\t\t'<tr>'+\r\n\t\t\t\t\t\t\t\t'<th class=\"prev\"><p>&lsaquo;</p></th>'+\r\n\t\t\t\t\t\t\t\t'<th colspan=\"5\" class=\"switch-datepicker\"></th>'+\r\n\t\t\t\t\t\t\t\t'<th class=\"next\"><p>&rsaquo;</p></th>'+\r\n\t\t\t\t\t\t\t'</tr>'+\r\n\t\t\t\t\t\t'</thead>',\r\n\t\tcontTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>'\r\n\t};\r\n\t\r\n\tDPGlobal.template = '<div class=\"datepicker dropdown-menu\">'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-days\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\" table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\t'<tbody></tbody>'+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-months\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t\t'<div class=\"datepicker-years\">'+\r\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\r\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\r\n\t\t\t\t\t\t\t\t'</table>'+\r\n\t\t\t\t\t\t\t'</div>'+\r\n\t\t\t\t\t\t'</div>';\r\n\r\n}( window.jQuery );","!function(t){function o(t){return\"undefined\"==typeof t.which?!0:\"number\"==typeof t.which&&t.which>0?!t.ctrlKey&&!t.metaKey&&!t.altKey&&8!=t.which&&9!=t.which&&13!=t.which&&16!=t.which&&17!=t.which&&20!=t.which&&27!=t.which:!1}function i(o){var i=t(o);i.prop(\"disabled\")||i.closest(\".form-group\").addClass(\"is-focused\")}function n(o){o.closest(\"label\").hover(function(){var o=t(this).find(\"input\");o.prop(\"disabled\")||i(o)},function(){e(t(this).find(\"input\"))})}function e(o){t(o).closest(\".form-group\").removeClass(\"is-focused\")}t.expr[\":\"].notmdproc=function(o){return t(o).data(\"mdproc\")?!1:!0},t.material={options:{validate:!0,input:!0,ripples:!0,checkbox:!0,togglebutton:!0,radio:!0,arrive:!0,autofill:!1,withRipples:[\".btn:not(.btn-link)\",\".card-image\",\".navbar a:not(.withoutripple)\",\".footer a:not(.withoutripple)\",\".dropdown-menu a\",\".nav-tabs a:not(.withoutripple)\",\".withripple\",\".pagination li:not(.active):not(.disabled) a:not(.withoutripple)\"].join(\",\"),inputElements:\"input.form-control, textarea.form-control, select.form-control\",checkboxElements:\".checkbox > label > input[type=checkbox]\",togglebuttonElements:\".togglebutton > label > input[type=checkbox]\",radioElements:\".radio > label > input[type=radio]\"},checkbox:function(o){var i=t(o?o:this.options.checkboxElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='checkbox-material'><span class='check'></span></span>\");n(i)},togglebutton:function(o){var i=t(o?o:this.options.togglebuttonElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='toggle'></span>\");n(i)},radio:function(o){var i=t(o?o:this.options.radioElements).filter(\":notmdproc\").data(\"mdproc\",!0).after(\"<span class='circle'></span><span class='check'></span>\");n(i)},input:function(o){t(o?o:this.options.inputElements).filter(\":notmdproc\").data(\"mdproc\",!0).each(function(){var o=t(this),i=o.closest(\".form-group\");0===i.length&&(o.wrap(\"<div class='form-group'></div>\"),i=o.closest(\".form-group\")),o.attr(\"data-hint\")&&(o.after(\"<p class='help-block'>\"+o.attr(\"data-hint\")+\"</p>\"),o.removeAttr(\"data-hint\"));var n={\"input-lg\":\"form-group-lg\",\"input-sm\":\"form-group-sm\"};if(t.each(n,function(t,n){o.hasClass(t)&&(o.removeClass(t),i.addClass(n))}),o.hasClass(\"floating-label\")){var e=o.attr(\"placeholder\");o.attr(\"placeholder\",null).removeClass(\"floating-label\");var a=o.attr(\"id\"),r=\"\";a&&(r=\"for='\"+a+\"'\"),i.addClass(\"label-floating\"),o.after(\"<label \"+r+\"class='control-label'>\"+e+\"</label>\")}(null===o.val()||\"undefined\"==o.val()||\"\"===o.val())&&i.addClass(\"is-empty\"),i.append(\"<span class='material-input'></span>\"),i.find(\"input[type=file]\").length>0&&i.addClass(\"is-fileinput\")})},attachInputEventHandlers:function(){var n=this.options.validate;t(document).on(\"change\",\".checkbox input[type=checkbox]\",function(){t(this).blur()}).on(\"keydown paste\",\".form-control\",function(i){o(i)&&t(this).closest(\".form-group\").removeClass(\"is-empty\")}).on(\"keyup change\",\".form-control\",function(){var o=t(this),i=o.closest(\".form-group\"),e=\"undefined\"==typeof o[0].checkValidity||o[0].checkValidity();\"\"===o.val()?i.addClass(\"is-empty\"):i.removeClass(\"is-empty\"),n&&(e?i.removeClass(\"has-error\"):i.addClass(\"has-error\"))}).on(\"focus\",\".form-control, .form-group.is-fileinput\",function(){i(this)}).on(\"blur\",\".form-control, .form-group.is-fileinput\",function(){e(this)}).on(\"change\",\".form-group input\",function(){var o=t(this);if(\"file\"!=o.attr(\"type\")){var i=o.closest(\".form-group\"),n=o.val();n?i.removeClass(\"is-empty\"):i.addClass(\"is-empty\")}}).on(\"change\",\".form-group.is-fileinput input[type='file']\",function(){var o=t(this),i=o.closest(\".form-group\"),n=\"\";t.each(this.files,function(t,o){n+=o.name+\", \"}),n=n.substring(0,n.length-2),n?i.removeClass(\"is-empty\"):i.addClass(\"is-empty\"),i.find(\"input.form-control[readonly]\").val(n)})},ripples:function(o){t(o?o:this.options.withRipples).ripples()},autofill:function(){var o=setInterval(function(){t(\"input[type!=checkbox]\").each(function(){var o=t(this);o.val()&&o.val()!==o.attr(\"value\")&&o.trigger(\"change\")})},100);setTimeout(function(){clearInterval(o)},1e4)},attachAutofillEventHandlers:function(){var o;t(document).on(\"focus\",\"input\",function(){var i=t(this).parents(\"form\").find(\"input\").not(\"[type=file]\");o=setInterval(function(){i.each(function(){var o=t(this);o.val()!==o.attr(\"value\")&&o.trigger(\"change\")})},100)}).on(\"blur\",\".form-group input\",function(){clearInterval(o)})},init:function(o){this.options=t.extend({},this.options,o);var i=t(document);t.fn.ripples&&this.options.ripples&&this.ripples(),this.options.input&&(this.input(),this.attachInputEventHandlers()),this.options.checkbox&&this.checkbox(),this.options.togglebutton&&this.togglebutton(),this.options.radio&&this.radio(),this.options.autofill&&(this.autofill(),this.attachAutofillEventHandlers()),document.arrive&&this.options.arrive&&(t.fn.ripples&&this.options.ripples&&i.arrive(this.options.withRipples,function(){t.material.ripples(t(this))}),this.options.input&&i.arrive(this.options.inputElements,function(){t.material.input(t(this))}),this.options.checkbox&&i.arrive(this.options.checkboxElements,function(){t.material.checkbox(t(this))}),this.options.radio&&i.arrive(this.options.radioElements,function(){t.material.radio(t(this))}),this.options.togglebutton&&i.arrive(this.options.togglebuttonElements,function(){t.material.togglebutton(t(this))}))}}}(jQuery),function(t,o,i,n){\"use strict\";function e(o,i){r=this,this.element=t(o),this.options=t.extend({},s,i),this._defaults=s,this._name=a,this.init()}var a=\"ripples\",r=null,s={};e.prototype.init=function(){var i=this.element;i.on(\"mousedown touchstart\",function(n){if(!r.isTouch()||\"mousedown\"!==n.type){i.find(\".ripple-container\").length||i.append('<div class=\"ripple-container\"></div>');var e=i.children(\".ripple-container\"),a=r.getRelY(e,n),s=r.getRelX(e,n);if(a||s){var l=r.getRipplesColor(i),p=t(\"<div></div>\");p.addClass(\"ripple\").css({left:s,top:a,\"background-color\":l}),e.append(p),function(){return o.getComputedStyle(p[0]).opacity}(),r.rippleOn(i,p),setTimeout(function(){r.rippleEnd(p)},500),i.on(\"mouseup mouseleave touchend\",function(){p.data(\"mousedown\",\"off\"),\"off\"===p.data(\"animating\")&&r.rippleOut(p)})}}})},e.prototype.getNewSize=function(t,o){return Math.max(t.outerWidth(),t.outerHeight())/o.outerWidth()*2.5},e.prototype.getRelX=function(t,o){var i=t.offset();return r.isTouch()?(o=o.originalEvent,1===o.touches.length?o.touches[0].pageX-i.left:!1):o.pageX-i.left},e.prototype.getRelY=function(t,o){var i=t.offset();return r.isTouch()?(o=o.originalEvent,1===o.touches.length?o.touches[0].pageY-i.top:!1):o.pageY-i.top},e.prototype.getRipplesColor=function(t){var i=t.data(\"ripple-color\")?t.data(\"ripple-color\"):o.getComputedStyle(t[0]).color;return i},e.prototype.hasTransitionSupport=function(){var t=i.body||i.documentElement,o=t.style,e=o.transition!==n||o.WebkitTransition!==n||o.MozTransition!==n||o.MsTransition!==n||o.OTransition!==n;return e},e.prototype.isTouch=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},e.prototype.rippleEnd=function(t){t.data(\"animating\",\"off\"),\"off\"===t.data(\"mousedown\")&&r.rippleOut(t)},e.prototype.rippleOut=function(t){t.off(),r.hasTransitionSupport()?t.addClass(\"ripple-out\"):t.animate({opacity:0},100,function(){t.trigger(\"transitionend\")}),t.on(\"transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd\",function(){t.remove()})},e.prototype.rippleOn=function(t,o){var i=r.getNewSize(t,o);r.hasTransitionSupport()?o.css({\"-ms-transform\":\"scale(\"+i+\")\",\"-moz-transform\":\"scale(\"+i+\")\",\"-webkit-transform\":\"scale(\"+i+\")\",transform:\"scale(\"+i+\")\"}).addClass(\"ripple-on\").data(\"animating\",\"on\").data(\"mousedown\",\"on\"):o.animate({width:2*Math.max(t.outerWidth(),t.outerHeight()),height:2*Math.max(t.outerWidth(),t.outerHeight()),\"margin-left\":-1*Math.max(t.outerWidth(),t.outerHeight()),\"margin-top\":-1*Math.max(t.outerWidth(),t.outerHeight()),opacity:.2},500,function(){o.trigger(\"transitionend\")})},t.fn.ripples=function(o){return this.each(function(){t.data(this,\"plugin_\"+a)||t.data(this,\"plugin_\"+a,new e(this,o))})}}(jQuery,window,document);\r\n","/*!\r\n    \r\n =========================================================\r\n * Material Kit - v1.1.1.0\r\n =========================================================\r\n \r\n * Product Page: http://www.creative-tim.com/product/material-kit\r\n * Copyright 2017 Creative Tim (http://www.creative-tim.com)\r\n * Licensed under MIT (https://github.com/timcreative/material-kit/blob/master/LICENSE.md)\r\n \r\n =========================================================\r\n \r\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n \r\n */\r\n\r\nvar transparent = true;\r\n\r\nvar transparentDemo = true;\r\nvar fixedTop = false;\r\n\r\nvar navbar_initialized = false;\r\n\r\n$(document).ready(function(){\r\n\r\n    // Init Material scripts for buttons ripples, inputs animations etc, more info on the next link https://github.com/FezVrasta/bootstrap-material-design#materialjs\r\n    $.material.init();\r\n\r\n    //  Activate the Tooltips\r\n    $('[data-toggle=\"tooltip\"], [rel=\"tooltip\"]').tooltip();\r\n\r\n    // Activate Datepicker\r\n    if($('.datepicker').length != 0){\r\n        $('.datepicker').datepicker({\r\n             weekStart:1\r\n        });\r\n    }\r\n\r\n    // Check if we have the class \"navbar-color-on-scroll\" then add the function to remove the class \"navbar-transparent\" so it will transform to a plain color.\r\n    if($('.navbar-color-on-scroll').length != 0){\r\n        $(window).on('scroll', materialKit.checkScrollForTransparentNavbar)\r\n    }\r\n\r\n    // Activate Popovers\r\n    $('[data-toggle=\"popover\"]').popover();\r\n\r\n    // Active Carousel\r\n\t$('.carousel').carousel({\r\n      interval: 400000\r\n    });\r\n\r\n});\r\n\r\nvar materialKit = {\r\n    misc:{\r\n        navbar_menu_visible: 0\r\n    },\r\n\r\n    checkScrollForTransparentNavbar: debounce(function() {\r\n            if($(document).scrollTop() > 260 ) {\r\n                if(transparent) {\r\n                    transparent = false;\r\n                    $('.navbar-color-on-scroll').removeClass('navbar-transparent');\r\n                }\r\n            } else {\r\n                if( !transparent ) {\r\n                    transparent = true;\r\n                    $('.navbar-color-on-scroll').addClass('navbar-transparent');\r\n                }\r\n            }\r\n    }, 17),\r\n\r\n    initSliders: function(){\r\n        // Sliders for demo purpose\r\n        $('#sliderRegular').noUiSlider({\r\n            start: 40,\r\n            connect: \"lower\",\r\n            range: {\r\n                min: 0,\r\n                max: 100\r\n            }\r\n        });\r\n\r\n        $('#sliderDouble').noUiSlider({\r\n            start: [20, 60] ,\r\n            connect: true,\r\n            range: {\r\n                min: 0,\r\n                max: 100\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nvar big_image;\r\n\r\nvar materialKitDemo = {\r\n    checkScrollForParallax: debounce(function(){\r\n        var current_scroll = $(this).scrollTop();\r\n\r\n        oVal = ($(window).scrollTop() / 3);\r\n        big_image.css({\r\n            'transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-webkit-transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-ms-transform':'translate3d(0,' + oVal +'px,0)',\r\n            '-o-transform':'translate3d(0,' + oVal +'px,0)'\r\n        });\r\n\r\n    }, 6)\r\n\r\n}\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\n\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t}, wait);\r\n\t\tif (immediate && !timeout) func.apply(context, args);\r\n\t};\r\n};\r\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Barba\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Barba\"] = factory();\n\telse\n\t\troot[\"Barba\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"http://localhost:8080/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//Promise polyfill https://github.com/taylorhakes/promise-polyfill\n\t\n\tif (typeof Promise !== 'function') {\n\t window.Promise = __webpack_require__(1);\n\t}\n\t\n\tvar Barba = {\n\t  version: '1.0.0',\n\t  BaseTransition: __webpack_require__(4),\n\t  BaseView: __webpack_require__(6),\n\t  BaseCache: __webpack_require__(8),\n\t  Dispatcher: __webpack_require__(7),\n\t  HistoryManager: __webpack_require__(9),\n\t  Pjax: __webpack_require__(10),\n\t  Prefetch: __webpack_require__(13),\n\t  Utils: __webpack_require__(5)\n\t};\n\t\n\tmodule.exports = Barba;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {(function (root) {\n\t\n\t  // Store setTimeout reference so promise-polyfill will be unaffected by\n\t  // other code modifying setTimeout (like sinon.useFakeTimers())\n\t  var setTimeoutFunc = setTimeout;\n\t\n\t  function noop() {\n\t  }\n\t\n\t  // Use polyfill for setImmediate for performance gains\n\t  var asap = (typeof setImmediate === 'function' && setImmediate) ||\n\t    function (fn) {\n\t      setTimeoutFunc(fn, 0);\n\t    };\n\t\n\t  var onUnhandledRejection = function onUnhandledRejection(err) {\n\t    if (typeof console !== 'undefined' && console) {\n\t      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t    }\n\t  };\n\t\n\t  // Polyfill for Function.prototype.bind\n\t  function bind(fn, thisArg) {\n\t    return function () {\n\t      fn.apply(thisArg, arguments);\n\t    };\n\t  }\n\t\n\t  function Promise(fn) {\n\t    if (typeof this !== 'object') throw new TypeError('Promises must be constructed via new');\n\t    if (typeof fn !== 'function') throw new TypeError('not a function');\n\t    this._state = 0;\n\t    this._handled = false;\n\t    this._value = undefined;\n\t    this._deferreds = [];\n\t\n\t    doResolve(fn, this);\n\t  }\n\t\n\t  function handle(self, deferred) {\n\t    while (self._state === 3) {\n\t      self = self._value;\n\t    }\n\t    if (self._state === 0) {\n\t      self._deferreds.push(deferred);\n\t      return;\n\t    }\n\t    self._handled = true;\n\t    asap(function () {\n\t      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t      if (cb === null) {\n\t        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t        return;\n\t      }\n\t      var ret;\n\t      try {\n\t        ret = cb(self._value);\n\t      } catch (e) {\n\t        reject(deferred.promise, e);\n\t        return;\n\t      }\n\t      resolve(deferred.promise, ret);\n\t    });\n\t  }\n\t\n\t  function resolve(self, newValue) {\n\t    try {\n\t      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');\n\t      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {\n\t        var then = newValue.then;\n\t        if (newValue instanceof Promise) {\n\t          self._state = 3;\n\t          self._value = newValue;\n\t          finale(self);\n\t          return;\n\t        } else if (typeof then === 'function') {\n\t          doResolve(bind(then, newValue), self);\n\t          return;\n\t        }\n\t      }\n\t      self._state = 1;\n\t      self._value = newValue;\n\t      finale(self);\n\t    } catch (e) {\n\t      reject(self, e);\n\t    }\n\t  }\n\t\n\t  function reject(self, newValue) {\n\t    self._state = 2;\n\t    self._value = newValue;\n\t    finale(self);\n\t  }\n\t\n\t  function finale(self) {\n\t    if (self._state === 2 && self._deferreds.length === 0) {\n\t      asap(function() {\n\t        if (!self._handled) {\n\t          onUnhandledRejection(self._value);\n\t        }\n\t      });\n\t    }\n\t\n\t    for (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t      handle(self, self._deferreds[i]);\n\t    }\n\t    self._deferreds = null;\n\t  }\n\t\n\t  function Handler(onFulfilled, onRejected, promise) {\n\t    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t    this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t    this.promise = promise;\n\t  }\n\t\n\t  /**\n\t   * Take a potentially misbehaving resolver function and make sure\n\t   * onFulfilled and onRejected are only called once.\n\t   *\n\t   * Makes no guarantees about asynchrony.\n\t   */\n\t  function doResolve(fn, self) {\n\t    var done = false;\n\t    try {\n\t      fn(function (value) {\n\t        if (done) return;\n\t        done = true;\n\t        resolve(self, value);\n\t      }, function (reason) {\n\t        if (done) return;\n\t        done = true;\n\t        reject(self, reason);\n\t      });\n\t    } catch (ex) {\n\t      if (done) return;\n\t      done = true;\n\t      reject(self, ex);\n\t    }\n\t  }\n\t\n\t  Promise.prototype['catch'] = function (onRejected) {\n\t    return this.then(null, onRejected);\n\t  };\n\t\n\t  Promise.prototype.then = function (onFulfilled, onRejected) {\n\t    var prom = new (this.constructor)(noop);\n\t\n\t    handle(this, new Handler(onFulfilled, onRejected, prom));\n\t    return prom;\n\t  };\n\t\n\t  Promise.all = function (arr) {\n\t    var args = Array.prototype.slice.call(arr);\n\t\n\t    return new Promise(function (resolve, reject) {\n\t      if (args.length === 0) return resolve([]);\n\t      var remaining = args.length;\n\t\n\t      function res(i, val) {\n\t        try {\n\t          if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t            var then = val.then;\n\t            if (typeof then === 'function') {\n\t              then.call(val, function (val) {\n\t                res(i, val);\n\t              }, reject);\n\t              return;\n\t            }\n\t          }\n\t          args[i] = val;\n\t          if (--remaining === 0) {\n\t            resolve(args);\n\t          }\n\t        } catch (ex) {\n\t          reject(ex);\n\t        }\n\t      }\n\t\n\t      for (var i = 0; i < args.length; i++) {\n\t        res(i, args[i]);\n\t      }\n\t    });\n\t  };\n\t\n\t  Promise.resolve = function (value) {\n\t    if (value && typeof value === 'object' && value.constructor === Promise) {\n\t      return value;\n\t    }\n\t\n\t    return new Promise(function (resolve) {\n\t      resolve(value);\n\t    });\n\t  };\n\t\n\t  Promise.reject = function (value) {\n\t    return new Promise(function (resolve, reject) {\n\t      reject(value);\n\t    });\n\t  };\n\t\n\t  Promise.race = function (values) {\n\t    return new Promise(function (resolve, reject) {\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        values[i].then(resolve, reject);\n\t      }\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Set the immediate function to execute callbacks\n\t   * @param fn {function} Function to execute\n\t   * @private\n\t   */\n\t  Promise._setImmediateFn = function _setImmediateFn(fn) {\n\t    asap = fn;\n\t  };\n\t\n\t  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {\n\t    onUnhandledRejection = fn;\n\t  };\n\t\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = Promise;\n\t  } else if (!root.Promise) {\n\t    root.Promise = Promise;\n\t  }\n\t\n\t})(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(3).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2).setImmediate, __webpack_require__(2).clearImmediate))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\t(function () {\n\t  try {\n\t    cachedSetTimeout = setTimeout;\n\t  } catch (e) {\n\t    cachedSetTimeout = function () {\n\t      throw new Error('setTimeout is not defined');\n\t    }\n\t  }\n\t  try {\n\t    cachedClearTimeout = clearTimeout;\n\t  } catch (e) {\n\t    cachedClearTimeout = function () {\n\t      throw new Error('clearTimeout is not defined');\n\t    }\n\t  }\n\t} ())\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = cachedSetTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    cachedClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        cachedSetTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\t\n\t/**\n\t * BaseTransition to extend\n\t *\n\t * @namespace Barba.BaseTransition\n\t * @type {Object}\n\t */\n\tvar BaseTransition = {\n\t  /**\n\t   * @memberOf Barba.BaseTransition\n\t   * @type {HTMLElement}\n\t   */\n\t  oldContainer: undefined,\n\t\n\t  /**\n\t   * @memberOf Barba.BaseTransition\n\t   * @type {HTMLElement}\n\t   */\n\t  newContainer: undefined,\n\t\n\t  /**\n\t   * @memberOf Barba.BaseTransition\n\t   * @type {Promise}\n\t   */\n\t  newContainerLoading: undefined,\n\t\n\t  /**\n\t   * Helper to extend the object\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   * @param  {Object} newObject\n\t   * @return {Object} newInheritObject\n\t   */\n\t  extend: function(obj){\n\t    return Utils.extend(this, obj);\n\t  },\n\t\n\t  /**\n\t   * This function is called from Pjax module to initialize\n\t   * the transition.\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   * @private\n\t   * @param  {HTMLElement} oldContainer\n\t   * @param  {Promise} newContainer\n\t   * @return {Promise}\n\t   */\n\t  init: function(oldContainer, newContainer) {\n\t    var _this = this;\n\t\n\t    this.oldContainer = oldContainer;\n\t    this._newContainerPromise = newContainer;\n\t\n\t    this.deferred = Utils.deferred();\n\t    this.newContainerReady = Utils.deferred();\n\t    this.newContainerLoading = this.newContainerReady.promise;\n\t\n\t    this.start();\n\t\n\t    this._newContainerPromise.then(function(newContainer) {\n\t      _this.newContainer = newContainer;\n\t      _this.newContainerReady.resolve();\n\t    });\n\t\n\t    return this.deferred.promise;\n\t  },\n\t\n\t  /**\n\t   * This function needs to be called as soon the Transition is finished\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   */\n\t  done: function() {\n\t    this.oldContainer.parentNode.removeChild(this.oldContainer);\n\t    this.newContainer.style.visibility = 'visible';\n\t    this.deferred.resolve();\n\t  },\n\t\n\t  /**\n\t   * Constructor for your Transition\n\t   *\n\t   * @memberOf Barba.BaseTransition\n\t   * @abstract\n\t   */\n\t  start: function() {},\n\t};\n\t\n\tmodule.exports = BaseTransition;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Just an object with some helpful functions\n\t *\n\t * @type {Object}\n\t * @namespace Barba.Utils\n\t */\n\tvar Utils = {\n\t  /**\n\t   * Return the current url\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @return {String} currentUrl\n\t   */\n\t  getCurrentUrl: function() {\n\t    return window.location.protocol + '//' +\n\t           window.location.host +\n\t           window.location.pathname +\n\t           window.location.search;\n\t  },\n\t\n\t  /**\n\t   * Given an url, return it without the hash\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @private\n\t   * @param  {String} url\n\t   * @return {String} newCleanUrl\n\t   */\n\t  cleanLink: function(url) {\n\t    return url.replace(/#.*/, '');\n\t  },\n\t\n\t  /**\n\t   * Time in millisecond after the xhr request goes in timeout\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @type {Number}\n\t   * @default\n\t   */\n\t  xhrTimeout: 5000,\n\t\n\t  /**\n\t   * Start an XMLHttpRequest() and return a Promise\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @param  {String} url\n\t   * @return {Promise}\n\t   */\n\t  xhr: function(url) {\n\t    var deferred = this.deferred();\n\t    var req = new XMLHttpRequest();\n\t\n\t    req.onreadystatechange = function() {\n\t      if (req.readyState === 4) {\n\t        if (req.status === 200) {\n\t          return deferred.resolve(req.responseText);\n\t        } else {\n\t          return deferred.reject(new Error('xhr: HTTP code is not 200'));\n\t        }\n\t      }\n\t    };\n\t\n\t    req.ontimeout = function() {\n\t      return deferred.reject(new Error('xhr: Timeout exceeded'));\n\t    };\n\t\n\t    req.open('GET', url);\n\t    req.timeout = this.xhrTimeout;\n\t    req.setRequestHeader('x-barba', 'yes');\n\t    req.send();\n\t\n\t    return deferred.promise;\n\t  },\n\t\n\t  /**\n\t   * Get obj and props and return a new object with the property merged\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @param  {object} obj\n\t   * @param  {object} props\n\t   * @return {object}\n\t   */\n\t  extend: function(obj, props) {\n\t    var newObj = Object.create(obj);\n\t\n\t    for(var prop in props) {\n\t      if(props.hasOwnProperty(prop)) {\n\t        newObj[prop] = props[prop];\n\t      }\n\t    }\n\t\n\t    return newObj;\n\t  },\n\t\n\t  /**\n\t   * Return a new \"Deferred\" object\n\t   * https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @return {Deferred}\n\t   */\n\t  deferred: function() {\n\t    return new function() {\n\t      this.resolve = null;\n\t      this.reject = null;\n\t\n\t      this.promise = new Promise(function(resolve, reject) {\n\t        this.resolve = resolve;\n\t        this.reject = reject;\n\t      }.bind(this));\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Return the port number normalized, eventually you can pass a string to be normalized.\n\t   *\n\t   * @memberOf Barba.Utils\n\t   * @private\n\t   * @param  {String} p\n\t   * @return {Int} port\n\t   */\n\t  getPort: function(p) {\n\t    var port = typeof p !== 'undefined' ? p : window.location.port;\n\t    var protocol = window.location.protocol;\n\t\n\t    if (port != '')\n\t      return parseInt(port);\n\t\n\t    if (protocol === 'http:')\n\t      return 80;\n\t\n\t    if (protocol === 'https:')\n\t      return 443;\n\t  }\n\t};\n\t\n\tmodule.exports = Utils;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Dispatcher = __webpack_require__(7);\n\tvar Utils = __webpack_require__(5);\n\t\n\t/**\n\t * BaseView to be extended\n\t *\n\t * @namespace Barba.BaseView\n\t * @type {Object}\n\t */\n\tvar BaseView  = {\n\t  /**\n\t   * Namespace of the view.\n\t   * (need to be associated with the data-namespace of the container)\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @type {String}\n\t   */\n\t  namespace: null,\n\t\n\t  /**\n\t   * Helper to extend the object\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @param  {Object} newObject\n\t   * @return {Object} newInheritObject\n\t   */\n\t  extend: function(obj){\n\t    return Utils.extend(this, obj);\n\t  },\n\t\n\t  /**\n\t   * Init the view.\n\t   * P.S. Is suggested to init the view before starting Barba.Pjax.start(),\n\t   * in this way .onEnter() and .onEnterCompleted() will be fired for the current\n\t   * container when the page is loaded.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   */\n\t  init: function() {\n\t    var _this = this;\n\t\n\t    Dispatcher.on('initStateChange',\n\t      function(newStatus, oldStatus) {\n\t        if (oldStatus && oldStatus.namespace === _this.namespace)\n\t          _this.onLeave();\n\t      }\n\t    );\n\t\n\t    Dispatcher.on('newPageReady',\n\t      function(newStatus, oldStatus, container) {\n\t        _this.container = container;\n\t\n\t        if (newStatus.namespace === _this.namespace)\n\t          _this.onEnter();\n\t      }\n\t    );\n\t\n\t    Dispatcher.on('transitionCompleted',\n\t      function(newStatus, oldStatus) {\n\t        if (newStatus.namespace === _this.namespace)\n\t          _this.onEnterCompleted();\n\t\n\t        if (oldStatus && oldStatus.namespace === _this.namespace)\n\t          _this.onLeaveCompleted();\n\t      }\n\t    );\n\t  },\n\t\n\t /**\n\t  * This function will be fired when the container\n\t  * is ready and attached to the DOM.\n\t  *\n\t  * @memberOf Barba.BaseView\n\t  * @abstract\n\t  */\n\t  onEnter: function() {},\n\t\n\t  /**\n\t   * This function will be fired when the transition\n\t   * to this container has just finished.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @abstract\n\t   */\n\t  onEnterCompleted: function() {},\n\t\n\t  /**\n\t   * This function will be fired when the transition\n\t   * to a new container has just started.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @abstract\n\t   */\n\t  onLeave: function() {},\n\t\n\t  /**\n\t   * This function will be fired when the container\n\t   * has just been removed from the DOM.\n\t   *\n\t   * @memberOf Barba.BaseView\n\t   * @abstract\n\t   */\n\t  onLeaveCompleted: function() {}\n\t}\n\t\n\tmodule.exports = BaseView;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Little Dispatcher inspired by MicroEvent.js\n\t *\n\t * @namespace Barba.Dispatcher\n\t * @type {Object}\n\t */\n\tvar Dispatcher = {\n\t  /**\n\t   * Object that keeps all the events\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @readOnly\n\t   * @type {Object}\n\t   */\n\t  events: {},\n\t\n\t  /**\n\t   * Bind a callback to an event\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @param  {String} eventName\n\t   * @param  {Function} function\n\t   */\n\t  on: function(e, f) {\n\t    this.events[e] = this.events[e] || [];\n\t    this.events[e].push(f);\n\t  },\n\t\n\t  /**\n\t   * Unbind event\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @param  {String} eventName\n\t   * @param  {Function} function\n\t   */\n\t  off: function(e, f) {\n\t    if(e in this.events === false)\n\t      return;\n\t\n\t    this.events[e].splice(this.events[e].indexOf(f), 1);\n\t  },\n\t\n\t  /**\n\t   * Fire the event running all the event associated to it\n\t   *\n\t   * @memberOf Barba.Dispatcher\n\t   * @param  {String} eventName\n\t   * @param  {...*} args\n\t   */\n\t  trigger: function(e) {//e, ...args\n\t    if (e in this.events === false)\n\t      return;\n\t\n\t    for(var i = 0; i < this.events[e].length; i++){\n\t      this.events[e][i].apply(this, Array.prototype.slice.call(arguments, 1));\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = Dispatcher;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\t\n\t/**\n\t * BaseCache it's a simple static cache\n\t *\n\t * @namespace Barba.BaseCache\n\t * @type {Object}\n\t */\n\tvar BaseCache = {\n\t  /**\n\t   * The Object that keeps all the key value information\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @type {Object}\n\t   */\n\t  data: {},\n\t\n\t  /**\n\t   * Helper to extend this object\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @private\n\t   * @param  {Object} newObject\n\t   * @return {Object} newInheritObject\n\t   */\n\t  extend: function(obj) {\n\t    return Utils.extend(this, obj);\n\t  },\n\t\n\t  /**\n\t   * Set a key and value data, mainly Barba is going to save promises\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @param {String} key\n\t   * @param {*} value\n\t   */\n\t  set: function(key, val) {\n\t    this.data[key] = val;\n\t  },\n\t\n\t  /**\n\t   * Retrieve the data using the key\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   * @param  {String} key\n\t   * @return {*}\n\t   */\n\t  get: function(key) {\n\t    return this.data[key];\n\t  },\n\t\n\t  /**\n\t   * Flush the cache\n\t   *\n\t   * @memberOf Barba.BaseCache\n\t   */\n\t  reset: function() {\n\t    this.data = {};\n\t  }\n\t};\n\t\n\tmodule.exports = BaseCache;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HistoryManager helps to keep track of the navigation\n\t *\n\t * @namespace Barba.HistoryManager\n\t * @type {Object}\n\t */\n\tvar HistoryManager = {\n\t  /**\n\t   * Keep track of the status in historic order\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @readOnly\n\t   * @type {Array}\n\t   */\n\t  history: [],\n\t\n\t  /**\n\t   * Add a new set of url and namespace\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @param {String} url\n\t   * @param {String} namespace\n\t   * @private\n\t   */\n\t  add: function(url, namespace) {\n\t    if (!namespace)\n\t      namespace = undefined;\n\t\n\t    this.history.push({\n\t      url: url,\n\t      namespace: namespace\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Return information about the current status\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @return {Object}\n\t   */\n\t  currentStatus: function() {\n\t    return this.history[this.history.length - 1];\n\t  },\n\t\n\t  /**\n\t   * Return information about the previous status\n\t   *\n\t   * @memberOf Barba.HistoryManager\n\t   * @return {Object}\n\t   */\n\t  prevStatus: function() {\n\t    var history = this.history;\n\t\n\t    if (history.length < 2)\n\t      return null;\n\t\n\t    return history[history.length - 2];\n\t  }\n\t};\n\t\n\tmodule.exports = HistoryManager;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\tvar Dispatcher = __webpack_require__(7);\n\tvar HideShowTransition = __webpack_require__(11);\n\tvar BaseCache = __webpack_require__(8);\n\t\n\tvar HistoryManager = __webpack_require__(9);\n\tvar Dom = __webpack_require__(12);\n\t\n\t/**\n\t * Pjax is a static object with main function\n\t *\n\t * @namespace Barba.Pjax\n\t * @borrows Dom as Dom\n\t * @type {Object}\n\t */\n\tvar Pjax = {\n\t  Dom: Dom,\n\t  History: HistoryManager,\n\t  Cache: BaseCache,\n\t\n\t  /**\n\t   * Indicate wether or not use the cache\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @type {Boolean}\n\t   * @default\n\t   */\n\t  cacheEnabled: true,\n\t\n\t  /**\n\t   * Indicate if there is an animation in progress\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @readOnly\n\t   * @type {Boolean}\n\t   */\n\t  transitionProgress: false,\n\t\n\t  /**\n\t   * Class name used to ignore links\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  ignoreClassLink: 'no-barba',\n\t\n\t  /**\n\t   * Function to be called to start Pjax\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   */\n\t  start: function() {\n\t    this.init();\n\t  },\n\t\n\t  /**\n\t   * Init the events\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  init: function() {\n\t    var container = this.Dom.getContainer();\n\t    var wrapper = this.Dom.getWrapper();\n\t\n\t    wrapper.setAttribute('aria-live', 'polite');\n\t\n\t    this.History.add(\n\t      this.getCurrentUrl(),\n\t      this.Dom.getNamespace(container)\n\t    );\n\t\n\t    //Fire for the current view.\n\t    Dispatcher.trigger('initStateChange', this.History.currentStatus());\n\t    Dispatcher.trigger('newPageReady',\n\t      this.History.currentStatus(),\n\t      {},\n\t      container,\n\t      this.Dom.currentHTML\n\t    );\n\t    Dispatcher.trigger('transitionCompleted', this.History.currentStatus());\n\t\n\t    this.bindEvents();\n\t  },\n\t\n\t  /**\n\t   * Attach the eventlisteners\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  bindEvents: function() {\n\t    document.addEventListener('click',\n\t      this.onLinkClick.bind(this)\n\t    );\n\t\n\t    window.addEventListener('popstate',\n\t      this.onStateChange.bind(this)\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Return the currentURL cleaned\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @return {String} currentUrl\n\t   */\n\t  getCurrentUrl: function() {\n\t    return Utils.cleanLink(\n\t      Utils.getCurrentUrl()\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Change the URL with pushstate and trigger the state change\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @param {String} newUrl\n\t   */\n\t  goTo: function(url) {\n\t    window.history.pushState(null, null, url);\n\t    this.onStateChange();\n\t  },\n\t\n\t  /**\n\t   * Force the browser to go to a certain url\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @param {String} url\n\t   * @private\n\t   */\n\t  forceGoTo: function(url) {\n\t    window.location = url;\n\t  },\n\t\n\t  /**\n\t   * Load an url, will start an xhr request or load from the cache\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   * @param  {String} url\n\t   * @return {Promise}\n\t   */\n\t  load: function(url) {\n\t    var deferred = Utils.deferred();\n\t    var _this = this;\n\t    var xhr;\n\t\n\t    xhr = this.Cache.get(url);\n\t\n\t    if (!xhr) {\n\t      xhr = Utils.xhr(url);\n\t      this.Cache.set(url, xhr);\n\t    }\n\t\n\t    xhr.then(\n\t      function(data) {\n\t        var container = _this.Dom.parseResponse(data);\n\t\n\t        _this.Dom.putContainer(container);\n\t\n\t        if (!_this.cacheEnabled)\n\t          _this.Cache.reset();\n\t\n\t        deferred.resolve(container);\n\t      },\n\t      function() {\n\t        //Something went wrong (timeout, 404, 505...)\n\t        _this.forceGoTo(url);\n\t\n\t        deferred.reject();\n\t      }\n\t    );\n\t\n\t    return deferred.promise;\n\t  },\n\t\n\t  /**\n\t   * Get the .href parameter out of an element\n\t   * and handle special cases (like xlink:href)\n\t   *\n\t   * @private\n\t   * @memberOf Barba.Pjax\n\t   * @param  {HTMLElement} el\n\t   * @return {String} href\n\t   */\n\t  getHref: function(el) {\n\t    if (!el) {\n\t      return undefined;\n\t    }\n\t\n\t    if (el.getAttribute && typeof el.getAttribute('xlink:href') === 'string') {\n\t      return el.getAttribute('xlink:href');\n\t    }\n\t\n\t    if (typeof el.href === 'string') {\n\t      return el.href;\n\t    }\n\t\n\t    return undefined;\n\t  },\n\t\n\t  /**\n\t   * Callback called from click event\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   * @param {MouseEvent} evt\n\t   */\n\t  onLinkClick: function(evt) {\n\t    var el = evt.target;\n\t\n\t    //Go up in the nodelist until we\n\t    //find something with an href\n\t    while (el && !this.getHref(el)) {\n\t      el = el.parentNode;\n\t    }\n\t\n\t    if (this.preventCheck(evt, el)) {\n\t      evt.stopPropagation();\n\t      evt.preventDefault();\n\t\n\t      Dispatcher.trigger('linkClicked', el, evt);\n\t\n\t      var href = this.getHref(el);\n\t      this.goTo(href);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Determine if the link should be followed\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @param  {MouseEvent} evt\n\t   * @param  {HTMLElement} element\n\t   * @return {Boolean}\n\t   */\n\t  preventCheck: function(evt, element) {\n\t    if (!window.history.pushState)\n\t      return false;\n\t\n\t    var href = this.getHref(element);\n\t\n\t    //User\n\t    if (!element || !href)\n\t      return false;\n\t\n\t    //Middle click, cmd click, and ctrl click\n\t    if (evt.which > 1 || evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.altKey)\n\t      return false;\n\t\n\t    //Ignore target with _blank target\n\t    if (element.target && element.target === '_blank')\n\t      return false;\n\t\n\t    //Check if it's the same domain\n\t    if (window.location.protocol !== element.protocol || window.location.hostname !== element.hostname)\n\t      return false;\n\t\n\t    //Check if the port is the same\n\t    if (Utils.getPort() !== Utils.getPort(element.port))\n\t      return false;\n\t\n\t    //Ignore case when a hash is being tacked on the current URL\n\t    if (href.indexOf('#') > -1)\n\t      return false;\n\t\n\t    //Ignore case where there is download attribute\n\t    if (element.getAttribute && typeof element.getAttribute('download') === 'string')\n\t      return false;\n\t\n\t    //In case you're trying to load the same page\n\t    if (Utils.cleanLink(href) == Utils.cleanLink(location.href))\n\t      return false;\n\t\n\t    if (element.classList.contains(this.ignoreClassLink))\n\t      return false;\n\t\n\t    return true;\n\t  },\n\t\n\t  /**\n\t   * Return a transition object\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @return {Barba.Transition} Transition object\n\t   */\n\t  getTransition: function() {\n\t    //User customizable\n\t    return HideShowTransition;\n\t  },\n\t\n\t  /**\n\t   * Method called after a 'popstate' or from .goTo()\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  onStateChange: function() {\n\t    var newUrl = this.getCurrentUrl();\n\t\n\t    if (this.transitionProgress)\n\t      this.forceGoTo(newUrl);\n\t\n\t    if (this.History.currentStatus().url === newUrl)\n\t      return false;\n\t\n\t    this.History.add(newUrl);\n\t\n\t    var newContainer = this.load(newUrl);\n\t    var transition = Object.create(this.getTransition());\n\t\n\t    this.transitionProgress = true;\n\t\n\t    Dispatcher.trigger('initStateChange',\n\t      this.History.currentStatus(),\n\t      this.History.prevStatus()\n\t    );\n\t\n\t    var transitionInstance = transition.init(\n\t      this.Dom.getContainer(),\n\t      newContainer\n\t    );\n\t\n\t    newContainer.then(\n\t      this.onNewContainerLoaded.bind(this)\n\t    );\n\t\n\t    transitionInstance.then(\n\t      this.onTransitionEnd.bind(this)\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Function called as soon the new container is ready\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   * @param {HTMLElement} container\n\t   */\n\t  onNewContainerLoaded: function(container) {\n\t    var currentStatus = this.History.currentStatus();\n\t    currentStatus.namespace = this.Dom.getNamespace(container);\n\t\n\t    Dispatcher.trigger('newPageReady',\n\t      this.History.currentStatus(),\n\t      this.History.prevStatus(),\n\t      container,\n\t      this.Dom.currentHTML\n\t    );\n\t  },\n\t\n\t  /**\n\t   * Function called as soon the transition is finished\n\t   *\n\t   * @memberOf Barba.Pjax\n\t   * @private\n\t   */\n\t  onTransitionEnd: function() {\n\t    this.transitionProgress = false;\n\t\n\t    Dispatcher.trigger('transitionCompleted',\n\t      this.History.currentStatus(),\n\t      this.History.prevStatus()\n\t    );\n\t  }\n\t};\n\t\n\tmodule.exports = Pjax;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BaseTransition = __webpack_require__(4);\n\t\n\t/**\n\t * Basic Transition object, wait for the new Container to be ready,\n\t * scroll top, and finish the transition (removing the old container and displaying the new one)\n\t *\n\t * @private\n\t * @namespace Barba.HideShowTransition\n\t * @augments Barba.BaseTransition\n\t */\n\tvar HideShowTransition = BaseTransition.extend({\n\t  start: function() {\n\t    this.newContainerLoading.then(this.finish.bind(this));\n\t  },\n\t\n\t  finish: function() {\n\t    document.body.scrollTop = 0;\n\t    this.done();\n\t  }\n\t});\n\t\n\tmodule.exports = HideShowTransition;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Object that is going to deal with DOM parsing/manipulation\n\t *\n\t * @namespace Barba.Pjax.Dom\n\t * @type {Object}\n\t */\n\tvar Dom = {\n\t  /**\n\t   * The name of the data attribute on the container\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  dataNamespace: 'namespace',\n\t\n\t  /**\n\t   * Id of the main wrapper\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  wrapperId: 'barba-wrapper',\n\t\n\t  /**\n\t   * Class name used to identify the containers\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  containerClass: 'barba-container',\n\t\n\t  /**\n\t   * Full HTML String of the current page.\n\t   * By default is the innerHTML of the initial loaded page.\n\t   *\n\t   * Each time a new page is loaded, the value is the response of the xhr call.\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @type {String}\n\t   */\n\t  currentHTML: document.documentElement.innerHTML,\n\t\n\t  /**\n\t   * Parse the responseText obtained from the xhr call\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {String} responseText\n\t   * @return {HTMLElement}\n\t   */\n\t  parseResponse: function(responseText) {\n\t    this.currentHTML = responseText;\n\t\n\t    var wrapper = document.createElement('div');\n\t    wrapper.innerHTML = responseText;\n\t\n\t    var titleEl = wrapper.querySelector('title');\n\t\n\t    if (titleEl)\n\t      document.title = titleEl.textContent;\n\t\n\t    return this.getContainer(wrapper);\n\t  },\n\t\n\t  /**\n\t   * Get the main barba wrapper by the ID `wrapperId`\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @return {HTMLElement} element\n\t   */\n\t  getWrapper: function() {\n\t    var wrapper = document.getElementById(this.wrapperId);\n\t\n\t    if (!wrapper)\n\t      throw new Error('Barba.js: wrapper not found!');\n\t\n\t    return wrapper;\n\t  },\n\t\n\t  /**\n\t   * Get the container on the current DOM,\n\t   * or from an HTMLElement passed via argument\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   * @return {HTMLElement}\n\t   */\n\t  getContainer: function(element) {\n\t    if (!element)\n\t      element = document.body;\n\t\n\t    if (!element)\n\t      throw new Error('Barba.js: DOM not ready!');\n\t\n\t    var container = this.parseContainer(element);\n\t\n\t    if (container && container.jquery)\n\t      container = container[0];\n\t\n\t    if (!container)\n\t      throw new Error('Barba.js: no container found');\n\t\n\t    return container;\n\t  },\n\t\n\t  /**\n\t   * Get the namespace of the container\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   * @return {String}\n\t   */\n\t  getNamespace: function(element) {\n\t    if (element && element.dataset) {\n\t      return element.dataset[this.dataNamespace];\n\t    } else if (element) {\n\t      return element.getAttribute('data-' + this.dataNamespace);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Put the container on the page\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   */\n\t  putContainer: function(element) {\n\t    element.style.visibility = 'hidden';\n\t\n\t    var wrapper = this.getWrapper();\n\t    wrapper.appendChild(element);\n\t  },\n\t\n\t  /**\n\t   * Get container selector\n\t   *\n\t   * @memberOf Barba.Pjax.Dom\n\t   * @private\n\t   * @param  {HTMLElement} element\n\t   * @return {HTMLElement} element\n\t   */\n\t  parseContainer: function(element) {\n\t    return element.querySelector('.' + this.containerClass);\n\t  }\n\t};\n\t\n\tmodule.exports = Dom;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Utils = __webpack_require__(5);\n\tvar Pjax = __webpack_require__(10);\n\t\n\t/**\n\t * Prefetch\n\t *\n\t * @namespace Barba.Prefetch\n\t * @type {Object}\n\t */\n\tvar Prefetch = {\n\t  /**\n\t   * Class name used to ignore prefetch on links\n\t   *\n\t   * @memberOf Barba.Prefetch\n\t   * @type {String}\n\t   * @default\n\t   */\n\t  ignoreClassLink: 'no-barba-prefetch',\n\t\n\t  /**\n\t   * Init the event listener on mouseover and touchstart\n\t   * for the prefetch\n\t   *\n\t   * @memberOf Barba.Prefetch\n\t   */\n\t  init: function() {\n\t    if (!window.history.pushState) {\n\t      return false;\n\t    }\n\t\n\t    document.body.addEventListener('mouseover', this.onLinkEnter.bind(this));\n\t    document.body.addEventListener('touchstart', this.onLinkEnter.bind(this));\n\t  },\n\t\n\t  /**\n\t   * Callback for the mousehover/touchstart\n\t   *\n\t   * @memberOf Barba.Prefetch\n\t   * @private\n\t   * @param  {Object} evt\n\t   */\n\t  onLinkEnter: function(evt) {\n\t    var el = evt.target;\n\t\n\t    while (el && !Pjax.getHref(el)) {\n\t      el = el.parentNode;\n\t    }\n\t\n\t    if (!el || el.classList.contains(this.ignoreClassLink)) {\n\t      return;\n\t    }\n\t\n\t    var url = Pjax.getHref(el);\n\t\n\t    //Check if the link is elegible for Pjax\n\t    if (Pjax.preventCheck(evt, el) && !Pjax.Cache.get(url)) {\n\t      var xhr = Utils.xhr(url);\n\t      Pjax.Cache.set(url, xhr);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = Prefetch;\n\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=barba.js.map","﻿import 'jquery';\r\nimport 'bootstrap';\r\nimport '../../lib/bootstrap-datepicker.js';\r\nimport '../../lib/material.min.js';\r\nimport '../../lib/material-kit.js';\r\nimport Barba from 'barba.js';\r\n\r\nBarba.Pjax.start();\r\n"],"names":["$","Datepicker","element","options","format","DPGlobal","parseFormat","data","picker","template","appendTo","on","proxy","click","isInput","is","component","find","show","update","minViewMode","viewMode","color","startViewMode","weekStart","weekEnd","onRender","fillDow","fillMonths","showMode","prototype","e","datepicker","height","outerHeight","place","window","stopPropagation","preventDefault","that","document","ev","target","closest","length","hide","trigger","date","addClass","removeClass","off","formated","formatDate","prop","newDate","parseDate","Date","set","viewDate","getFullYear","getMonth","fill","offset","css","top","left","dowCnt","html","dates","daysMin","append","i","monthsShort","d","year","month","currentDate","valueOf","text","months","prevMonth","day","getDaysInMonth","setDate","getDay","nextMonth","getDate","clsName","prevY","prevM","push","empty","join","currentYear","end","eq","parseInt","yearCont","nodeName","toLowerCase","className","modes","navFnc","call","navStep","parent","index","setMonth","setFullYear","Math","min","dir","max","filter","fn","option","val","each","$this","extend","defaults","Constructor","isLeapYear","separator","match","parts","split","Error","setHours","setMinutes","setSeconds","setMilliseconds","cnt","toString","substring","dd","mm","m","headTemplate","contTemplate","jQuery","t","o","which","ctrlKey","metaKey","altKey","n","hover","expr","notmdproc","material","validate","input","ripples","checkbox","togglebutton","radio","arrive","autofill","withRipples","inputElements","checkboxElements","togglebuttonElements","radioElements","after","wrap","attr","removeAttr","hasClass","a","r","attachInputEventHandlers","blur","checkValidity","files","name","setInterval","setTimeout","attachAutofillEventHandlers","parents","not","init","s","_defaults","_name","isTouch","type","children","getRelY","getRelX","l","getRipplesColor","p","getComputedStyle","opacity","rippleOn","rippleEnd","rippleOut","getNewSize","outerWidth","originalEvent","touches","pageX","pageY","hasTransitionSupport","body","documentElement","style","transition","WebkitTransition","MozTransition","MsTransition","OTransition","test","navigator","userAgent","animate","remove","transform","width","transparent","ready","tooltip","materialKit","checkScrollForTransparentNavbar","popover","carousel","debounce","scrollTop","noUiSlider","func","wait","immediate","timeout","context","args","arguments","apply","this","Barba","Pjax","start"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}