@model IdeaInfoViewModel
@{

    ViewData["Title"] = Model.Title;
}

@section Scripts{
    <script src="~/Scripts/pages/ideas/details.bundle.js" asp-append-version="true"></script>
}

@inject UserManager<ApplicationUser> UserManager

<div class="idea-details-page-wrap">
    <div class="idea-details-page">
        <div class="container">
            <div class="row">
                <div class="row idea-header">
                    <div class="col-sm-6">
                        <img src="/api/ideas/@Model.Id/banner" alt="Circle Image" class="img-responsive">
                    </div>
                    <div class="name col-sm-6">
                        <h3 class="title">@Model.Title</h3>
                        @*<h6>Designer</h6>*@
                        <h6 class="description">
                            @Model.Description
                        </h6>
                    </div>

                    @if (Model.IsOwner(UserManager.GetUserId(User)))
                {
                    <div class="col-sm-6">
                        <div class="col-sm-2">
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-default">Edit</a>
                        </div>

                        @if (Model.IsPublished)
                        {
                            <div class="col-sm-2">
                                <form class="form-inline" method="post" asp-action="Unpublish" asp-route-id="@Model.Id">
                                    <button class="btn btn-danger">Unpublish</button>
                                </form>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-2">
                                <form class="form-inline" method="post" asp-action="Publish" asp-route-id="@Model.Id">
                                    <button class="btn btn-primary">Publish</button>
                                </form>
                            </div>
                        }
                    </div>
                    }
                    else
                    {
                        @await Component.InvokeAsync("TeamMemberStatus", new { userId = UserManager.GetUserId(User), ideaId = Model.Id })

                    }
                </div>
            </div>
            <div class="row">
                <div class="profile-tabs">
                    <div class="nav-align-left">
                        <ul class="nav nav-pills nav-pills-grey" role="tablist">
                            @foreach (var page in Model.Pages)
                            {
                                <li class="@(page.IsActive ? "active" : string.Empty)">
                                    <a href="#@page.Id" role="tab" data-toggle="tab">
                                        @page.Name
                                    </a>
                                </li>
                            }

                            @if (Model.IsFundingRequired)
                            {
                                <li>
                                    <a href="#fundingdetails" role="tab" data-toggle="tab">
                                        Funding Details
                                    </a>
                                </li>

                            }
                        </ul>

                        <div class="tab-content gallery">
                            @foreach (var page in Model.Pages)
                            {
                                <div class="tab-pane @(page.IsActive ? "active" : string.Empty)" id="@page.Id">
                                    <div class="col-sm-10">
                                        @Html.Raw(page.Content)
                                    </div>
                                </div>
                            }
                            @if (Model.IsFundingRequired)
                            {
                                <div class="tab-pane" id="fundingdetails">
                                    <div class="col-sm-10">
                                        @Html.Raw(Model.FundingRequirement)
                                    </div>
                                </div>

                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <comments-list params="ideaId: '@Model.Id', client: client, userId: '@UserManager.GetUserId(User)'"></comments-list>
        </div>
    </div>
</div>