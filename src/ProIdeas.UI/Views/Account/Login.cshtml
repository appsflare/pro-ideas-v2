@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    Layout = "_LayoutSignIn";
    ViewData["Title"] = "Log in";
}

<div class="row">
    <div class="col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3">
        <div class="card card-signup">
            <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form">
                <div class="header header-primary text-center">
                    <h4 class="card-title">@ViewData["Title"]</h4>
                    <div class="social-line">
                        <a href="#pablo" class="btn btn-just-icon btn-simple">
                            <i class="fa fa-facebook-square"></i>
                        </a>
                        <a href="#pablo" class="btn btn-just-icon btn-simple">
                            <i class="fa fa-twitter"></i>
                        </a>
                        <a href="#pablo" class="btn btn-just-icon btn-simple">
                            <i class="fa fa-google-plus"></i>
                        </a>
                    </div>
                </div>
                <p class="description text-center">Or Be Classical</p>



                @if (ViewBag.ErrorMessage != null)
                {
                <div class="alert alert-danger">
                    <div class="alert-icon">
                        <i class="material-icons">error_outline</i>
                    </div>
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span><i class="material-icons">clear</i></span>
                    </button>
                    <div>@ViewBag.ErrorMessage</div>
                </div>
                }

                <div class="content">
                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">email</i>
                        </span>
                        <div class="form-group is-empty" asp-validation-for="Email">
                            <input asp-for="Email" class="form-control" value="" type="email" placeholder="Email..." autocomplete="off" />
                            <span class="material-icons form-control-feedback">clear</span>
                            <span class="material-input" />
                            <span asp-validation-for="Email" class="help-block validation-message"></span>
                        </div>
                    </div>

                    <div class="input-group">
                        <span class="input-group-addon">
                            <i class="material-icons">lock_outline</i>
                        </span>

                        <div class="form-group is-empty">
                            <input asp-for="Password" class="form-control" value="" type="password" placeholder="Password..." min="8" />
                            <span class="material-icons form-control-feedback">clear</span>
                            <span class="material-input" />
                            <span asp-validation-for="Password" class="help-block validation-message"></span>
                        </div>

                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                <label asp-for="RememberMe">
                                    <input asp-for="RememberMe" />
                                    @Html.DisplayNameFor(m => m.RememberMe)
                                </label>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="footer text-center">
                    <button class="btn btn-primary btn-simple btn-wd btn-lg" type="submit">
                        Get In<div class="ripple-container" />
                    </button>
                </div>
            </form>
        </div>

        @*<div class="col-md-4">
                <section>
                    <h4>Use another service to log in.</h4>
                    <hr />
                    @{
                        var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
                        if (loginProviders.Count == 0)
                        {
                            <div>
                                <p>
                                    There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                    for details on setting up this ASP.NET application to support logging in via external services.
                                </p>
                            </div>
                        }
                        else
                        {
                            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                                <div>
                                    <p>
                                        @foreach (var provider in loginProviders)
                                        {
                                            <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
                                        }
                                    </p>
                                </div>
                            </form>
                        }
                    }
                </section>
            </div>*@
    </div>

</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="~/Scripts/pages/generic.bundle.js"></script>
}

